{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9462447c-c2ec-4217-a36d-c9a3b8d8d56a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8c8ef9ca-66a1-4697-a2b3-278366df3be7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9bd764fb-9a5f-4339-b396-ce92139b490e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c1181d93-1d10-4c5c-b73f-e2fa013bb642"
                }
              }
            ]
          },
          {
            "id": "9c7a6f6b-d48e-4dfe-a223-2ff90d2061f9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ebf8bdf8-36ef-4aff-81a8-54fb9edd2974",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "da4a4b19-2d28-42bd-85ed-f34e60a6c96b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c4edd58e-97b2-4808-8313-f19f312a843b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1bd41937-2c2a-436c-b0b1-f3d2e7a86ece",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a77ccc20-f253-4e80-8951-368026a132a8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90dd6fbd-d532-494f-9440-5de999c9356b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0851f964-53d7-485c-85a1-9463542386e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c59cafaa-9636-4276-9cf1-1b3a82a8f720",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a39234aa-5d86-49b4-bf3d-da4ab996156d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "117f0a95-e149-4945-9d92-6cec62c2b352",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d521b2e-f3a7-486d-94ab-3c73ca183b7d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebd97d19-c2a3-4a99-9b2f-df44dcee5291",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1e0b119b-aed9-4b86-8d1c-36c42de3e2ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "550500d5-38fd-4f5b-aaaa-83079f76c50f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c46ad81-12c0-4d73-a4fe-6e11ba4cbb27"
            }
          }
        ]
      },
      {
        "id": "94953ec8-24f2-4f7a-8074-7010b2b6b198",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c42e543c-b865-463f-8374-c708d76c0b99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f7fea5d-f080-4ffb-836a-2309adf8654c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ba1af94-ef4e-4717-a727-161aa2f1b306",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba44b8c-8b88-4dd3-bcaf-c81e743ba315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de967a32-b960-4065-8275-2758f97aabc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4906e9e8-bb04-4311-84e4-016e720bf851",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b1d85e-b9bc-43a7-9d9a-8fc5346f0cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e4f88b6-e299-4e03-b4e5-70d180661f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1bb47a-387d-4437-99ad-7d24771abf0e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ff0273-51ed-4606-a02d-1361ce5730e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e9f454e-92c9-4432-9a4d-0a46bb665148"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "744d5468-d07e-42e4-b661-f58f3709039f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3fae3061-b5d5-4247-9c63-67b459225499",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ab57a1-de7a-4e44-ace5-3eae39fd8446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "750ddeb7-5830-4d1b-83a4-8deaf411065b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0684cd96-31c5-46ea-ab27-f6dce9f63402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0daa87e-acbe-4caa-b847-9bfcfb737293"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "255d2c51-d46b-450b-b61b-da62f1c341d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31a70942-19d0-48f7-9040-c60d1d32ecd6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c3d58f5-9158-4bc9-a354-87acbbbd0fa6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "19562877-a0a1-487e-b4ad-fe26f45cd1be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc50fc2b-f7b4-4217-8f39-7d8ebd7efd36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3c6783eb-50e2-4342-bfd0-1979044479dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23f0b695-98bf-42eb-9531-17d036882c1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "731cefb1-8ec0-4a47-b9f7-dcc3c58a063f"
            }
          }
        ]
      },
      {
        "id": "9f72908a-96f5-45c6-8410-e7c3644c35f4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a2624cfe-bd7b-4d35-b5da-eb57238f1c0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e1c9a2b-97f6-48e1-9058-732992766d5f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ed4d5763-7a3c-421a-94a5-23b6d2fe61ae",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ce5bc0-a63c-41de-90dc-35bc223d60ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b6d0bc-d504-4575-bb69-c382e5cf5ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe40520-27b5-4542-bdf0-c2bb7827bec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0cadacd-29b4-4458-befc-386a85163803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bfc938-7c68-4192-8a95-65ad2cb8a917",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcef8d7b-59eb-4895-a3fb-6fc3c355919b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e23774-7fe1-452f-9071-dc796b3d3c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de171f2-eeff-42cf-9c1e-fdb1681b9028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c82d17ba-cbdb-4fe4-b7ad-44b787263c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55a21aa-7e2f-4726-a189-0b6e60cbd1ab",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4b584c-5c10-4900-aaf0-87d0c2676d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada10eb0-e010-4f9e-b72e-75050809b4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae542fd2-a8f1-4168-8015-89152d34b799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a501b57-e25a-4110-a60c-86bb42188620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50d67c4-dd1a-441b-9d83-676ae92e01ae",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ce8d43-dc52-4a02-bbd8-112c3269819e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c791ca-96f0-40da-8572-c9d8c9dcd925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd70974-28a3-48c2-84eb-a154e0f67d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be5c14b6-be17-435f-b2b6-23fadd13683c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabf243e-31b6-47d8-8687-49f70d6e2ca4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba68e04-a299-4344-9b26-b1c439298db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed8fcbf-d586-4105-a76e-d671b2644ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251df294-16e3-4bf0-8cc3-81b1aa48e543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5ea64b1-3532-4df2-98ff-a8600cc653ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14570736-6c38-44aa-b578-20fc426f75f6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89655177-1d36-4539-955c-80856e864898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50274d8-454c-42e2-9b12-f1647373b867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244e6cc2-b0ad-41a0-bf7b-fc9261da7201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43167226-54ca-457f-b0a9-002830c143c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6b55a6-732a-4b5b-b1d9-d76e05397f3c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2bf9ac-d355-467e-85e2-c01adff45ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6339ed5c-c1f6-4e39-9bd4-07628e2f5a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236d0d7f-b9f0-43b6-a130-98cc6ea8f1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5efca091-86e8-4479-b73a-369a9ef7529e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014cd6de-ecb4-4479-a07d-c8963875f5af",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f427a617-3c0f-4706-868c-4b093e2822fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ace97fd-7198-45dc-816c-5d212f09ee6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a20dc4-af4a-49b7-8aad-27f570da5df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8278516c-868c-4f96-8951-c24324296911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460a21d1-33af-4822-a3d7-03a028fcd896",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1314d865-55c9-4099-9fa2-d974e044b2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf148ef-1e09-4489-9e90-a048e6f61346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894d96e8-b774-4457-8bf2-44658dad420a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "658f87fb-2d84-48e5-bf63-3b2bf8625d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa72150-e959-47a5-92f4-8f41fa44a657",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e0d00c-49bd-497a-8fda-a5e00eb5070b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4241700d-19f4-4de1-b99b-5da0362222ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3a6408-9b89-4c7a-9f7c-5ce06853afb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "546c887d-247d-4e5c-b4aa-25cf75616d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57132fd4-b9cc-42b9-bc4d-06c4d186a520",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109896f5-572e-44fd-98bd-71a5b416c542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e402719a-c6f8-4892-86fe-c6689674f695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0514024d-b247-4315-9b75-6a702820f64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a07f6e9-1df0-4a05-9fad-26c37ba651e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e810adc-acef-4479-bc99-13c822c22e3d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269e8d29-ea3f-4a39-b7d6-561ec0e5a3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e637d64c-f760-4404-9e82-ca40797c5b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b432629-723a-47bb-b0fa-3947c7077260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c1f137d-c2e7-436b-a0c9-0080742a23b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591d81d0-9413-4078-ab96-de59108a9ee3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801e8cd2-3332-4de4-8ec3-7e44403d3113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf282ac-53e7-4e16-9909-ea88b2e0dc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7733808e-43b6-4bd8-bd80-4e2267f36903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2b2e56b-b2fe-4b78-92dd-5a0fe6866250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a229d42c-4e8f-48a1-a7e9-cff7149bcd6a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4f478c-6eca-43a1-8530-9ffb0567fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6517fcd-fbeb-4752-b44a-656c8f2068c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dbf4ee-0898-4859-bceb-726b04774fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7001ec8-7c5f-46a9-919e-fe7830978959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95039800-574b-492f-92ff-08e0dd887ecb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631a749f-ff7f-4e54-8143-f6b5697d3124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1e282a-7acd-4812-a519-c36ba5c621d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e492862e-76e1-4fa3-900b-008c6723880e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bc0ff88-e836-4622-842c-f755fdfe1e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c016d6-8799-4921-9b83-212a1ab1a654",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d522f60d-953b-4953-a400-4c60f3c4c4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2149ee8b-e623-401d-87cb-2839841cdf75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb850585-2d09-4aea-bc8d-ec85303da051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d4a1add-112e-4e11-9eda-3fff2944ad91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08d829d-c81f-4b3e-9df0-e4064c08e7e5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8204fdfb-d670-4e67-85e0-6662456e50d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522111dd-f13a-4ab8-aec1-6060b3358821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c94725-2470-4fcd-8ce8-818cfcd5e2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0eebe77-f500-4861-bd4b-48284ef276b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b47d182-caff-488b-af29-00179a27ff76",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1542715f-4bec-4dec-974b-b3af3d1043ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af8e4ee-5cb9-4105-960f-30e51486fa9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f8e492-3cb3-4ce8-9f0c-4d56a02cfbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8667ff51-bef9-4fd3-a11f-a484e4ddc6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396bec57-50f5-4e4e-a11f-a160c7b70e68",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f98a9a-d978-4973-a7e8-d9cacca7aead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cb0683-1c23-40c6-8b6b-2fa0a514119b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197c1af3-371e-4acb-aad3-b6a6370d6678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4483ac-9ef1-41aa-a2a1-2732230ee32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ac7ec2-5e20-4d80-a904-6ba1142e5757",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40f12b0-ce02-439e-8c05-d37ec50724f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49b86ac-8136-4738-9081-00780663f15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545a6c4f-6d0c-4e5c-b75d-1a11747edd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a00dee1-23a3-484b-9781-73dc2af4d392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efbe7ca-0463-4c78-8341-635c9278205a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf05197c-0fa2-477a-b76d-6cd95bc0b280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06152adf-3ba2-4b47-809b-ac0bef4de185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ed51c7-76aa-410f-8428-6582fb812cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0854a38-d13a-4c0f-ad97-cb48b57a55ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b40fd9-5d8d-446d-a302-e3cea49c7b62",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0988f6e0-7de7-47f9-b28f-af6912ad666c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e8424c-4d68-4cb5-8dfb-13bda1e161b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c336f935-1a37-4cb6-900b-8534c4c11611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9e69b3-b370-460f-9004-08fe59094e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eae18e1-eee0-4fe1-9e51-19f7d4d346cd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cba41f-ee02-42a8-902f-4e5bc9a27685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b989a4-660e-4ca4-9be0-caca75a001c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de2c369-5f04-4f6f-9a43-a2888b74a6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5baf443-3929-463e-9ab5-da60a8f1c408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65672f46-186e-4282-ba11-dc2b9a7f255e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f696fc-30fe-4ac8-929e-c57726899497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a14033-ae4e-4fe3-bd0a-967b13af6357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d15769-6b81-443f-a35c-283bf76493d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f52b4a7-8ba9-47f9-9c50-4db875d3de33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6b92c5-cabe-4417-b7e3-97a67ac304a1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5609651-7f7b-4378-a523-49bdccf4b04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f2cc66-ce86-44fa-9b52-6effeb33a99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dcd5ca-4af7-48cb-87f6-fac8f3867bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75c9cf3-3ee3-485e-8e8f-579ef75a79ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ed9a51-1d59-42bf-96fb-134b84fb6ddd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc7ead7-37b1-4f34-a58b-979362abedb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a047b53-1fc4-4d8c-8e15-796ca38d285c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acd0b6e-ccad-453c-b0b2-921f70f801e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e95c90bd-aa61-4b28-b8d5-31ab5426bd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0ef3f9-9374-4977-beff-9871546271f2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f5412b-d758-4019-a88b-1299b2696858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09ba6df-2af0-4228-9b97-381eacdab8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2665f51-d3bc-4d36-9718-69a30250ea7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "457f3f6b-6f27-4072-857c-d300d06e5aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f88556f-767c-433e-bc8b-bbbcf39d19e6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d75c982-e553-484c-8efa-f3d1a1de5997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b76c658-63df-4dc6-86fe-976488ab9acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c715ac0a-070f-4778-bbae-545deecad41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85f7c1bb-3b63-4167-9612-8ced3fc30b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d96469-7378-4581-8761-811a59711370",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c40e607-6fc5-4eec-ae9b-3fb767d18783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a9a246-67e1-49e4-8b43-c7fafa9a3143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d963f9-9262-4593-bfc7-2d0916c9af4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cccbbaaa-c33a-428e-9603-9ba33ff59b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acd888e-7d60-433d-a8b5-6f29d07c42fd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8549d5c5-7ce4-4b7d-9ce1-419055dbf38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfaf2bca-41f4-4c0b-8d9f-a7f9df224f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81e8c40-5a97-453d-8fc0-cdc81820f2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d301b2-dbb3-4b14-a2b4-02f3dc093fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4acbb54-6244-4bdb-bc67-45a6aafbe1b2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5836c1b1-d39b-4810-9907-a9ad20b39dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22583f40-aa8a-4282-a256-d2d6bb9ebefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7b4a03-45ba-4899-a449-f77ff6d7946d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92949aa9-3186-499e-ae7b-9a73e06c31e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7aa0d2-6b68-4fa1-ae94-5fcd35f258e0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923866f8-3357-4e1b-9b14-70e4d835ab69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b898cc8-8a48-4070-afbd-5e70eb332ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e13378-430a-49c6-9367-22b57ce5d02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11657dbc-3918-4f67-9f1a-6cc953dc5e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099cd416-8852-4cf8-b86c-0d276685c7b0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ead766-7fdf-40d2-909b-8d3ca826e6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5fb1f8-96e4-484e-8898-cc7454f79943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce73a77-4396-4245-81e7-165959a18138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e89d0fc-79d2-499b-88de-b49185146439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6201f20-b789-4492-8e6e-b946cd4515ba",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677545fa-662f-4c8b-95af-ae370687471b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f109b0-9866-448c-a1af-b23520e51710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0134c60-dd80-42e9-9783-a695e5959b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "313b9e29-0517-4b64-947b-1e56f40e702c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c6b440-75ef-4716-b1ff-9cfc9b7ab89b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c293fb5-e3d5-4a03-9b3f-f03bb699b49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b8375a-746b-4f45-83f8-04bb4de452c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99c9bd6-3d6a-4959-9dc1-ff0083776402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f93a0f-46f0-42a2-a81e-7273c067ac95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfe1cd0-1e26-496c-9ff2-e58f1faf2557",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2daa79-1557-46b0-bbb2-7deb6380d99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd7fef78-b77c-47c8-8ad1-c328b7c084e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f210eb-4230-4306-a659-2d6f6985d552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b35c599-9730-40c4-9e41-e9b957ddc777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c25242-076f-4433-a6d0-40f5b9ddb211",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247a303d-8bbf-4b63-86d5-49b7084b3f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab13db6-77e9-4c69-8355-980a13e7fd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec644edc-cd6a-4abf-b6f5-a75548e8fb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61092d75-0dae-49aa-be09-1968a57d3640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ea72a3-c6f2-422a-9141-f428f423851a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9b9bac-c147-4652-8207-54d3115c4eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebe060b-9299-481d-aae2-fc35d025a287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09843dc-71c8-4c8d-9434-9318461515d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed931bb-202a-437d-a3dc-17fe7686a13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709202f3-c010-41a7-8759-647302fed760",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ae584b-cce6-403f-9983-0896140f84d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e6a56c-3aef-4644-8a66-3bc5f3602dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e942329f-c10f-4812-9b5d-6a597556bda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "028785a3-cb56-4b07-a311-e42c97902104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c307db-690d-4f4d-9ef8-a90d2246f791",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08092f1-7336-45f4-9562-8e98db67ff4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2635d6c-7998-4fb5-a8cf-215e5f02864e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa8845d-84ed-41e9-af95-3b61ca6cc59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "23b14fb7-a146-427b-b825-3e50c100857e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa72020-2ba9-4a34-bdbd-309cdf191644",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8630a875-090f-4d85-92e9-88b8ea48637f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2361ae66-eabf-41e1-a2e4-8c7827532dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b15497-4914-4df2-8a74-13237f72b746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3af39c77-d809-4e24-acef-138d0d9d189d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2102ba4-061b-4d17-8f04-45dcd3aeec1b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aee26e4-e53e-4523-96c4-b5e97c0b1614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209d0b68-0fe5-4ee3-b376-642fe782abab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb28f1f2-1d4a-40e6-96d0-78bdddfabcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "946a3110-ca07-4f62-add1-e482c76953af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d695bee3-3cc8-4d05-8b09-c825bce5ef83",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3914a447-1a65-41aa-8698-de1fa95748f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ea6e0a-7692-42d4-84d4-b43e1c75ad8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846efb3d-03ee-4523-97b7-fd892e00b516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "12e5d68b-16c9-498b-9c42-d87acbff9d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04bb3f2-b312-49c3-b825-37d92c016170",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f51a6e8-60e2-423b-b77b-1e527dd6f18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e023a7-4de4-425a-ba1f-15aede94788c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3551ccaa-0cb3-4afc-9a16-828c281ffb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f5ac91-69e4-4a63-ba79-51fc1f1e6505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928ad67d-0427-4bed-b990-332e63e35040",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1ddc49-b1d3-4472-a2ad-96253af06272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833fc1be-2a88-4f60-a839-0d06099946d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3970be8d-3b74-44a1-9c7b-a836c6cbcd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71fd40bd-4cee-43e9-938f-19951627a19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506f3713-f963-4baa-975d-5b309e9b4192",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652aa42e-bdac-49d8-8cf6-80d4bd592c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92dcd83-17a0-4652-8390-cc0a07865124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17f90a0-dc45-4923-b040-69a8dab0c61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4d11e2-32af-41f8-be65-2d8f530e37f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40014e9-a7a1-49f8-bafc-424f309b65e4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de1681f-8fed-4548-8604-2292e047e1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab69422-1866-45bb-9756-be7453e84df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58063416-7e4a-40fb-9d4b-0d3c15f497c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a65886-6c3a-4adc-bba1-ea76c1ec3f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3738dd9d-81fb-42d2-8c82-864071b46929",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61644ca-9974-4979-9325-10d34225ce6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc2b133-6cd2-4d69-94e6-92e3866d0eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561cd8ef-b4d5-4e17-b84e-32e91cfe1f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1e1f7c-4177-4f94-a720-5a250df76f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d74f8c-ff87-476f-aed2-f7070f4f2cdc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1cc8b1-8a26-4ab0-8148-42c8de605c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdc4eb2-f2e9-4acf-a62a-cb78bed102a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafcb2d7-9f80-476d-8128-d8e2b69c7f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edc9adde-36cc-4467-bbc2-1f69d48aff5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdfbacb-15e4-41a5-943f-a5c91241cafc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e954996b-d156-45f0-88e9-f41745b17ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059050e1-47d3-4603-af0d-9d881807874a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb1083d-4c5d-43ca-86a6-ab2f28e6cbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b713d0e3-776a-416a-9fbe-bdb41488311d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f323f20f-2023-4a9c-8fc4-d5aeb4343257",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c513b0-a1cd-4a5a-b5f4-92f766efaf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b705380-1825-4222-b101-b1896a920046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c850ff4d-3340-487c-b85d-580b8779c432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebf9104-24d1-4ddb-8af1-aa6182675308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818c72c5-29d3-4172-a23a-d1643168a973",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5bb48e-a21b-4c9b-bfeb-34921fa94b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a04d805-cdfd-46ea-9987-e16194805874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad68d51-fa0b-4686-b8c6-069ae93356e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a522677-6279-4f3c-a3a5-a2f6075e2be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf9a58d-47d0-4f13-9d7b-477867c05b70",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6545853-6ee7-4f55-a728-95c48570483e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c003a15-64eb-44b0-b7d9-b1c1f76b5576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc673d38-e41d-4816-9ca4-eedfe38a3608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92cc9381-0d86-4f32-aea3-4d17dce2a0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afcff59-0291-4e21-8291-bbc5ecf11a2c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d75e82-d5a0-4dea-a860-830e62707823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7493a9-6bfb-446a-bd6d-064c90629607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8943b750-8daa-40de-b45e-f8f1aa900292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b38bbbc1-6295-4a19-83eb-5e393193acb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c1ebc0-08ab-49af-9fe7-e0f5da1f9afc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd7f69f-7e34-491a-80be-99babdfd5d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166536a9-9b0a-411e-b009-1172d3a600b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f467e57-7184-4d41-bb8c-615f5c6eaadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a173f5-85af-496f-ac77-cf110e331942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0534c1ac-7f97-4622-a9ec-a91ab3235b83",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc679eac-ecfe-49ea-8f6b-4a47f87df96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d9ced9-37aa-447e-809d-80f79c0b533c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eeb08e-6058-4969-bc9a-9a7aa4b863af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f5604d96-47e8-4a07-b643-3f63f4a43116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8450a74d-9f8d-4781-85f8-a7f443e5de26",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e222e1-fcbd-4de3-9d42-0ecd2fe1914f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e905768-3ce8-40c6-9cd6-97354d91654c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecb494b-ebe2-476e-8658-c5ba2ba7e5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5870bd8b-c970-4342-bbd0-0c4ecbeb2278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d98e89c-25b3-4e78-8372-0a414d3d4fca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427d87bb-d1db-4cd6-afb6-4bd937c80771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56885e1e-7edb-4c1a-a13b-e43bb3df4e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6882b0e-1ded-4d6e-a2b3-0185eb28af73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc5e2ab-6990-40d0-81bc-cb70e73bbc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad262d3c-66b6-4292-a444-86360765cd98",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79465ff0-901b-454f-a847-1279b1b2fd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc17fd1b-1f4e-465d-b22f-95fd99dc127f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6181c84f-6f69-4c7b-ae38-16b6e910e56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4baaca8-1099-4c5d-9f73-e9562ec7a750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e05f94-7224-49c5-aa62-db22e3c4836b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b295008-4e2e-4a30-a95e-048a6185de1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0195f6aa-11dc-4de4-8814-a9a60f57b551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44180142-7ede-402d-bc1d-88a40611b10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "67ae3814-5aa9-4a0d-aaf4-4c1ea34bd55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa66707-7ebc-4dfe-888a-e96a933b6d7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc4ecc2-cc6a-43c3-9d4b-777e76c7c75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210c1c49-31ba-4059-b1dd-bd1fc9bb4d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31d9534-bae3-4d0f-9359-04efa67c7fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5278fd36-3e3d-4a3f-b6ff-d492d39e99f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cd5668-9f31-49eb-8cf9-23f0f4a8e048",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992580dc-f735-4aa8-8da7-7bc9a731adf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca609e3f-1383-4d0a-9455-f92f9da44216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdd3f04-1a23-497b-b39f-cdf1ad694241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e63bb9f-0be1-4e38-87ff-87456dc8324d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101a0e2f-b94c-4cdc-a246-335a3910c11c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc43ad1-9cc5-4e1b-a4d0-677bf0fce01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b155ad43-87d7-4e74-a16d-e9f82457f781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a709b3b0-2aca-4736-a263-8ed60a4eecfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b25f0c3-96f8-48b6-92f7-abc8191599a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f7f5c6-1bbc-413e-9a8b-40c07e08a4df",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1f868c-f5ae-4e56-9183-34f5a7a72bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e68a67-17b7-4889-afb2-cd17e36a17f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1187d2-6b73-40a6-9b83-a1e42b4ecc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d80c43-c257-441a-95ef-0b3cd6ec1415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60756f2-9043-4f61-b242-6f2ef9761a58",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6183de-6023-467e-bd06-639754ef0d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7e4d84-7a1a-41c7-8845-f11effc662e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a064b0d-ed4d-464b-9291-f41e43c10407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04972fbb-8dad-409b-8e19-f9565a1c4e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f432032-4ea5-4b59-82a0-b753e089d308",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bd0941-e7c4-45bd-a88b-1ed75e7a3d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80dc2aac-9288-4355-b661-0dbab9cd13f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d712d62-be0d-448c-81e2-bd107622220e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e34462-7ae6-4e7c-a247-2e8f767f2cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d8c392-cfe5-451d-a998-95c345cc1677",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae600e6f-f160-4edf-9ff7-26cec32e3164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06458d76-50e1-4eba-bb7d-ac20dc53a1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed5ab23-a09a-49d3-9a37-4ba7afc418e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8a1724-44cb-4a74-867b-cee13c677ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1e06cd-3df1-4738-81d4-b58d20753e3e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce44028-8182-46f7-bffe-d04ecef97b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214bd209-47b6-4e5a-86cf-da5eaf47040e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9985e303-f27e-4acb-bd76-9501279eb41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "141e25eb-6595-4b9c-9357-c6660d4cca0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9ac9ae-95ae-4c63-892d-49fbcf81c626",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b4a6aa-42d6-4b8b-a222-053671a3e243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfd7d99-f92a-4364-b52e-e33c50580626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62122885-22e1-4d3b-8f77-0389a12fb974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ceaf3b-c5e8-48e7-ab62-7f3d462e7bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e749fe98-5668-4b13-a7bc-57ba82db4bbc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba09b4c9-d2cf-4367-b8a7-0f033d8bf72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd5ff32-b4aa-49cb-83dd-7dd7130db700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ceb8bfd-d6b2-4bc6-aa50-16584df32ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e24f5a-509b-44ed-800e-ce76046119d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d0e9e2-558d-4dbe-8708-518e585e8eff",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b498bdea-ce01-4afe-8ebc-39bd0c618afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a40ae0-3b5e-47d8-b926-d02795e9e6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38819451-6c0c-4563-b1f1-26590db1900e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c561e4-7d3c-4bd3-861c-17fedb674185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2207076-598c-4a8d-8748-53fa3cb565ab",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec35565d-2cb2-4081-9c8d-2e4cd1e3ac28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f1ca79-8234-4894-a02c-9472a43944c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b03eae-9fd1-4fbe-a092-512474349def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad692be-9326-4d12-8184-486f67753c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b887965-defc-4e2c-8c49-93fc31b9b8c3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12515d11-756c-4d7a-a031-82702fbf17dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8245c4-34c0-4562-9254-55f09a8cb8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7eda4f-2fed-4e3f-be37-a87d5996abb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "003a6632-cf40-4e37-a6f8-cf05a98a59e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baef6a61-8647-45df-a617-7b0899f212db",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65694058-a60b-4eaf-8f51-e6567c75056c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe66273-0df1-4837-b0d9-4754e890332f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7d42bf-0605-4259-a2b2-84f43cc3b8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4361c335-e313-4559-bb4d-75820448362c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023171f2-4159-4c1b-8040-a9956a9b50fa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15af5b0-4d2e-46d8-8dd6-a1fbd14c62e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fd0e1a-e51e-4252-8ab8-5885a60854ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462114f4-cc74-48a2-a4de-1b43d4c94861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6712886e-4b37-4f1c-a9d0-7cec9207e748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be22cfe2-103c-447c-a496-b64a78625529",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d005185e-7409-4a64-b0c8-04023691953d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf851a6e-172d-447e-b11b-ee7e85d55414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ea324c-bf82-4fa7-9c93-cb4747cdd104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82020e10-7961-4e85-9d1b-28e6b1752c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ead5f9-ece8-44b7-9b9e-0230a8d3c77b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71038cef-b346-408b-b539-554e4ade8c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9e0ce9-e5fc-4b33-940f-75e751fc2474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b2a630-6b98-4090-9d99-bfccc01fb645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d7e56f-fdc2-4710-af42-f19359736fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38efc3a-171a-40fa-811c-df499dc7dfca",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c5f8ef-24b9-4c19-a729-57cde05dabbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6158fa37-b9f0-4aa6-b2ce-1cb4c9ed5141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac3be98-3f43-4d0f-8de8-8a7129335669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03e27130-7cb0-4371-9cda-509af51c455e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b886fb26-5665-4b4e-9881-89b7fbc44c6f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd639213-c469-4f3b-860e-9a80eab78fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda55f16-afe6-47f7-8b70-72c66c58394f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf4a817-00b1-4729-9886-48300aade6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "380f71d5-1202-437e-ac81-568e1717117b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ab9b38-f948-4b33-86a2-69e52828e0f1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4024aaf-8887-4317-befe-f6705c284b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12828546-313b-437d-8a9d-c82b4a23c4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5f895a-76cb-4eb6-a40e-6efd95f4ca8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "529e9910-6d93-44d0-9905-1092778c0dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0981d791-619f-4c0c-a947-f4015db9874d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209477cc-50a2-4b20-bfc8-b5dc7c7aaaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111acb4b-ddb5-4489-965e-1226bc8bfd75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a112198-e3e9-45c3-b84c-5d9aac4c7b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e84460-c884-497c-ace3-c547ce4efa45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba59ba0a-41e7-43ac-86ba-ddaf6773b14f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e169fc7-48ad-468a-a7bc-e05d5efcb65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb5b26f-0d34-46e5-a569-f82fd0b46ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ae22c1-7f75-4e12-8f10-676ce37a5ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b80eda8-43c8-4197-b1b4-6bb5898013b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a000fbe-4c0a-4acd-a975-4fa6a5c0ef07",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1db964-dd42-4db4-91f0-8251f93d2a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c271ac8-1f1a-4b63-a415-9bd07529507c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4a7ca0-819b-4cd2-9ae4-bb9845c7c0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "708a3ab2-b829-4cd7-807d-9af4407d4d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f19eb75-a13d-4fed-9cbd-cea60c0ecc03",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4005e69-7099-4e34-b435-a4b77421932a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcedf602-0694-417e-a942-9689344c7090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0eae87-e503-4129-b939-795d7c934a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b72b8a30-4990-4ed2-8f0c-11bff13f4f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faaaba41-1f26-4289-8c7e-b0671022f3ed",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d7b7e9-45d2-4a6e-9ef3-69117a19a3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f272d715-8438-471f-b821-bc66c9d2cf83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df344697-2d51-4351-bcf1-92a46c5017b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61308680-4990-4ac3-8a65-b6cda35fae4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1d9078-d3ed-429d-bebf-f7131c575a74",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35f4c11-385a-4e33-a4af-914c826a9b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5818a13-aa3f-488e-ae35-d9d9798f3c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa88d0d4-e530-4945-87fa-619c092a6ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca555b57-b434-45d1-a522-afeb4eb2fae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596fa2d0-0ec7-4504-97cd-5aeb5bc025ac",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccad8a6-e3fe-4b21-b2ab-e02e738e9fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170d780d-a709-4e7a-b889-aedac96a05cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8254a1d9-733d-411c-b0e0-7a3867e4af1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8e2499-aab8-4327-b4ef-52cda9c6f458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fb2cfa-6b6d-4cb5-ae20-32657c3a02ef",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23697f25-933c-435d-92b9-875195912cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbfa33e-c930-4a09-a18b-59f62522810d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c144b59c-5038-4f57-8c77-6e4692637c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce32b2b3-6102-4de4-b903-0725aef2d264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6146e055-b199-461d-af30-2d34993713fb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13fc4cb-4da4-48df-8944-0d8a6c2e4ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cd2b7f-6301-483e-ac22-1f503cdd880f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00890b45-a43c-4969-b0cf-4b8fc4344471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8caf6b1b-0c99-4cff-b832-22b97a350176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd0923e-cc27-4938-b32d-a6bbf7468cc4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d047b-fc3a-4c6b-9d41-f367b00e0468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218d552a-ca32-46de-87b1-a1f3a76d8db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c43c81e-c621-4331-812b-a36e3c8754b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb617680-2960-4bdf-b3ab-986766420831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118563ea-003f-415e-8bb2-bbde40b36c4d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8effcd94-2afa-43c1-b05f-aae5ce9107f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14053970-02a5-401d-b820-ad2e982906cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277d287f-f39a-48e8-90d7-3e8bae8f4dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccad8e56-e679-43f0-b1e9-51c5504224fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37a9a93-446e-4977-a090-48da8297d69d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7ed78f-fffa-4c8a-84e7-05da02b7dad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0171ecd1-b84b-42b0-aa37-11038e20d96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76473df9-9e4a-4fa3-a2ea-f5510ecd10ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc22ba9-488f-47fe-9045-67a8258e4795"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1df294ef-39d9-42a9-8a45-c25bed8bd947",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "704b572b-153a-4bee-9296-a5619ff98612",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911e45ef-eb32-4fac-bcf4-cf47d14989d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9d226ca-2c29-41d1-b602-804b873681e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8cfcef-6f77-43ae-9d3a-9714995c349d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29208bf4-151e-450a-8523-6ebbfd331e4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a856afe-6ae7-4958-bba6-6913e93442d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa169111-d4e0-46ea-a4ad-e50a5280f042"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7a37f7c-c863-4f01-92e2-0ab6281c21c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0b08e53-ce9b-4791-aea5-0d6f6b11b433"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12c926dd-5b07-4e49-8a10-6708e4bcf0c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b52cf34-3a01-4213-bba5-b2fa6832a7ce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d604ba5-7752-4dd1-ba1f-aa878657cadd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ccd8799c-2f47-4e32-92fb-b161ab2e0a0a"
                }
              }
            ]
          },
          {
            "id": "9c5d3ae5-d810-472c-8e78-b16bfb7f59e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e0a4f2a-3fd4-49be-9541-398c1efe06df",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dfe77a26-a5fe-4f03-b2d9-d0eeb7b66762",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d288d687-b21d-4f3d-8395-419eae4078e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dd41ef91-d503-4915-b3f8-d3496f9ea0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7f4db6-081e-4ec7-a9b3-264e0665c125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25eb2808-3ff5-4c63-99f9-69cf76cfce6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c7edae3d-f9f4-49bc-a176-37a88320aaeb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e508d46c-89fd-4252-b417-2c7f8cc93a12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e039091-dc04-4cc2-88c0-20a36ab59d4c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fc8b623-6364-4e1a-9f78-45f8a9d50d21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eb131c13-0eb9-4c8e-9115-4a3eb36bfb94"
                    }
                  }
                ]
              },
              {
                "id": "ee7f1a6e-9ff8-4b8a-b3f3-0052864bf4aa",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7aad5ca9-ea16-44b6-826e-47da17617654",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4ad81d1-34f4-4ac2-8171-0bb92b7e5550"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f98d0b32-2fc1-476a-be32-5c96f3c14354",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03049f49-6d51-4019-9b8b-90dece2b3d23"
                    }
                  }
                ]
              },
              {
                "id": "8d682513-6a0b-458d-9b31-9a012005119a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ffa4321-13e7-4572-9e97-a6a498316bcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb95210e-5568-442a-a6af-1da123cf1eae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51eb5e55-b99a-454f-be30-fc2b6030cbdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5aa214ac-8cfb-4b3c-878b-9c9593c5547b"
                    }
                  }
                ]
              },
              {
                "id": "3191922d-2283-49c6-b06e-d7d3579d2820",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cbb5174-5fe6-4f81-af24-8a5ee4de1c00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e6ac48f-506b-4d45-90de-348093a2e601"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7f900fb-840d-470a-b7be-9783cb841662",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7398c26d-b6b3-409f-a7da-375664209e1d"
                    }
                  }
                ]
              },
              {
                "id": "9e9373a2-f032-48b2-86cc-566afcf37cb1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a1e935f-86b9-434c-b18d-ef7fbc9dfb91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32a68147-14af-4178-9988-68b1d4646713"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e103764f-ada2-4973-baf4-c0404e023eb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7aeb8b78-f212-46be-b177-44e37dc7c0a2"
                    }
                  }
                ]
              },
              {
                "id": "a8e94acf-50e8-4454-93b8-52e8b292da2f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74744006-2ca7-449c-935b-2d31885dfe4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6dd4350-b08e-4efe-8056-bc76cfbc0981"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de042f1e-628a-45c0-b67a-a9099fc34cfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4bcb17ec-2c12-4a78-8659-74d7b91ef06c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f437acc2-60fb-4cbc-a14e-1548f260d05d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30ed9e3c-11b0-410b-a024-c2278862dc85"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f888ec1d-ce71-47ed-aab3-384d62e428d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59dc3481-c8f2-48c4-bcc8-a0f827ee5377"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c1b3867-d72c-4173-bb03-181dcca624c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e3e67301-18fb-42a6-a6a4-c074fc30a713"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83f2236b-e30e-4af0-be8a-ac93890079fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40b416eb-8979-4e50-947d-c4bc3cd4b9c7"
            }
          }
        ]
      },
      {
        "id": "b7dd0688-a703-490d-8f27-d1203a2ef7a8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "48328138-de34-4f6d-b2ba-e309e4260b7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7868946e-df95-46b2-8dce-a7969e8e695d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9193a3f-1ae1-4ed3-af7f-9582eabee039",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eabfdc5-128c-48a2-ad57-ea49efd0020b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c15e3f-d24d-4a42-969c-382a14671512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a17d30f-624a-4bad-9080-7c190f8ac78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5945e1b9-86cc-4a53-872e-e747e266b4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f638ca-0e17-4b16-a456-21501f7a8e43",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b66b92e-123f-42ba-b883-d2169bc4e0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea9d35f-99c2-4bf0-b764-bd38006cfc8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c280ba8a-9cee-4fcd-86b9-d1fbea3886a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "006ebc9a-22bf-4604-a510-d148d7bd9bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c40fcb-0273-4145-9845-58e0e24e766a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e0e422-63a9-46f3-8b4f-fbb9224b5e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c13aa2-31bf-4dd5-84ef-85ebb012a1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50228979-d243-4acf-a421-819a9e4b2377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02843edc-1bfc-4203-843e-1f87e890c64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b12350-81be-4ec8-a8c0-18920a8b995a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae88696f-4442-4465-9ab4-f84cec41538d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82063725-48fa-42f8-9558-db27a12e6713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5a8139-1c74-43b9-8b93-d153a456cbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2338890-641a-4be6-b906-1fcf0aeef8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d8f34d-8f76-4d1f-b187-8f83d13e387a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715e8558-3970-43c1-abe3-202c99f6e2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643ebaa4-7d74-4168-b0a6-ae3e04ce5ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaed542e-801e-41b3-bb01-f187a7859eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d224c9f-bf53-4f2d-bfaa-b7d103d32da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b6beae-dc94-4f49-8cdb-572f1546cd32",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da3b659-6edc-454e-8df8-48b9b2e00937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da10c56-74a4-4632-9399-cf25e5530762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d15ca19-3158-40db-8df2-1f166a412961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7fdcb8-97d2-4082-9eee-647da295b1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf0c0e6-6f9e-4723-80e3-8a7592e14d4e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b7d961-f7f8-4f73-87e1-80d9b289639d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67720e8-121e-4d87-9cfa-531b36bd9841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d856123-c9d2-4d41-8228-f64175208860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb24432f-edf4-4d79-a2f8-fb29b8533d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17377c91-32c4-4e7c-87b0-7b5a0f41d894",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9014c92b-1ec5-4aee-b015-840111654b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a60b594-9a33-4286-ba5a-3d38ad87074b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad397091-1dd5-4cfc-a0e7-c0bf936d1884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56d50764-15e2-40f8-8947-ed69ef32dd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9f7af1-24da-4093-8b94-1039768538ff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ecd08a-81a4-4b91-9286-7258e5afef9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9053fb04-a0e0-4bc1-bc13-8330c966d872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701233af-a6d9-44ae-8050-f9f831f06961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9714c8-5312-40d0-8e1c-d47638adb9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62555cc-61e2-4626-ab57-d33543919382",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45810a4-e59c-4738-8067-47ce417d777d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d9fbef-73f8-4ad5-af4c-66c518785588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae33bd8-5b02-42fb-9889-c718c04c21bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3976cddb-be57-4ed6-ad13-be67dcaff569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423ed9b4-a8b1-44c7-a6ae-e8b58b0e8ee5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae774b3-ec6d-4d1d-882a-7166da3c843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156c36b9-2edb-4aa3-9086-794e33030237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ecea45-df38-46fa-ac1a-207c12c7c86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c38e06b2-e231-468b-b3bb-6e9efcab9dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ec86ba-b5a1-4708-af25-32f5576d4ff6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdd0e99-9a04-4038-8086-99755f053a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c43ccd-82d9-48ec-b167-139896554071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0c6c2f-e0f9-4bba-98a4-63fc2e180892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e74830-9ad8-463f-aa9d-8fe21d4a98b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8779efcb-8564-4ed2-ad85-93cafe3a2034",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61af688-4fab-43f8-88d8-b60305c7ab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47ef7d1-bae8-4e00-a19b-75ac64c9f7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704a7465-5a64-485f-822b-3f6c378c0ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35cdb61c-0ef7-41a7-801b-3aef686b4487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65aa8ac7-b986-40ec-98f6-41d48fa4b253",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f809a76d-8193-4147-a0a3-076b708297fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8899bf-4d44-4abe-8da0-99d40fe5824d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3353559-601a-4236-adbb-69627684fa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c595e5a-e9c0-451a-9c16-d0ae1b46c6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1da7a8-0695-41eb-a040-4c688fe65edc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84991ad-e778-459f-940e-d787200aebb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455af525-4e7d-47b4-ae49-e4c832e99cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e91842-40bd-437a-af5a-06271fdd5062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "de710826-cd40-4062-b028-610490a5f6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bfc200-8493-4822-89cd-b40b3204178d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36d7202-a7b7-41b0-9293-e41cb73b6297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54992ab9-2a50-4eff-90eb-2f4a60da279c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b39ace-2a54-4ade-972a-c657218343b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5415eaba-c2d9-4892-97d9-d01af6c9202a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3673ba3f-679f-4d1c-ab22-41c5189636a5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a9a6bf-7084-43c1-8e34-fd69d301fddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14f7d85-128b-4637-9eb6-9d29f4627011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dd17b2-4a16-4059-8d63-8a7cc6c3ccc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6797760e-c223-436d-ba44-cb3e6a76d39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625c3bea-15d1-443b-9463-119cfa137000",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50f64e9-0d8a-46ed-867f-8ccd004828a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d525f21-53c0-4774-86c3-d483a619bc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16593a02-8713-4ae5-ad7d-cf2328b074c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f953de6-6cdc-4513-819a-17cfc60d801f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc98c2b7-2d03-425f-a4b3-aa5eac728e84",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b6237e-30cb-461a-93e1-53993f77cd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96884a78-2b2b-4e82-8d01-2dda3fff270e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276189e4-7f56-4054-ba56-f78d07ce1968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e904b79c-fd7c-4017-b5fe-ea19d31ace46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47248f4a-70e6-46c6-bb2d-9f30c1df92e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f172af0b-0561-4a9a-9846-893f5bf03a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38553eea-b3f2-472b-b8fb-6f76999a0750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74505b22-c041-451f-a9e8-8c038f4d6542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d313b4e5-3bef-4bf0-831c-4ebfb13dfdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14afa753-7597-47f9-bea0-6e1e8f9ad917",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f91102-3a90-4101-9d99-8c48c65427c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465f8580-afaa-488c-87f4-08125ef33e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46632fc7-cf2b-40ca-b0ef-c84e8e7571c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbadbbab-c317-4deb-950b-0b923bde509e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d5dc55-eba1-496d-bf67-18765b05a302",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0cc17d-389b-4983-ae53-ded9697977f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357c22c5-5142-43cf-92c9-ea83d3a66953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bd833d-823e-4f4b-a1da-1841c6c222ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09ffe0f8-be1d-4dbc-9542-f265d8b260e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c4214d-f7f6-499f-90c4-9c73606f9a59",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a476c386-124d-4ba5-8fc2-ab67b6a84ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41de3030-83f7-430f-964e-fbeedd0dbdcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d81653-0c8e-4b8e-918e-73434e41be0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5f6c2b-4f39-4899-a51e-a21bf765210c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1f81dd-3713-40f2-8897-a6fb86b40a8f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4da69f-d685-44d1-85a0-871fb7b84d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76f3ee5-e088-4a57-942c-c13d11a62e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fe6c79-11f2-4dc9-8d87-5d178bf3327c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12e05cf0-c1a3-450d-aa99-e05751da1413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b5397f-a00d-43ef-a062-d7f2722349e0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392afaf7-78f2-48bd-abd9-b0c8ceda78d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1709394-3352-487b-a954-0b126fcec5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a85a34-38fb-4f8e-9cb4-00163032ade9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "218649a0-a57c-49a4-a739-b04e61172216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6ac9eb-bec7-46fc-9bf4-7b45afad1ea1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2336a4c1-493a-4d29-8bc3-f0a8abd455cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d123640-db94-4401-96ba-98042c13c3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4fee92-862f-4b7f-aad4-58bd3bbdca98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa4b48c-70e2-4e7e-8691-6b0c3407630f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8a7e85-8be6-4ea3-9cda-97f6170fa3bc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74883ef-8a75-4a84-ac5b-9b8981fb8483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4040536f-b4f1-448b-b066-89ae64fc7d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84051ffd-d454-4bbc-98b5-fb73dd16385c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3e1fda-7b0c-4bd5-8a61-ea8b999ee8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16eb6718-a52f-48a4-8095-ea436a6dd133",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4b1ab4-9630-4437-818a-7681e55302e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8f3c42-52db-4f9c-a680-b55e39682eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502233df-08ea-4cbe-8930-2aa476c2d742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8a2229-c131-4a5a-b13b-42d2a238cc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44321d7f-cd4b-4112-b22a-f21aa526bf92",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a79eb8-8f45-4b8b-9263-9d53f564672d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b566a0-0da1-4fb1-ac7f-16390b8c91d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129e56ff-267d-406a-b8f2-dfd1b1782d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c9904e-6f2c-469b-a40d-62ef7d636383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69b47d9-4690-47a7-a78a-a958f7bd6d19",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bda9c57-fde9-4ccd-8eba-4d6029b13497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fb9d43-3533-42df-8742-10672a6a0726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d386cf7a-4846-4ab8-90d9-b6591bbc942e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c9f1d6-e529-4cf2-bd4b-b126fa8ded5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517ec1c8-d2b4-465e-8e96-c04a3ddceb03",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ecd8bb-3797-47b3-9c86-9a07a35ec047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c158b9b-07ce-4e69-bcdc-b105b5cab981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defa9fcb-1c3e-4816-a6ec-f739f96c9460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b9b970-a5d7-41ac-b951-a4eddedcbd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3760dc-ce90-4293-a368-6575f1e6502f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef15c3a-35f2-4524-a052-9172a62e4d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915b98a8-389d-4a54-b105-ed1224cd8598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f4934b-01d7-4b85-ba8e-3825f4728531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f71a1b-7519-4528-91c3-bcebd026c3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41489f9-69d9-4260-b561-283885cb689b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74129c2-ae0b-408d-bab0-37ce0ac06065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe1282a-a787-4513-80a8-c7100c11fc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b2c65c-0a6c-4e3b-b1ec-d22a7888c006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef544e24-9967-4f9e-9a40-627b7c6be3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ea6808-2261-422d-8bd7-cf76861b57d9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18313517-4bcd-42aa-a5e7-d0748c6963b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f5219b-1a6d-4bc6-9394-eaf2c102535e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40abcea5-85bd-4bd2-a347-727fdc057d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e485edf2-89b7-4d4d-9f80-7e215c32f397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d988f686-39ec-464e-b7d1-bde1444bf7b1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c272ef-7054-48ed-94b4-94ef678568ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19331a8-0201-4c8a-96fd-b98587b709e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ee5c84-4ac3-4663-a1c9-251018b9b45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed848bdf-8ee4-4510-b09c-1e8c6269c64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df677c1-a54b-43ab-9c43-db27466fb632",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cf1e9f-4d1a-4c7f-a3f9-8df95745f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c408657-63b2-4452-ae4e-203383e0da92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f56a29b-8a7c-4c47-92de-b1f45142fae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "768a5bd1-acc0-4bee-a199-e9f0252e98af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d17fbeb-acac-40f8-abf7-f9f58da78a8c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65d791e-f56a-423f-ab5b-988286e051cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d534d3b-4a54-4d3f-82ce-1cfc6530bd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc9a608-b31c-4034-bdb0-e6ac9fda4361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a8c58e-e8c0-45bf-8614-79ba607cf368"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "95019683-27dc-4a43-96ee-f4c3e1c52753",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "289dc0b0-c04e-4c21-90e2-b25e8fcd8245",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507daa0c-5877-42c0-8f60-17c651e3b4ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "52311b68-cde2-4466-9b20-6439801b5a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485f91e1-85cb-4b2e-b36b-c5de01fd8096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bce27e5-0fe2-4dea-b780-0543565a8993"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b46c6144-a20b-4df4-9cf7-9eaed7de30da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60497bda-f21b-405d-9377-97253acdf15c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92efdd98-5038-4a42-bb33-54e38b5028fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a796250b-1afa-4f9c-8f5c-af2e9dadf700"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0665a6f0-46b1-4383-be93-47c3cd9cd91b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b200dd2c-c1bf-4c93-af0a-d0fb12a7e60c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a24139c4-3c67-499e-9ac3-11ffcac853c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b917e3b-a10b-4257-b977-bd8373d767cb"
            }
          }
        ]
      },
      {
        "id": "bcf14a29-728a-4542-a20a-fd7cad3f6824",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d305746b-4baf-456a-8105-dd1234999665",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e469dba-6a0f-4866-9926-8d49f1279dd2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b8dc4bb3-3e2c-49c8-9bf7-a5235b7bb342",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8981e6de-64d3-4dde-930b-7dd957d6b81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10932f7-39fe-4db7-afbf-c0ef150eaecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477da222-69dc-457e-ab5b-dee610fb7c6a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816fa9b3-f05c-4165-b35f-6c34ef36d20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf798ec-2c60-49b1-921d-5954e55cc5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6ec278-35af-4ae1-a792-50e65ec4f52c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7576f42-c62f-4076-8728-8b650771840f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb9ba7a-94ab-41ae-a008-8ac383bd1e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff83e347-cc2c-4a46-b17c-b4bf1d55f7ef",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4ded5f-bbe2-4089-8275-98752b16aa28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b56a3f-cf74-4268-b0fb-244a319bc292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abeb5694-5686-4872-8e44-88d7bb830aa1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4191d31f-2b43-464d-bf5e-934858ef6489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5b4cdf-3fa1-4686-835e-59b286150d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8ac44f-3311-47cc-9338-51b140be0af3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b824df3b-10ab-402f-b25e-81bfcb21e7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767f781f-ac2b-445d-a1fc-1c8e52afbae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020849c9-e8b5-48a6-a830-3f43aadb0392",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600f5ecc-15e8-466d-94ae-79bd9994d7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3370a1c-fa45-4476-903d-9357ae88ba43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffe8aad-86f7-4083-acaa-dc6cde99045f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de428ef6-c252-4e3c-a410-6ff9d6061ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d550c9a0-fac4-48c8-8b29-044b9b70b27c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49446fd0-93fd-449f-a41f-97faa4577936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e5f8b1-114b-40f2-afc0-a3afbaced5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68636a7-e53b-4d6f-882f-469dcd1e5a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0217de63-5d76-4a1f-8a18-4680e93ae2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db6ef82-2770-4553-89f9-176b089149a8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a733d9bd-4818-43ef-979e-87a6eab8585c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69cc1f38-935a-43f5-b3af-a8351a406eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61abe8d-cf9c-4338-ba69-41a320f6346a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa47a3a-dac5-4e5e-a32a-d9fb72ef2245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ec9482-de76-4a92-8e0a-44c5932c7ec6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d21983a-c12d-4617-81dd-9206bafd2657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d700f51-fd32-49af-9f86-cdf31bdff8d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5e7ee4-8bf8-47f8-8aba-f22a086791ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0cc3b5-9e01-4a5c-8493-2dbff57c5338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec5d651-136d-4f21-972a-3b1c559928e2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406c2aff-6ff0-436e-8241-e0dba0486e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f1763c-2edb-43e1-99a5-fb304a2a9acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae095bc2-c6ac-4877-b5d2-8fc9832282a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0169159-9ce3-4357-8f40-16730cff007c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848724cc-4bfa-4200-a0d6-0f07d1882b31",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ef98ea-e53e-4e2d-a2a6-c56925728ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57dae56-7382-45d6-8080-6e8dbf62311f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e07768-d85d-41fd-b59b-b78bd5168712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede7d6da-4847-430c-9542-41e4e1874af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88fdb94-a135-4aeb-b35d-545f6976446c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f48dda3-2dd2-48fc-8a0c-f1e5d5b8c423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c290ff1c-c412-4cb4-b838-456b9f31e2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c6acbf-e9bf-4374-843b-07bde86e5b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd245d47-2895-4edd-be70-69cabd1eae23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26634d36-3138-4743-b263-52474200fcda",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d09edb-abd3-4f51-9a14-a1307e2bf32a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "220fff66-fbb5-4a22-9420-ee4b1516d293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ea18e2-9be8-4b31-8709-eb14140d2f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbc373b-33b9-4973-ad68-3fb91e25f2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2f0c99-d16e-40be-9b13-0a55e1e95456",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b46456-ee23-447f-90df-e724f3c89096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0735ce89-9753-41ff-8530-79351c27eef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57407531-ed9d-4d38-befb-a3f9a37104c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069e2f36-9553-49e3-854b-a9b1e6d0a8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b66a8c-23d9-4f50-9532-155cc72f50a6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c3917e-4bbf-4509-bd82-4656b00d0dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ff7371-5973-4f3f-aca6-65f9ade6aa26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d29bd30-ca8a-4619-ab51-bf41686bf5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb802b0b-8e0d-4bb8-915f-3d093607e8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff496e4e-ea9a-4705-a7fb-3b3791a201f9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133a5b7b-1bc6-407d-afb4-7678fc6b92b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec7c3e3-9f49-40d0-8aee-4cdddbfade41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e82c67c-e1c3-4f1c-9545-a498d528fb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff00bdf-d12e-4832-aaad-b4568b192487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e55e97-96b3-4f10-a105-9f8d3cb78f14",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847cfc0f-229c-46ba-9e48-adb10624b0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06838161-9fd1-43fc-852d-4dd2beb92eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a74e3a-5dd4-405e-be31-60beb99e78d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e6ea17-7e9d-48f7-8b1a-98f7d3a5d3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92769dcd-6fe8-47c2-9a92-65b8025d6304",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b67d3ab-277f-478e-8d42-b3ecace071a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e006693-9149-448a-9251-d91950ccb6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e913d87f-2e15-4b45-9404-63d14ce5b76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8b8a26-05b0-4a34-9b39-c23e2b2afcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744dd47e-f6b4-48f6-9617-11a0941349b9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ec93c4-8749-4abc-85be-49a3c737c78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce3f31d-a4b0-4b26-ac87-96d972a3b62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5438a0ba-518f-4635-b1a2-032e27493c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593e1f93-8789-4a8a-af0b-89b843733ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064e64b5-f352-4693-9087-e23dc919ec3d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74fad14-d93d-44dc-8a56-5e9e634db237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8500b514-69e8-4ebf-8a0a-4173a228d20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1f08ca-4473-42a6-a43f-4fc8d5b0204c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18f0043-cafa-4cde-8a70-cd19af6ffe9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d63a2c-a82b-42af-b14a-8d69c2551ba1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a07255-7722-4cbe-9bdc-d5e28501a5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c0693f-e6a5-4b72-8c3e-eca860e9db26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41665eb8-9b40-4122-acab-a6de6d789747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f5b1f4-f9d8-41a0-a1b2-487a6797c80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e9ad7e-eb69-4eed-8eff-48b5a08c0535",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7452a784-67ff-4a71-ae7e-3eda9c224fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c69586b-c1af-433c-b6c2-fba1e6ba330f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5131434-0330-42d3-8b53-29bc4921b336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d257103-2faa-441c-8478-31e02c909575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5458a08-410d-49ab-adca-f4b7ff55dd01",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534409b0-9fa1-4d52-a530-7f924b397ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01734515-4413-4cba-9588-a340e4c0b80c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba4aab3-2812-4caa-903a-1f2177f4fff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075e845b-8b98-4367-94b2-dc5fef8303c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38e05d9-357a-43d4-8b4f-09597c452ebe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78292b9d-00ee-4d69-8671-73ac747d5244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d69ad7-9a7f-4859-b608-16128ce84c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0185c1f1-9cbc-4338-95d5-946b93745023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c838307-1326-4b94-90ab-67396c141cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09030bd3-297b-4002-bc31-93a11c07987d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f092eb1b-5745-4610-9c5d-61b7473d7c8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bd99251-78b8-4afa-b350-114be35bb719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cea6799-ae16-42cf-bfd8-b4ab0e3d0c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7fd5dc-df67-4640-ba4c-46915f74b049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c7b0ef-3513-4773-8fdb-078386ed0cf6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43c1af0-0ae7-4d93-a92a-0981c27a8596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a2ae89a-cc44-4bc4-bc76-4d842064f5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2920297-7ee9-4225-80ad-5a51793a4501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959e8496-05e2-4d08-85e8-46f1f8d12c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec1b4bd-56e7-41d7-bad0-522a1d6c5e51",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9f7d8b-3868-4909-91b7-2bb6a29ab625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5665a26-39dd-4cd4-82c0-ba664390f0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dd9964-2792-474c-b54d-81124ee07c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb9f760-9d12-4231-aeaa-a3ccce52e5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a70cf3c-68ef-40a0-aadf-ea2bd80eb50d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5a0d7b-3b0a-4444-a2cc-559a4987329a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943b0e9c-3808-4b6a-a184-f0301ff5ec57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7466598-0548-469e-99e5-ed91472cb4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e633e7-20b0-4294-946a-cd92ffe3008f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fafbbaf-e877-44cd-b617-e26f8783fa4d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50f5b19-d916-4c5b-9917-10c98a4d1418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d429e835-8762-4588-a9c2-bdbf8ffdbd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0b0fcc-56d4-4cd7-a8cf-a533da45136a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97af42b8-473a-4b87-84b9-6a2746e582d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc36498-5cd2-4455-a28c-b99aeb3f86b9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d555dc25-813e-4f3b-af2c-88c92bc62216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef5dc1b-7735-41c1-b96e-d87b58143764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be45fcb1-5f85-457a-9dae-7e04d7308b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2205712d-1a65-4cc3-a426-ebdc3a6d9a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b097dd-c655-43f0-bb78-b00d4a9c55c4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3bbe6b-cffe-455e-9a5e-d71b584e846e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d12869a2-ae14-4310-9eac-0225374ba693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71052b36-a480-48f2-9135-f6483d0fd81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596f5360-c4e0-43f0-be5d-efbe1dfe90ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1479f6de-31ff-487b-9707-683593bd3b84",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca348f5-1821-48bc-9c95-fa4711c3a33e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "115e573a-f7b5-4107-a177-744c1b51667e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749035c4-6eb8-488b-b000-d17c99720327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177b1021-98ef-44dd-8af1-b5810d73f7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbddbbf8-9652-4ddd-9a83-a071d3cef53d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5be6da8-ada6-4a1e-ab1a-ee50e517ac98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1062208e-c880-4d6a-b939-c7ecda614a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23c5ec2-f3af-4a7a-816c-d4329801d858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a33ab7-b459-42b4-9a94-6e5e51c4774e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318b3fd5-389d-4627-9460-efbf554c3ade",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f232716-a058-45b0-a106-90f33598832c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6160f22b-095b-4a60-b55b-27c45e04ea47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8530e82-d418-48ab-a229-c5d91bab7058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b970a43f-185b-4e60-a2e5-42973a0a5afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4571e238-c0d1-48b0-85cb-71638d68a036",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca875ca7-636f-43bb-9d6a-d993c1c57378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfddb17d-5da2-4c3c-b557-84a29f785106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd79cee1-c904-450d-a950-50e2c53aa07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a597497-e83d-47e6-a50b-905cb90ba0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac505dc-5042-4ce4-865a-2774a00dadff",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7762cd-0e19-4ba1-acbe-5bc998f2dc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd079e7-c3a5-4e79-970d-b43aaede0bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dedba2-e06d-436e-ab14-d60427efc103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c86746-97dd-4ba6-9f0f-c30be7d213e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bff878-0fea-4388-b548-583f4ee3bc7b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5f9dfd-ccbc-4752-af25-6ffbd9fcdb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46793433-1fb6-4602-bb6e-600d0d6e682f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9093a8-ebb8-4a81-ab69-0f8591722061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b144cd2c-4f59-48d7-849d-b1977dc22738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24632952-6c1f-40a6-8bfc-9263446c8432",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e79dd8-a7c1-4d8e-bca4-673fff2c92f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63766e6-c6ec-40ab-9144-b645afad288a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bd2961-0d56-4953-9248-39bb3a64b664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bdf389-2cde-4ec9-86aa-efb776095b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061565c0-3328-4442-b6d6-4d2085a49620",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c426e2c-7bf1-4b0b-af6d-c2d6639a2426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab65375-e4a7-42ca-82bc-36b906108ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62f48d6-7765-4e04-ab69-00434b8bdc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225e567b-f90a-49a1-be9b-23e63f18e178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d6d57b-930a-48ac-a3f1-04dab128da28",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad05579-ef1e-4a7b-86a8-3059262af0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c340283-706f-42cf-ad1b-465577582895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62d269d-59e6-48f4-93b4-e2c8427ee1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbd2e0d-149f-47ae-b055-04854d409d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ba5c84-62d7-4583-92fd-855a9f80b000",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3801286-b73d-4247-9a2d-5aa1db9d265b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f50b6b-610c-40e3-8d5f-2cdd6f3d6c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cfe4ae-1bf6-4240-ae59-e8cf4134201d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d439427-e427-4ea4-ad24-86d02d54cc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b06d2c-aaea-489b-a290-b4d9f5fe64ee",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3183658-ad8f-4dbf-9181-933a714549ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dd090b-9fed-44e1-b0ad-1750aa0caadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a49a7f-aa73-4e88-a4b6-32ef97a553eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5499134-8907-417c-939f-a48798123cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc66b257-ae5b-43e8-bb3a-8735bc1e97d9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161f3b47-376b-4334-b4ad-2a0c048045a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de9b42a-d14e-4bca-a4d1-43a08f3eb68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4722c554-4bf5-4e8f-884d-0af38cfd303b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096978fc-c640-4f4c-8130-852f27040144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad99aead-601d-4ae9-9fae-c748363c8811",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789dbe82-8f6d-4c46-b49e-d56816276638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb770521-e52e-4d98-ac01-b35e00390037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7310fec-0b8e-410b-b6fd-159a91239f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9109cbbd-fce0-4f4d-a93e-34f4eabed3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2af0b6-3385-43de-aebc-2b4bf9985a1e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d242f4-412f-4f3c-b54c-f2ae0eef6fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd830c60-096c-4607-91dd-b2d471b936d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32337a93-e0ab-4980-be1e-b9af9a74fb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96239c88-f6a5-45f4-a24e-2e61b22b9f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93759bff-43c6-4b8d-b710-345d2d0b809f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff90a04a-bc5b-4e40-83df-948f68be688b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029e4e86-7665-4ce6-aa0c-f01042d9e848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a524a54-50aa-4f7b-beae-54d712848e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ac76cd-e141-4495-9016-d22dcab6999e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14231394-d172-4912-8e9b-6f539e8ea53f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e3501a-7f73-439e-94fe-cf9fc8f46ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abeb708-e608-41f9-98d6-d9133210942a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcef779d-0460-44b1-a9c7-40dbf346e43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edab607-5f20-477c-a612-bf25f3351e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e03878-1060-4c6b-a6e3-44e0201cde98",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb42d7ce-0c78-4490-bf5a-f4a8352dd46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435cefc2-cad7-4819-90b7-edcf7853f6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97556f2-9e19-4378-aed9-f95c9ff639eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6db8f4-4315-4ad3-ae4a-e30fbd733812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18378767-30d8-4331-9587-12a875741238",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7bfe4a-37a5-4f64-9759-3feaf432b747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5774bd-f1ea-4acf-97a8-450ff3a9a184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42293bb3-f441-4e82-81d1-2fbd000675a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378a3ed9-fe29-4abe-8ddd-e9508ce29bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98b4918-3753-41c3-b1a4-43e62318375a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dbc6a3-aa66-4abf-88d7-d6c8af56d5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3b0d03-3f43-4cde-8cf2-ecdb70f7c945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11659bfa-e59b-498b-af3c-4cd0c0d9318f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18558fa7-80b7-491b-9cba-899fcbcb162c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51e2321-e118-4318-90d1-f732c0fe2347",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b24eaaf-8f95-495a-9667-fb239796eb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4a0813-847c-4791-bb4d-a57611604cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc3e732-224a-4045-9b23-0073c16f9d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0ddd02-255f-4406-baf4-a2f7f071571b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd9bf63-7c78-44c2-91e5-d194b0d749eb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47acd022-a670-4669-b075-78907fd72cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eaf26a8-ab64-4796-ae1a-a0314d9e4e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03079100-f2ee-4b72-95c4-f45bb314deac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590779d8-c096-4aff-8115-be02dc6d9fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83afadee-1cd3-4231-8333-9efd422bd3b1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ae68f5-83bd-4d9c-bd6f-c75c5f073a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b52489f-ea5c-44db-892b-2e21c5909088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c80998-e674-400e-ab46-117416b89ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e739bf6-1e4e-415e-b674-b0ea0ee97f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0a2758-dc0b-4758-943a-957cd65859d2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edf4501-6e21-46a4-828e-f554c3dac077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e43c9aa-d1e7-4573-8196-300686b91f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e388af44-cd2f-489e-877f-93f6c31c6625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a29e23-8c4b-4f81-96ed-2d284cb716a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494c5039-47d8-47d4-821c-ea664c381dc3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcb0f55-d443-4dbc-9881-98ce38a37101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8c8180-e36d-4391-9844-be67e03f9c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5632a7f-1fab-4f74-a024-bb5008eabc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56edc91a-38f8-436c-8668-039158ccbab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa13f162-6329-4f31-86ad-a24a223bb3c8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cda137-9ded-43a8-b219-f3f2e2e06f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3623b440-71f4-46df-a2cb-ba5166893ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a4ce30-cd11-4ca8-b6e0-c1fe9e9ee1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0555e60a-d055-40e7-a9d2-eeeb8f6f07e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19325dad-ff9c-41c2-9d83-13f94d3b59dd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdc07f1-b20c-4d20-aeb5-7b43915d6f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdb2aab-c38a-4b7c-bba2-53ce81274a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13afc4b0-c81a-41b2-9c71-d6e1b9f9472e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e68b70-10aa-495a-a358-775d137332ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff55b6bc-fdfb-4ab4-bd37-99585eafd3d7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a92bdf-1333-43b9-abac-fb21f860ddea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6cbb27-05a8-4a70-95bb-fb10d174e5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e6fd11-9176-4198-a7c2-dc54d6f294e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97224ba-4d5e-4ac4-91cd-edd5f8c34624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fde3b5-fd45-41c0-8958-4b2947e5fb43",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7def90-083e-485e-80c8-94c037a6cf0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b83aa8f-cbb2-4f23-96fc-d8f94fda677d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675de1f0-aac2-490f-bd1f-42f63a325d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93825bab-bf71-475f-8ca3-3ae0f36190c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ced008-54c7-4b7d-97f8-0ae2ac78b548",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef74f17-71e7-49eb-8658-57c31fe14a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40cb02d-353a-48db-92ff-5b9254a428fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e038d64-a2f7-490b-8955-5f8dabffcab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430c36f7-09e6-4e42-994e-2d79229ac1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cea243b-aa32-4019-b3d2-d1af3451946d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b627f25d-f3c8-45ae-9540-9e6ece71452f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7978939b-8f59-4444-9bc6-b789e18ebc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d02785a-713f-472a-9432-e92a24ad7c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8c3ea3-949e-44fa-b623-1502a50034d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6534a706-0726-4a44-921c-9ef62f78ef4d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125f93af-98b6-43e9-af34-76955bed188e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53f4800-fc23-4c58-b897-c29790adf15d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab9bdd8-b942-47d4-97b8-8613350bb188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d3c0bb-ae4a-4aed-a7fd-83d3116673f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5980c9-464d-4eec-9a53-1adbd9aa1242",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff873c5-34f2-41ce-9cd3-d962c3af9fca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ea70667-e051-4938-a970-d48b1bb6155b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7def82ed-ffca-4132-9c21-f556d44dace5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc0a181-6de2-498f-b0d7-7b365e15492e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a883e98-d0fd-46e0-88d3-b77cbbd0ffd9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65affbdb-240f-4d9e-972e-e7699c304b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76afdfdd-b15b-413e-8cb8-9c620b6d1984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f613fcf-4a3d-4cb4-a159-b7dd03d42bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a3f568-8361-4bf2-9d6a-2b43b7fc892d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de409cc7-4a51-454d-b8e8-b63022f82dec",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf092fae-e69b-4de3-8f59-22548011ad1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87066f6-2404-46df-81b0-ba2ba4cdb2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f60193-dbbe-42c2-890b-8c3599443daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c528950-e7e4-4470-8870-044f88cd991e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269f0000-1da4-48f0-92fa-efee3249a3af",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11476f5-d33b-4a60-a13a-b8a51e399e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db29f25-33f0-46d9-bc09-a3b924686f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b533b7-4a43-49de-a5f8-8f342abca0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34bcf1ad-c40c-4e21-9fb5-c1ca52d55ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587b35c1-2e95-48c2-a2ef-80ba8a780a67",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a909695-670b-4681-9ec3-dc4c45e1523e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f0aaa5-1130-40f7-9d7c-59dc24ea568d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7e83a9-79c9-49ef-a707-3b2d5339c36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2818a97-16cb-440c-985f-d24f001dbec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da98adb-5e84-4b4a-b3cb-e7e6f9af9d05",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada0848f-3139-4ec4-bbee-8d47333c76ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d3b179-d30d-45fa-a6fc-7492467aa107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edeeaba6-a902-4aa4-be1d-e24f9e978182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75921094-1126-4fd0-be4c-6dfb1a678e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b87b2a-bcaa-47c1-b455-8956ee125380",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fe44f0-c03b-4ac0-a75e-02e9531a6650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cc99a65-188c-47d6-b76b-706070fa3799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1740d5-690e-47ca-8f14-28222c39e03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28cce98-8127-4ad4-ac07-565f7fe7e46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8751fd-9da7-46f6-af76-8831d2cd2206",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f4f3f7-97a8-4222-992d-4b1cdac9a2a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b06de5-8949-4df1-93fa-38accb2e127f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23da1d6-b00f-4606-ac3a-75a81cd68fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef39d18-f499-4412-925a-e0b072442296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774711b6-1e29-423a-8281-e43a894539f6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdf994b-1385-4e89-96fa-18b72c2e1b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77631a00-cde0-4ad0-ac09-07f1a6aff1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c856d612-3205-47d4-a4a8-a64f3088278c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95977312-6a33-4551-89d2-13b522572078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf968d9-e78c-472f-af91-1f80d25c6cff",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60677c85-76a6-40ed-941e-e98445121ef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0892570a-a729-49e7-89d3-84f67f93b014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85970190-898a-4f96-b0df-153b45cfa619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a79abeb-3113-440c-ac34-44754064cb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914306f9-24a7-4346-a47f-070c3304006b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a8419c-f834-41b1-a5c2-248f2716ff8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4dd267-1a18-429c-aed0-c9cc7d0c72f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d29b85-26c9-4928-970c-2b7435d15f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d895f597-92d4-44c1-a6e6-ca813cbb708a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205793f3-f3b7-4688-a337-5e2ae1393f70",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50d970b-9a29-4b3b-9510-8a7606a86bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "358afcc5-f7f9-4b26-96ef-0ad6a4ea7a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9710dc-2943-4ab0-9c3e-67912023861f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9105dc-e30f-4397-9f6f-eda3624114c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d23023-b09a-436d-9591-27621a22da97",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ba9981-afe5-4825-aed7-fe881c4eaca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3b49bd-0205-4b4b-9770-efa6892f1729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfd5178-03a7-407f-a4f1-eadd087ac517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac26f9e0-f411-4256-91c5-a6a0886981b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486d220b-fc69-4708-9f3c-0ddd555eebee",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46695b7e-6e2a-4a15-a317-15928b31c0a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bd70103-8230-44d5-a5b7-2f51976df75f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8f2b63-e667-47d2-acb2-a7e32e55f5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a401fd7f-fe23-463d-a20c-13273fce1195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e22dfc9-2848-4a9a-8729-c942b9ab46d2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb77af8-ac2a-4223-a5bc-2b11f0173573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab267747-3358-4890-8fd8-0b4e99adc8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342ce7ac-d66d-4dea-aac6-b0882f095c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8f7e13-f27a-4137-a87d-0abfbba5e21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee3633f-2941-491b-b823-5499792402c1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46613636-6079-4d22-bc3e-804ffe1df60a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d4d4a90-c177-40ff-8160-a422ad298704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ac5346-232a-4995-b8ea-f6b104b2775e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e32392-30eb-412b-ba65-89b654e2d5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf16cec8-260e-4faa-b7a5-84d63c0253f2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecc4684-e0e0-4521-a7d9-86b48d14ba8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0814455-2255-4c38-97a8-e3c81d12ef3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a4c50a-fa5b-4480-afaf-543a27139c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c061d5d-7cdc-4c6a-ac2b-04d13bf94abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac2e49a-5b3e-4914-809f-fb77f3609fa8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4a1d98-432e-4db0-aefb-b32b54f1e947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf909ef0-fa53-425d-ace8-28ddf4f4bc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99315943-8579-4631-a63c-3df72fd77aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8fcd00-74ad-420f-9f35-ad8a1509e761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8151a3f8-14c4-4a57-ba38-8dd224b29163",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2794196-243d-4799-876d-20e92bf54209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9246a7cf-c83c-40c7-b2fe-76673eb66f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213ba174-b09a-471a-b092-545688644db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a1d1f1-c227-4e06-ba3c-b00e0c669349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ba3a93-5479-450f-aee8-59d36b990835",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49235fa7-61fd-40f2-b622-86d5899bcfb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5d70667-e5f3-4087-b5dc-23777ad2bb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57f8491-0452-4e98-9052-f8a0e6fe4223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a40bd0f-ad93-4bea-9820-e624da4a7895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f479b863-4c3f-4c04-9c8b-2c31b10b7c05",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8a82e7-d7e7-4c42-a963-f8f6007e3cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc83a78-0cba-4fa6-94fe-af27b6aefa01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af74888-cd6c-46fb-83a3-bf6e56690c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc819e5-5470-44be-bacd-d0c0dfaffcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41ba6f4-c80c-40b1-8cf0-157f687e2397",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6bc960-5adb-4b02-addf-95d4fdba1d1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5fe62da-d150-4ab3-a419-212e79cc59e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3750af8e-8046-4ecb-a633-6432b1c70377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c490e106-4bae-4510-82f3-3d772103f0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e62c8c5-0ec7-45a9-b81c-b3e3743fbe27",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29a0fb1-f7c0-41ce-b64d-c3275e635c09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4947c5-df7b-4458-99ad-bdbdf33aeaa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a31603-a65a-41e2-b8db-255014c54ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b6647e-898f-4d0c-91c1-f7064e210f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2a76e7-6a7d-4b16-9788-2cedaf68f7e6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9eabfb-210a-41c2-919c-04e6451470c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c8a0c64-3a89-49ee-9fcf-e375199ecacb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6120da65-e3a1-4f97-80e9-7a19397880bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b7417d-ee74-4ed7-a2cf-929e699e708c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8f1813-22e1-49f5-988c-fb86c505ab42",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb30015-29d0-4868-b9cd-f8b2ad9577e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e58ce03-3b1a-42b7-b6ad-7fc5a61a9787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a00e023-fcbd-4501-bc8e-e4039bb99edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36031b6c-fd38-43c1-9cd5-82a2f7b5d0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf61fac-be2f-4072-88fd-fcb6e6521210",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5770b6b-044f-436a-bc66-91b8267f6f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f633aa4-f30c-4d0b-b9b2-2310b983d0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5da261-c1c3-4eda-a5c0-7eee6e165031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a823d7-673c-4fc4-ad4b-660d359aece3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544dcbd8-f9bb-4f8f-b2ba-73d95ce1e533",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e35cbac-f31a-4046-ba75-6fea8bc797ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcb975c8-1ef8-4878-87f3-fb8b5d8fea22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91aba541-95da-47d1-bbe5-f38d787ca5d5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5ed261-687a-4021-9da8-db9d3a37afcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a11c9a-09ce-49b9-9f7a-1b6284b22de6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e793b8f3-7864-4316-b54c-ded120cc6749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5587ad0e-ce0b-4dc9-a510-072f7c44c94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f3960c-9c89-40da-92eb-e9f92589136d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec59553-70d2-4224-aa53-5637177a7c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca78d9fe-5977-48d4-b743-81b385e77628",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9672f569-6eb0-4c00-9c3e-8ba49d9677eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "659cd57c-5694-4d93-a4f3-57c517ebeb5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0b560b-f050-4b96-b242-8c820c93bdfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c36a118-d51d-488c-a0b7-8ff5236a9120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b15e682-2bfe-4a0a-9395-a68f66120c00",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d4d646-aea7-4631-a935-fe73fbcf799e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a1e1f32-6ff4-4848-bc11-aa735e6d9075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098119da-bc55-462f-b782-6d9b36095187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd1ca51-aed3-49d0-8345-136c7bce340d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bd5878-1306-45e0-95a0-d8e6a2073ed8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb6f3aa-8ae5-4b23-9345-dcd9a6758f8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a28d2e5b-9475-40e9-af41-cfea39b3ecdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3221fd0c-db70-47c3-a6a5-8189a9f628ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e164fe4-d0db-4414-8695-addc0baffcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cdd169-2a20-4725-a0ca-ae8417221bc7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ba8da2-4994-4fd7-9f55-971e3834d27f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8964324b-e5f6-47ad-9b96-c09e83236c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e636f7c3-1b57-45cb-89a2-84ad7c9743b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a50e1b2-4c38-4770-a240-79f280ace7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b358dc72-2954-4e4f-b427-ae04f28c44b4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cd0ecf-601b-49b3-a9e1-4e8a1a6a693c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3313b097-138c-4699-b732-2dbd503afa3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6da2f7d-fd49-4694-9292-92bdbbd960cf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40441065-08ec-4c5b-88b1-30f595ad80b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2da7b6-3ea0-43a8-894e-2fc0a05a6841",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71372c2c-6249-436b-a752-c7971c6e6c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4db698d-a508-4be3-abf1-e648afb98760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ac615e-8ff2-4bb1-ba49-975eb53e8458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cef73fd-76b9-414e-aefc-ec8cfc99adeb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25ba1627-ef76-48e9-8d21-0327d9fd1130",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35be2b65-6378-42c5-9b0a-9d7e73247eb6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79603910-bcd8-49cc-99af-ae1d4bfad41b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "684bc4e8-1a7f-49c3-ba14-9e22ec232f17"
                    }
                  }
                ]
              },
              {
                "id": "9cb37ab7-8957-4cfa-9c4a-775bedbd74bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7a6ce5d-ccc0-4913-8b08-d1d119ce7650",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f437a757-3200-4343-82ac-48cfebcdccb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6fca66b3-4f86-45fb-8df5-590d1c915faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333b937d-6283-41ac-b670-0bd536fd5be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9785ead3-2dae-49fb-b4d8-6a7f54964c08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba0ee67b-51aa-4472-b26d-d9e0d5628377",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d934901a-6723-47d4-80ed-a727350da919"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6586cb25-97f0-4716-bc43-c734df44c2c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d80db96c-f3a8-4dff-b91a-181e53201109"
                    }
                  }
                ]
              },
              {
                "id": "d38ac263-1286-49dd-a842-598f9b8a612e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "97ef9f3e-b064-4c9f-acc9-abfdf23f038b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fef837-7488-4c75-b697-61add6a9e62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "97cc5e7f-b4b8-43a5-8427-e8b9411adb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e83e601-7fc7-4f94-a2ca-a4bfa83bc82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d6e045-b917-471f-8067-df596dd21b40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0b37b64d-b9f6-4292-99c1-8dae699d67ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b114d062-7a85-4e28-b81a-6526d12a7aaf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3fbf8e6-f21c-495c-a870-58f1491ac1e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6654cf37-1afe-4847-8047-fb1e3e1fcaf8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e421e57-a54b-42f7-90fe-4e58c5bddccb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7968a1e6-cfc6-451a-8ae5-66c1bcc92be6"
                    }
                  }
                ]
              },
              {
                "id": "80ec83a6-eb2c-4398-9a49-1394170e4cf3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ceaa7e2-f46c-443a-8e91-14314dbed35e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4e4ddda0-340c-412c-af63-e0537279bd48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cef1099-d6b9-48b5-847d-d51d8e0c367e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ca1b773-116f-4cdd-a11e-c0c5bb267e1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efc9dd4f-90e8-4abe-90ef-28acf9ad99e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cdb0d982-fb74-4b31-9e62-397d0ac17119"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c759dbd-44f4-44de-b860-bd0aaa93d381",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68e1b584-3667-4a7d-91e0-8203ddccea0c"
            }
          }
        ]
      },
      {
        "id": "fae5e7bd-9511-439f-9410-33e66063f6b9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0007890f-42b1-4e8c-85f0-5e4fe0af229c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8ad9647-c286-4b15-b50f-a4ae5e457e74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb288173-b938-4622-8d32-7a993d086f97",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae741864-8c1b-4c2d-a99a-c8080fe7f88a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5520a75f-9be6-4eb0-9f2f-2b32ffd3070f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2678576e-f4b5-4663-b1ed-a4d146425a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d227916-4a18-4640-85de-6a86c794996a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22817c80-9f43-4378-9a00-11ab55d7b7be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47b7b324-6194-4195-bbc9-f2e57f8670a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75b23e3a-e1d5-42bf-b2e2-d5bb3b05f81f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eebaab21-8a6e-4d7a-96a8-64345af2728e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "163b3532-42f6-4db9-b2b0-9776f3451c64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6621873f-4dd1-4f2d-bf6d-b8b93b353850"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7745379-dfa5-46af-866b-cb54fee94fa3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "832255db-a73e-4330-9b50-15b7cbfe209f"
            }
          }
        ]
      },
      {
        "id": "a185d5dd-5d03-4bb0-8669-e4c0de3f285e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ec181246-1842-4de7-873c-bfd61b08af84",
            "name": "Negative Testing",
            "item": [
              {
                "id": "624e25c3-3c8b-4b49-b3dc-0f0d71cfd60e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2bc217a-c873-4e6d-a15a-a99e5dd41e06",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b9f16f-23c9-4748-8710-352dbc88be3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18588094-4826-4a02-873f-1154f3861303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d14a6e-5015-47ad-8aa2-e32f12ee8824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6655406c-19bc-43cb-9b43-f40138a0f9bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f594d770-3d5b-4498-bb4a-d89314a93055",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b02213eb-c948-4f13-837b-05009993d794"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d5d6a3a-a019-4cca-9ce8-ec232d1ebd98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8eafe444-cfb4-4d33-abdb-5843b9312f2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2978dc16-2d5e-401a-99d5-663af3a244c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d600b616-2088-432e-9fcc-601cdd8b1b71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "414b6f11-6aa3-4133-b54b-526b87eeedb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20b215c2-c6a6-490d-ab4d-ca4a41f44883"
            }
          }
        ]
      },
      {
        "id": "a5bb9326-0e12-4804-a948-b51952d52323",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0261f302-ca3c-41bb-9416-4b6963ac7425",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96d81be8-f8fd-4837-99d7-0886b0b3a987",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32187366-d04e-4fc8-81c2-5b2f2fc2d19b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df08298-cdbf-4e21-9751-70c8ea60fbcb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2579d658-724b-4374-85ea-209e199299bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25876f90-d351-49a4-b002-2db5f13e6392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c09e8dc-43e4-4461-96e3-b9f3bc8037fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99daff9b-a81e-43ff-abb3-73e5a1b7270a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17ce5a69-f766-4a8e-a6c0-b234598f493d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ab5425e-1dee-4aaf-b3f4-52c010e015bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "773bfac6-9a95-4f2c-859f-6f71bd6dce7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "165e2d70-38fc-41a3-84d7-15794eea8e50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd6bb9bc-d7ca-4dd0-92b8-6edd028837f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c665284-0ea3-412d-bb87-9c831088f827",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f67fe752-74e3-47bd-b8af-df1138cd959b"
            }
          }
        ]
      },
      {
        "id": "32e0e723-635c-4f6b-a427-fa5f2dfe7dcd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fcea14f-1242-4933-89a4-779eef641073",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dad92fd-1be1-4317-8bee-43e6c65b271c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8f322e42-f822-4aed-a6f1-a846c9ad73b8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cce570dc-aecf-4a48-9b00-f99b6850b5ba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac61aeea-ac2b-459b-9c56-52d40051b214",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 264.13888888888863,
      "responseMin": 17,
      "responseMax": 5637,
      "responseSd": 847.6826022763116,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717202398818,
      "completed": 1717202474041
    },
    "executions": [
      {
        "id": "8c8ef9ca-66a1-4697-a2b3-278366df3be7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4f13689f-ffbc-4c50-a388-e9a90a990234",
          "httpRequestId": "341e3d4e-a38c-48a6-ae8a-69a6edf6f153"
        },
        "item": {
          "id": "8c8ef9ca-66a1-4697-a2b3-278366df3be7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2072a382-81be-413b-8354-a42c9d549384",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "9c7a6f6b-d48e-4dfe-a223-2ff90d2061f9",
        "cursor": {
          "ref": "70d2e1ed-52f0-46c5-ac23-0bec9a39d37f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e51fd475-fa1e-457f-8b7b-ee3865cec790"
        },
        "item": {
          "id": "9c7a6f6b-d48e-4dfe-a223-2ff90d2061f9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4c8e1551-fe58-41c6-9b23-392b4e416444",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "a77ccc20-f253-4e80-8951-368026a132a8",
        "cursor": {
          "ref": "ef25c438-9fa8-42ff-bedf-762829af302d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dd6096d0-a6a0-47af-bedc-122e68cdd447"
        },
        "item": {
          "id": "a77ccc20-f253-4e80-8951-368026a132a8",
          "name": "did_json"
        },
        "response": {
          "id": "4a3afae0-4b6f-453b-953a-84a7d987b4b1",
          "status": "OK",
          "code": 200,
          "responseTime": 331,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba1af94-ef4e-4717-a727-161aa2f1b306",
        "cursor": {
          "ref": "1cd2c963-3137-45dc-8af7-c9b52980c04a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1620fb2b-f690-42dc-b694-e80a095a740b"
        },
        "item": {
          "id": "8ba1af94-ef4e-4717-a727-161aa2f1b306",
          "name": "did:invalid"
        },
        "response": {
          "id": "97cc2135-6ecf-4eaf-abfc-0e51a0592208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2281,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba1af94-ef4e-4717-a727-161aa2f1b306",
        "cursor": {
          "ref": "1cd2c963-3137-45dc-8af7-c9b52980c04a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1620fb2b-f690-42dc-b694-e80a095a740b"
        },
        "item": {
          "id": "8ba1af94-ef4e-4717-a727-161aa2f1b306",
          "name": "did:invalid"
        },
        "response": {
          "id": "97cc2135-6ecf-4eaf-abfc-0e51a0592208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2281,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4906e9e8-bb04-4311-84e4-016e720bf851",
        "cursor": {
          "ref": "b18ec478-88ed-46dd-911a-9aeaf2c044f7",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d74afa81-e8cf-47db-9399-01e7f2a8636d"
        },
        "item": {
          "id": "4906e9e8-bb04-4311-84e4-016e720bf851",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2cd54017-8908-484a-aba3-03d3ef22798c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2599,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1bb47a-387d-4437-99ad-7d24771abf0e",
        "cursor": {
          "ref": "63dcd882-984f-4164-9233-33d917f6be5b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b7c70d9f-0cda-4732-9623-8a4da4860dd4"
        },
        "item": {
          "id": "7a1bb47a-387d-4437-99ad-7d24771abf0e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e1a41ad3-66d3-4fa1-817e-bd89b89996c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2231,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fae3061-b5d5-4247-9c63-67b459225499",
        "cursor": {
          "ref": "50850139-a1d6-4ad8-a467-6b4dad865990",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1cc7912b-7f8c-41d5-bf91-9754bc2b3787"
        },
        "item": {
          "id": "3fae3061-b5d5-4247-9c63-67b459225499",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3c7ba817-3524-4012-b4ff-f48009151262",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a70942-19d0-48f7-9040-c60d1d32ecd6",
        "cursor": {
          "ref": "1d9fd3b0-fead-4026-9e07-f7ab187e6160",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "04999f74-b842-4c90-8c6b-4bafd2e946e8"
        },
        "item": {
          "id": "31a70942-19d0-48f7-9040-c60d1d32ecd6",
          "name": "identifiers"
        },
        "response": {
          "id": "ea0b78f2-7710-4315-8c0b-0d672c584142",
          "status": "OK",
          "code": 200,
          "responseTime": 2265,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4d5763-7a3c-421a-94a5-23b6d2fe61ae",
        "cursor": {
          "ref": "f85483c5-2e3f-49c0-9c65-9e55890f2281",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1981914d-5345-401a-9f4b-a00ff1bf010c"
        },
        "item": {
          "id": "ed4d5763-7a3c-421a-94a5-23b6d2fe61ae",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fc2003a4-0986-4254-bac7-ca724e8263d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bfc938-7c68-4192-8a95-65ad2cb8a917",
        "cursor": {
          "ref": "0e05eb30-74e0-4f28-ad7c-c247108b08a4",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8b7fce1b-149c-4def-9989-fb18a9a6eec7"
        },
        "item": {
          "id": "85bfc938-7c68-4192-8a95-65ad2cb8a917",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1697e3d4-585d-44c7-bf10-ffc7652c1dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55a21aa-7e2f-4726-a189-0b6e60cbd1ab",
        "cursor": {
          "ref": "64b1ab91-b7f0-45a4-a880-7150b5d77f1f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9ab772df-ef07-41a8-adfd-fcd1dffc147e"
        },
        "item": {
          "id": "f55a21aa-7e2f-4726-a189-0b6e60cbd1ab",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a1e43571-8a57-4fd5-bfaf-f5f986731055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50d67c4-dd1a-441b-9d83-676ae92e01ae",
        "cursor": {
          "ref": "aeb1c212-2b8c-488d-8110-f80adb60cb3d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7fb593bf-b922-4adb-9774-559cb7c92b4a"
        },
        "item": {
          "id": "e50d67c4-dd1a-441b-9d83-676ae92e01ae",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f36f4a6e-3ab5-46ce-8fb2-9a0d6713a488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabf243e-31b6-47d8-8687-49f70d6e2ca4",
        "cursor": {
          "ref": "388eaafd-b8b3-46a9-be4b-84eb91cf381b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e7f1c7a4-8eb7-49dc-8692-a9fba8ab9feb"
        },
        "item": {
          "id": "aabf243e-31b6-47d8-8687-49f70d6e2ca4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2d05bf2f-683b-46c5-84f7-8778a9bd4d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14570736-6c38-44aa-b578-20fc426f75f6",
        "cursor": {
          "ref": "6bc743af-c84a-49e2-845f-94b2df217fdb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "25898b8b-1810-4458-b563-2be45897034f"
        },
        "item": {
          "id": "14570736-6c38-44aa-b578-20fc426f75f6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "313dbe61-d8ed-4eb7-a02e-5b4066972e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6b55a6-732a-4b5b-b1d9-d76e05397f3c",
        "cursor": {
          "ref": "913ab11f-08ad-40b5-86fb-a18bdb2aaf56",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bba2114f-58d4-4926-b1fe-93740d6a63f5"
        },
        "item": {
          "id": "df6b55a6-732a-4b5b-b1d9-d76e05397f3c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "73edee8f-023a-4500-8745-a212eb80f8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014cd6de-ecb4-4479-a07d-c8963875f5af",
        "cursor": {
          "ref": "eacf5dcf-0a54-4868-bb9d-9dff492bfe93",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "694a8356-c4e5-423f-9e59-ae9784e92e5c"
        },
        "item": {
          "id": "014cd6de-ecb4-4479-a07d-c8963875f5af",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "144013b9-0deb-4e88-b73e-ee6a14800604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460a21d1-33af-4822-a3d7-03a028fcd896",
        "cursor": {
          "ref": "a3b4cc56-1717-49b3-99a1-8df53cd44a46",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "48153ba4-6c09-4432-ba60-3975accdbf0c"
        },
        "item": {
          "id": "460a21d1-33af-4822-a3d7-03a028fcd896",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e29bdcb4-53a8-456c-8387-8920d49d5ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa72150-e959-47a5-92f4-8f41fa44a657",
        "cursor": {
          "ref": "a4beaf1d-f84f-46fa-9659-1514ebc6ec14",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "53ba1b55-3cf7-46ce-ba31-7d5a5bf08995"
        },
        "item": {
          "id": "cfa72150-e959-47a5-92f4-8f41fa44a657",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bd9566aa-deaf-49ed-ade9-93606bb3822b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57132fd4-b9cc-42b9-bc4d-06c4d186a520",
        "cursor": {
          "ref": "87a990b4-ad7f-4779-a290-633bc7498070",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "29d4160b-1cf6-40d4-a33d-4d16f0dd2048"
        },
        "item": {
          "id": "57132fd4-b9cc-42b9-bc4d-06c4d186a520",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "43929b94-f22a-4a38-8904-5d0f70cafcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e810adc-acef-4479-bc99-13c822c22e3d",
        "cursor": {
          "ref": "d61c2970-33f6-440c-8544-daf9392160e1",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d1cb4556-2401-4688-9954-89af127a157e"
        },
        "item": {
          "id": "6e810adc-acef-4479-bc99-13c822c22e3d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a596533c-a258-49ef-81ac-4c142c6be8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591d81d0-9413-4078-ab96-de59108a9ee3",
        "cursor": {
          "ref": "1fecfa33-e821-434a-a8b9-88dd561739f0",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2c94b80e-3e23-40c7-9b9a-e16a4aa0390e"
        },
        "item": {
          "id": "591d81d0-9413-4078-ab96-de59108a9ee3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "05ea8d48-a0b4-4b36-af9c-289e9f675aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a229d42c-4e8f-48a1-a7e9-cff7149bcd6a",
        "cursor": {
          "ref": "ca0479d9-8485-47af-a8af-2ee6ef5fb289",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fcbb8e3b-bbd7-465b-9488-bd5ef5bc6efb"
        },
        "item": {
          "id": "a229d42c-4e8f-48a1-a7e9-cff7149bcd6a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0a1fced0-b266-4aec-93b0-526c315dc4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95039800-574b-492f-92ff-08e0dd887ecb",
        "cursor": {
          "ref": "35193176-c543-49eb-aaad-f93e937bddbb",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0f1b9270-76f1-4a64-9abe-05784e8d8d6f"
        },
        "item": {
          "id": "95039800-574b-492f-92ff-08e0dd887ecb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8e216d04-15aa-4aca-8d1c-cb7f61b4f960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c016d6-8799-4921-9b83-212a1ab1a654",
        "cursor": {
          "ref": "80973c39-2214-4df6-9b58-3599bd5586e8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c1653c85-8d63-40dd-befd-22b008b72275"
        },
        "item": {
          "id": "a1c016d6-8799-4921-9b83-212a1ab1a654",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "34e2d532-827a-452b-8db1-eed510e26438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08d829d-c81f-4b3e-9df0-e4064c08e7e5",
        "cursor": {
          "ref": "8740b5c6-b348-4e7d-a162-9101f8612f68",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "08ec69d9-f3fc-4d06-9b60-549fd6ad2679"
        },
        "item": {
          "id": "e08d829d-c81f-4b3e-9df0-e4064c08e7e5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5e626269-193d-4bf1-a1cf-9c922bd3a764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b47d182-caff-488b-af29-00179a27ff76",
        "cursor": {
          "ref": "5958345b-b96c-4b79-9036-cfb176a6c9d0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9ce0b749-b800-41d7-94c0-342f41657011"
        },
        "item": {
          "id": "8b47d182-caff-488b-af29-00179a27ff76",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1877261b-c52a-474e-a18f-02bb302b940f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396bec57-50f5-4e4e-a11f-a160c7b70e68",
        "cursor": {
          "ref": "a70d0ccb-a2a0-4265-a66a-ef051a8b1356",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1bcb287a-122c-4d04-aa0c-31ae68bdd4ce"
        },
        "item": {
          "id": "396bec57-50f5-4e4e-a11f-a160c7b70e68",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "693b7e66-9dc1-4559-8d6d-529fb6ad9494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ac7ec2-5e20-4d80-a904-6ba1142e5757",
        "cursor": {
          "ref": "53b74bd0-9454-48ca-b1b7-3de705776d3c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f1d0820b-f582-4b9e-a675-d1e2317cf087"
        },
        "item": {
          "id": "19ac7ec2-5e20-4d80-a904-6ba1142e5757",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f95f6090-bf3e-4ebb-9234-dd6aa530f40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efbe7ca-0463-4c78-8341-635c9278205a",
        "cursor": {
          "ref": "163976b9-f31a-4c14-a5e0-332bfbcfd10b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d04e1b4b-5bbd-4145-9455-ac7d19578951"
        },
        "item": {
          "id": "0efbe7ca-0463-4c78-8341-635c9278205a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "68334e9a-b965-4f7a-a273-aec084368175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b40fd9-5d8d-446d-a302-e3cea49c7b62",
        "cursor": {
          "ref": "57a4e9e3-d58d-4538-aef8-856b00e04b07",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3c3a7423-cf0e-48e8-bc72-88d9f475aca3"
        },
        "item": {
          "id": "85b40fd9-5d8d-446d-a302-e3cea49c7b62",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "04b9e427-05b0-4a6b-bf81-b75a1d3d4e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eae18e1-eee0-4fe1-9e51-19f7d4d346cd",
        "cursor": {
          "ref": "730f5336-c7fb-4f9c-ab77-514e597ef307",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c4a3854e-fa10-42d7-bd5e-abab3389be96"
        },
        "item": {
          "id": "8eae18e1-eee0-4fe1-9e51-19f7d4d346cd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b7536291-3c62-4ed9-94b1-988f6749c688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65672f46-186e-4282-ba11-dc2b9a7f255e",
        "cursor": {
          "ref": "7452dc3c-5a8f-4e3b-b0e2-441d350e6164",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "50da97bb-9ce2-4a52-80d2-55a6bd686563"
        },
        "item": {
          "id": "65672f46-186e-4282-ba11-dc2b9a7f255e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ace48a8a-842f-4318-9127-1f09015ffefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6b92c5-cabe-4417-b7e3-97a67ac304a1",
        "cursor": {
          "ref": "07e35819-ee9d-4d81-a0bf-b8e07da599ec",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "949420d3-cd01-478b-8f98-568f5b15c2ef"
        },
        "item": {
          "id": "1c6b92c5-cabe-4417-b7e3-97a67ac304a1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a06a01c8-3cc5-476b-8183-23655588f1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ed9a51-1d59-42bf-96fb-134b84fb6ddd",
        "cursor": {
          "ref": "fb2f04d9-9af8-4939-bd2d-91a91c12bb1e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7635533e-0a3d-4b33-a90c-2a5a3c5b3367"
        },
        "item": {
          "id": "44ed9a51-1d59-42bf-96fb-134b84fb6ddd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "947a6e21-8c96-43f8-897b-ecf3e471df24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0ef3f9-9374-4977-beff-9871546271f2",
        "cursor": {
          "ref": "5fe7959a-5fc6-4c76-8904-b8c0e47094d6",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "42e97dd7-bcac-4541-a3e7-e0794b32469f"
        },
        "item": {
          "id": "ce0ef3f9-9374-4977-beff-9871546271f2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5e41a66a-20ed-48c3-96e1-88d71c0bbc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f88556f-767c-433e-bc8b-bbbcf39d19e6",
        "cursor": {
          "ref": "ed497b0e-71bf-4cc7-b5e8-669ab294b9b3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3a46b595-66a1-49bd-a49c-5cc2b450a55d"
        },
        "item": {
          "id": "3f88556f-767c-433e-bc8b-bbbcf39d19e6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3888cdf7-491f-4f9d-8622-6b4d48ed0a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d96469-7378-4581-8761-811a59711370",
        "cursor": {
          "ref": "b848166f-461a-449a-88eb-77b712ca8aed",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3ff662e3-a675-4b5c-a9bd-01ae7a11970d"
        },
        "item": {
          "id": "26d96469-7378-4581-8761-811a59711370",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0e439ea1-04dc-49f5-accc-ec66ed099f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acd888e-7d60-433d-a8b5-6f29d07c42fd",
        "cursor": {
          "ref": "41ccb0e4-ab7d-4cd4-ad68-4b5b9956f38e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "04f2519f-0ec7-4053-985c-47aa4ddb4aca"
        },
        "item": {
          "id": "1acd888e-7d60-433d-a8b5-6f29d07c42fd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0492b798-d675-484f-9a8a-ec0a39c8e532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4acbb54-6244-4bdb-bc67-45a6aafbe1b2",
        "cursor": {
          "ref": "1a2b3a1a-0875-4714-b84b-9307d7c2d7e6",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b4f8ca5b-c5dd-4078-9043-f3e8dd249d0f"
        },
        "item": {
          "id": "e4acbb54-6244-4bdb-bc67-45a6aafbe1b2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5cd8e3b7-9d83-4511-9751-0429fd48c915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7aa0d2-6b68-4fa1-ae94-5fcd35f258e0",
        "cursor": {
          "ref": "213a8495-356b-4151-b061-fd2c57f28f61",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b2c29029-f995-40e9-a473-8896a8776714"
        },
        "item": {
          "id": "9a7aa0d2-6b68-4fa1-ae94-5fcd35f258e0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e0682959-63c4-4c47-8d13-cfc7454769ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099cd416-8852-4cf8-b86c-0d276685c7b0",
        "cursor": {
          "ref": "60851b43-30f6-4a54-a60f-9cf13b5f6083",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ea84e1be-78c6-47f0-9ff0-d13682ea00ab"
        },
        "item": {
          "id": "099cd416-8852-4cf8-b86c-0d276685c7b0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "040bdb82-7f52-4a2b-b44c-f9cb9cf74f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6201f20-b789-4492-8e6e-b946cd4515ba",
        "cursor": {
          "ref": "2f923591-f2ff-4549-a3d5-8900b9e00a97",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6b17cc44-9ef7-4b7c-af0b-9939419d9bd5"
        },
        "item": {
          "id": "d6201f20-b789-4492-8e6e-b946cd4515ba",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "60768dec-703d-41cc-b667-985030f08f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c6b440-75ef-4716-b1ff-9cfc9b7ab89b",
        "cursor": {
          "ref": "49ca5986-b13f-41df-816b-3684e28f6572",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c3c3a5fe-b74b-4814-bc14-0038f8014a17"
        },
        "item": {
          "id": "47c6b440-75ef-4716-b1ff-9cfc9b7ab89b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dd7b4f9e-220f-4078-a519-8d0c1ecccd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfe1cd0-1e26-496c-9ff2-e58f1faf2557",
        "cursor": {
          "ref": "5428fb9b-2565-49e1-8717-b3f1492b521f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ed9b7f2f-0631-4449-85a1-bd389b4762dd"
        },
        "item": {
          "id": "2cfe1cd0-1e26-496c-9ff2-e58f1faf2557",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "145f97e5-4c69-4f94-9afb-cdfe2e0736f8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c25242-076f-4433-a6d0-40f5b9ddb211",
        "cursor": {
          "ref": "c402521c-57e1-4e36-b188-39a03cffc45b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2fda84bf-4718-4066-bf4c-0168bb5c4ead"
        },
        "item": {
          "id": "97c25242-076f-4433-a6d0-40f5b9ddb211",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c428aebd-c2c3-49d8-853d-cca6de624aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ea72a3-c6f2-422a-9141-f428f423851a",
        "cursor": {
          "ref": "d4a44869-65bd-4f56-ae86-e35e0ff4a8a4",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3c060429-b1a7-40a4-9c45-ce03f68eb5ad"
        },
        "item": {
          "id": "f7ea72a3-c6f2-422a-9141-f428f423851a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "811b909d-9ff9-44b3-81a8-cb86d806a525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709202f3-c010-41a7-8759-647302fed760",
        "cursor": {
          "ref": "ca0d4ca9-022a-45c1-ae61-1902426f05b3",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "32766389-6de2-4ca9-bfbb-dc547b8e6155"
        },
        "item": {
          "id": "709202f3-c010-41a7-8759-647302fed760",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d2391006-39b3-415f-be88-18436e104b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c307db-690d-4f4d-9ef8-a90d2246f791",
        "cursor": {
          "ref": "bb57a319-011a-4eab-8865-b560625a3cad",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "28c97f63-dd51-45e5-9d75-9acf8c9af262"
        },
        "item": {
          "id": "e2c307db-690d-4f4d-9ef8-a90d2246f791",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "66b06cfc-7904-4a18-aa0e-bb334c0434b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa72020-2ba9-4a34-bdbd-309cdf191644",
        "cursor": {
          "ref": "df850473-b29a-4215-ac11-a4cca719d358",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f39b9e18-56e6-489d-9852-bd5f34aea313"
        },
        "item": {
          "id": "cfa72020-2ba9-4a34-bdbd-309cdf191644",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fbc83739-09f4-49c5-a328-663ed426bd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2102ba4-061b-4d17-8f04-45dcd3aeec1b",
        "cursor": {
          "ref": "6bf5e10b-c1ed-47ec-816d-5a20e946423a",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8095bb15-4b9d-4a63-9273-2617040d31fe"
        },
        "item": {
          "id": "e2102ba4-061b-4d17-8f04-45dcd3aeec1b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8cf323bd-0960-4fc6-87e6-eb410813f64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d695bee3-3cc8-4d05-8b09-c825bce5ef83",
        "cursor": {
          "ref": "91910a27-d3c8-4184-8ec9-7b6de18fa5ef",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bb45aaf9-26c1-4094-bc86-4c49bb9568bb"
        },
        "item": {
          "id": "d695bee3-3cc8-4d05-8b09-c825bce5ef83",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5823ebb6-9ac6-45ad-9d3e-2407771e7ca3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04bb3f2-b312-49c3-b825-37d92c016170",
        "cursor": {
          "ref": "07505ef3-6f04-470e-bcba-18ec5814cf76",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e6a8e47d-9b80-4d5e-a230-f8436692b0c6"
        },
        "item": {
          "id": "b04bb3f2-b312-49c3-b825-37d92c016170",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3358716a-c78c-4575-8dc8-0c3737aed4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928ad67d-0427-4bed-b990-332e63e35040",
        "cursor": {
          "ref": "35289b45-a1f8-4ed6-ab6d-d9edd1302fc6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9dc2cf5e-3e00-45e0-92b5-bf73dce3ef86"
        },
        "item": {
          "id": "928ad67d-0427-4bed-b990-332e63e35040",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4360f17c-5405-42c2-a64a-31de6e14689a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506f3713-f963-4baa-975d-5b309e9b4192",
        "cursor": {
          "ref": "14e4a8c8-b013-4ecd-97e3-fcb2d5b7405a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6f5230cb-2ed8-4bf2-982d-25419a104a92"
        },
        "item": {
          "id": "506f3713-f963-4baa-975d-5b309e9b4192",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9290c14a-e6c0-4e16-a3a2-30980b07fe55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40014e9-a7a1-49f8-bafc-424f309b65e4",
        "cursor": {
          "ref": "9da49017-aee8-4ff2-8686-8ee29c5b259f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bb94300d-a4cc-43b2-99a0-05f3a0152afd"
        },
        "item": {
          "id": "a40014e9-a7a1-49f8-bafc-424f309b65e4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a2a09775-2207-420a-9d58-e84e140fb8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3738dd9d-81fb-42d2-8c82-864071b46929",
        "cursor": {
          "ref": "2ba15f1e-d510-496d-808f-a518da82e0ae",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6da73b34-579d-4785-8175-eccbb13f92d1"
        },
        "item": {
          "id": "3738dd9d-81fb-42d2-8c82-864071b46929",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a875323e-6ca3-40b9-bd4e-62606590ea28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d74f8c-ff87-476f-aed2-f7070f4f2cdc",
        "cursor": {
          "ref": "be0cd330-22b4-40e0-a5a8-d2bc47be8784",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9d85bba6-5c2b-4e75-8f47-12db94be4a71"
        },
        "item": {
          "id": "12d74f8c-ff87-476f-aed2-f7070f4f2cdc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6f4442fb-37a9-4888-b7a8-fac832811a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdfbacb-15e4-41a5-943f-a5c91241cafc",
        "cursor": {
          "ref": "52c3471d-55d6-4b3a-bcae-83d53a0fe977",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8325822a-3c55-44d7-b74f-e435de4e318d"
        },
        "item": {
          "id": "acdfbacb-15e4-41a5-943f-a5c91241cafc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a90e4c46-2e56-42a9-96ca-0ab291629c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f323f20f-2023-4a9c-8fc4-d5aeb4343257",
        "cursor": {
          "ref": "35ed8e64-9f88-4ee8-b321-50a2ab8562c7",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "078d6dfd-0ac0-4961-9709-87eda7df3615"
        },
        "item": {
          "id": "f323f20f-2023-4a9c-8fc4-d5aeb4343257",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bda0b148-6b38-40ac-9714-9555092932b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818c72c5-29d3-4172-a23a-d1643168a973",
        "cursor": {
          "ref": "294f4503-b2f3-4d51-8897-bad87fe3e51c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "35aadb5e-9ec4-4a01-a8dc-3055e13278c6"
        },
        "item": {
          "id": "818c72c5-29d3-4172-a23a-d1643168a973",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9459dad1-b6bb-4a6d-8f40-fdf93424875e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf9a58d-47d0-4f13-9d7b-477867c05b70",
        "cursor": {
          "ref": "23360091-7141-4cda-b159-b17d5ac805e2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9ed867ef-6bef-4397-b6b6-128d954e28ae"
        },
        "item": {
          "id": "dcf9a58d-47d0-4f13-9d7b-477867c05b70",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "51eb6d30-e64b-41ce-a974-f2ea51ca4aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afcff59-0291-4e21-8291-bbc5ecf11a2c",
        "cursor": {
          "ref": "68520d46-cffa-4f24-a34e-c640d36c4bc0",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5da6a488-bdd0-4ba9-86df-3efddfe0adde"
        },
        "item": {
          "id": "8afcff59-0291-4e21-8291-bbc5ecf11a2c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4ded4fd8-9dbd-4cd3-a828-824d5f564bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c1ebc0-08ab-49af-9fe7-e0f5da1f9afc",
        "cursor": {
          "ref": "98647c19-4bf9-4d20-b286-f09ceb52bea6",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7fac0e18-6330-436d-b7ae-74b612ae197f"
        },
        "item": {
          "id": "f0c1ebc0-08ab-49af-9fe7-e0f5da1f9afc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "aaa7ab6b-164e-402b-9355-5127133df963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0534c1ac-7f97-4622-a9ec-a91ab3235b83",
        "cursor": {
          "ref": "1a2ade6a-0bc1-44bc-85c5-a65f5a2c52c6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6979d4e8-1611-4db1-85cd-2fe70321368f"
        },
        "item": {
          "id": "0534c1ac-7f97-4622-a9ec-a91ab3235b83",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8e3e0b9b-bb04-4b6f-a0f8-f64b0b58a486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8450a74d-9f8d-4781-85f8-a7f443e5de26",
        "cursor": {
          "ref": "ccc5ef69-e335-47d4-8d54-fa3ccae1f85f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "49df1ee3-9363-48fc-8deb-b9351779dc25"
        },
        "item": {
          "id": "8450a74d-9f8d-4781-85f8-a7f443e5de26",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "515dee54-06ba-45c2-9f48-7f7ef3fb9202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d98e89c-25b3-4e78-8372-0a414d3d4fca",
        "cursor": {
          "ref": "77138d3e-26f3-4ef4-9083-39f9f0d659df",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7f6a177a-6653-4725-85f9-d8ab7e02dee5"
        },
        "item": {
          "id": "0d98e89c-25b3-4e78-8372-0a414d3d4fca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ae4c253f-7e79-42ed-94b9-48a496d4b780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad262d3c-66b6-4292-a444-86360765cd98",
        "cursor": {
          "ref": "becf677e-39c8-48c6-beb3-290a5bae30f3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "773f6f74-0be6-416b-afc6-0cb265d9ddf0"
        },
        "item": {
          "id": "ad262d3c-66b6-4292-a444-86360765cd98",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "46349c65-a7aa-4444-9470-162cd597c58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e05f94-7224-49c5-aa62-db22e3c4836b",
        "cursor": {
          "ref": "6b3a1ce8-81fb-4f59-bde1-1641d8dedd16",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fa2b52e7-bb90-4433-b3d0-89d6a6788f10"
        },
        "item": {
          "id": "e8e05f94-7224-49c5-aa62-db22e3c4836b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "53e812cf-8561-4089-aed3-62f0b3068e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa66707-7ebc-4dfe-888a-e96a933b6d7b",
        "cursor": {
          "ref": "3dce8d68-bede-4139-8abb-a18d792e5724",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d2ea74b3-cd3b-4a15-8642-a92c4c6ce627"
        },
        "item": {
          "id": "efa66707-7ebc-4dfe-888a-e96a933b6d7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "67a5d4c6-a0ef-48b3-93f4-def1e6a9b112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cd5668-9f31-49eb-8cf9-23f0f4a8e048",
        "cursor": {
          "ref": "ff74845f-c559-41ca-8dfb-ff6eadc6b036",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "014e35d0-70e4-4312-aab7-916bc5af35e9"
        },
        "item": {
          "id": "a4cd5668-9f31-49eb-8cf9-23f0f4a8e048",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7b98bdd2-ec7d-4b2c-94c0-35e9f333b333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101a0e2f-b94c-4cdc-a246-335a3910c11c",
        "cursor": {
          "ref": "12e9e996-20d7-4dc2-a3fa-bcd96d05c038",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cbc47a0e-2723-4692-958d-7fcdefbad22c"
        },
        "item": {
          "id": "101a0e2f-b94c-4cdc-a246-335a3910c11c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "95d60941-df9e-4b56-9d75-f7496729f8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f7f5c6-1bbc-413e-9a8b-40c07e08a4df",
        "cursor": {
          "ref": "68405e1a-138f-434b-bc70-c605e34a2421",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "43ddf446-fc5c-4c55-97fa-6270e6178d95"
        },
        "item": {
          "id": "c1f7f5c6-1bbc-413e-9a8b-40c07e08a4df",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9ba875b5-33a5-4643-98ca-a69bd543c172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60756f2-9043-4f61-b242-6f2ef9761a58",
        "cursor": {
          "ref": "fd904120-6036-469e-a80a-2c020ffdbf8f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c8a02d22-f5c2-4ebd-9be8-1bb9e808954d"
        },
        "item": {
          "id": "f60756f2-9043-4f61-b242-6f2ef9761a58",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3b16e43d-227b-4611-90e7-fb0fe334640a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f432032-4ea5-4b59-82a0-b753e089d308",
        "cursor": {
          "ref": "e3314bce-1861-4716-b978-3ad70d6f04a8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9ce8e8b5-0acf-4ef5-bb11-cd8b4548460a"
        },
        "item": {
          "id": "2f432032-4ea5-4b59-82a0-b753e089d308",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a55e64ea-210e-4b50-9ff3-00d4318ba920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d8c392-cfe5-451d-a998-95c345cc1677",
        "cursor": {
          "ref": "3da6185b-99f3-4a5f-8585-91d49e082679",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1e78cdb0-3269-42d4-bd57-3f3a949c80c7"
        },
        "item": {
          "id": "14d8c392-cfe5-451d-a998-95c345cc1677",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "715aba56-3c53-473a-8994-904fbde12848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1e06cd-3df1-4738-81d4-b58d20753e3e",
        "cursor": {
          "ref": "104b9e92-a9df-4a24-a0ad-019152a17ce7",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0bd3ce92-4d68-4d6e-aead-609390d230af"
        },
        "item": {
          "id": "7b1e06cd-3df1-4738-81d4-b58d20753e3e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c1cd2a1b-9aed-4be9-b7e8-766afd12f920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9ac9ae-95ae-4c63-892d-49fbcf81c626",
        "cursor": {
          "ref": "98a3d8b7-5c2d-47ad-b04e-78878081be93",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "06a9d69b-f87c-4455-bc71-61dc80e32c1b"
        },
        "item": {
          "id": "9e9ac9ae-95ae-4c63-892d-49fbcf81c626",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a715c278-32cd-4dde-85cb-c76dc1fd0601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e749fe98-5668-4b13-a7bc-57ba82db4bbc",
        "cursor": {
          "ref": "a84e3f92-e53f-4e78-a804-33f9c4e3d189",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f372bf85-95f9-444f-ba0d-5dc1e6bb761a"
        },
        "item": {
          "id": "e749fe98-5668-4b13-a7bc-57ba82db4bbc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "abcd2b11-ba58-41b7-a565-d6ff6c9a7cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d0e9e2-558d-4dbe-8708-518e585e8eff",
        "cursor": {
          "ref": "55ae6f0a-61d7-45f4-8858-7d0083777796",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "99bc97e0-a0c1-42d2-86a7-ece8e045e976"
        },
        "item": {
          "id": "a3d0e9e2-558d-4dbe-8708-518e585e8eff",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8282670d-48f8-4c36-b287-e026bd83415d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2207076-598c-4a8d-8748-53fa3cb565ab",
        "cursor": {
          "ref": "aeb6c156-50bc-4844-b81c-1be2c15b0f17",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5bd50ba0-1b83-4a75-8067-6084dc83fccd"
        },
        "item": {
          "id": "e2207076-598c-4a8d-8748-53fa3cb565ab",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7ee07f4f-5fbd-48f5-860b-0a8ee337c62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b887965-defc-4e2c-8c49-93fc31b9b8c3",
        "cursor": {
          "ref": "69691940-e01a-4300-8311-0b32584ecf64",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ed3f4557-8069-465d-8b34-58dddea60d0c"
        },
        "item": {
          "id": "5b887965-defc-4e2c-8c49-93fc31b9b8c3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "44727e1b-e3fc-410a-9d86-7789dd1713b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baef6a61-8647-45df-a617-7b0899f212db",
        "cursor": {
          "ref": "7f20c6a4-4be6-437d-abc3-260a769a4039",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1633d4b5-8053-4f97-bdf6-6ae0a2c55082"
        },
        "item": {
          "id": "baef6a61-8647-45df-a617-7b0899f212db",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "822cc697-5f10-4ca2-8406-ccd914ec3e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023171f2-4159-4c1b-8040-a9956a9b50fa",
        "cursor": {
          "ref": "b32fbf19-872b-4e6d-b7f8-fd4d73cdcbb0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b9c5aa1f-c3c1-41a4-a304-07d2631edc24"
        },
        "item": {
          "id": "023171f2-4159-4c1b-8040-a9956a9b50fa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "228e9481-0696-4a3e-b892-1a752b00b455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be22cfe2-103c-447c-a496-b64a78625529",
        "cursor": {
          "ref": "ef03c36e-af3f-415a-a179-6d0e66563a56",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "022df861-a93b-4b69-953a-a6f06bfc88eb"
        },
        "item": {
          "id": "be22cfe2-103c-447c-a496-b64a78625529",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a0a4ebd5-05f5-44a5-80a4-96fc4754baa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ead5f9-ece8-44b7-9b9e-0230a8d3c77b",
        "cursor": {
          "ref": "b7c525ce-8ce1-4fbc-9821-f497fe758063",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5f76851b-bca3-45cb-a728-45a41821dc58"
        },
        "item": {
          "id": "16ead5f9-ece8-44b7-9b9e-0230a8d3c77b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "34574460-faae-4b0c-9dd4-9c89467c73bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38efc3a-171a-40fa-811c-df499dc7dfca",
        "cursor": {
          "ref": "18e9ff10-7624-4421-8992-58a409be1abb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "10c4930b-216c-4bb2-affe-bae89ee990a5"
        },
        "item": {
          "id": "f38efc3a-171a-40fa-811c-df499dc7dfca",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b326a0e7-a9a4-40d1-81ac-9d0f96b4bd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b886fb26-5665-4b4e-9881-89b7fbc44c6f",
        "cursor": {
          "ref": "39341e4f-920e-405a-9e3f-555cc0cda596",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "24740649-4920-417a-ab53-d0c3e5944e72"
        },
        "item": {
          "id": "b886fb26-5665-4b4e-9881-89b7fbc44c6f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f727a451-c694-42ed-b930-b1411c188289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ab9b38-f948-4b33-86a2-69e52828e0f1",
        "cursor": {
          "ref": "9fa6e043-dc92-4ea1-950f-235e063a9832",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c99b9381-f73e-4363-b2e3-49bd283b01cb"
        },
        "item": {
          "id": "99ab9b38-f948-4b33-86a2-69e52828e0f1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "813dded4-39e7-4170-b087-6d02a0949471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0981d791-619f-4c0c-a947-f4015db9874d",
        "cursor": {
          "ref": "30b29991-3b56-4e75-8760-a0ea93a33872",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cfe7794c-d0a7-4552-81cf-7b6563bb4484"
        },
        "item": {
          "id": "0981d791-619f-4c0c-a947-f4015db9874d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ea54d451-23d3-4d4f-86bc-00bc8dc18089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba59ba0a-41e7-43ac-86ba-ddaf6773b14f",
        "cursor": {
          "ref": "e4002d3d-fb25-472e-8a8c-11a3adc3a45b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "41ce1737-f923-476a-a1a7-c3f55293a07e"
        },
        "item": {
          "id": "ba59ba0a-41e7-43ac-86ba-ddaf6773b14f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1e1dbc8e-3a7c-402e-8c21-14b4d0c9310c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a000fbe-4c0a-4acd-a975-4fa6a5c0ef07",
        "cursor": {
          "ref": "515a55c3-1072-400d-90d1-263d49c1e700",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ec07d701-05f8-453d-bdd4-78a8a644a9c2"
        },
        "item": {
          "id": "3a000fbe-4c0a-4acd-a975-4fa6a5c0ef07",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0f909a59-af19-4ffe-a288-73d05f1ff88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f19eb75-a13d-4fed-9cbd-cea60c0ecc03",
        "cursor": {
          "ref": "a0a6d2a6-7646-4fc1-92d2-159f2f99ffb6",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "43cc7a8a-cd7c-4343-af31-d8ff7c16896a"
        },
        "item": {
          "id": "0f19eb75-a13d-4fed-9cbd-cea60c0ecc03",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0c447246-31f5-43e7-a5cd-b105f8927d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faaaba41-1f26-4289-8c7e-b0671022f3ed",
        "cursor": {
          "ref": "5a37cb0a-c4c1-4003-b8d6-fe55f5537b37",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c59edc01-3d85-419a-9ca1-439527e16d35"
        },
        "item": {
          "id": "faaaba41-1f26-4289-8c7e-b0671022f3ed",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a524c452-f222-470b-a546-a7c70be5113c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1d9078-d3ed-429d-bebf-f7131c575a74",
        "cursor": {
          "ref": "51d7187a-ab82-4963-9dcb-411f91274230",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5630610a-4c1e-4322-9492-5fa942547e79"
        },
        "item": {
          "id": "9d1d9078-d3ed-429d-bebf-f7131c575a74",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "159e9d0b-29dd-4d75-b75e-aa75116bccba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596fa2d0-0ec7-4504-97cd-5aeb5bc025ac",
        "cursor": {
          "ref": "e865df52-24c2-436b-9ab6-23dc242193dc",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "83b9d2a4-c7cd-4160-aa25-52894733aaff"
        },
        "item": {
          "id": "596fa2d0-0ec7-4504-97cd-5aeb5bc025ac",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "493ba0f4-a57e-4b20-9349-73d5a1e2e8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fb2cfa-6b6d-4cb5-ae20-32657c3a02ef",
        "cursor": {
          "ref": "3e492b82-0699-4417-8d9d-dbcffd690d8b",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "50f5227d-d6fa-4c04-b44b-64be4bf55f3c"
        },
        "item": {
          "id": "16fb2cfa-6b6d-4cb5-ae20-32657c3a02ef",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1ec5ed76-b89c-4868-8ec6-459bad2d9761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6146e055-b199-461d-af30-2d34993713fb",
        "cursor": {
          "ref": "ca80571d-f7d6-4199-a0a5-85be1b74af82",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f6019da7-2bba-4ff7-847b-d44a415f42f3"
        },
        "item": {
          "id": "6146e055-b199-461d-af30-2d34993713fb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dac104df-95b9-4082-b714-272f9cb04cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd0923e-cc27-4938-b32d-a6bbf7468cc4",
        "cursor": {
          "ref": "2441518d-ca6d-4b9d-bfe3-127aaa830180",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8e5205c6-7eb4-4003-aac0-3eb4c2af1212"
        },
        "item": {
          "id": "5dd0923e-cc27-4938-b32d-a6bbf7468cc4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "399fa65c-3132-449e-bf16-02105aaa3c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118563ea-003f-415e-8bb2-bbde40b36c4d",
        "cursor": {
          "ref": "0b345aff-bda5-4c11-88ee-9a044ccbd1ed",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "176184f4-7000-4a9a-a155-b2a1a6b13e5d"
        },
        "item": {
          "id": "118563ea-003f-415e-8bb2-bbde40b36c4d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8e9bdc87-344c-44bf-b639-4ff637dfd141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37a9a93-446e-4977-a090-48da8297d69d",
        "cursor": {
          "ref": "37a7f5ca-ce93-4ac1-800f-13c5dff3e463",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6f0c7f08-4954-4306-b54f-5128f148ed74"
        },
        "item": {
          "id": "c37a9a93-446e-4977-a090-48da8297d69d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7e3b5a38-ffc0-4fc7-b009-defd8fcf00d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704b572b-153a-4bee-9296-a5619ff98612",
        "cursor": {
          "ref": "e421d964-e2f8-4d43-b948-2bbbfcb1f5ec",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ceafede3-44b7-4f35-9fb5-d7390f1d7b7f"
        },
        "item": {
          "id": "704b572b-153a-4bee-9296-a5619ff98612",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "aaac2738-786c-4799-9e6b-d023a9699703",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe77a26-a5fe-4f03-b2d9-d0eeb7b66762",
        "cursor": {
          "ref": "96e6760b-8150-4c58-bd68-8728e49cc253",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9e35dd20-0514-4f74-8f93-fbd02832b49f"
        },
        "item": {
          "id": "dfe77a26-a5fe-4f03-b2d9-d0eeb7b66762",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2d5da381-bff3-46ad-b89d-44b02715a84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c7edae3d-f9f4-49bc-a176-37a88320aaeb",
        "cursor": {
          "ref": "caa512e3-6051-40f6-9a82-0b2b818607a9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "69756c02-7382-47cd-9784-2d5fd4b6de5f"
        },
        "item": {
          "id": "c7edae3d-f9f4-49bc-a176-37a88320aaeb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c07bfb5c-6381-42ea-b0b8-bb9e048a7972",
          "status": "Created",
          "code": 201,
          "responseTime": 5637,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7f1a6e-9ff8-4b8a-b3f3-0052864bf4aa",
        "cursor": {
          "ref": "fc1d0726-935e-437e-bfd4-3b518f0e8cb5",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "38624116-6bea-46db-8e06-bb8d381523d8"
        },
        "item": {
          "id": "ee7f1a6e-9ff8-4b8a-b3f3-0052864bf4aa",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e6d959ad-a457-4cf9-94de-a6ec55a4232d",
          "status": "Created",
          "code": 201,
          "responseTime": 5416,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d682513-6a0b-458d-9b31-9a012005119a",
        "cursor": {
          "ref": "58754125-e70d-4b18-b118-684d309c2ea9",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6e7ab189-0c59-4e69-aafc-24a55274b583"
        },
        "item": {
          "id": "8d682513-6a0b-458d-9b31-9a012005119a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "42e3cc3a-fe48-455f-b888-c35aeb65c8a6",
          "status": "Created",
          "code": 201,
          "responseTime": 4558,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3191922d-2283-49c6-b06e-d7d3579d2820",
        "cursor": {
          "ref": "f8271f6f-71d3-4d27-827e-8bfae0b8a686",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8861d395-c0b8-4fa4-a9d9-823f278ec1cc"
        },
        "item": {
          "id": "3191922d-2283-49c6-b06e-d7d3579d2820",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2cf6a66b-ed8a-475d-aa15-b69f43e7f453",
          "status": "Created",
          "code": 201,
          "responseTime": 4980,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9373a2-f032-48b2-86cc-566afcf37cb1",
        "cursor": {
          "ref": "c736b757-e945-40ee-a4f6-c5a6f8c332a3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "29e533e3-9502-4f47-87f8-a8e33b5d8896"
        },
        "item": {
          "id": "9e9373a2-f032-48b2-86cc-566afcf37cb1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0a32f7bd-41e2-4e3f-9837-e3b923740342",
          "status": "Created",
          "code": 201,
          "responseTime": 4885,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-01T00:40:45Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-01T00:40:45Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a8e94acf-50e8-4454-93b8-52e8b292da2f",
        "cursor": {
          "ref": "5eedc727-9d69-4a32-baff-c9230e7b699d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bc8f9892-e26e-4563-a8ef-102031d478fb"
        },
        "item": {
          "id": "a8e94acf-50e8-4454-93b8-52e8b292da2f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8915b9a4-4df8-4255-b303-8446ffe0b8e6",
          "status": "Created",
          "code": 201,
          "responseTime": 4942,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9193a3f-1ae1-4ed3-af7f-9582eabee039",
        "cursor": {
          "ref": "94865967-0454-42d8-989c-0e25262b10d8",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "22e7a3a1-9901-47d9-833f-8eb1fb599f54"
        },
        "item": {
          "id": "d9193a3f-1ae1-4ed3-af7f-9582eabee039",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "eb5f796b-1e7c-4cab-a5e9-08e8f4dd6e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f638ca-0e17-4b16-a456-21501f7a8e43",
        "cursor": {
          "ref": "c1f7ea58-7f7e-46bd-9ec1-2d088f90a8fa",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "70551e0c-db89-4a91-b6fe-8897fa4e30d3"
        },
        "item": {
          "id": "55f638ca-0e17-4b16-a456-21501f7a8e43",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2186e595-822d-49d9-8c1f-33df7f426ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c40fcb-0273-4145-9845-58e0e24e766a",
        "cursor": {
          "ref": "ac64d874-154f-43fd-90f6-fd9efe8eb436",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e3d3036d-a621-4965-9b84-de84db8c40be"
        },
        "item": {
          "id": "90c40fcb-0273-4145-9845-58e0e24e766a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4a848229-5ef3-4f3e-8cc8-33c117053387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b12350-81be-4ec8-a8c0-18920a8b995a",
        "cursor": {
          "ref": "6c657b9e-c4cf-42b0-a0f1-4495a916ea85",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1c497cb4-9725-40d6-80a0-99ae80d05e7a"
        },
        "item": {
          "id": "03b12350-81be-4ec8-a8c0-18920a8b995a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aec14988-4588-4da1-b2cc-1bb540eeed34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d8f34d-8f76-4d1f-b187-8f83d13e387a",
        "cursor": {
          "ref": "9bedbedf-10b1-46e5-9dd2-1e755144b190",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4c731474-435b-4c21-b1e7-68dbeaed469c"
        },
        "item": {
          "id": "e5d8f34d-8f76-4d1f-b187-8f83d13e387a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f51d43a2-cd7b-4d8b-a9d8-2ca16d59862a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b6beae-dc94-4f49-8cdb-572f1546cd32",
        "cursor": {
          "ref": "5142dea1-cb12-4778-a6a3-33df0321f466",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ada70c86-cba3-4b4a-adb8-7f11e3bf3ff8"
        },
        "item": {
          "id": "88b6beae-dc94-4f49-8cdb-572f1546cd32",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "169dfd19-62be-4ae7-a722-3dd191f3036b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf0c0e6-6f9e-4723-80e3-8a7592e14d4e",
        "cursor": {
          "ref": "19f95d7a-9103-4169-843d-e63bd76b3580",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0f888a51-d2d6-4313-b42d-5d0b3ec82c4c"
        },
        "item": {
          "id": "7bf0c0e6-6f9e-4723-80e3-8a7592e14d4e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "15e4d322-f828-4eb6-801b-5250ee4eeec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17377c91-32c4-4e7c-87b0-7b5a0f41d894",
        "cursor": {
          "ref": "37914078-2341-4998-9ec6-99ed47c6c8d7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "15178235-b545-4f70-9b47-7bdac832cd7e"
        },
        "item": {
          "id": "17377c91-32c4-4e7c-87b0-7b5a0f41d894",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0fb874e5-8be6-49e4-a191-36d81ef3a2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9f7af1-24da-4093-8b94-1039768538ff",
        "cursor": {
          "ref": "5f9a6d30-7db4-43b6-bd1c-2b04754a9c1a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c1a6d590-81c5-4873-b878-a75df663cc44"
        },
        "item": {
          "id": "7a9f7af1-24da-4093-8b94-1039768538ff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3c291a0b-b189-4400-8584-331d81540b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62555cc-61e2-4626-ab57-d33543919382",
        "cursor": {
          "ref": "d0f50b6a-883e-45bc-af48-6498138ad947",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7f1ef680-b63e-4318-b845-6a77599a11ab"
        },
        "item": {
          "id": "d62555cc-61e2-4626-ab57-d33543919382",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "29f2d555-f428-4814-b1d5-858682db05b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423ed9b4-a8b1-44c7-a6ae-e8b58b0e8ee5",
        "cursor": {
          "ref": "84183762-1d0d-4d93-b7ef-03ed737c7f48",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "51d81d11-db0b-4f6c-9898-856758cfa667"
        },
        "item": {
          "id": "423ed9b4-a8b1-44c7-a6ae-e8b58b0e8ee5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e64c5c13-056b-455a-8d44-5fe82877d531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ec86ba-b5a1-4708-af25-32f5576d4ff6",
        "cursor": {
          "ref": "f9bd5853-87fe-4fa0-8ed5-946fd4a20844",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0478c9ff-9d76-4e46-8537-26e14d8a8a4a"
        },
        "item": {
          "id": "05ec86ba-b5a1-4708-af25-32f5576d4ff6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a46c079f-46cf-4069-9998-35e906732dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8779efcb-8564-4ed2-ad85-93cafe3a2034",
        "cursor": {
          "ref": "46fbe521-a7d7-41ed-82cb-0a7162415310",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c0893396-82d1-485b-b27e-85bcc8d3d05e"
        },
        "item": {
          "id": "8779efcb-8564-4ed2-ad85-93cafe3a2034",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d910ff95-8e06-4eb7-af02-31117458f14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65aa8ac7-b986-40ec-98f6-41d48fa4b253",
        "cursor": {
          "ref": "064d7137-f2c1-424b-9c43-aaf2c9840b5b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "50376422-ec2f-4557-8f0c-f97afcbd6077"
        },
        "item": {
          "id": "65aa8ac7-b986-40ec-98f6-41d48fa4b253",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4d668856-dfe5-4da8-9893-e1a518658fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1da7a8-0695-41eb-a040-4c688fe65edc",
        "cursor": {
          "ref": "53c8ba79-d9ed-4e82-94ef-9b79d6bc65ba",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b6ef5b59-00fa-43c5-b3c3-d0d1ae0acfe9"
        },
        "item": {
          "id": "0b1da7a8-0695-41eb-a040-4c688fe65edc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e8d603f4-151f-4391-9e9e-8374901165b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bfc200-8493-4822-89cd-b40b3204178d",
        "cursor": {
          "ref": "1b58cb09-e675-4b9a-bebe-126332d0c23b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "26b74ff1-581e-47dc-aa03-657493ba4fd7"
        },
        "item": {
          "id": "47bfc200-8493-4822-89cd-b40b3204178d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6dc479a2-ccc8-41fa-905d-c076e36345ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3673ba3f-679f-4d1c-ab22-41c5189636a5",
        "cursor": {
          "ref": "5c602e84-0842-4271-8b42-c0f520e5ee2a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d2db8fca-6e78-4b0b-b3c4-680ab61e86df"
        },
        "item": {
          "id": "3673ba3f-679f-4d1c-ab22-41c5189636a5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "36c69985-1e49-431b-a05c-4ff666fcb2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625c3bea-15d1-443b-9463-119cfa137000",
        "cursor": {
          "ref": "62b5994a-7de5-4daf-bc3a-efdc04f2acdb",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0e0cdce9-13fe-4ac1-9971-4d7689bf83c4"
        },
        "item": {
          "id": "625c3bea-15d1-443b-9463-119cfa137000",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f1901542-575a-4b56-aefb-80250e71519b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc98c2b7-2d03-425f-a4b3-aa5eac728e84",
        "cursor": {
          "ref": "12461b49-c91c-442b-a281-f9abb4f52bdd",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c7e17e72-1140-47f4-8f9e-0f27c5094feb"
        },
        "item": {
          "id": "dc98c2b7-2d03-425f-a4b3-aa5eac728e84",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a4c7b7be-fc0b-4705-9a35-c6ff4ab44388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47248f4a-70e6-46c6-bb2d-9f30c1df92e8",
        "cursor": {
          "ref": "d5399b91-5981-409d-bd12-cb241d55e049",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f548aca3-5838-4ee5-a6e3-3f3b6c04188d"
        },
        "item": {
          "id": "47248f4a-70e6-46c6-bb2d-9f30c1df92e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c25e9a89-ca84-4dcf-ade3-e0dc1a34a3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14afa753-7597-47f9-bea0-6e1e8f9ad917",
        "cursor": {
          "ref": "a3f9f6ad-08e6-460a-81ae-5334e7ac56d5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2d4b04d8-15a2-4197-9643-160ad3f56bbf"
        },
        "item": {
          "id": "14afa753-7597-47f9-bea0-6e1e8f9ad917",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "238efac2-83f3-4110-bee3-6aabaa0dd67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d5dc55-eba1-496d-bf67-18765b05a302",
        "cursor": {
          "ref": "030a9a30-5c7e-4548-9211-280c702d8eca",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1df5e54d-9ef4-4bb2-860f-74be5024c918"
        },
        "item": {
          "id": "73d5dc55-eba1-496d-bf67-18765b05a302",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "96bbb0f5-4dc4-4407-80b0-b122839fb045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c4214d-f7f6-499f-90c4-9c73606f9a59",
        "cursor": {
          "ref": "1ffbecfc-5bc1-46f3-ac3e-054902ef83ee",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3835e8e2-021b-4c99-99a2-18026b4d6130"
        },
        "item": {
          "id": "a5c4214d-f7f6-499f-90c4-9c73606f9a59",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "48a0b515-dd62-4fb1-b3dc-d5bd43c97ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1f81dd-3713-40f2-8897-a6fb86b40a8f",
        "cursor": {
          "ref": "44468c75-7a9a-43d5-bf98-dfe506ea33f9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "08213e6a-42f1-461d-9795-bdc897cc5bb9"
        },
        "item": {
          "id": "6c1f81dd-3713-40f2-8897-a6fb86b40a8f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9ddc4ded-d3e7-4e2a-95fc-6788232ee2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b5397f-a00d-43ef-a062-d7f2722349e0",
        "cursor": {
          "ref": "d2b3d142-f17f-42da-9b27-c34e99cfb8d2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "42d7a2b2-d216-45a9-afa3-5f78bdaae510"
        },
        "item": {
          "id": "95b5397f-a00d-43ef-a062-d7f2722349e0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6d5aa15e-01bc-482c-8c3b-47632f08a33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6ac9eb-bec7-46fc-9bf4-7b45afad1ea1",
        "cursor": {
          "ref": "97c8800a-4bef-411d-87fe-c10adf064940",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "50f42cb1-fd8d-4352-a474-617809d92d44"
        },
        "item": {
          "id": "af6ac9eb-bec7-46fc-9bf4-7b45afad1ea1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ce2b12eb-e237-479e-aedb-2805d6b6211f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8a7e85-8be6-4ea3-9cda-97f6170fa3bc",
        "cursor": {
          "ref": "c13e6198-96b7-46a9-b71c-1288b97622db",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cf118112-9e2d-4c33-9868-e3b3ce0ecce3"
        },
        "item": {
          "id": "ca8a7e85-8be6-4ea3-9cda-97f6170fa3bc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "34c9e5bc-b79d-4a30-b013-14b2379227b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16eb6718-a52f-48a4-8095-ea436a6dd133",
        "cursor": {
          "ref": "e4492d6e-37bc-4567-bcc3-a4749c87514f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "10b7a674-0832-4538-b8cc-88a40ca24b3f"
        },
        "item": {
          "id": "16eb6718-a52f-48a4-8095-ea436a6dd133",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "05ff99ff-b48d-4939-81e4-fd2ff54ed0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44321d7f-cd4b-4112-b22a-f21aa526bf92",
        "cursor": {
          "ref": "beed6d9a-7c91-4e64-996e-2eec40caa882",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5dbc5551-0ac7-4776-b974-433a90f83381"
        },
        "item": {
          "id": "44321d7f-cd4b-4112-b22a-f21aa526bf92",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eab30e8b-584b-4525-a5e8-57ce910494fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69b47d9-4690-47a7-a78a-a958f7bd6d19",
        "cursor": {
          "ref": "ff8fd4ae-a260-45b8-bb5e-16dcd75d2e92",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9a304e9f-92db-4089-be6f-128b0d5a3f33"
        },
        "item": {
          "id": "f69b47d9-4690-47a7-a78a-a958f7bd6d19",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "444a0454-2c86-47b8-b954-45e72716f2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517ec1c8-d2b4-465e-8e96-c04a3ddceb03",
        "cursor": {
          "ref": "93e318fd-57b4-4479-a1d5-b4bb1dadd21b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d0343ab5-c9dc-43de-b715-f3087bb402ea"
        },
        "item": {
          "id": "517ec1c8-d2b4-465e-8e96-c04a3ddceb03",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "473f5ea4-6302-4a34-bbcd-b426586f8a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3760dc-ce90-4293-a368-6575f1e6502f",
        "cursor": {
          "ref": "85bb3676-98b5-4ec8-90f4-0893d17a8bd4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "97349004-86ba-4dce-aa83-cc2a747aa207"
        },
        "item": {
          "id": "4f3760dc-ce90-4293-a368-6575f1e6502f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7c11651f-6dba-4434-9953-36df4a9b2cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41489f9-69d9-4260-b561-283885cb689b",
        "cursor": {
          "ref": "fa2e94fb-0e76-4261-b102-5c85d440f8a7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e504b61e-ee63-4e05-a68f-98d2e8483fb6"
        },
        "item": {
          "id": "d41489f9-69d9-4260-b561-283885cb689b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "84a9c163-5880-4cbc-8dda-755388cb6946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ea6808-2261-422d-8bd7-cf76861b57d9",
        "cursor": {
          "ref": "a6f82682-6658-49d8-a907-9a65eb061adc",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bbdd1fe3-dbe7-4fae-9854-e38a64f4184d"
        },
        "item": {
          "id": "72ea6808-2261-422d-8bd7-cf76861b57d9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "df17cc32-673a-4d4f-a805-87e4abc1d68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d988f686-39ec-464e-b7d1-bde1444bf7b1",
        "cursor": {
          "ref": "5a352dcd-8c7d-48c9-9d96-c57dcb8b9871",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "656936eb-2591-41f0-8b0d-b64267c8205f"
        },
        "item": {
          "id": "d988f686-39ec-464e-b7d1-bde1444bf7b1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ff18e28f-fdd2-4228-9bb3-df9c0a9ed308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df677c1-a54b-43ab-9c43-db27466fb632",
        "cursor": {
          "ref": "938f0a1e-8b1f-426c-a004-2bd59731c230",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "71f466b1-9926-421a-9039-091566ca673f"
        },
        "item": {
          "id": "2df677c1-a54b-43ab-9c43-db27466fb632",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f567aa67-61b2-4644-91cb-c4c1918bb3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d17fbeb-acac-40f8-abf7-f9f58da78a8c",
        "cursor": {
          "ref": "531cfe7a-5630-41b8-ab12-4cdaf6318e09",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1d7c4360-6c00-4a2a-bacc-e9c8c88a29fb"
        },
        "item": {
          "id": "4d17fbeb-acac-40f8-abf7-f9f58da78a8c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7d99ad89-018a-48f3-bc9a-ba84dd52e3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289dc0b0-c04e-4c21-90e2-b25e8fcd8245",
        "cursor": {
          "ref": "47d453c2-2770-42b0-aeb2-e52deb04493e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "773e8d19-f1dc-41d4-b260-4db7406da750"
        },
        "item": {
          "id": "289dc0b0-c04e-4c21-90e2-b25e8fcd8245",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e7fa5aa4-15a2-457d-a97d-296dc5e96ad5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dc4bb3-3e2c-49c8-9bf7-a5235b7bb342",
        "cursor": {
          "ref": "8bc7bd17-0527-4a58-8d3d-2fd819b8827d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6c15081d-c27e-4c2a-988f-8752bab84f11"
        },
        "item": {
          "id": "b8dc4bb3-3e2c-49c8-9bf7-a5235b7bb342",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "23a07bcd-e9e3-4421-98db-b6f065c2fcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477da222-69dc-457e-ab5b-dee610fb7c6a",
        "cursor": {
          "ref": "ee5c7f25-24f2-443f-94a4-f2d795c9121f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1a261220-beee-464e-96f9-dd845626e863"
        },
        "item": {
          "id": "477da222-69dc-457e-ab5b-dee610fb7c6a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "34070705-5b75-4979-ac50-b33f517fe2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6ec278-35af-4ae1-a792-50e65ec4f52c",
        "cursor": {
          "ref": "b2bea6b0-a345-4926-8ac9-02bcd10f6dfd",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1935768a-5a1e-4a42-b8d7-247ca5eb98c3"
        },
        "item": {
          "id": "ff6ec278-35af-4ae1-a792-50e65ec4f52c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f48f1109-7246-4471-9f43-9e5355d77a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff83e347-cc2c-4a46-b17c-b4bf1d55f7ef",
        "cursor": {
          "ref": "0276a988-665c-4598-b5f7-2e90c2f49afc",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cc6ed66c-3f37-4cb5-b95d-c6598839eea4"
        },
        "item": {
          "id": "ff83e347-cc2c-4a46-b17c-b4bf1d55f7ef",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c0d9db09-a3fb-4a7b-b4ce-b09c7cfd5867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeb5694-5686-4872-8e44-88d7bb830aa1",
        "cursor": {
          "ref": "466c1c5b-499d-4362-8119-5d9a54a740f5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7af6454e-7a97-4e9d-8299-a6503bd2e2e7"
        },
        "item": {
          "id": "abeb5694-5686-4872-8e44-88d7bb830aa1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d9429c77-7553-4f74-94e7-e62de80ea2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8ac44f-3311-47cc-9338-51b140be0af3",
        "cursor": {
          "ref": "ac80eacc-53b5-4fe3-9c6b-8f27dd5f1013",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7f32fdd9-a681-4ece-871b-ad6ee998464a"
        },
        "item": {
          "id": "bf8ac44f-3311-47cc-9338-51b140be0af3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9320bf9b-7631-45d8-b0f6-784c322ff6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020849c9-e8b5-48a6-a830-3f43aadb0392",
        "cursor": {
          "ref": "9687f33d-6d0e-46b6-ab7f-2c8d85bfce0f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9073b5e0-8a5c-40cf-91c1-9d1f045d1b14"
        },
        "item": {
          "id": "020849c9-e8b5-48a6-a830-3f43aadb0392",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "056ddc08-47d4-471d-8a2d-1987ccf6ea75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d550c9a0-fac4-48c8-8b29-044b9b70b27c",
        "cursor": {
          "ref": "781812a2-1905-48a6-a216-cfd2f36b702d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "41250ce3-d6ab-4a32-91bc-71355f31d3f8"
        },
        "item": {
          "id": "d550c9a0-fac4-48c8-8b29-044b9b70b27c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "647fea5b-1a7c-4439-b125-622b9da81a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db6ef82-2770-4553-89f9-176b089149a8",
        "cursor": {
          "ref": "21f2f819-b776-4d99-8b82-06ef532d9ccb",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "24080e92-69a3-4887-b131-24be5ece839d"
        },
        "item": {
          "id": "3db6ef82-2770-4553-89f9-176b089149a8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bcf76020-b906-4659-bed1-85d10cc206de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ec9482-de76-4a92-8e0a-44c5932c7ec6",
        "cursor": {
          "ref": "a07f3c7d-515f-4931-9027-5776b85325cb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "11c4250f-cf9b-45e0-90f5-a8bf6171552e"
        },
        "item": {
          "id": "f6ec9482-de76-4a92-8e0a-44c5932c7ec6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "580fbdf1-dd2f-4c7f-8f67-311d87f9e6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec5d651-136d-4f21-972a-3b1c559928e2",
        "cursor": {
          "ref": "66d15a48-c098-4d37-828e-0d834baf5e09",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8188d781-c6d6-4920-8f74-29f807741627"
        },
        "item": {
          "id": "cec5d651-136d-4f21-972a-3b1c559928e2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dc6d0c7f-61e1-4dc3-ad13-47078c07e1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848724cc-4bfa-4200-a0d6-0f07d1882b31",
        "cursor": {
          "ref": "d5a31b81-6b3f-4ff1-8a40-fb4c73c56c2e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7aaa615c-8a20-4ca5-a334-35f9ce1c69fb"
        },
        "item": {
          "id": "848724cc-4bfa-4200-a0d6-0f07d1882b31",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "764d09aa-ed20-4666-9014-e03bb957ed1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88fdb94-a135-4aeb-b35d-545f6976446c",
        "cursor": {
          "ref": "30d06375-7f7c-49ab-bd4d-550ea8f48aac",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "06e843d1-2022-45c6-aaf8-01e4b09a275c"
        },
        "item": {
          "id": "c88fdb94-a135-4aeb-b35d-545f6976446c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "456e0d72-05bb-4b8f-92b8-4014a439c3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26634d36-3138-4743-b263-52474200fcda",
        "cursor": {
          "ref": "66d687ed-6982-4b97-8e3e-40c5f8781366",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "20a5e9e2-1183-4677-b485-5ebdb18cf4ac"
        },
        "item": {
          "id": "26634d36-3138-4743-b263-52474200fcda",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "80ba630b-cbe0-4fa1-8363-a65661dbe5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2f0c99-d16e-40be-9b13-0a55e1e95456",
        "cursor": {
          "ref": "eabcb035-ce7c-4117-93b1-3d2897fa6a50",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2ad8b034-9570-4931-8d82-4d5e5b2e37e7"
        },
        "item": {
          "id": "cf2f0c99-d16e-40be-9b13-0a55e1e95456",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c410fd2d-326a-40e5-a18a-df6f9cfdcadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b66a8c-23d9-4f50-9532-155cc72f50a6",
        "cursor": {
          "ref": "092162c0-23b5-4e33-81d6-07f45fd3dc92",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4c8b7412-c1b6-4ad8-bf40-f28f603e5caa"
        },
        "item": {
          "id": "64b66a8c-23d9-4f50-9532-155cc72f50a6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "84f37acb-a6e9-48a2-8489-2df8cc816767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff496e4e-ea9a-4705-a7fb-3b3791a201f9",
        "cursor": {
          "ref": "b1585a01-67f7-43f7-9f3e-7a88bd473dfa",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b1ceb376-49d6-4100-a527-aebc4d880255"
        },
        "item": {
          "id": "ff496e4e-ea9a-4705-a7fb-3b3791a201f9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "07028210-33d6-4bd7-91f3-00db47bc5e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e55e97-96b3-4f10-a105-9f8d3cb78f14",
        "cursor": {
          "ref": "105c1c6d-06f0-43aa-9018-6d5da068a48f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "544eb7fc-a21e-4048-a290-db456d087333"
        },
        "item": {
          "id": "76e55e97-96b3-4f10-a105-9f8d3cb78f14",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6b8775be-3208-4c79-a356-468e39a2eab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92769dcd-6fe8-47c2-9a92-65b8025d6304",
        "cursor": {
          "ref": "56180706-e148-4a16-800c-c32ba4055ec0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "36f91c48-baaa-4378-b68f-492eda9cd97e"
        },
        "item": {
          "id": "92769dcd-6fe8-47c2-9a92-65b8025d6304",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2a6f6090-f321-4585-b3c4-ca619e9792a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744dd47e-f6b4-48f6-9617-11a0941349b9",
        "cursor": {
          "ref": "1944c12a-e663-4782-bcec-3ad81df202c9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "78852165-7013-4aa9-a73b-06764ac6bb3c"
        },
        "item": {
          "id": "744dd47e-f6b4-48f6-9617-11a0941349b9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "48e8d774-d688-4aef-9a27-bbd91c0d85e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064e64b5-f352-4693-9087-e23dc919ec3d",
        "cursor": {
          "ref": "acd1f3f0-4f9e-46ce-982b-af88c1e89395",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "257c5956-492d-4269-bdad-8667804c31d4"
        },
        "item": {
          "id": "064e64b5-f352-4693-9087-e23dc919ec3d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "82aef333-729f-46e8-be38-7a72ba302700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d63a2c-a82b-42af-b14a-8d69c2551ba1",
        "cursor": {
          "ref": "3c31c69a-2c58-442b-a5eb-fd7464fa53a4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f6cc123a-ff07-45ed-8694-9955b6041e15"
        },
        "item": {
          "id": "e4d63a2c-a82b-42af-b14a-8d69c2551ba1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9befcb80-a499-4650-a831-1c9abada5e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e9ad7e-eb69-4eed-8eff-48b5a08c0535",
        "cursor": {
          "ref": "a2dbb81d-6c8c-4590-a6ec-48f81db9d083",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b0b96915-ae47-46c6-b41e-094fe847e0a5"
        },
        "item": {
          "id": "09e9ad7e-eb69-4eed-8eff-48b5a08c0535",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2824fab5-3df5-4703-b6fd-936ac68f84db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5458a08-410d-49ab-adca-f4b7ff55dd01",
        "cursor": {
          "ref": "5fd6e429-acdc-4bc6-afca-7671703db61f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ae00e969-75b0-44a5-9a5f-b151842180a1"
        },
        "item": {
          "id": "d5458a08-410d-49ab-adca-f4b7ff55dd01",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bfefecc3-a797-4b1f-99ed-d201f1e3f308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38e05d9-357a-43d4-8b4f-09597c452ebe",
        "cursor": {
          "ref": "42dfcd77-39dd-4911-9b5f-0b2c55934524",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a615431f-9fa3-4e68-80ed-d95cb67d9add"
        },
        "item": {
          "id": "b38e05d9-357a-43d4-8b4f-09597c452ebe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3d9dd6c7-4eb9-488b-98bb-e6e0b10fdbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09030bd3-297b-4002-bc31-93a11c07987d",
        "cursor": {
          "ref": "62845495-88f1-4e8d-b3ce-f81f6b8f05ee",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "43265cbe-a49a-4e7e-804d-7d55477aad60"
        },
        "item": {
          "id": "09030bd3-297b-4002-bc31-93a11c07987d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "75ec88d4-d57c-4c60-9830-616c1b7511d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c7b0ef-3513-4773-8fdb-078386ed0cf6",
        "cursor": {
          "ref": "b4b4afa0-6955-4441-a93b-a2aa89a3c03f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "13755160-fba1-4f0a-a5a1-10376ed56661"
        },
        "item": {
          "id": "31c7b0ef-3513-4773-8fdb-078386ed0cf6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d354185e-2595-4369-b275-63099e7c882b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec1b4bd-56e7-41d7-bad0-522a1d6c5e51",
        "cursor": {
          "ref": "00be857a-b0d7-45ef-8cea-431d8ca2196f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "be43edee-ceee-4a15-a660-924581e77add"
        },
        "item": {
          "id": "1ec1b4bd-56e7-41d7-bad0-522a1d6c5e51",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4a18cc4a-92fd-4498-978e-cd56fed61824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a70cf3c-68ef-40a0-aadf-ea2bd80eb50d",
        "cursor": {
          "ref": "60c1e8fe-3b29-4772-9ca3-c6a0944ec897",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ffa643d3-d76a-4983-9500-1c982563c627"
        },
        "item": {
          "id": "5a70cf3c-68ef-40a0-aadf-ea2bd80eb50d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "296b1caf-f48b-4d48-8294-d8aad2ba7e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fafbbaf-e877-44cd-b617-e26f8783fa4d",
        "cursor": {
          "ref": "5365ff10-1ffb-4154-aea4-4b98cdd21544",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0630b505-da07-4d65-a8f1-d48f481e0c94"
        },
        "item": {
          "id": "8fafbbaf-e877-44cd-b617-e26f8783fa4d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "927766af-1704-4c3a-ad2b-672984b29c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc36498-5cd2-4455-a28c-b99aeb3f86b9",
        "cursor": {
          "ref": "5f0f8f55-d9e1-407b-aca7-e99d551fe39f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1942fe00-e7a6-4626-a8a0-e819aafedda1"
        },
        "item": {
          "id": "6cc36498-5cd2-4455-a28c-b99aeb3f86b9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7f0237eb-9e91-4510-aed7-d23cd6ebf196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b097dd-c655-43f0-bb78-b00d4a9c55c4",
        "cursor": {
          "ref": "2022ac01-10a1-4391-a9b8-3eb8293c4ef9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4d2dcaf6-47e3-4be5-ae70-b0cf6a6772bd"
        },
        "item": {
          "id": "62b097dd-c655-43f0-bb78-b00d4a9c55c4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "86a0676c-4a81-4527-b3d4-025474666bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1479f6de-31ff-487b-9707-683593bd3b84",
        "cursor": {
          "ref": "224cbedc-3b8b-4be9-bddb-2421d5664ed8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f0271c60-5ad2-4fa3-ad50-cb865f16defe"
        },
        "item": {
          "id": "1479f6de-31ff-487b-9707-683593bd3b84",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "18991497-da83-4402-854a-0dd23d6959d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbddbbf8-9652-4ddd-9a83-a071d3cef53d",
        "cursor": {
          "ref": "51b3c8ad-6dd1-49bb-8093-ca21ad44de08",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "93e12d0f-d021-4fdb-b6e6-9c37961de41b"
        },
        "item": {
          "id": "fbddbbf8-9652-4ddd-9a83-a071d3cef53d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "77d25235-6b43-436a-b545-f94bf2b2e79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318b3fd5-389d-4627-9460-efbf554c3ade",
        "cursor": {
          "ref": "51827a0b-afc3-4883-bc1c-8198330b9699",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0436ea9b-56d2-46f0-a8ed-4289ba0d42bd"
        },
        "item": {
          "id": "318b3fd5-389d-4627-9460-efbf554c3ade",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3bd0bca5-2e17-452c-a1c2-3b997a1eb9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4571e238-c0d1-48b0-85cb-71638d68a036",
        "cursor": {
          "ref": "3487325b-4d5b-4c66-9679-e00765e91018",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eb65a568-4d8a-49a7-ac74-5f8d47a6086a"
        },
        "item": {
          "id": "4571e238-c0d1-48b0-85cb-71638d68a036",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e1bffd51-2437-425c-9ad1-87320e445faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac505dc-5042-4ce4-865a-2774a00dadff",
        "cursor": {
          "ref": "fa18d53c-bae3-4ef2-8bb8-cd637e2ddc07",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f930210b-25f1-4b5e-b1de-e4278cc3d151"
        },
        "item": {
          "id": "1ac505dc-5042-4ce4-865a-2774a00dadff",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c876bfc7-3907-4695-b9ea-b78a5454b98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bff878-0fea-4388-b548-583f4ee3bc7b",
        "cursor": {
          "ref": "fa38769c-fe6a-4a7b-953b-e03860b17371",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "273f3d03-d2fc-40ed-aa9b-4bbb64554ec0"
        },
        "item": {
          "id": "61bff878-0fea-4388-b548-583f4ee3bc7b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f72217ec-6aae-4799-96af-7d52c1ecb750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24632952-6c1f-40a6-8bfc-9263446c8432",
        "cursor": {
          "ref": "6992a47d-cb51-4855-a445-d8006bb79486",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f1b8850b-c054-4d1b-ac18-901422c7582f"
        },
        "item": {
          "id": "24632952-6c1f-40a6-8bfc-9263446c8432",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "150a1d24-d749-4d61-93fc-8bbbda47824d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061565c0-3328-4442-b6d6-4d2085a49620",
        "cursor": {
          "ref": "b201103c-c28d-4818-9786-e4b72c7669db",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3725569c-a4e6-4b52-823b-89c4e22c8751"
        },
        "item": {
          "id": "061565c0-3328-4442-b6d6-4d2085a49620",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b2100700-41b5-44fa-ab55-0dcec3ce8fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d6d57b-930a-48ac-a3f1-04dab128da28",
        "cursor": {
          "ref": "3fb9b965-5596-41f2-bbe2-ff989142a304",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5b715324-cdf7-4b83-ae72-213cf90c5965"
        },
        "item": {
          "id": "a3d6d57b-930a-48ac-a3f1-04dab128da28",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fe713c9e-d1ce-4684-936f-bdb436572959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ba5c84-62d7-4583-92fd-855a9f80b000",
        "cursor": {
          "ref": "2af8ce85-478f-4d78-85c2-cbdee51a930e",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6883eb19-6d06-4cf6-8319-d5fae890cb6b"
        },
        "item": {
          "id": "40ba5c84-62d7-4583-92fd-855a9f80b000",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cf1caea4-c274-416c-9aba-a30f482d38fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b06d2c-aaea-489b-a290-b4d9f5fe64ee",
        "cursor": {
          "ref": "9f867e35-e58f-4389-a991-ce0894df22af",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0264944b-d335-4542-a530-c5c063f5168c"
        },
        "item": {
          "id": "c8b06d2c-aaea-489b-a290-b4d9f5fe64ee",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "05ce832f-3d79-445e-b240-5f41941fac35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc66b257-ae5b-43e8-bb3a-8735bc1e97d9",
        "cursor": {
          "ref": "16357d37-de0b-4e40-a90d-0b4310b79c20",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "de76d73b-df53-4940-bb4e-68ab0f3baf53"
        },
        "item": {
          "id": "cc66b257-ae5b-43e8-bb3a-8735bc1e97d9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "25507df4-461e-4cbc-a82e-0360a2e2310f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad99aead-601d-4ae9-9fae-c748363c8811",
        "cursor": {
          "ref": "2dbc2e85-af05-4441-8b47-dce8ecbf5234",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ae36491c-b04a-4b7d-9689-5d58010c13c2"
        },
        "item": {
          "id": "ad99aead-601d-4ae9-9fae-c748363c8811",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5d913a96-3908-49e0-9092-ca1d55d7ca75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2af0b6-3385-43de-aebc-2b4bf9985a1e",
        "cursor": {
          "ref": "75913ebb-07b2-444a-a211-0bf6b7afc734",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ef2ee1d6-76fe-485a-928c-6315fc9702dd"
        },
        "item": {
          "id": "3b2af0b6-3385-43de-aebc-2b4bf9985a1e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9bb2409d-2799-448f-b6a0-2b494da5f389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93759bff-43c6-4b8d-b710-345d2d0b809f",
        "cursor": {
          "ref": "5ace8811-42f4-448e-b59e-466e5eab0054",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cfd2804c-02c0-403c-a832-06c25058833c"
        },
        "item": {
          "id": "93759bff-43c6-4b8d-b710-345d2d0b809f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "efee57f7-d047-47bd-9ce3-787eff6da553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14231394-d172-4912-8e9b-6f539e8ea53f",
        "cursor": {
          "ref": "def16233-faf1-4d1f-a354-03facdf3137e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f3965188-9419-4fee-bd0c-f1912f001171"
        },
        "item": {
          "id": "14231394-d172-4912-8e9b-6f539e8ea53f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "598b2271-63b6-492d-aa11-24015e3d22e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e03878-1060-4c6b-a6e3-44e0201cde98",
        "cursor": {
          "ref": "d598fd11-677d-48d3-b530-8bb2971f56da",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2dab23ef-390b-445a-9ca6-d5579b34ddf5"
        },
        "item": {
          "id": "46e03878-1060-4c6b-a6e3-44e0201cde98",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "75f8717a-03a0-4d67-a540-01c387e3b98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18378767-30d8-4331-9587-12a875741238",
        "cursor": {
          "ref": "fcc9c716-d545-4c18-a91f-6b0733ab9bbd",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7eb196d2-6258-40bf-b648-60b178d016cb"
        },
        "item": {
          "id": "18378767-30d8-4331-9587-12a875741238",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ea078998-3d81-41d8-bd61-1f419b89e814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98b4918-3753-41c3-b1a4-43e62318375a",
        "cursor": {
          "ref": "225ee117-1c9b-4403-b87b-92c9db258474",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bda7c457-99a6-4245-8627-df8e12654948"
        },
        "item": {
          "id": "d98b4918-3753-41c3-b1a4-43e62318375a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "17068038-904e-474f-a32a-0965139f69ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51e2321-e118-4318-90d1-f732c0fe2347",
        "cursor": {
          "ref": "e251625b-038e-4c76-ad4d-84d39d4ddd69",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "75454081-1bfc-4716-a203-3ae70e00bd52"
        },
        "item": {
          "id": "b51e2321-e118-4318-90d1-f732c0fe2347",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "03b7d14f-3da3-4ff5-974c-76764e6bc6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd9bf63-7c78-44c2-91e5-d194b0d749eb",
        "cursor": {
          "ref": "6f313b8e-9346-414f-9d54-8603f86951ab",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "76bc291b-c969-4fb2-9fc1-9fbcc9704cc0"
        },
        "item": {
          "id": "1fd9bf63-7c78-44c2-91e5-d194b0d749eb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ffe4c10e-8cc9-4128-b672-0ba544cb84e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83afadee-1cd3-4231-8333-9efd422bd3b1",
        "cursor": {
          "ref": "f71b3633-5fd7-475d-95a1-80765668e944",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3854508b-cc05-41a1-88ad-0993db364040"
        },
        "item": {
          "id": "83afadee-1cd3-4231-8333-9efd422bd3b1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "664e5f91-4efb-4802-ab78-ad319747ac1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0a2758-dc0b-4758-943a-957cd65859d2",
        "cursor": {
          "ref": "59b69b62-b8af-439d-9285-6c846e85e1ea",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fb2111fd-e55a-45c5-aaff-9936e7bd2f29"
        },
        "item": {
          "id": "5c0a2758-dc0b-4758-943a-957cd65859d2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c1725e54-eed4-41a1-a45a-4e1ae37f3920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494c5039-47d8-47d4-821c-ea664c381dc3",
        "cursor": {
          "ref": "f20ce233-b33b-4e95-8429-83fbddeffe9f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6765233a-a18c-42f3-bc51-08b496add450"
        },
        "item": {
          "id": "494c5039-47d8-47d4-821c-ea664c381dc3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3b6ab1d5-b8ca-427d-b415-1bb1ce3f5f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa13f162-6329-4f31-86ad-a24a223bb3c8",
        "cursor": {
          "ref": "c9dbac49-6a5a-40e0-b619-7064ae4b278a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dac2d43c-0730-487c-8105-f027412b7847"
        },
        "item": {
          "id": "fa13f162-6329-4f31-86ad-a24a223bb3c8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "818be793-b4d1-42d4-9ea1-bf6fd6d233d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19325dad-ff9c-41c2-9d83-13f94d3b59dd",
        "cursor": {
          "ref": "f5e5121e-e6a0-4ea0-a297-ac321c525b2e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3f47d712-b266-4e87-9895-7fd293e4dd59"
        },
        "item": {
          "id": "19325dad-ff9c-41c2-9d83-13f94d3b59dd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "083a20a1-5bb5-4a11-9d4e-e3e9b6374bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff55b6bc-fdfb-4ab4-bd37-99585eafd3d7",
        "cursor": {
          "ref": "25129fd8-1fbd-47f2-a1a8-272d2d591e86",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "da57ee8f-b77e-4f39-839f-630237621d20"
        },
        "item": {
          "id": "ff55b6bc-fdfb-4ab4-bd37-99585eafd3d7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e8992da5-bf52-4560-ace1-3dc1725dcd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fde3b5-fd45-41c0-8958-4b2947e5fb43",
        "cursor": {
          "ref": "750c5290-8f76-4e8a-8edf-582e4e905218",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e18858cc-caa6-4fd2-8fc1-8737bd8bd293"
        },
        "item": {
          "id": "56fde3b5-fd45-41c0-8958-4b2947e5fb43",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8db86eba-5e50-41e3-b168-924f1e8b7711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ced008-54c7-4b7d-97f8-0ae2ac78b548",
        "cursor": {
          "ref": "c8c32c01-c59d-4533-abac-5426f1e7d7c7",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ea51a16f-2fca-498e-9cc4-87677c22d25c"
        },
        "item": {
          "id": "62ced008-54c7-4b7d-97f8-0ae2ac78b548",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4e3faf91-2011-4951-8617-b56c1bf082ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cea243b-aa32-4019-b3d2-d1af3451946d",
        "cursor": {
          "ref": "0501246a-bba3-43ce-b9b5-f4061d6f9702",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "16c4277c-4cf7-4042-b332-a59502662a7c"
        },
        "item": {
          "id": "2cea243b-aa32-4019-b3d2-d1af3451946d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c6708aac-b75c-44e1-a322-12a491b02054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6534a706-0726-4a44-921c-9ef62f78ef4d",
        "cursor": {
          "ref": "a2c7c12a-e354-4297-bea5-4080337da328",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f4c06d92-d02f-473c-9f53-e14698432416"
        },
        "item": {
          "id": "6534a706-0726-4a44-921c-9ef62f78ef4d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "72414ea6-06cb-4f6e-8db3-77761a1cb34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5980c9-464d-4eec-9a53-1adbd9aa1242",
        "cursor": {
          "ref": "b698c2bc-ecdb-43ba-94b5-1a12778b0224",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d364bcc5-440a-4d64-b6f8-fff2f6772b65"
        },
        "item": {
          "id": "4e5980c9-464d-4eec-9a53-1adbd9aa1242",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e13e369d-e822-4c26-9ae3-aa94122ccadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a883e98-d0fd-46e0-88d3-b77cbbd0ffd9",
        "cursor": {
          "ref": "b2460b4d-1643-443a-bad8-4341f20dc5ef",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "23852a06-98f2-4cec-b56a-7f41f6264e7f"
        },
        "item": {
          "id": "1a883e98-d0fd-46e0-88d3-b77cbbd0ffd9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "59ded1a7-385f-4816-89dd-23ff83afff54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de409cc7-4a51-454d-b8e8-b63022f82dec",
        "cursor": {
          "ref": "f8d76187-f46c-4579-a488-5ecd7e01167c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "822884d7-263b-47ef-bd1d-78d964bc5ba4"
        },
        "item": {
          "id": "de409cc7-4a51-454d-b8e8-b63022f82dec",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d70a740d-0f7d-4906-b477-6b7aa914ba1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269f0000-1da4-48f0-92fa-efee3249a3af",
        "cursor": {
          "ref": "f8621c12-7f88-48ab-9c51-9cf5815e010b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "49365edb-04ac-4b1a-95e1-7638fce6ac84"
        },
        "item": {
          "id": "269f0000-1da4-48f0-92fa-efee3249a3af",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5a5904f8-7273-4448-b3a4-4c2c1b36032c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587b35c1-2e95-48c2-a2ef-80ba8a780a67",
        "cursor": {
          "ref": "55f68cb5-8775-49bc-b566-969c6316dfac",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e4529261-373c-4a4a-83d8-d7741130430f"
        },
        "item": {
          "id": "587b35c1-2e95-48c2-a2ef-80ba8a780a67",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a350c809-3240-4bad-8761-dc709fadd3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da98adb-5e84-4b4a-b3cb-e7e6f9af9d05",
        "cursor": {
          "ref": "650f84e1-8a46-453e-83f0-378f7e301e21",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "058c556c-9420-4ff7-8e56-c21d26c2456b"
        },
        "item": {
          "id": "2da98adb-5e84-4b4a-b3cb-e7e6f9af9d05",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "746e911b-99e6-4b66-9d5e-b3758692a577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b87b2a-bcaa-47c1-b455-8956ee125380",
        "cursor": {
          "ref": "ff3c0ace-7abe-488c-bb0b-205642175d2d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "47b60ab4-10d5-40b3-8b86-27fbafae1dcc"
        },
        "item": {
          "id": "b2b87b2a-bcaa-47c1-b455-8956ee125380",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e02527e9-1904-42e8-b251-f3a577070f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8751fd-9da7-46f6-af76-8831d2cd2206",
        "cursor": {
          "ref": "0cf5eb42-9351-4a76-9b1a-444aed334a4a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d7ddeacd-dbbf-452c-9ab7-d2427efa1ee8"
        },
        "item": {
          "id": "9d8751fd-9da7-46f6-af76-8831d2cd2206",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d911c625-15d4-4007-91ff-8edb87d12595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774711b6-1e29-423a-8281-e43a894539f6",
        "cursor": {
          "ref": "8a83b71b-470b-471d-b6d5-77a9904cb8d6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3ef6ec31-83fa-442d-a7e3-f464d3c9bd5b"
        },
        "item": {
          "id": "774711b6-1e29-423a-8281-e43a894539f6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c3b2c104-2fe3-4998-af3c-15dbce2dac14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf968d9-e78c-472f-af91-1f80d25c6cff",
        "cursor": {
          "ref": "031c0f5e-dfdb-406f-bbe8-bff1a9e821ea",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d8533d0a-3aa0-4f70-91a4-19c7c8b93e1c"
        },
        "item": {
          "id": "5cf968d9-e78c-472f-af91-1f80d25c6cff",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "72ae3a03-6ee1-41a9-b41c-87efb6746240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914306f9-24a7-4346-a47f-070c3304006b",
        "cursor": {
          "ref": "9cab6bf1-248c-4552-96c4-58aa8ed4e32d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "02950f00-5355-40b3-bcd0-0e5d5af32c30"
        },
        "item": {
          "id": "914306f9-24a7-4346-a47f-070c3304006b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2cc29ab4-d15d-4f64-885e-fe1ba0181bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205793f3-f3b7-4688-a337-5e2ae1393f70",
        "cursor": {
          "ref": "5724fae5-dfe1-42c0-9922-462d52e593ec",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "009d7fb3-24de-4216-a0b0-2aa20643d390"
        },
        "item": {
          "id": "205793f3-f3b7-4688-a337-5e2ae1393f70",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0410819c-18d3-4d4f-affd-d76f9c2606bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d23023-b09a-436d-9591-27621a22da97",
        "cursor": {
          "ref": "ff8dffed-9d03-4914-a325-b4709c6750a0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ec999d63-511b-4b3c-a2ef-9793cc0a422d"
        },
        "item": {
          "id": "b2d23023-b09a-436d-9591-27621a22da97",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3bf03584-cfbf-4f88-b0db-d59409b9beae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486d220b-fc69-4708-9f3c-0ddd555eebee",
        "cursor": {
          "ref": "0ba0167b-08ef-49a2-9496-5cc2809b8283",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0c3f27f3-5d6e-423f-87d0-41af6ca841f6"
        },
        "item": {
          "id": "486d220b-fc69-4708-9f3c-0ddd555eebee",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9dd8d476-d9a8-4559-ac22-027735523465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e22dfc9-2848-4a9a-8729-c942b9ab46d2",
        "cursor": {
          "ref": "4187f68f-f86a-442b-bf86-af6e97313c2f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3cac9025-75ab-422e-a4e3-149435901d75"
        },
        "item": {
          "id": "2e22dfc9-2848-4a9a-8729-c942b9ab46d2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b8735db4-4342-40d6-ad38-e83fd493cd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee3633f-2941-491b-b823-5499792402c1",
        "cursor": {
          "ref": "66d086b3-5567-4663-8ca8-84c1d9cb7a40",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fd2e7ef9-ac43-43b0-ad48-8fd41bd82969"
        },
        "item": {
          "id": "8ee3633f-2941-491b-b823-5499792402c1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9053a334-8ff9-4db8-9c4a-f789bc534f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf16cec8-260e-4faa-b7a5-84d63c0253f2",
        "cursor": {
          "ref": "0120f864-fb60-4aa5-b7f2-1501aa0e85e6",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dd9b4013-7910-4ff0-b382-5b11dda1be02"
        },
        "item": {
          "id": "cf16cec8-260e-4faa-b7a5-84d63c0253f2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dced23ef-1cef-451e-a88b-4c214abd34f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac2e49a-5b3e-4914-809f-fb77f3609fa8",
        "cursor": {
          "ref": "fc5a6b69-4ef0-48d8-86c8-cde916a23a7d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3db10c2d-9acb-43c3-bd27-b053226cc791"
        },
        "item": {
          "id": "5ac2e49a-5b3e-4914-809f-fb77f3609fa8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "76cbfd33-4926-4cc4-b491-a6468a2c1583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8151a3f8-14c4-4a57-ba38-8dd224b29163",
        "cursor": {
          "ref": "140d909d-e7fb-4241-bd23-9553b9d229ac",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "793b46e5-c5b7-4788-b5b3-c52d3bb5539a"
        },
        "item": {
          "id": "8151a3f8-14c4-4a57-ba38-8dd224b29163",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3eb136a5-4e61-4e7c-b01e-2e4dbc358abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ba3a93-5479-450f-aee8-59d36b990835",
        "cursor": {
          "ref": "7862ae53-a1e1-4dca-bb8d-0254695350fe",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a3cf980b-1f6a-4345-8d59-77dc4b73a90e"
        },
        "item": {
          "id": "76ba3a93-5479-450f-aee8-59d36b990835",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "026f5151-aa94-4715-a92d-1ce19f676644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f479b863-4c3f-4c04-9c8b-2c31b10b7c05",
        "cursor": {
          "ref": "3eeda0bf-59e9-42f6-b460-41922d4026ae",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2ef0b880-d7f7-4a22-afa5-659123f03d1f"
        },
        "item": {
          "id": "f479b863-4c3f-4c04-9c8b-2c31b10b7c05",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "89f987d3-3036-40be-952c-fc9ce14fdeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41ba6f4-c80c-40b1-8cf0-157f687e2397",
        "cursor": {
          "ref": "b8d5e625-073b-4ba5-bb10-d4e2686d0ff9",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6a76d928-148c-4e71-8f81-5cf6c0b5660f"
        },
        "item": {
          "id": "c41ba6f4-c80c-40b1-8cf0-157f687e2397",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f62fa288-1379-4472-8686-da4d7a1a5aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e62c8c5-0ec7-45a9-b81c-b3e3743fbe27",
        "cursor": {
          "ref": "9d0c563c-e0a0-4180-810f-87d4627287ec",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f6198455-1303-4a7b-b332-767cede5bbe6"
        },
        "item": {
          "id": "0e62c8c5-0ec7-45a9-b81c-b3e3743fbe27",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2433bc6d-6167-49f1-a26d-1d1e2dc15536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2a76e7-6a7d-4b16-9788-2cedaf68f7e6",
        "cursor": {
          "ref": "b337a8cb-7f57-4efd-9407-3f25129f79d7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8b23d761-e83a-4336-9d33-15cce2848aba"
        },
        "item": {
          "id": "2a2a76e7-6a7d-4b16-9788-2cedaf68f7e6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f37b5e25-b685-4914-b88c-18ad75d6f5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8f1813-22e1-49f5-988c-fb86c505ab42",
        "cursor": {
          "ref": "1e9c9470-d120-4318-9e6c-ab242161a13a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5fbe4e09-ddc8-4781-87aa-08883ebf908b"
        },
        "item": {
          "id": "2a8f1813-22e1-49f5-988c-fb86c505ab42",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fa48836f-e916-4dec-ac04-0cbe8bdc3d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf61fac-be2f-4072-88fd-fcb6e6521210",
        "cursor": {
          "ref": "9b99ad16-6432-4284-b72c-b6f1c77ee391",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ab383cf8-a2fa-4d85-9cde-329cfc9ed816"
        },
        "item": {
          "id": "1bf61fac-be2f-4072-88fd-fcb6e6521210",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a8cd319d-8038-44ac-a8ab-e7a4d9526fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544dcbd8-f9bb-4f8f-b2ba-73d95ce1e533",
        "cursor": {
          "ref": "cdbaf3bb-00fc-47c7-be87-592f2457e937",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "67601be6-4bc7-49f1-a67f-36a10fb6c98e"
        },
        "item": {
          "id": "544dcbd8-f9bb-4f8f-b2ba-73d95ce1e533",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4a5d9e83-df52-410b-91cb-4e98b300ae38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a11c9a-09ce-49b9-9f7a-1b6284b22de6",
        "cursor": {
          "ref": "18f7549f-8150-40c8-b8c9-3f9edc5ab39e",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f2b77799-7e4b-469a-8b69-fe4103530eda"
        },
        "item": {
          "id": "e7a11c9a-09ce-49b9-9f7a-1b6284b22de6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "91fbfb12-8c2c-401e-ab3d-f81eba1dd109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca78d9fe-5977-48d4-b743-81b385e77628",
        "cursor": {
          "ref": "2dfedc0a-1ca4-4c6f-99c1-16cc7a79e35e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "02f5adfb-b4f9-48a0-8a7e-19cea87bb6c1"
        },
        "item": {
          "id": "ca78d9fe-5977-48d4-b743-81b385e77628",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "69f572ae-9b74-4af7-b79e-5a269bc5c447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b15e682-2bfe-4a0a-9395-a68f66120c00",
        "cursor": {
          "ref": "f3d5ff99-edf8-4e47-826f-a7825ce51637",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "52d139b6-be9d-427d-8b1b-76da9ade311d"
        },
        "item": {
          "id": "9b15e682-2bfe-4a0a-9395-a68f66120c00",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7f5df9ce-559c-4f01-a32d-d48fb58eb393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bd5878-1306-45e0-95a0-d8e6a2073ed8",
        "cursor": {
          "ref": "f2455945-bdba-44b8-9f09-3060c428fca3",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "33e53681-a9ee-422a-896f-f6dc719882e0"
        },
        "item": {
          "id": "d7bd5878-1306-45e0-95a0-d8e6a2073ed8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7fb53482-31e3-4a58-92a2-d57276ffd570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cdd169-2a20-4725-a0ca-ae8417221bc7",
        "cursor": {
          "ref": "2bf29953-8a81-4f9a-b14d-ed59958a29a6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "36ba94c5-bc22-4ff3-a477-3015ada0969c"
        },
        "item": {
          "id": "47cdd169-2a20-4725-a0ca-ae8417221bc7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3efceb26-9dca-4c24-bc73-8befbd048982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b358dc72-2954-4e4f-b427-ae04f28c44b4",
        "cursor": {
          "ref": "99dddd2a-9383-4d5b-a2cd-cc7a6d721304",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7e60b782-b491-4e9c-9323-46702363da1a"
        },
        "item": {
          "id": "b358dc72-2954-4e4f-b427-ae04f28c44b4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "07e7c645-6f8b-4163-83ac-905cd8174ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2da7b6-3ea0-43a8-894e-2fc0a05a6841",
        "cursor": {
          "ref": "e4c4e90f-1a64-4e27-b3a8-ef129b2f7fb9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9724429e-3588-4f76-8617-3b55ee68b1c8"
        },
        "item": {
          "id": "6b2da7b6-3ea0-43a8-894e-2fc0a05a6841",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a5a42ae6-d65d-4e52-ac53-160a18bcb6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a6ce5d-ccc0-4913-8b08-d1d119ce7650",
        "cursor": {
          "ref": "41f0c727-7f91-44b2-9303-40245ce2a18d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3c1a7d3d-5156-45d2-a306-d017b8381470"
        },
        "item": {
          "id": "c7a6ce5d-ccc0-4913-8b08-d1d119ce7650",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0dd00735-af98-4e73-8191-88eef35046da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ef9f3e-b064-4c9f-acc9-abfdf23f038b",
        "cursor": {
          "ref": "0906dbaf-b16a-4fff-9213-04583e5a1085",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "97146808-164a-491f-ac84-7235fd8e88c7"
        },
        "item": {
          "id": "97ef9f3e-b064-4c9f-acc9-abfdf23f038b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4175fa1e-1d27-4cd1-892e-d043a9639f98",
          "status": "OK",
          "code": 200,
          "responseTime": 2330,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b114d062-7a85-4e28-b81a-6526d12a7aaf",
        "cursor": {
          "ref": "7f0652ca-bc82-4053-a006-7b44208af608",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "98f749cb-c4b0-4ead-9193-208b3c49ff37"
        },
        "item": {
          "id": "b114d062-7a85-4e28-b81a-6526d12a7aaf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9ff17105-e8c0-4e09-9ef6-5f6b0da4f6b7",
          "status": "OK",
          "code": 200,
          "responseTime": 2656,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ec83a6-eb2c-4398-9a49-1394170e4cf3",
        "cursor": {
          "ref": "372d5712-7109-4bc3-8889-e8e36c86ada0",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "06c73f6f-1ea3-4a75-8492-98f57c163068"
        },
        "item": {
          "id": "80ec83a6-eb2c-4398-9a49-1394170e4cf3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "016b1ac4-4b2e-4d9f-a585-082326b184fa",
          "status": "OK",
          "code": 200,
          "responseTime": 2743,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb288173-b938-4622-8d32-7a993d086f97",
        "cursor": {
          "ref": "d55ec304-b45e-4cd9-857e-6333a1940efd",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ea8b9e7d-5ea2-4451-b631-8155194f97e7"
        },
        "item": {
          "id": "bb288173-b938-4622-8d32-7a993d086f97",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "83fdf67f-b753-4787-90e9-0c55dfb129ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb288173-b938-4622-8d32-7a993d086f97",
        "cursor": {
          "ref": "d55ec304-b45e-4cd9-857e-6333a1940efd",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ea8b9e7d-5ea2-4451-b631-8155194f97e7"
        },
        "item": {
          "id": "bb288173-b938-4622-8d32-7a993d086f97",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "83fdf67f-b753-4787-90e9-0c55dfb129ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bc217a-c873-4e6d-a15a-a99e5dd41e06",
        "cursor": {
          "ref": "69d4fe6b-aab2-4c92-9388-7b2cc8f46dfa",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "af8941de-4756-4d78-aaa6-261c2ddedb0e"
        },
        "item": {
          "id": "a2bc217a-c873-4e6d-a15a-a99e5dd41e06",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c3270ac7-ad44-4487-a315-311201cd1923",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32187366-d04e-4fc8-81c2-5b2f2fc2d19b",
        "cursor": {
          "ref": "bd96dcc5-5e59-4e36-bd4e-1fa14faf23ff",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cd40b1ed-5bdb-4dfd-b74b-422babfabbc3"
        },
        "item": {
          "id": "32187366-d04e-4fc8-81c2-5b2f2fc2d19b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7d0994a7-eea9-4d27-9be4-ea62f8d39436",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}