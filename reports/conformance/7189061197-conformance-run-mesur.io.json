{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a6491d7e-62b8-43d1-a41e-67a04daaebee",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5aa342e3-6c77-4ecb-a458-8535c39197ea",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b121364a-374f-48a8-8a16-3445580e53ef",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c2ce64c6-6968-4cee-a25e-890172a567dd"
                }
              }
            ]
          },
          {
            "id": "3e97726f-e780-45e7-bd42-93b9b525bb62",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4a7f541-bc77-4386-b8bb-34aaf8987163",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9dd58834-1236-47f7-840f-5a1fb30a2946"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a0f077e6-2fee-42bd-9f7b-02c2628dd73c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "49c537a5-bdbf-4059-95b4-7247a6cdff68",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1c957c9-34eb-4c3a-b295-b84fe6abbc14",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32d76bc4-a59d-45f5-a59b-28a1869ab91b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e4b67c6-8750-4af6-8612-f671a0b2a44f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35c2a112-f90e-465e-9695-9b2219ff4186",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec0f58c5-3167-4a60-ba21-2e867c2ae3c7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a9e996e-c24b-4941-8432-e0ba1f61bf47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60770e6d-f476-462b-a97b-18be993ca3bd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a4fa511-85b8-4bae-ae8c-a2813d9649a5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "93d63159-c7b6-4ebf-ac6b-bee9c5e23d6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99427486-8f83-4757-ad67-4b551bbe7f35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eadb5bc7-8fe8-492a-ba33-b7408d435775"
            }
          }
        ]
      },
      {
        "id": "472172c8-2dab-4a27-bca4-b16d1eb1c7e7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "89f26e99-8e6e-4e67-8d71-b275a8ed2b13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a586fc75-02ca-49c9-9d24-0743106509cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f3eac8cd-3374-4720-b82b-b6efb86b8f60",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83bea08-1672-4385-bd12-76e2cffb50b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58185624-57fc-434c-a875-a6fb18c640e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04db0f41-3f77-4579-8255-67636761ebf0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc81ef7b-7226-4500-a60d-c07b807dfa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fc82d3f-25d5-483f-8bc5-56ef0a798805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309e03fc-8fc1-4bd3-8d1e-58b84fdf7902",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b8437e-6bca-477a-b625-1ca64ee8e377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "588fe94f-9815-4301-a671-33e406f72f36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b61e4a9e-011c-4942-a97c-7549abe64853",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "105a4c78-9846-453c-afd1-26793b1177b3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955e4dc4-9e64-434b-a0b2-2786c53e91ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "652bf27a-cb32-47bf-a371-40a00b8b6582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34da00ab-9706-4f3b-a3e1-15e526da9c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912fdc37-7662-4339-9269-199f0372e2c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d0a12a41-cc6b-4bfa-94b9-8793a92b5a69",
            "name": "Positive Testing",
            "item": [
              {
                "id": "608438e9-aafe-4b0d-ad11-f5b219d5a864",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a4d603f-505e-4f5f-a3e3-f80f6e778802",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4edc36c0-1e4d-4379-a19e-918b4fa40717"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ce2f3f7-a8c1-4d2f-8179-514fd00e92f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bee78da5-ac8b-491d-810b-ca8b7164dc61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3aab845e-3fe9-4090-bba6-0085c884b18e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2d2f0c6-1b2e-47b7-a451-8698e4d64874"
            }
          }
        ]
      },
      {
        "id": "1f92d466-96b8-47d3-a6fa-3ac915ae4afd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "244f969f-7476-457e-88be-0f22ad1af38c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a0210c6-3678-4e23-99e6-b3f51541690a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b9aea9a4-e28c-4218-bf36-19fa145ba195",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9495f670-e90a-4b55-a2a0-ae565c16dcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b9d4ea-23d0-45d3-8a0a-75e12ced69cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b75bfdd-2e9f-4314-9ea6-0fc16f4de5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "110b9a05-44a5-4494-9d09-e0f2a5d18f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67adfd4f-dc39-4fc1-8e3f-a34077bf10b8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d051a2ca-065e-4a3c-b5bd-4a83597d2b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5892b36f-20a0-49b9-a555-89e63e9c6181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c5f3e1-c283-4b0a-981c-c04e362f3c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01dff4ba-097f-4023-89ee-e0a7e74bffa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da90973-bb12-4c6d-b41d-76e40365f3c2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218cb2b1-c5c5-4545-9a80-ca1cacef935a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b12ea27-eaf0-429a-bd42-d10df40842f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb1c1c4-997b-4fbd-9eeb-81d9c138f78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5135e669-bd27-49b4-a324-7b5505fbdbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75211358-6c10-4351-aabc-6a627fbe2031",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cc2ddd-b8fa-46d3-9076-eaa15515cba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b252901-57f9-442e-bf95-8914ecf7d2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7578de-7fbf-4881-accc-7a6cf3d13e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a19d06f-94da-4217-a2a2-00f8f5e078f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bd1da7-0a5d-4698-8cc6-5195de3c12a1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e96a47b-2854-4f90-b42f-e217586b91fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a4645c-70f6-4a9d-931f-48e23f12f1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94595e11-4238-408b-a892-53862a0cc054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "174b1fb5-dc78-4dcd-832c-b623f5a94d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e74fc9-cbfd-4775-bdfb-dde3d3b0d740",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40dc497-fbb6-476d-b526-6b8908f670d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c7cd09-7825-43e5-8055-601308ceb318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a551a9-13a3-47f0-8f7a-69d343591fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5d8e50c-806a-4a1c-885d-27c0ac30f043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c6a0c6-c188-47bd-b019-b1c7e23591a9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8739bc9-1686-4c6c-8ad1-82631d98f6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b46c82-5add-4169-967a-b96d8d8c4ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa6cde4-7deb-4c67-8f61-06e436457a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c82115c-6320-4de1-b9a5-ec81cb8fc763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f44473-bc92-4c94-8a70-eedd0d19243f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e084360f-1770-418a-9aa0-cabbddd6fc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dccee54-26a6-4c3b-9c61-fa789e8ab42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65af2b9-999c-4ed3-8457-9284026cde3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d56f640-03c5-4a79-a703-13b3b60ccfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae371a74-e4e1-45de-aea3-4a7bc8c46814",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ad3fe6-ed4d-459b-a439-cada4c285262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4193022d-88e3-4f7b-92af-0debdb38a498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644502d6-a962-4867-98c3-d499a493ccfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbc99d75-93cd-49c2-b8fe-44b170c95b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6984f14-6df6-4e06-977c-4def85a77e0c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10db5e94-9cc5-4ee1-9fd8-b5f4b2599a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ffd9cad-b02a-4d7b-bfeb-8e876242c079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3cf023-d9e0-4cc5-b27b-bfbd5e08f28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee56cdb3-0b7c-4305-9d8d-b6a586174d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edbd5a0-ab8f-450e-9e31-2d02d72f05d4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e19f96-d4e5-422a-a8b4-f60237e1b328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1854251-833d-43e6-a60e-5c09bae8d669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec1e605-54a8-4135-a6fa-2c927eaa3056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5c7fa73-3c3f-44fd-bf0f-e20dbb217dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ff3854-90f1-42e1-b9bf-958d7817b78f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057b008b-d36f-46b7-b458-2657472304a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cabe7c-1c3b-408f-bfd7-11f5c8e5beab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22aa8abf-5734-41b9-b333-6c316f8c72ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "987324f3-1c01-4f15-a101-148cd94706c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae556f6f-02a2-41c1-bac1-da6e1db321b2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cd8c17-0b64-4c0b-87ad-c2154ecfb376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18581a66-c3f7-472e-b084-642d07972f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403ad73b-fe6b-4089-a9c1-abe5172f4aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bb9285c-7c0c-4402-bd35-5f379de3532d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c91f052-e7b2-4547-9f8d-22e2d4327528",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1623a569-360d-4630-a314-296ca4d6b597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab7ca96-1531-43d9-924d-0d29f4caef05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dc0abb-7222-487a-a20c-ce14b45e9347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59a9193a-6b56-4a9e-8bdb-205b362dd05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79c8637-829b-45cb-b8c0-8c22b1dc8a47",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3465f95c-476a-42d1-8ae2-104829d9303b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ad3fe2-d07c-453c-90cd-c3dd25c87f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45631d7-c161-4997-b7de-493407c33d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c8eafa7-776a-4de3-84c5-e1e6cb5d8ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80ddcde-7239-4d38-8bcb-0dfee17939b3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4aa95f9-8c23-4c91-b788-428f9211a33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e23bceb-aada-46ff-9968-4a38f2ae9f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92d0175-59b1-41c4-b748-eae8110a12da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0517f615-e5f3-4785-a0cb-8cad79d1f48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87aa1e45-3443-44b7-ae7a-559c7925ea2b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a2c4b1-4908-4b81-b00f-10e529231909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa61a96-8940-4cb3-a01c-2257da388a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5376215-a9d3-4330-b4ea-23bbc1bb3719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2890dbe6-61f3-4ab2-ae81-819b18a3ea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd44790-d1c7-403c-aa5f-4b545771f4a4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fec0b76-6f99-4653-bc52-26e0e2e7d419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb12f2f-7393-451a-bfb1-83b63a746872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271df306-62a5-4ae3-933e-99fb93f4e59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "85542404-d163-41d0-a400-01d40b68fef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df2da68-f484-4b41-9deb-3ff669214f6d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8531e5b8-a668-4499-ab9a-90a6bd1c9002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b58170-43c9-4e39-92f4-c81a0e05d909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb25d10-b765-493d-b4d5-b20d93d8f133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8384475c-a099-4109-8fe7-31d36533a5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31e17e3-cc32-4970-8967-584244751c1f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fbd9e5-a3a2-4a4c-975d-505a90d75e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af7e099-4e71-4367-b524-e6caa4b34b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecfab83-8933-4e9d-a408-e10f19d0d27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc9c1c3-c2d9-478d-94bd-bff8dc3b562c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378927da-4e16-40e1-9fb6-701b85ee1bf2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad294c53-0f4f-4792-9071-fa5f6d0fe399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26959af-4202-4bd2-a80d-4daf11b0bcb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fbbf7f-0171-4d99-b0d2-8944d7aab614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "592dcc21-bb51-4d0a-8feb-c984564d8058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f788e4-1db3-4ff9-ae3f-91a6eae94d62",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24268435-a6e8-4cde-ad2f-2a22f96fb6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8c7b73-61c8-403e-a676-2e2f734547b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea33ed0d-b86e-450c-be30-8ba6e89e6476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d46072b-b5f3-4250-910f-0d80f22896fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c060e51b-f731-47a8-8432-9877df4c398e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ebaf14-3608-4b0f-805e-6e16c9612490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd45e0a5-4448-480c-9f1e-ffe224c4d09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9a1024-b060-469e-a9c4-29e8a1fa506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "263b6aa2-ef63-4160-a24e-3099c27febbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bd3de8-8651-43a3-8c68-cdd96a3ab162",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349c6823-e132-4cf6-bda9-19ec0fc116ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5808365d-f429-490c-92ba-03396b02198a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd74c4e-5c47-4fa3-850c-e866c9149dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc42cb9-0e28-4348-a25a-0f2c119caab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5e8ef0-9546-4d96-9b11-0b87fbaa721c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d8c04f-b4ef-4c2e-8ccd-4f0e900eb4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c4abbf-61fc-4997-a718-e69f648b2d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb217b1b-40e1-4cef-9017-c051a66d5e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c136ba-5208-47e3-af86-3e6fbcf9c671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce680eb1-0e92-4cd6-a496-3b8ff6e7d891",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0422dd2e-c948-466b-be56-9838e7786175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640c0903-9450-460a-93a2-4c570489d3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b2e6a4-0e59-4bbe-af8c-5417e05a55f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fae10ad-40c8-4b71-bb49-9bf35037843a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034597b1-62f4-4cf6-a701-7181e6996cb4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285a2095-9755-4d9d-bea2-ac9dffaca8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb0f063-e69b-4490-b22f-f87767ad76a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b64e420-bbda-4112-92ed-d1eee6f304a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec0fff1-c2c2-4af1-9cc0-2cd2ebd07127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05627d0e-a263-4254-9091-224d36cba8d8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff9dcc1-4b85-4dd1-903a-af9ba9ee3a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd9b1b9-fc26-46d3-a7a1-42a5d3357935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808c9349-3a5f-4bfa-847c-6d1cd08554fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6399d168-369c-4062-a062-9c633be3c09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81be684-762a-428f-a5c8-7f88917d88dd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98c4c38-4bdc-4b63-91f9-b70dc86f60e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bb95f1-1427-42e0-8aed-cbfd026a23f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16106e7e-cc71-4e7a-a394-d7a9bf33a5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f513f9-11d1-41eb-b7ab-018b823a22a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98816409-aff4-469b-9058-5aeb9b1a2dd1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df239683-fefc-4bb1-8c50-54eaea9afbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f44cb2-7737-42a5-80a1-eb761452947b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4db10b-5b52-4205-bcdf-03b469288953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7155b910-24e7-4753-be46-9d71277ea2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a189b85-950f-4550-96fa-0ba6b65de4ac",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17993aa3-e8e2-4548-a62a-28f8293f3080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d949f6e-7b02-4f14-8b37-c6e8c593ebe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd34cb7-d11d-4664-9cfc-62974aacdd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5550f93c-9e2e-4ed4-a656-63ea6aff0604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf306424-e0f9-45a1-a31b-7db45d42d39d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa308878-ea4c-4784-aa7b-fd54036109c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749af2b3-6d31-4856-b7d1-406611077bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb23120-f403-4aeb-942b-62b22a4bf5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c8dcc9-53e2-4d92-ab57-fb0bbe749b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f2daa0-1e6f-4b94-a390-95b7df35c43c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78d1f88-c50f-4cf8-ad49-07e4b20a828f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a190a00-5f92-4707-a7da-b123275f70c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2355fedb-cc1b-479f-a76c-4648d50756c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d94bcd1-fccf-4149-99d4-20892e4c65b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e9dd2b-2164-46e1-ab12-fa7bb18c8818",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d62104-58a0-4fa3-a9a4-f699d7071825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190f178f-67dd-4de3-b33e-d8a2f50dea5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0b5e45-f036-4e6b-af9e-f15eabedd931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2f2a72-71f2-4e94-a492-43c1672dbc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b04276-ce43-4b04-a01a-b8e8778a9869",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41108855-84ca-4f05-bfc0-7ab3edeb7cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd623228-910d-4529-b46e-54b027b4b1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b59af33-1d21-4067-aa7f-d300f02446e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f314fa47-94d8-4af6-90d0-fe8cb5c18ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f61405-1816-4cd2-ab7a-68ac5961ed54",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96bbb9f-eb6b-42b1-b5b5-907a884d16eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fb649f3-34c1-4a50-96ea-ea4b6a69dd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62167893-7a46-414c-9de4-2c1a486072ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea3c109-e5ff-40b3-a065-ca3420d422e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1e834f-0bf2-4c74-a738-ede3549844db",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f177fbd7-454b-4bcc-9636-37e1e2b21185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cdb9d7-e1f9-4413-81a4-1bd988e80807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd95390-b9a9-439f-b8e4-16916b8f93d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a957079-8421-4f72-9707-5d2d0690486d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b5a868-d597-4238-bf08-101a1010058f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0c3dcb-99bf-47bc-bdb8-6511781efefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c5b0d3-262b-4a65-a70d-03442c8d52ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c8a5dc-e5c1-4ac4-bd8d-de37b430d942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "abd992ff-b837-4789-baed-0eaa127d52df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43abea11-5de5-4528-85d7-2bfab2806bc4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093cceda-e311-45dc-853f-edce761a3272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebd1a2a-0f6d-4365-a6be-fc08499638c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6dc67d-1b90-468c-b658-2374699441e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c856fe-11b7-425f-8cc6-0d82b3cbef95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f24366-7e33-4dd5-8a23-e803e01b0109",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018c2cca-f113-44df-a4e8-7a2cb7a988de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2369658b-5bc7-453c-9a04-1421bab755e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5fd56e-fc40-4ce4-80ed-371c6dd32575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e53ffb17-be00-4c1f-bcfa-d5636688b7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab2f4af-8fc9-4695-801e-1a3021d4ff94",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d09eb6-77e2-4f72-a724-f2f345b46984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca52f1c7-7a4b-47ab-af07-49d9d0c7e24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e94b08-19e1-4d47-993d-d7f78b9435c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "67a4ec4e-561c-4785-aa86-6a73bdf2c75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36334280-f391-458d-a1e3-02c91908ca1f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52edbf63-3f77-498e-a7d9-c6056aad7e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e844c5d-b234-4b76-bdf8-2e0c1d193ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65618cf6-943c-4b2c-b819-3ac61e3257ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "46f5e8f8-abba-4c6c-99c7-f1bdc2af1793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814af29f-eb0a-46ab-a40f-ded4390952df",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badb20f3-6b2a-4702-ae5c-cd9dd9549e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da689fcc-96f3-4a3c-96c1-cf35944cc09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8056430d-cc9d-4681-96cb-442a2348b850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b94850-6500-49d1-ab5d-c28f2e621062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3418b8-f46d-4f5e-a141-bee64d0faca2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad53cb34-9443-46ca-a247-b8e0c7fbba34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0629ff57-2646-422d-a46c-4a1aa7555490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c54046b-4029-407f-b661-173c2823696e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c1006f-f4a9-444b-aa31-37a840074a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca885bc-77f8-4e6d-870c-03ad77bc1bde",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1e888d-4958-4cb0-90d3-58c76652360d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96d0580-3a23-4530-88a1-d633497beeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16b5af4-67dd-416c-b69d-888d4374b4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a765d23-30d2-47f3-b566-fef301d97a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c37c33-b481-4126-9383-4b02dd5e08b9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687a1ef0-b4a4-4251-b4be-0ffd45f23476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d33b0b-481d-413f-b092-08c82a4d0738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbcd1c2-f779-43b0-a48f-ec043bb727a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "648a9dcd-c82d-47ed-bc1e-108bb2bd85b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c4da49-6694-4586-9108-62368fe5c73c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba834e26-9f18-48a5-b3ea-88f93e58c75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c719ba2-f277-4728-888f-76dcda782ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0adca76-c72b-4077-ad47-3f7c3d8965ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4ed0fb-a4a7-43f6-ba10-4157db8e2f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29677eaf-0c2f-46cd-932b-fcfe0bf27f6d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c82b05-b2d3-48cd-8c81-e5793db76138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e66f58-d86c-4d58-95c5-5e46f57abf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41050b5d-80b3-475a-81a3-31143ed5e0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3f02c0-e8b9-45ec-b64d-ca6b568becd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175f7514-b155-4ddc-94e7-a5cb1b6e6098",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7918a8-b04e-4f2b-b367-1e202a2a2233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06fc060-d181-4130-98e8-62910e6c6e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9cff27-9e6a-44e0-93d3-5811bbef85da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54ecbb29-9be0-4066-a54a-ab3d6eae7bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98ed202-232a-4588-b9c7-f8ed7271d2c3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba0e6fd-8d18-49d8-90ab-b218aef61cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6e05c8-1462-41fe-8b90-2e143d69c343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a4c32f-172b-4708-923e-2d4c8bb6cde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b060b8-d062-4a4d-aa45-c6403bc41665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88fecc4-fa4e-43a1-aed8-a87f455aabb7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b723d26-fdc5-4495-a464-3125c3e6b0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a866c190-da3c-4dd2-a64e-b166666f14f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5440831-dea0-45ff-a7ea-e0c57dd7b9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b02a11-5b3f-4e52-9f3a-01c61cd0b17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bc66c7-df20-48e1-9dd0-22ac86b2a5e8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67c5b1e-cb78-460a-a494-6c687e9476aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43631cc-75cd-4f83-a93e-1d2b33d6a109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4103f5-be2d-4c15-806f-234c85e9e4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1f8909-b02d-4e5b-abe7-db7843f1f6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68220908-9bd1-498b-b9c8-32e3c27b614f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7e9de8-5434-4ad4-82dd-93347531d9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b601c30c-4411-46b3-bd4d-b2465b369929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bdd634-8f82-4798-bf97-81dcbeec3b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0eaa202-c6c1-43c0-af41-1eefbadb122b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb644a6-a62b-4650-b0de-d7c00a151df8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd1d798-71d5-4248-9e4f-761ad7df3f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7c6e29-67a1-4f2e-9f89-13039733bba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9883ae90-e974-408b-a6f2-e66e1e48a9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f89e9c7f-8950-41b4-b0b3-dbc4c27b22e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50eca81-9611-470a-b56d-c14d9bdb643c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79ba5cd-13e0-4dbe-83ed-68a2cb982e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f563ef-d952-481e-9532-9d81b8e3f50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dc98ae-2f66-4fc8-aa3a-67504fa067ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c09827c-b6d9-4eb2-babe-e607bd0285ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f12bc7-a58f-4f54-853b-d98cfb03c3b6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d5cafc-1a38-4cf4-ae75-c94437258934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cc3193-ad19-4008-89e5-2f6efaa6e6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be15f789-1b43-4e63-b090-d8293fab4a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e930cb18-ab43-4af2-989e-89ca1d8e681d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df004bd-23c9-4882-85ec-fe320ef95668",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408a2c39-9e35-4d9d-9454-4ce81ad04095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f7849c-e1cc-4d00-b335-40d49e8fd409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d0d040-1384-48b4-b9a9-fbb607831bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e38d6077-172f-47b7-bdb9-1d473bcfa75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388ef700-a7e9-4071-abb0-950baf26605b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ea6c37-0ccc-4cef-bec8-c9761e4bfa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36026df-dc2b-487d-9731-66d7f7131094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd721b3-c5d0-4ec4-a854-dabe0a20ff0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3996e7-05d4-4b52-b006-5ce2dc48b7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dc41a2-5e8d-40e6-888c-de9d4b4f3eac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c786668e-6648-49c7-93f7-76a0f0f11ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28acc745-2252-4021-86f9-7e2f58d19fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359ffaaa-e0c8-4032-815e-b1d2560d67bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5edc17a3-9440-411f-b8b6-d3fe1eed12fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b22c8dc-1c08-47ab-b0ea-adbca6a13444",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299ad678-f580-4660-8a26-3b580de371b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1896fca-8a54-4d3e-a9d5-8b42d98743de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65be16af-4ad2-4a77-ad6e-4d81afdc3f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed430143-cf00-47ba-97a9-dfd05393fc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa511421-07e6-4031-a4bc-6b007e075050",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3f193c-1d1d-4e34-8476-abe47c0f7460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf6d877-9c52-460e-967c-be5db61193ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23381fe-c516-4d23-b0bb-0650a97c7817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a84b38-a67a-4d4e-bf6b-ba1a414bd2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8998f955-c93a-4f33-9a2c-285d59402ba3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f513488-2b50-4fe1-8a39-b97eba532e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997baefb-22eb-4aa0-a9fa-90e0507338bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde6c477-f20f-4822-bd3d-13dc5579c709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce2664c-4b04-4f32-bae6-3ba537ed6b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9739a4-9913-460d-a78c-92c0b090bef9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b9cf17-4f97-44d4-b36d-b9154da3689f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009afdc1-7105-4536-971a-c0c0f799e78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6566fd9-b79c-47c0-b913-e1e60cf7b70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "128aad15-64ae-4895-ab32-9a36249ee0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd159cde-7b17-4ac9-bac9-102e992d3c4b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d8aeaa-5e14-4340-b127-634db11bf624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c79592-cfc2-468a-ad93-f6443f981e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91c3bfe-80c4-4da7-aaaf-21bd62a6351e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a60242-1166-4eee-8cbb-af7bbd7fcc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96515ddb-05d0-4c9f-b4c2-952b3caf1c64",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f08f355-6bb0-4394-ac85-fc79795fe45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fc853f-514d-42d4-9ad1-210aa69c7200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db19c8b-94ae-4232-9382-8cf47b1526fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c583c89b-1bfd-4723-8534-d75d98f95be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4554892d-0853-48f7-bdc1-b7c8b6813a86",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150af8de-001a-4d59-adc7-1d141c3a5ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c52c93-58b0-4cf1-835e-b10f332266eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418facfb-ff4e-42b2-adfb-08779f874850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "299fa46f-efa0-40c4-9ed3-a3e488bff959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66a155f-ec48-4a6f-bff0-6cdee405cb5c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372a575d-8a61-49d2-bff2-be52997fa498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e961e9e6-9579-45f3-bb71-d7f986cc6d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d93dfbb-04f6-4bdd-9b85-93638001aea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75cc0a6d-9caf-4db5-a619-f13d34dc7c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1043a6-5681-435e-9ccf-33a8f4a11963",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caafd7c5-9f02-4a3d-9561-ad90a364059e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951fb573-38af-4716-9ac0-e7a1300425ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c9a943-f00e-46e3-8f6c-d83c4148a484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5216376-a630-442d-8df5-58756f846737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ed61da-ea1f-4eca-a945-09514f2ec447",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989b2c4a-0f33-4594-afdc-d432c788eedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef9ddd9-1933-4d45-a31c-f7f547f88cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5c2d72-0b86-4f0f-98e0-8d337f468723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01723667-9303-491b-87ca-2f1c4244fa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246fcd84-cec1-4fcb-8a27-5bbfde2ff720",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff797f4-a0ea-4802-aba4-28a9d2558eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8f728b-ddbd-423b-9e2f-4d50592637c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8ebca2-91bf-4bea-93d5-0658752eeaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7328678f-72e0-48e2-a84d-c5eed5e15bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9076c2-aa25-4836-8626-2bcfddce257c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b61e1cb-89ff-4626-94a7-44fdc03ef997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9828ef6-cbc7-4a57-8c51-4f00a597dfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd287c06-6eaa-4aab-ac09-a3eb71e01433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70c0a446-2292-4aeb-a01d-6eaabc527ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9737c565-3fc2-44d0-99dc-289a6e2b615c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bf0c32-842d-4056-9c6b-f8e38aba2bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7b2867-3e40-4ac7-827d-2556bd302ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a4c805-7d20-4948-a384-c0d8f49240f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40050850-b3a5-48b8-b254-95114eb82727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631ef5d0-d768-4752-a563-38fc39dd8233",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51129ec2-ae85-484d-a710-1b0ab2241ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c2156a-2fbf-45ce-81b7-5c210a99d02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc58670b-1de9-4356-90c9-d7b4b531d37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2478d40d-872c-420c-8a27-93a6c3af2080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14241336-57bd-4676-8748-710fd9e78fb5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f990931-23e6-4f45-8508-31a0ce836a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf6b4a7-357b-47aa-b654-aa4e90dd6af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3b1e85-f463-46dc-aa2d-1875a7dec565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9be1967b-20ba-41b5-8181-ffbccb94160e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f89448-3382-42eb-a082-ae034bc15aef",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de95fd65-d9b9-4cf0-9d5b-085157dc98d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e42eec3-98e0-4dc2-86c2-d9e36ea94f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce22947-8b67-4f7f-ae5e-8eceb4edd2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efbda41e-ec88-46fe-b970-824c4496fca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146194b3-d447-4e23-a03c-f31b4af535be",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cfc477-ea39-4202-8877-8c8784b5e609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a0fd3c-1bca-4569-b94d-e307e3f71f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1522a0be-2ce8-4d4f-8a8e-25cd44f26398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e52360b4-3eac-4fb1-af0b-e69c7d124ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812766c7-8ee4-4cb4-bdd8-182fdaa52d15",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8aa991-d379-4a39-bad1-fc030d1888eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621ecec7-bb2a-4304-8fcc-6b373d123fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25d31dd-a2c8-4ef4-b34d-0b93f393a600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6de0afa5-ac40-4a47-9636-a777d2cb36cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9935bb2d-a14b-4322-93bf-29a30bf2ccdf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc0895d-bc97-4e63-bfa1-871a8391014f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743c4daa-f252-45bd-9299-2408a16c2330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3aec31-f3d1-4044-b987-d05d4a116cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "593d9fee-2401-4def-b681-9e210d3b055f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fc24ab-fa41-4a56-a270-02a9b55e3485",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04fd3e0-0f2b-4870-b19b-9a3f31f76e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cc262a-5ae8-4423-809c-56bfbf0ce184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67afe2b5-df8f-4672-8d39-31c2235adbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "453b8c20-2fa4-46c4-809e-31235b8ee10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1276dfe-5ce8-40df-92bd-d816baeead75",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03686fc-74b5-473a-92a5-c42002d97767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db938fd9-efc8-4ce7-8773-f31c01a5508e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d0c457-057e-445a-9467-4709fb2df0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02f05171-77b7-4262-afe3-40d1df88ad7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea23b500-e39d-4833-a3ad-a5849feeef48",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49b2d75-2c00-421c-ac2d-658b0c57385d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15abfb66-8f3b-4602-b61d-a8552c8cecad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291fcbd9-54a6-4893-ab68-c83e2cdb1c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "400a909a-1c0c-49e6-9924-88bc39409029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb787147-76c6-4eb6-8464-a83d3bf74eca",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0c5bcf-14f1-4eb7-8f6c-f3e060316d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc731f7-d301-41a4-b439-06a8ecf6b549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19cebd2-239b-4f56-ae46-463766a70770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd96827-3f36-41fa-bb19-86111d2a4d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4444b3b3-cf15-4684-b544-69295229a41b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c341eb5-78ab-424e-a0bd-66cb54d26923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92cc7c6-40c5-45bc-a71c-8c2f9ecddbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ff8028-82be-44ac-88f4-7ee59415a279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b600b2f3-842f-4c03-bb3a-7d77e2acd00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a9cbb2-888c-47e9-b578-dbf491957f58",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1875fbd6-5fed-4402-a5fd-b6b07850fe85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107eaa32-4037-4534-9000-8a6c561833aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546a763b-c0f1-44dc-b2ec-6ad139054924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1bd279-66d0-42af-8fc6-bf836cfc859d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a05f2a-6b43-4909-a373-8e4dafba5bd0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a50572b-1fe3-419f-b371-7436ebf29ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedecf25-d254-4d85-9e90-92ef7ae02cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f7d226-2a1a-4025-b313-a0844fd9c2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "361d3fd9-f689-44e0-929f-51042d6121d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe24ceab-d860-4454-bc18-dcda68fbd27a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f5bca8-003b-4529-b829-6128d8862f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9d4850-f606-46cb-8d2d-aca4f9573c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c698934-917d-4ba4-aa6d-38b505e9b1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62ab4ddc-71e6-4d97-8ed1-df5f26630858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e8e44b-5577-458d-8b29-6a3cbff8e5b1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adafe47-86cf-4dc0-bc4c-c881e86e34c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21988c9-4c46-42de-ad30-b0deec7b1f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5eaff44-1d05-4c11-8c7a-59f5cf3fca4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5749c5c1-b8f9-464f-89f7-f9d6f27a8a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9d74ce-43b6-47b1-81a4-b76dfa400771",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6adf5a2-387d-4f57-bc70-09b71ddf84a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1553e96c-2949-4234-9fa8-3680d94d67fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a95b37-18de-4fe8-801b-4aa9bef26720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "530bf737-92ac-4dae-a8ae-4724e2f116e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70684fcf-8807-42b9-9845-c184783c4dbc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76d27de-a5cd-408c-baf7-ddaa34c2e968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d320c1-15d4-4ad1-bfbe-06dd255abedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc72776-e804-44db-9e5b-317c36889ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "51eeedd1-5844-4f76-9179-487cb028ac24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2cfe74-e2bc-4c2b-a28b-f0dc03834363",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413b8d07-a8aa-41e1-b760-27779f947ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a7250f-baa1-48df-b110-ca8d41e4c392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa1a337-edb4-4f27-8242-51f31602e609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb25a65-2311-4583-8a1f-4f8eaddebe95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10232cfd-8359-412a-8bef-203a9c346450",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdd68b2-08b6-4de9-b2e0-b7cd6478acc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec38cd80-5077-41bd-87aa-ca4e2aa76305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c212e8-01dd-43b9-8318-80f2bbefe98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c96c30ca-8b58-4c24-bbb1-9cd7d711a8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8079487b-9097-4b37-81ae-e307c7ff2586",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856fad35-deca-4bc7-b833-eb1b08c10cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ba5b51ec-0565-4b70-806b-9501b80c81e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2db76aa-2d01-4536-b625-04668c6c2a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "16f2b73f-6a92-4ee3-becc-e6f091cab744"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89e01bd7-dda0-43f6-b731-25d84464b0a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfad4fc2-2b75-4b15-b548-325997fe6b6f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7f14ad-da48-4020-8e17-1009057f6205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4c65a04-2bfb-4cf0-bfca-84fc6c48f31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba64799-1ae0-44d2-a5bf-c9bcca29088b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb2bc875-d44c-43c3-978f-9ff8c4e6e781"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00c8db83-35f2-412b-b2d8-d05ee2a6b630",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af1e4a3f-b95b-45af-a2ce-a408c08473d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "971ecdb4-e6bd-4140-86ef-1842f2c0e6c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b51c17a7-d14e-468d-8205-364b7bb1f69c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f958d70-1ffd-402c-8050-07b8e9389077",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c9691d1-8a4d-4a2a-abf6-5ec6f2d4e078"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa31ee52-0037-4f2d-b471-e0410008f467",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf312446-ea8e-4432-97fc-648f78e84831"
                }
              }
            ]
          },
          {
            "id": "0a9096d4-0077-4985-b186-647f87f70cd1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3aa897aa-21f3-4cb7-8c7d-bf7c3f725e72",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "12379a19-3c71-4bb0-b5af-c496588084b2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55064f2-a612-4502-83df-b7a567ed12c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5cdb8cbc-611f-4fe3-9a5c-243cf2e882d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cecbac-2bd8-41c8-af09-9161f25196be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5014d7ed-ebc0-4673-9ee6-3d58c85933ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "82f3ca4a-a7da-4d93-8250-d4c8a36f907b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28fea871-2be0-4b73-8ca2-c71c7bf4065c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa1121dc-79d7-4e20-912b-a97040f20464"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d12d4803-2f08-47eb-a410-018282498fcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab2e754f-2d77-4d05-b1df-c4e124024fcf"
                    }
                  }
                ]
              },
              {
                "id": "af7703c4-bd25-411c-aae3-366feadc203a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21dcccac-4d7a-4a9f-a7db-62a95a1871c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1552ce4d-4755-4d9e-8d0d-ef60fa3d1ed7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d1f5722-5c80-4777-9f1d-7c54577ca5e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "30ca4986-73ab-4942-940b-08a6576d8ffa"
                    }
                  }
                ]
              },
              {
                "id": "c8d6ea68-a2b9-4857-9be4-78a76713520b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1da2d92-56d7-4cdf-b187-b43f03c265ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2a270d7-acca-4429-ac58-d141196c37d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d01a8b8-36cf-4066-bab7-210891c34a32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea3ff110-f979-4a34-9374-594682c8fb4b"
                    }
                  }
                ]
              },
              {
                "id": "92f2098a-2f93-4473-9949-0a67d0b91d03",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc883838-a9a1-4e94-8f23-904d34973702",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "224c6563-1986-4c03-97a9-4f2e01af6576"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25ab47a5-4fa2-490c-9441-17812f2853de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6086fb6f-e9ae-4fea-aa51-974a8e9b8798"
                    }
                  }
                ]
              },
              {
                "id": "7cb5b900-25cc-4dc3-ad74-33f458d000d8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f433a06a-09cf-4dd0-a015-c5e989be4f23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2fb66b6-acce-4a68-ae6f-8ef6ca0bb3fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6959121c-4e1b-4906-b6d2-c4f2cc3562b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b6ac8439-8dc1-475f-a735-b90be2edc926"
                    }
                  }
                ]
              },
              {
                "id": "77b5db8c-d606-4c2b-ae2f-542af1fe9db4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc10befd-b6ba-4258-9855-9756f12ffd39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff649e54-7272-4bd5-9320-9eaa5fd0e705"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d466072c-8201-48f2-8a61-9e8899032324",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "432e939b-8905-4192-92bd-60beeecb4fe4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46f4e1d2-e50c-4989-ae8d-63e9659c5848",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c09567cb-5d01-48c7-bd5a-2614ffb7db16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3150a7b-373a-4728-b96c-214a110b540d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b794a344-0573-474d-bcd7-4738d843569a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cd72e3f-778d-4e50-9fa9-27366a6ff413",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5e57d255-417f-48bc-ae39-f0e20bb202ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0e50c58-b66c-4e38-bdf4-c49eec80fded",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48e04705-bfe6-4820-acf2-224b001700d6"
            }
          }
        ]
      },
      {
        "id": "f567b5fb-1252-4375-b632-9351e7d99907",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a994807a-e3a7-454e-9f58-dcace208ceee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dac62bb6-cdf9-467d-8ba8-13a05f16a0b2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b8c18355-8ea7-4eb5-9fdb-766070532f05",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b371a3-148e-40a6-a67e-a4d493a7aeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f641b1a2-a3d2-4c03-86d7-46eeceb14f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6823626a-d878-42ad-967e-606e7034597c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d85334d0-3875-4f39-a061-5e3f9e2faca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3354cc9-648b-4286-be3d-a5eca1876a7f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d389035-d9de-46f9-a3c0-5f4c7a4734ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90b4e1d-8072-4d5f-8972-99794f211bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9d6faa-59aa-4f09-ae32-00a13a9d51c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4c599f-8412-43b5-9385-5ceb396cdb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37a8f6a-3746-4bca-815a-f18901035813",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526a5019-4bd9-4161-91f9-9d1c30eda436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c37e55-b962-429e-8a9d-156205a444e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e29278-43ca-4242-a558-88c97851ac9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b95b0165-9199-4ed7-8594-59ae5c0282b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb832ec7-98e4-4174-b764-0ca947eb8d87",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b66601-2776-40dd-8566-4ed49ee2e545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464607b9-3084-4713-bd47-789190a40de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f350c33-be4f-4f6f-892f-39046fc3e1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef382db-2f7d-4471-a4d6-9c57c21aaf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd9d6c0-1160-4f51-84fb-c9f06fb69a77",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0123b072-74b3-4ce5-924b-10af1dbfc892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e50954b-bc4a-47a8-b28a-25604d37756f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ca12fb-753e-4e2b-af7c-645d265f0d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb27eb47-492a-45d2-8b49-743ace3f674a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72c9b6e-0c23-46c6-8790-39bfd75101b0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1111d5a0-cd5f-4f2d-9b5a-e32b7c2790ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa32dd0c-23bd-4540-8f65-0eff7efdcb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed74185f-cf8f-44fd-b9d8-85a87444477b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf72197-438a-4512-a23f-b3c95243f98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd3f7d4-1817-403c-8cd2-8668ca160a3c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be70ba6-52c0-4f55-8ac0-78c6eb1d35f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62aa8eb9-f6b0-456e-92d4-70edbb604742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f9478d-1c01-4779-a277-ffded9c9f76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "364ee314-1934-4e83-b3c3-2b3cea42ed6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50138768-df84-4903-8699-66d73d9e03e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c56d99-4f7b-4c70-abde-7882c9e4fdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7400694-081e-49a6-af38-7972d7dfbb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622b26a0-ac7e-4b1f-9da5-3848e3c101f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96e38d27-ca53-4ea3-8939-3772100b8ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1d1ed1-e5c9-4c7e-8501-332aba6553e8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eece10b9-a62e-453e-9f64-2be2cc4c1c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74822975-07e1-442a-88e4-8190262db31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9a6b22-fad3-4594-90a4-6af8c5ce1fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a23369-d47e-4519-9dae-b12b281cc75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc063ae-a9f8-45f3-af49-3c80af9a7272",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84780831-df1d-4411-8b41-4a7a097cdea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb036f0d-ab93-47f6-b729-60c154405be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55425c8f-5388-49b0-9158-8a21ed077736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92e3ab9f-1e50-4480-957f-f03b6a342a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa7c0bb-672e-4209-ae5f-ae23428d76d3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4af691a-97e2-47e9-9e33-bc9cd98d666f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579653a8-a15c-4752-8111-bb2721fa2576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1279fe-8e0a-46b4-8e1b-6deb2a03c3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d43abdb3-1620-495e-b927-6610617a145a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8676d49-b6cb-4f9a-8475-c8ed3a93f9f2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb66683c-31b9-409a-8c75-0a513f356691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842a9c5e-87f8-4710-89a5-4e50453ab32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b15e133-9d00-492b-a4dd-2edbe1270af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cd8238-ff25-4da9-b094-fd08d8f0f25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd15f51-e8ec-4444-abfa-7a30fcbcfff9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2ac156-d57a-48ae-a75d-80b29858d2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a764ed-a57d-4974-a67d-cd06d0818c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8b8e5a-05b7-43f4-930f-e847cfe66933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e7efb5-9305-4a3f-97c5-c3bf68900f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04809c20-953a-4864-adde-a107573da219",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b85f9f9-93c5-4613-88f4-8eb56f1ebecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523adb9f-911a-4ee1-a3cf-000e67cd24c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1127a32-ffcf-4948-b22d-f5640e765fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f30a3333-394c-4f1c-93fd-6fdc72d6cca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8285cf17-6a9e-4429-8fb9-789ef0584c83",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fea097-276c-41e1-ac4b-3495f7b68673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b19191-6c44-4962-a6d0-8e706acc76e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47268e45-43ca-41fb-8102-8f80503870af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4209c4-1bf1-4f1e-9a95-950c0f3a0a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c5c8d8-9bd5-4969-8779-b08221db7b27",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddec0a31-7178-40ab-8f40-a0e2d746427f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c78e2b-9236-4f09-ad25-f4783079102b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ec069b-1bf6-48b1-88da-7738a47daa6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c36d1a1b-83be-4441-964b-d9c7a45b7793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea31a16-a37e-402a-b5a4-e7672fbf1f05",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db7b750-b351-4ed4-9d6e-c513a6969bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ecbb7f-406e-4586-867a-7055541fa1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea74ea5f-339a-4feb-82cf-47fdf3f6fa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "37e7c6ed-c2af-4b0d-8474-bfa93ada3565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c430e693-f45d-411c-9fcb-501232dc198e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a272e51-65ab-42be-87fc-c439789b0b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b848f593-babe-4653-b2c3-923dc23ee40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e7eaa1-a60a-437c-95bb-46f09623b1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a417d75-9d24-4bdb-b3f4-39ba859ab6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1499c007-128b-4e64-8317-37f08843a85c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5b51a3-106a-4bce-b175-f469c4c47b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77bf4fd0-593f-4fc6-ad95-91f0cbb44fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240f6fee-687b-487c-87b6-240f50d55045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b856767-43c0-47d5-8d5f-dc2b55a01b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d26f88-703a-422c-83b5-152ae26b93b4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c2bd54-1783-42de-8b29-c298c7a24175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d51a4b5-3071-4754-b3e8-61cd2f036864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35433981-fd9a-44b0-b06d-c07d784e5064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "403260c4-c4d4-43d6-9910-032b131490fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df3bf72-51d5-4b1b-81f6-4c9e53b32326",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaa9f9d-c91d-457a-9d96-297919386bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49c5f6e-4269-4fb2-b5c3-c42897bb840d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf2e460-77db-45df-8e29-3f3a558e1e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee473330-4f64-45b3-b246-dfce04f8fdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40c3489-0146-467e-a3f2-2e182b4ca519",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcab0ae-ce5d-46a5-8ad4-063ec6931f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e75dae-a550-4eb1-9369-389a571f963f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56b58c8-255f-4270-ae6e-5196bc41e179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e22461-83a1-4c33-9eb6-35adb197773b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682c1b61-7f84-403c-9fba-20c449fdda67",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0858075-2d7d-4f4a-804c-5c31a4b04979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03d28c9-b5fe-4994-acd3-7a9363e711b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e696d997-67ff-440f-adb5-9a38da4d9a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6d2210-fac0-4d38-925b-f4b2cf5a2cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b668907-34f1-4ab2-be06-3431ae4dad36",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef61b808-8f77-4465-8a5a-8390f3d8fb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4dc139c-04bf-4474-9210-7b398752f271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa080ff9-99c6-43e3-b97f-e7d2c5508779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "487ce090-d3fa-460d-97cd-d19bab226bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08296c28-55bb-4372-812c-d8f6b584db44",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c85cce0-6636-45a6-a9a3-731783851204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e1d8f2-26d0-46bf-830d-859c4c5b4858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ce54a4-b4ae-4361-89a8-d5a335070695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63305bb8-a265-43ed-b6b8-2dc804e8cd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ef2185-6e63-48d8-95f2-fca2156e10da",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957b5576-7201-4a6a-b0e4-08150ca87036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e86897d-ef3b-454d-b6f2-a0c912da672b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3dfd81-83a0-4376-9613-3ec397d38ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df8692a8-d645-4a08-862a-df6af486bc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d94e889-2742-4149-9753-5adc1076b3d9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb13612-98de-493c-bdf9-3f0a9836cc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f96a601-7a2d-4fe0-8c8a-57a826c841ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d085d4-efdc-41bc-8bd8-465bb4684ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c942ca-6dae-4ca7-9a95-4994859bb3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407e77ac-1c6a-48ec-bffa-b85790e5dfa2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800842c0-2559-4aec-886f-cff5efb1ee45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb30b9b-d27e-4832-a0a1-16cc9a74123a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e75ae15-ea0a-4860-a45a-3837d6286f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff375ce0-4a1b-480c-b86b-90498b272200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2832e918-823d-4383-b027-4c8345b5b811",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3248fcf4-fe84-4ed1-a388-bfe5a72d5d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2190f1-cba0-4cdb-b585-17105e669ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bce0ec-c981-4225-9815-461b06cc381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c320d7-f867-49fe-bf70-9745a36fcbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a8f5e8-a53c-44dc-912a-d1a7b98d8f61",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8495bb-7d6b-44a6-a5ca-9630e5b35e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cac25bd-4a1a-47fe-9186-6e1a9479db2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c027db-9cc6-466a-9174-2ac8d1410b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a1599a-0e38-4c41-b04d-ec203208bc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10715a54-3f96-4162-98a4-00801afc776c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6fffd8-d384-4c64-a6db-71f7feed85fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3aabc91-e788-40e3-8680-eceb408e61f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1436cd2b-27c1-49b9-bee2-fb533df9af47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba05b05d-3979-4d5e-b27a-41ba54bbf33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba19c71-cd34-4e19-b5a8-6a47d1b0d8d7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2380df31-7d5b-4724-a998-21dce3ef6d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410b342a-9a17-40f0-969e-bca8a3449330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529dc92c-8332-49dd-af68-3c7c325e5140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e640c064-2760-4e4d-a25f-e9ab72762d95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96f94f8e-9ec6-44d0-a20a-dfdc1d7ffd45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebbb4380-b13e-422c-9663-3a8d858b216a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774f173a-4c41-4e7b-bed0-8391467ddac7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0a2ef6-12ec-4404-a61d-4f6fd2a4a2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae969fa-5a3d-45a2-bb05-cfda42c2b59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2154984c-b67d-4b41-8845-f3a82f0079dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6477de60-c9f2-4359-9641-1ed4185ecef3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a7c8174-4595-4293-90b1-ead795486e64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eaa8f8c6-a1ea-4693-93fc-b20bc967cb23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad3baa4f-0315-4810-9c5c-3220affb3778"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b2da77e-5134-40ba-9e16-c6bf8ea900fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "25d8a25b-aeb7-4b5b-bf83-e2a1c20831ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7981bc5b-3d7b-4106-86ef-a48336d1a626",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f85a52aa-167e-497d-9554-76e54070bc67"
            }
          }
        ]
      },
      {
        "id": "4e5fc2e1-3a99-41df-af24-087560874771",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b620afe0-84ae-420b-b374-4c92f93bfd56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef8eda28-3b73-4725-a457-691bcc16af17",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "efd9f1c3-f593-446c-83d7-9c1e7ddf55ae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04180db2-ef01-4467-aeaf-e5d892b36cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6fde0c-b0bc-464a-8628-72549cb9618f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26b8660-739b-4153-9504-f5644283382c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3115fd4-9fce-42a6-9be5-c7b2f52f5577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b758a4f8-3d20-4c88-b459-afa5555dcb2d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042939cc-2e52-4327-b91c-e92462155eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7489551-16e5-48c2-adbb-a2114b756209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5319b3a4-94a5-4209-a59c-5b143e4e9610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50787af8-6163-4e3e-a5d1-f98442091cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0930a788-955b-4325-96e1-714c96195bd4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088ca810-2ba7-4e1e-b136-fc0e6b9aac59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bcbeeb-6481-4073-bb47-1b7b65e5c59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738764eb-ade3-4a15-b54a-51149ccdbfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a974e5-e55a-4611-a5d0-7c56e39dd659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa24d42-39e4-49b9-9b01-b7690e392cb7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cc7f48-aab9-4821-9945-a417fb438b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceda1d18-fb4a-46fb-a493-9e5c87e8cd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dffc95-b692-42a5-8240-59ac96a6142e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bef23b-6365-40cc-8ae7-81fa107c35eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10db18b0-8c2b-4b90-a43e-798dcc15e2a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2f652e-83f2-46c3-bd5d-c8008dc84fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07692d2-843f-4a36-9693-53cb4a2a35e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f91d43e-1cc2-4f13-93ee-dc27bd75adc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb1f062-a3b9-4d8c-904b-88c7d0a3f5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b71ea0-53ad-4beb-ae8b-42e7b750e75d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1531aa-db56-4b93-9e51-a43b3974ffa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e34d77-7ad5-4459-9d7a-dc26307d9dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9816d1c-3b1f-455c-bbd2-337a57f7e08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52c7537b-ef31-44d8-9451-47f2a15a603b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdecb3e5-289d-48e4-b7a5-0f1f318cdd9e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b016d5-ba9b-4a1e-b7ab-5800ccd9d48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e180c9b-1497-4691-9345-6b239ffa8b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667c9bd2-299b-4f23-bdff-f16f04c9eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cde00f-602e-475d-8af7-126f1c2cd6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d69251f-fafa-4ede-9afd-08a82331a3ff",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0643a1-86a6-4f97-bc24-283bed545ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f130bb-ba18-4aff-9ea4-3f935ee4fca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6e05ee-6aa6-478d-9659-24bd5bee3c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f15d040-214e-47fd-8c10-5f68597ae8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b03684-39b8-4fac-a0da-0a67f0a34f53",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38be3935-f3e6-4772-99c5-eeb79a40004f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ae10c9-77eb-4f10-b7ff-7d738f0dfcf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97072341-4089-4e69-9c4d-6307e01e0b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd225bd-8850-4bf5-9d84-636609a4c9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597425a5-6a8d-4a6f-943f-0ddb15caf170",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef476ae-3c70-40f8-b746-990c513db9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2038a0bd-e271-476c-a5ed-a4da0679f5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ffed2f-c4c4-4bfe-8ed9-53f98fa1f6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40a6da2a-44ba-4d04-a070-2744708efb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37099147-619b-4628-a116-8570aa5c5370",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed7676b-1567-4f8c-ae54-954003fe4963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0e79aa-0e9a-4c81-bb49-0acb555173a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e69887f-083a-47de-a2e4-d65c355c9bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "46963d24-8732-4bbe-a4a1-f08bef7c011b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555e7bac-e39f-41c1-a6ce-29ed62ba8c63",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4ec6d1-3b86-4ded-89e4-bca0e65564f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70eb8d2-955a-4d41-8202-3244a63c30b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ff53b1-48ef-4825-a276-357beef81efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60b2ca7e-0b13-4efb-bc52-b379af1005ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614f8ca5-f6e4-47d7-9d44-41c58e824661",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08d45fe-fcb0-46a0-b130-d7cf0c945449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa9a2fd-1ba7-4491-829f-a575d9897002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599e3772-1b8c-44a0-bac7-f7adec3947c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1bf828-7314-4760-9668-cf0fb9731beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18fbf71-a430-41ce-a2ed-357a3c551f54",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7ec9bf-05d4-4a69-82d9-3c592d021662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9595df7-3ff2-410d-8904-56103be982c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af84f41-b177-4036-8dbb-6d5a9fd2b594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccc0c04-5a2f-45dc-be36-1282145b9820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a920379-0f32-402d-9942-1aed51f937a7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471b2ed6-5c06-49cb-b861-6c8d31251d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2755d90-4753-475a-85d2-53ab2f257142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a631882-eacb-4a33-8325-274c06b4fb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6036e71-7c6b-42d2-b8d3-90962426bfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49b986a-e8c1-408c-896a-b955218b2512",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c7b36d-b352-4289-8cee-c0e2b2caee82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c77d5c6-5051-4e2d-ab41-bfa17e59f244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09e5efd-bcb2-494c-9305-31e47b5739ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "036cc5b4-357d-4580-9caf-5cc748a8eb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ac91ea-577b-4b1b-8c24-277c6db63d66",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47437c58-6a9b-4036-97d2-0ae2c676354b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc6fae0-feb6-4e20-8f4c-2a983b0f1197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a88ec1f-b6e5-44d0-916f-0150623cc65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0518d42f-87f6-468e-b0f7-c261052353ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fdf3fe-af11-4469-b60b-75b2fc57c18c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ae6fdd-f475-47cc-94c4-dd59d4960ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f444cc3a-9773-4c0d-9e1f-0d2ad9b988a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6f46d6-f20f-43f3-bc4e-7557914fbc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b427995-5f3c-405c-98a3-595929aae043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f474d902-2e1c-46bc-bc40-b4707107ebb7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77e777f-2e17-4ab3-861e-ad8df9a8f897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f872a9-8a28-41ac-8260-54a911310b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57247778-9058-4768-b3ca-a9d9d3edd799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b118420-e8e7-44bb-a584-9c8d81026e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a64a726-5e91-4265-8a05-c24b9e38de40",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b78d6b-e465-4d0d-8042-82d394f07120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bcbc14-fb9d-49b1-9502-0d6082eb11f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb38486-f17d-49cc-abe8-48ae9a119b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f1c28c-2047-42c3-843c-7f922f0f874a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82e56d7-d551-4a03-91e3-34b424ecd3e3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2a70fb-80b4-4964-b7c6-5876e4f426ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b02d4c-3f06-46e7-8849-4bf03957e4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de4ce32-ec32-483f-8c1b-70ae74b33c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab426b0c-d88f-4a6d-a5a3-9b4b682054c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab164645-eb03-4e26-9fb0-38bbd18d8d32",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c425d0-c3d9-4f95-9fb8-8a3f4b1beed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577c316c-51be-44e6-961a-217228ca0750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f373d2-cc17-41bf-a209-d5c25308d6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e61d1ee3-8735-407a-af35-6c10f0a40faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3493c652-aac1-4fd1-a011-923b2aae81b5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92a8df0-24b3-4582-a603-40faa0ebf1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab84e146-6bd8-4b40-b657-18e20012871a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ad92e8-dc78-4f85-8de1-8f9a66605144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f9ba28-992f-4b9e-94bc-5936d13fdff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d045935-7021-4ef1-8477-f6e11c1de8fa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17588ea7-9458-404a-a9fd-12a0f915508c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c6e240-c57b-4ac9-be70-c239be9ea26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e6163e-1ec1-46de-a07e-6d7059de6992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb4809b-3905-494f-b839-9dd46f9fe4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e67850-858a-441a-ae5f-41da5633c984",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374801fd-4975-4518-9ac4-cdfa9679db6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7a41c0-7b7c-4ba0-b677-d331dd5f343c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b709f2-c707-471c-bd52-c1ef0b6ad379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc4bbf4-f6f0-4645-9284-7885d583fee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12988713-763f-4f1a-8b4e-8b14c06b88c7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ffac88-207c-445e-b2eb-7e19537e0e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce739d1-9f96-4884-aa87-0ebd5226b8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4fb21a-3960-42c1-868e-6873fd7fdfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9df2372-9215-4c78-91a8-ba5f72d3d4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8615a5-17e7-4c9e-bfef-fafe6539c1f5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b4aa11-5680-49f4-b426-721242326607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebcee30-2b2e-4909-8262-718074f82626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968e0269-0855-4c95-aa48-a9b49cf4cee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54ad7c8b-1d5f-4393-85d5-34660cb9def5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4f0a95-01cd-433b-ba7e-80e278e76727",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebb26ca-5561-4616-868b-ea75ff6dd6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cca49f8-29d1-4af9-a87b-40a0be126776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c52a4c2-d840-4ed1-8993-0a69c0389190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c858062b-be16-410f-9c5b-71e4181d9ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8697d1ff-3065-4cc7-9efe-9c1177bcf50e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad05c081-9ab5-4fed-b40f-af05e1b080ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95efc59-54d3-49af-9bde-6ea6ab54ad43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28483a2-2994-443e-a783-ed2980886daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "338f001f-05dd-490c-b8e3-3c764aa24b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fd796c-e0c8-4dd7-99cb-cab6bccb6e0f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e215a9-fa37-4ba1-a306-4833b6738a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0598b12f-597b-488b-bb1e-94c3c8b7a49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe73f8b-92da-4069-a5d6-a1354332de99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b91bd7d1-5892-44c7-afc9-7da59db7521d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cbe922-8df4-4067-b928-7746d7636c41",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ccd57c-8760-459d-9244-ed3db65c1f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bde288b-97d2-4837-bdb5-418d7e469329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a10c0cf-1f5d-44b8-9afe-a4598cbc9e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffca826-5390-479b-96ce-2d0b905ce5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7502d7-d9b8-4c5e-b1e2-dce0842a5669",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6b0625-53e2-4282-bf7b-4339c3e1763f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d19dac2-7561-49c5-87a0-1d83d3423c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e900c401-2047-45df-ba31-ba63c8ce16e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8451c344-d7ec-4f42-8da2-08d58f250193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414a806e-9c85-4d0c-953f-822ac0594e66",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31e5dda-0603-4f6e-a7bd-903c8790d159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e4fba8-83a5-412c-a324-7c1db154f6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1448da21-6d67-48b4-a458-cf011e74d5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "120a5109-63e8-430f-a583-8c9975c603fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86f7767-732a-4fac-9aa7-fa2f94259f1e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e991c0ad-d587-436b-8a6a-4ec1ae3c970c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6ea7ef-c71d-4f65-8a64-528553834997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d06283a-64d3-4ba9-9900-feac696fb9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0c8955-2c9e-4b21-bb88-8c71bfe3132e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf04110-7e11-4b48-91bb-530eb86b8301",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6040d4-664e-4e3a-8b2a-ff79f9a889c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a74fce-06b7-4da4-bb86-c3ac7b755835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b1582f-10bf-43a3-bf7d-4c1e94031eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4af92f-8d2d-45cf-9424-1e76f13b14e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4f3fa2-9d87-4abf-be37-5131f7f77f14",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b571a135-d720-4752-b1a8-8427d239a507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a04fd8-e8bf-4b0f-883d-d2c7d2ad3a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68ac621-bbf0-4dd1-a557-eb3f397d98c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37c67c8a-f6d3-4716-932e-48a60ba6706d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97150d10-f669-497c-8e84-a8ce65ac4e37",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92c6518-f1dc-44e4-bcc8-6d09af94ab62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67632c28-30c0-4a39-9a41-8009d450bdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011ba47c-195c-486c-b279-6c51847bd7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4093224a-233c-4eee-a0a3-82ce50da29ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "787faeb4-f3c8-4d0f-8a00-897e48893f06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e79b26f-86bd-41b7-b715-0bfad3c87cf8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142f29c4-be53-4749-a219-2b44ddc493db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d4abf9-cb7d-40b4-94b7-cfb233d01d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8943882-c306-4f69-9e29-58ef0a15f4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3aa6431-0dd4-41e5-bb9a-8e4ad740355f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb0b5630-492c-4c95-a0b8-ff38075e3c48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dee8d59-25e0-4619-8970-1d8b9d56b4b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e16a0cc-60bd-4cea-a647-12d16ba132e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0f3c716-da9f-4f3e-a76a-82ec51f570e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b558f4f6-1f3e-4953-8398-9fca00c66c48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b9cc483c-647d-4df2-b969-469329d8d833"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "203b35b7-8ac9-4a45-a134-bd64365f4452",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0485f225-f886-4379-9101-20d44676ebe5"
            }
          }
        ]
      },
      {
        "id": "02353da3-5e75-4eea-b536-e6adc1fc610e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "57402dd6-370a-41bf-a12a-e0d40621eb0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1be32f5-f10e-4ae6-af0d-bedceaf23543",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc0f00dc-e0b3-43de-bc5f-4b3c183f7aa1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45042636-a8d5-4601-bc88-fad9e3f06eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b0ff9f-af91-429e-8402-808d2c1960eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063c7366-07f1-4f12-94d8-3febf0b59996",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79534701-1866-4ce2-9cbb-ed1c0d4d789a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640d604b-9ffb-4620-a964-a94f53baa5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d648e8-0ce5-4c42-ab04-c12eb72b33f9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1ba77f-ec75-4a58-88ff-8b42fee5b9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf19d42-ecd0-4ee1-b922-26abe7a7f93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36bc4d4-1d7d-4dca-b379-dc75ee273d3e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0052eafd-2bee-4c80-b569-dc10f355a90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f2a8eb-4c3e-4edd-beae-4f35d463ffeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e030c21d-f9e7-4686-af9f-3a6177c02250",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b9ce30-84d5-4159-a972-9aa1e95fb4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ce8d40-fd65-4a74-b610-36d726d1d1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bb027b-9076-4a6d-8d25-36566a49bc85",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a5a23b-c702-43dd-840b-3bfe96e9133a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad648842-2932-4a54-935c-4deb07ad1c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d94bad7-5479-42a9-ad7a-3f7898533585",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2c5c66-2f9f-4791-8b37-50fc86801419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944aadc8-8fed-42e4-a9ca-61c99497b382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85a7158-6683-4af5-83c4-4c8e0c0fcd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acb4cc8-2505-4e52-9111-542d33ec6627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6776d7-59e4-41a3-8ffe-d4e2e4bdc163",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf82a6a4-b091-4309-bca0-69e0d308cbcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7feeaef1-f9c2-4b78-b7ae-e81e49144deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f953fd-c29f-456c-824f-8a236102b2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5de990-d13d-4856-8388-dc8f11ae3609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fb1976-916c-4c41-8bd8-9bca68995f5f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13edf21-e1b9-42c8-aea3-cc31a0d42936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3245613-0c42-4065-8e3f-13ef9cb536ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db933ab5-bfbc-428e-8a6b-cab3e5997024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fe0048-3754-4316-812e-98caf3c1aa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5115ffff-313a-48da-9a9c-261f7801772c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fddeebe-9164-4d9b-9eda-a9ca51ae88e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09c730eb-fd35-4ce5-8b9a-3bac29ad3198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0214614-545b-4e42-8681-6bf189b20f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10342e55-1610-4b19-b97e-a6e7a737f256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a7651d-2737-4a5b-8f5b-2aff41370dcb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55e446b-a893-4bac-9df7-3d652604748e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c210e2-2b43-4f7a-a56c-8b6c1ed3825f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c9cf29-24e0-49b9-871a-c175a472409a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1512d642-c80f-4951-8a6f-7bbf6b399fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356003b5-0a41-4508-950d-c614a597fc93",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c779ea-fcea-4fcd-a0fd-b8b9707f9ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef84c28a-c4cc-48bd-8c44-cbd16e9359e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774aba7e-68b9-472c-95ac-ba1fc98c90f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ece4ab4-419e-4b3a-9003-b2de3ad00dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2240aeb1-310c-454d-9bf4-d0dcaf724ccb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751d1ea8-86ea-4fb1-be68-f83c1456c78e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d75bfb22-4472-4c8a-a9d3-c1dfdccb45bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedcb126-d385-4673-a3f3-3af4184c9faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca95622-7150-45fe-89ea-94eca5b6bc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b812e3-8fa5-496d-986c-789ba39c741e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47980f9-27bd-46a2-aee9-4606cf1c0135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d6fdc2-020c-4a7c-95c9-1baca7d5eb5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f99262-07b5-42c6-8bbf-ed0597961f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7aa499-4bf1-4963-a10a-f2761f455916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53c4a67-7c30-488d-9ab2-839540442399",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9ffb70-2a39-495b-9c0d-e9b7fc82a96a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9dffd5e-d61c-405e-a97d-4407613eb4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ed7198-4f56-499d-9b96-49a3456523a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7710334d-ecb8-4e29-a288-3fc14509ee17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910db8bc-a9ca-4ff9-9832-54f087e73dab",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68c90a8-2ae5-46de-a270-2942d42cb66c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91c49b24-b345-45cb-861a-3f0b065b8a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "731632d8-8282-40c0-85d0-397c1cb9c5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59ce32d-3d9f-421c-8365-bd1b61a57a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060312fd-b26d-4418-8db3-e4ffeaee30a6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6636fc-aa8a-4a4f-aa60-f0cbd7446ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319b5ffc-e9a6-4c2e-8424-5c32bb199a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78bca7b-4500-4d20-9ee3-41d8ebea2c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d92f638-b72c-4a47-97f5-bd03ff037b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc9bbb1-8900-4c0a-a0ac-f043e1170a8f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e9978e-ad0b-4265-a6a6-b3db94615fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe1f64e-e690-4be3-ab02-6b62bfbc2f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940393a0-c543-4816-8023-93fffd624793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4696be-87d9-4aea-abb9-fd6bef8dfc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c77b867-4db2-44bd-ab19-76014a670487",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6be314-b8d8-440f-92c7-d2543cfea06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fdcbf0-f431-48fb-953a-3dfcf2996e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c39763-2a82-42ba-bf24-13eb8db7e8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ccd088-74cb-46f6-85c4-1609112bac26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f293b50-fb9c-4722-9e0d-86c9c8403b22",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d674cc5e-c89c-4a0a-ad1d-4720a6c2684f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db30ec43-ea48-491a-b55e-7d1fd2f0360a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61826850-c5e8-4df8-9b63-5a1ed58e0408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6e8a93-b392-4d60-86de-82cc665c2351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d400aad-5fcc-4d6c-b00b-8e4124505f7f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edf6802-50b6-41e5-af6d-c38ab330da79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9e3824-1447-4a4a-b4b3-c5d2ccffe3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16f26e4-fc8a-4853-80fa-fbcafe9734c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fffbd1-d80a-45f1-812e-d860fb0ce58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8c7c6b-9bc1-475a-959c-79a2f11abb35",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594a11a0-6f6a-4bd5-a6bd-72e84d1887c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6552b74a-3efb-413a-b4a5-3da041e5e273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0938c18f-f2b8-4bba-8069-c3e144fac613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5001d63-570a-40d6-b857-fb6481f8dd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03dcae3-0e65-4f03-af1f-63aa389493c9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c127ce58-3c5f-443e-a4bd-250bd51853ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d67504-dd56-4710-a3c7-525d5912f2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb81505-47cd-4cdd-b2f8-dcf8dab1d2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0ac495-d1a3-4caf-b169-29586c022560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1aa52c6-b864-49e0-afc4-eeca9ccfad5c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a7ce4e-bdd9-46f7-a35c-b1274e526819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e300a983-1bea-4d30-9dde-ea5723286977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70678230-1cdb-4b6d-8ce9-88e12f7af13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3af2b3-5b8d-4051-b00d-a762dd56eb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814a705c-4742-4600-880b-af97eb591840",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9abebf6-7780-49a3-ae30-38b9b252f9d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d7eb2f-784e-4a99-a27a-c0c0e11bb190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfddcc4-ab8a-489e-afa5-8c443dda9be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c72f2ad-cc7c-4f2f-a0cd-bfc54237cf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b629605d-740c-4e93-858e-3c54fa685eb4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278ab2f8-e267-45b9-a4bb-a962c571b784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b96d153b-7f0c-4592-82b7-c5329c2e3e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e33b66-e4bb-4d92-9bcb-52db6658d34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de310f2b-6f8d-441b-82d1-25f2f77f4982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4b088f-219e-406a-8f4a-9ee17299eb8f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5141e3-c03f-4b92-9214-3f061ada4b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bc5aace-9418-4cb5-90e1-a6c42fdc57e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f957e3bb-cb08-4a02-ba25-4c97af5bb028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490e2475-5422-43b3-9cb7-9e981dd6d2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ca0446-dd74-4bda-a761-82fe38ea66b5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1806c7-e240-453f-b5d6-15a0e025e748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210fb13f-5082-4777-8df5-dbfb039d1fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87653142-4656-47e4-9f8f-3a6534193fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aeefc2c-69af-4a24-aad3-6b08237400b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294ef9d6-2a57-4e35-a26f-dc81872e85ea",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd37529-a6fd-4540-b640-0cd67bfc09f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6093a690-4fbe-49d0-b748-6303303f9859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ece3fd0-7727-48dd-92d0-7b2ced7a0ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55956b27-d77c-4be9-a463-e8981943ddf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff1f232-e93c-4c32-9d49-227f5428f35f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d197f5f-e1c2-40f3-990c-d7c25aeab8bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29c50c62-1b3e-4916-b6f4-518ce5625cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27812bbf-3225-425d-aeb3-b68ae167a305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bb08cb-0dc4-403b-a1c8-5b6fb7bc9526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362fe5cf-7c4f-4c7d-865c-f3dad0a31670",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b13c212-4ca8-4d8b-a32f-df0f76aca98a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385dd5a8-2d96-4576-8bae-5afb9ae9644e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5831f86-9115-4dd7-b47a-77b9ece1fa15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1476219-150a-4357-8b12-7552f20e7f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327707d6-8e6b-460b-9f34-d32c67a49e45",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3b2afe-87ae-4d42-af1d-d9caad4e790b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e5d18ff-40ec-4a08-ab5f-7059da39d470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8968b2b-6742-4d3b-a8b2-c47724fe88f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a514b43-095f-4645-a076-de68eea781f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a63f539-94a6-401c-8dac-cee9d3f140ed",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ed816b-30c2-4777-b582-a5cc3cfaf897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d94f3d72-2a5e-49f6-a10f-a1a3959beff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ed17dd-1be1-47ad-95a7-817a182e835a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5296f687-aeae-4ecb-b77c-104d52976067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beacde38-b01c-4fc4-8760-062757a249ed",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af46494-ebb8-4471-bd2e-693ad5156d51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb93745-c98b-46d2-a64f-c4335c84569c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683e1033-9d69-4c86-ab4b-9bf93c02e720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5271af-86c0-43e8-8467-a079f2dfcc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9e37cf-ad5e-4a33-810a-c71810c9e6c1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4beeba11-35a1-4e8b-88cb-46a8aa0029fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2c6fba-eb78-4efe-a633-7f9f7db6466f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c474e51-0c56-4498-a7d3-6e6bbfb12a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36feefa-c3b3-48e7-a94c-5204fea4e6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a316476d-fd8e-47d3-93a7-41c72922c5a7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0146986c-6237-45a4-a32c-e42ab7aed2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c983ad-11e2-4997-a410-df15c10ce46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0105125-d266-4d8d-8095-ccdd7f6b100b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4d328f-d34c-4bdf-94f9-fa905f068b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d56a83-7d16-4f27-b319-1f446786cfde",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dec801-e68a-46af-87ed-47a45951a0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f83936-c99c-4453-9019-5247b99e554b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8234d1a-5ab1-450b-993f-282c4ae36b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa49d4c-713d-464c-a317-77af2bb08966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736d1808-f703-4537-83b6-0abaeee6df1e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d163e981-13f8-458a-9c54-954d6b0b7f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23898937-b5b2-4508-beee-fc9c0ef7ddba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe81a49-83f5-4a30-ac41-318bbc540f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bf60a4-f0b0-493f-9ff8-eb5237a53afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1681e6-3bf3-401e-990a-57361720b9b9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6851a610-8b70-4f00-95e0-2668dd2219ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ab182f-bb1d-4112-98c4-831e2eda61bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d94ccf-e7d1-4def-8be1-ece900b8c896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f8c8b7-af8b-4d51-b83c-e70dcf7a34ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101c9ff7-6d27-4446-bf2a-aba5e6551a89",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4451f2-764d-4ab0-91e5-44812dff98e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4d1e8c-e034-47b8-94f2-5be130ad40bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb69d10-0e36-4643-8981-b0480ce75e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9544431c-28be-47bd-bc86-a3b606b7333b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af30cb0-9423-4b0c-9380-eb5107a6fa19",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ab3de0-2e85-40de-ae66-cc5b407b2d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d83e29-e9ad-49ab-b8c7-7e3c622b9aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e01823-52ff-4ecf-9199-308f9dfa070a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff936bcf-1d3e-4b29-b0a8-3258d5cfa502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f24df7d-e553-4d07-a212-07d8c370f80a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c32bac-4b40-4958-bb8c-bec4fb22d65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ba3558-b97d-4f97-bce7-1f0e0a60902b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2c6131-5781-438c-ac8b-cc475ca4789d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45231bbb-5a1c-43bd-ac14-cd2bb2752511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a73fa17-ab00-47e1-b782-24ca83c67965",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedcbc32-9895-46e1-836a-58a95a5ef146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade1514f-c01e-475f-b20b-987678403a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5760dfa2-1497-46b0-9a8d-6309e0ad9142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caec4cb2-0ffd-46f6-a28b-39bf6b8b217f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8814e9f1-0261-4b0f-927a-bf8ccb14ed0d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f86122c-92f5-4357-b9ff-390ee8c98e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f26c48-56c1-4748-851f-7ec2b5428238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d6ca9d-8c3a-4b59-ad17-97e1ea4e8eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3e9019-68eb-4423-8e89-ce9e0d5d9bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4a04a5-8d52-421f-a9b3-d4818261b0e0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e880ea7-8b96-4af6-a207-e1cb7f4ae895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc10bd3a-27e3-4142-b1f8-50cd7d73c972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f70e151-67c2-4137-b981-08c81e361a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7055d491-b47c-47e5-8af1-b2b60a72c3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404a898e-624a-4b30-ab91-01eefb10ab48",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4152ab13-36ca-4293-a624-719cae9f86ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae07477-cea6-4144-8970-135d04b1fb2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b19418-1e21-46c3-a7e5-efb04dba56a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5af5de-d3d9-45cc-b84d-0cdbafe3c7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256e195d-e172-4a5c-ae48-db814f11ce4e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2610fcf8-ae3f-4377-8fc1-58da692a51ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94418fb-da55-4b8e-aa45-9fbc8b78633b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4579a2b5-d148-41fa-9430-2bdf036947b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea41fff-f1ea-473f-b686-fedf6ed33dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57738c69-aae0-4f38-a923-ba64c5f8b456",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae26c415-5c82-441f-b2e9-f481dbe8326e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f4cb18-69d7-4cbb-b762-cd56b4e213e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769e461f-0959-4915-beee-33ff4088b280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f8d118-6ac1-4bdd-b7f0-c0504021ae94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00ccdd2-474b-4b69-a893-7ae32021ed5f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6031754f-d191-4100-b1c8-4b4b5581dae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c3631b-ff05-4f72-a0ce-e875ac7034f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7704f77d-40ba-4000-ac95-99a6ffd811a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2c334b-98a2-45e3-8b06-0b584ff83cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fea8a8-c1bf-445c-bc9f-3e243c55a970",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0c335d-a77d-480d-b02f-6fbdcb785082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40027b1-94af-4fbe-9e63-d711402acc4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8dbc84-8480-4a9e-ac7c-b5e2a4f95b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1256d7-8bb3-4e59-985c-65efa9078662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c475966-cbe6-4169-83bd-df3da88b2633",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83932157-dc2c-4225-a45b-ea90f5561702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e99d4b-787a-43d1-81eb-25e2b76b75b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8b504d-9a2e-41ce-956d-b50c0ce8fae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029cb34c-6202-4ae4-bea9-54cabfaeabcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac47d8a-ec01-45c5-9a41-61e1cbed6b64",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8f49ae-53f6-4d40-afe5-e7142133dfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37955b96-0974-4cd1-9bf2-0f25ee393b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f45dae-fea2-4f46-83dd-53f2571f0a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6496640a-5e84-4462-baa0-9469b9be69fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78de11d4-a6fc-46e3-9147-e6ab7b0e6dc0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34a7b13-c8ed-4cc2-b108-9cfc2ff220ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78c6d45-8908-4e39-80a0-37208c179a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e608e0-33f8-492d-bf0c-90850602b1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a90982c-333e-437c-a89d-b649c76e61e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6e7631-f924-4112-95f7-5685d3441888",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba619569-f93b-4f0d-8473-5f9d4e002edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49e6644-ac6c-4bca-9efa-4bc8f7e9ccdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e456af89-c5bb-4ddd-8ffd-b5194009501a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8317e995-313b-4552-8e4e-85c1ee9ed6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6baccd-ec59-4173-961b-cc9f542f4596",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43290577-82ab-4418-97f6-51b44902d3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ee03dc-40d5-4015-8031-041bbef5f280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7942027d-8569-47f1-aa07-359a269cead0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9c7089-29f1-4fe2-abae-e8f7e8fed2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57bcd6a-2eed-4274-9117-27575d39d6e1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa0ce4a-75b4-4dd3-8945-56fa44b43211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50cadde0-02dc-4c6c-9ce5-138ed227793f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0655f55-4a09-473f-84b8-4e5fc2d0f609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090b3d4f-1a32-49d9-badd-7eb2695ca7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd360b5-ecad-493f-9df7-e37980470ca5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d1e17c-6f5a-48f8-b044-d3a5622f3bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22d3b0c-7a2f-4164-89b1-874c69324618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219e475c-e976-4534-b1fe-824500567b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173402c2-9e46-4a24-a353-76e680ed227e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8e5960-2130-4675-93b6-e96ae174d08e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a0398a-482e-4b8b-850d-a0d01d3c5d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fec6ba-715f-4fda-8e2f-a390536bf685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5623b39d-e76c-41ce-b309-f0fa17a9b8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccbb2d7-d613-4aba-a681-9b1508219abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adda7bf6-af9f-438e-ac42-1a40665ec17d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a77cf5e-7636-446e-b377-1b81f129b5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc36b3ec-166c-4bec-9588-a296092b1909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe04b929-5ff0-4a44-9fb6-57048733b0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6f46e6-a0cf-448a-9acc-a9965e9dfae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1664be2c-f652-47df-abe3-43813f12d85b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3307fa00-7422-4f15-9449-2a93ac961988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1ee091-82f2-493a-a3d1-352f21ea5718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a81d06-70c2-422e-b6ed-ae945c7cc355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e958190-6032-4061-b5b3-2ddc43369cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd1caec-5035-4301-b759-a5508f7e5c2a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5276f5ea-5dd6-4ada-bd9a-b718da88b5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70a9237-ea34-4541-a667-47fc82d5e1c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64695780-3035-40fa-979e-a50e41b221e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5978836c-e2c4-487f-b584-e1731df82b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d373fa-7162-4f9f-8eeb-53e8ef74a4a8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f7d68f-faae-4291-a536-bbad89e330e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f54a96-3fb6-44cf-a963-5c3e68a35254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5256ea8f-432f-41ed-b419-a1448d43ac10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47347a91-18b3-4b1b-9fed-0867c4ff143a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb73977-022f-4b5e-9404-6378016e47a2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2b7703-077e-4aa2-ac97-10eb1e399232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fc4884-a6ca-4605-b733-b9984aafb162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fd7cc0-9438-4b89-b079-b1569875bc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b4021f-ca45-438b-af9c-0a550fad8da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66e1289-73e6-4574-81e2-2bfc4b1b390c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b932ef-6b1f-4e88-bb9b-babb7eb15adf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45996398-a946-437d-849a-4f002941ffd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfca12fe-c47f-4240-916e-e424f51c05b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8e4a0a-0c15-4444-ae56-4116fed9135a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f9a35f-0115-4bed-8448-2e85310ce6cc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbb9234-c7f7-4329-a836-d5d6023f0286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90aa9c1c-7c0f-4c00-8ae9-d26ae2689955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864a3e2e-047d-4029-a760-69e852d1f215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41c848e-72c9-46c3-94ca-5330fc5f21c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed2a625-34b2-414a-b1bd-8df43e47fb34",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0542916e-e0ec-47fb-9e36-2a00bc30a703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08f579c3-0bc6-412f-b47a-0f8568f7bbb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d00a952-e9e6-490b-baba-b7548c684499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964ddc16-5e0e-495f-a1f6-a7cffe82fdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3794041c-5009-49f5-9117-8d9931a63846",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca59fd83-31df-44ca-b9fa-17d6c446e12a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9f3b859-98e0-4d3b-b003-15a9d5a472e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be0fb5b-52cf-4bdb-8a91-673967c514a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab1c8a4-efc7-48ae-a9f0-0c19800ede7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948ff4a1-a9b9-4338-b3e9-6477ba07d9c1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93eb918e-2735-4599-a2fa-17a8d54ee7ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3fc9f2-02ef-443b-afcd-cbb4af78e330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56a41dd-602b-43c0-ae36-4c6aec60d560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69ca380-6209-40fe-9790-65d9cdb39a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6832ee-b97a-4099-bd4c-5ae829f4d93f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5101f850-34b5-49fd-b2bf-2a1e00560f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f62ddb-47c4-4537-9a62-fc1441207e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ed9cd5-ea11-444f-afeb-79616f2f9b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e31c844-4c25-4086-bf15-f1e33cd2a109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b89041-bdb2-49ba-908e-497cfc15b734",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0c8d02-9b6c-44ec-9f07-8e13a45c07d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a64761-0932-4d72-a650-d2d129e7900e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b80b921-5125-4dcd-b1f1-2bf9b9b8f69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dad3edc-1639-4f16-9827-52bb2bc19fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d503812-4e08-44e5-b8f4-cd9c24ac8835",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45d6d96-afe6-4964-a698-5705566b56cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56ded17d-08c8-4541-83a9-efe6fe7fcf81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d568870b-c14d-4cb0-b55a-c1e598b34676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6924c364-7d5a-4f99-a4b5-98d7ba2c78c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2f5f21-2af6-4a3f-ba67-7954070b5580",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa05100c-85b9-4835-bf6c-637f0078c802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f80ba9ed-3a6d-41bb-8892-cb5e3a28b495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a181907e-959a-4e29-9ef9-bb0fe020fd49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e40bd5d-736c-4225-9a71-acb2d685bc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8593f727-fa45-45f1-a00c-256dbacc8cd1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5090316-29df-40de-b3d9-eb1ddbcad26e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bf74a2e-2adc-4d29-b451-7d9f8bb754a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa2de6c-4dc1-4ae9-8f0c-ea82f217524b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ad4dd2-8fc1-46b6-904a-c22de87181a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae348ee1-e8e6-4315-ac58-13f8e61f07f1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b667dcdd-f1f2-4264-a1b4-262026fae4b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66bc943b-ffa0-4a92-a2d3-047b8b799dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c131454b-4785-43e8-8db0-0314ab06560a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c71904-d8e2-4af5-a212-82678fc73ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433f9051-5366-4d69-b943-abb10924aa9a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7873c8-b5c8-4f24-b9e8-4eff039e621f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3cb653d-8920-4e67-878e-5a333aae7951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4b3e60-0bfc-4001-8cd9-ce3eb5a2531f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cd5fae-b2d2-45bd-933a-4e941f22704f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed81c6d9-04a9-4fc5-9a30-5923ba4b354e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07458813-1687-40a5-9bb7-359df3bcf931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d78167-1365-48ac-8071-8ee4ccc3abb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27afba7-0126-481e-99cd-1e4817f590b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642f1fd5-70de-4f6c-9544-8684dc67a283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095d911a-c3ce-47c6-b555-08fcf1b00e5e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd0008b-603d-447c-a41d-6cf0074b41ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67053c75-4f1b-47a6-9003-d8be44508c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9675f65b-4c4e-4225-8335-8309a7c91d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f3ee62-ed2a-4de9-a211-95485c165eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb15499-e708-49af-baa4-4fe27e56b1bf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0c2727-98f0-4a5d-8765-f62d49c9de07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9866d3-8d63-4ba4-9b01-aba8e06def17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086abc1b-6e04-44da-9bad-bd2d369fffb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7965a68-b2ba-41f9-8814-8c90e345bfea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a73fd1-2fb3-41db-8912-d9bfbb7f41e2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf9cbe2-5eca-44fe-84fc-503e3df8b53b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae38dc02-a413-4892-bd2c-83ad9cccb5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5459966c-1a76-4700-bcc8-50d336c01a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d0241a-52f5-472e-96aa-6f70e7cb2099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6289f430-4496-4600-96e2-a4e39af4121c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a3cfda-1dad-4178-b985-19074366e2be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a25aa4d-d2d0-4169-b813-bc7535ed8190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f452acf3-15f8-42e6-8c66-322cafd02408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42846483-94e2-4202-a80a-047d13f3a45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8950a8b6-b239-4de7-92c1-d91c02f4a4d6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9349b3-9b48-491e-9fce-333e567d2fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c39936-5444-4808-b5f7-117afc76cea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7512cd90-c031-4b69-aaea-935ac04a288f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0074fa-6ebb-4084-bf0c-102ab8f7a595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1cfebe-295e-489a-9030-4487fe4c463f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c90c67c-16f9-4438-befb-4dc1958f225d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d0ffb86-088e-495f-93cf-afa46377a8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e0030b-0a94-4a3b-8d54-85abc635039f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88b91c8-5c45-49c4-b596-9619accc09f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c871345e-9ff7-44a7-8022-948112331751",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8da145b-9c1e-4e08-b9e5-8cb1554330c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb4e211d-b6f6-458c-b116-b703bd7ee64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89acdd1-22f0-4358-83ee-d3c193f4bb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c24c5d-db48-4eef-b98b-a043997679cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cdedb5-a620-4489-8183-9b0b9b42187e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefbf648-8613-4301-b3e2-245f40f95db2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5ac662-1d96-4090-b49c-9ed96524fc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a11d74b-a25f-45a3-af57-e4dd22e713d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c47e81-90b8-4bec-8b63-bb8741b845c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30ca2de-3e3d-4a8b-88e9-44efbbb14177",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44e0697-650f-465d-a55e-52a13d722020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6240bd-ce99-4b33-a562-ed27dc34e38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e976091-b7d2-4c75-91ec-d0e843957966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30755023-2e85-42c9-b148-56b476e28c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dad79a8-4b6f-48b6-b126-678f8757ce25",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0697f81d-94fe-4a49-a5cb-83dc47f53dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499adce5-806f-435b-b5de-045a2f908424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fdf250-e867-4f6d-9c05-597ec260fed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d295aea-6211-43d9-b873-4fcfcea96e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a80865f-cc1a-41ef-9e98-3adbd0b4d061",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29239092-c04b-4d1f-b28d-1d7109870be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "652ec189-ac7d-4c09-b41f-222819090949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e57c37a-5126-4bfb-9996-500b0f670d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66fc807-67d3-4cf8-844a-48c749e6da00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2045e48e-2a25-4fb2-b7b8-cd49016a9ea1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372be829-2562-4a54-8ec4-15fa6769eb9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3dd5aaf-ba85-4c8c-a765-bb9a298b7eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83cef20-9b8d-4305-8ef7-eef8f49bf1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f689f40f-9f4a-471b-9ef4-257243e8c011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765988e9-d8e3-4866-813f-ece235231d25",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1d28d9-881c-441b-bdeb-11858ecbc083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b849361-03c1-4751-91de-7fc5bee731a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e37cc40-444f-4529-912e-d3b4628c282e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d94bc36-38b0-495a-9bef-390ce2e647a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e83ad9-de1b-4516-a2ea-171b956a0d22",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a464bc4e-654e-4314-869e-bf1772821f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d66c42a-1e94-4fac-8f4d-56f9d2f0db38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcedcd30-d415-4feb-8e96-662c38f0b0b5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8a79b1-d4b5-483c-b70d-497f54434f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d646f4-ed9d-49bd-a83d-be1de7bd4521",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d278031c-fbd9-4652-98cb-a77c7e59eca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9e1e3d9-a6e7-42bd-aa4d-feebb641fa0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db43d532-cd06-49f6-ad74-a2d725bdf694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d16a9a6-cb41-4c13-9485-ac17c8fd2027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e14924-c553-4286-9f52-72cfc6b55e8c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3f7053-a686-4755-a08f-9034f958e7ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1eaa60d-e574-4e20-84bf-a2e6e27202ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9be9f98-69b4-4ab7-8e77-9c983a5c7e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335f4c62-7558-4960-8b75-ee0f6c7e7530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db53f74c-8752-4c06-ab20-458852cecf6e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37339061-6687-40f5-bf0f-066303c69d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30ba8b5-3aba-41f0-930a-8c6032d65c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed439ba0-4f28-45dc-b75c-eaafda393bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45340f83-c068-4142-b890-43708f06d7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb42976-af62-4570-94f7-9edeb78903d2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642dd990-eee3-46c9-af9b-ed0ba312fb10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c998dbd-66f3-48a2-ae82-fc43357ea84a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6afacc-d4dd-4fc9-ac90-915b324b81a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1b345c-7241-49ae-972b-39e94d363756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5406957b-65ce-42b3-8c49-f09345076140",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf441a49-8d28-49d1-83d7-27419f86cc59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f43b2b0b-6883-4404-b348-ffd7333cd5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f6e576-8f12-4e2f-8f94-eb950348efec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9b99e2-c288-46b6-98cb-573e5963a3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566b8409-138c-437e-9dbc-65f891b98240",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dfe02f-7c46-4355-af84-0ffbf2a3e8a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e44b101-f91a-4a77-ab68-673a070be590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1743e5-9bb4-4a58-8bcd-33ec34a12cae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470664a5-215d-450f-9e23-c4dd025b4d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea0e6f4-9288-46d6-8347-4b32608eecd6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cba09e7-106a-4acb-993f-3a9e5d04e0ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9842d6fe-28b0-4546-998d-c80099a64627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d40f75-ced7-4590-a53f-8985a7240706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52260c62-fd6b-4738-81c3-9157f74636cc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "849dbaf9-3a06-4b8c-9a0e-f9e4605664af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf6ec237-f8cd-4295-8577-6855b3b07369"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd8b5a59-b4c2-487c-a1b4-ee5b35745318",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "762fa7cf-4364-4aed-933b-eefc00f8987e"
                    }
                  }
                ]
              },
              {
                "id": "43429c65-b07c-4333-ac12-089a4b26b623",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e82c41d2-c8e3-40b9-8216-66d09242d3b8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed486a2-e3ea-4595-aba5-ff6fa5898a2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f2cf048e-ec84-41f8-8982-695f4bebb53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64d4e03-ea43-4437-ad5f-8a15a935166c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cc4724c-d446-4ade-8bad-7d2ad83ef231"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29a2000a-480e-4c95-b3a7-26f6c6eb0bbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9a54c1b-f2ed-4fbb-aa4c-f28776c01f5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "724dc98e-30b8-4eef-9985-268497ab6f73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c9ea6b3-8487-4817-94c1-433e4cf89f7f"
                    }
                  }
                ]
              },
              {
                "id": "58c7fd78-cac9-4a7d-879e-b1b1354ea9cb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1acc604e-49f6-41a0-bf67-47a7912abef0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b91536c-40be-4483-b157-8b4467a9b6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8b96b9e7-1845-407f-8698-2b601139f43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05d13f7-4e1e-452a-82d7-d7c509529e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0323a011-6158-4169-a38a-53831ddeb2d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9e8d729-5d5a-4fd1-b7dd-d45804e8eac7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7aa96ff-ccde-4ca8-80af-3fb4c6178180",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54fa331f-12eb-44bb-be94-62474adf7e81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1af34650-77b6-460e-904c-23bf77f9c7a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01e8eba7-cb7c-4c36-a416-a014c6be4683",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36412ceb-417d-46c9-83fc-b7ba80288485"
                    }
                  }
                ]
              },
              {
                "id": "eafc61ad-a985-4135-ae96-3674e46523a4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66e2b474-19b4-4231-ac99-c2f55157f2a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "84824571-3b7a-4fad-a674-9e0d82481b94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "159aa3c0-aa59-4e48-a43d-31c89ea29873",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b7e7cce-0434-4388-a23f-70b0618cbc6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "906fc8a5-4f30-4c44-9b2a-7785a9bc2b79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d5c11b9a-8f0c-4160-aef3-209f485f61b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "520cac5f-52e6-43f8-be3a-b82d40dcbcbd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47b2fbfa-e3fe-4080-b9b5-1bbcd5d19b41"
            }
          }
        ]
      },
      {
        "id": "60d42a82-8241-4245-96c9-f01d31ba263c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f96ad9fb-2bdc-47b0-9f0c-f97650e51efe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69eea792-7901-423e-a721-177209399593",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c374b006-b03d-4d0e-91b7-ae64308c0e61",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4f7c67-fd81-40a0-a6f8-4c95421595d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f3e8d578-e1a5-4535-bea6-6c4b546b4bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04680100-ab6b-4ff5-a937-77b507aa1233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c6f0095-cbd3-478b-a45e-b2f10d31bde7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b57eea1a-39f1-4902-9f45-69f25ba1c6a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "386d7959-c3b8-4db5-a60c-8fa1007014ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4acf850-e91c-490e-948e-3b2eb3153d16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e07ca9e-62c6-4749-b740-11822847aa09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c281f330-bf23-4d8c-8dc7-0bac9ff67904",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "59183740-ac1a-4360-a30f-84d318bf40ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "062c102f-0530-48f8-a8df-fe8b8c6fd482",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e6772d7-1142-42be-bfdd-c39b4e0368b2"
            }
          }
        ]
      },
      {
        "id": "d838f55c-78fd-4cc3-ab56-93ee96c85d3d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "83db6031-33f7-4952-b567-8aca585b1da6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c5dd9ed-fff9-4fac-960c-bf297721d36c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ecccaaf-0f94-4990-9687-c9be4d5f7d27",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a7b404-eeb4-4e4e-be9f-669ad1717bf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2761635a-80bd-4b7d-94df-67029b61f531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a0da6a-81cd-4d5c-9bb3-65a9d73807d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc9ac254-2590-4793-8c3c-06d390a71a19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "561ecfbb-20de-4c9e-9474-8bb4b23a1b29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2b0bc01-a7a9-41a1-a0f5-c1c71bf6c3b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0ab9c1d-3554-4a5c-bf83-0b2e9517a41d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cad73bb3-c195-4423-b62d-459198dcd4a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30442d63-7212-4909-9008-3892ff7b618c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b47f78a5-4f99-48c8-b9a5-c39845361a69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "312a2e6e-7caf-4b3e-a04d-cd87877dd106",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "899758bd-e8e2-43fc-a8bd-179ea7bd8dbc"
            }
          }
        ]
      },
      {
        "id": "9396d7cf-e368-4c90-a278-e8eacfcac477",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f06a1f1d-cd2a-477b-bd17-1e8454f289b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb13e8c4-14cb-48ad-a7ec-cfe9fbac28ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c63de8a-d58f-4688-8c53-52325f63c206",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3ee509-7a3c-49df-a13d-71a88eec05f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea10558c-85f0-4afc-a2b3-db8e2d0d21b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83caec08-dc4f-49a7-ae77-195711c0ec65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c69dfe0f-43d6-4d2f-bc70-85e3c3467e36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74c628f8-39ea-477c-9724-486a34174812",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80a98920-3d8b-42b6-b48e-49aca79a88c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "684d9355-38c8-4a05-b7fa-fe3218644ab0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fdcd742-8b96-4c59-8fe6-4efd30d6e95d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c90776e4-47a5-4c40-ab8d-931fbcc56cff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8cfa82e-94d0-4d1e-8715-7748b6252eae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7a4f253-8fa6-43ed-9e49-a9e8072334e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29f974de-7a2c-42f3-bd48-5d72a44d9ff5"
            }
          }
        ]
      },
      {
        "id": "d5c73b50-d6b6-404b-b45f-615bd5f5a35a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2bcc65b-2a5a-4b65-a9cd-23f5d35a328a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49355e05-706e-424c-ae9e-dc8a31150856",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cb2d9c68-ac0e-4d0a-bd34-883e63140c43",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d2637e8-83c4-4132-86fd-a72894a08d95",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9250cb08-c0b4-4f33-8792-8b2d21469cce",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.2807017543859684,
      "responseMin": 2,
      "responseMax": 286,
      "responseSd": 22.47443333865185,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702427761454,
      "completed": 1702427772365
    },
    "executions": [
      {
        "id": "5aa342e3-6c77-4ecb-a458-8535c39197ea",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "78dd9947-24f4-4e68-bac0-5283c4800a15",
          "httpRequestId": "981cc166-3051-4bb9-a6ce-5ce519c57a92"
        },
        "item": {
          "id": "5aa342e3-6c77-4ecb-a458-8535c39197ea",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "509bc30e-442e-4b27-8f32-9f211d6aa6d0",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "3e97726f-e780-45e7-bd42-93b9b525bb62",
        "cursor": {
          "ref": "522407b7-1cbe-4fbb-a184-6935b2222735",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "52271965-98e7-48b9-9d80-dcaf0630d14f"
        },
        "item": {
          "id": "3e97726f-e780-45e7-bd42-93b9b525bb62",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "55706eed-5c21-4dae-9be6-a84ad5d3aa9b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "f1c957c9-34eb-4c3a-b295-b84fe6abbc14",
        "cursor": {
          "ref": "89cd2aa5-65e2-46f9-89c3-8fa5d4b9d4b3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f35ddcfc-99b1-4abb-b789-da6be8fc79f5"
        },
        "item": {
          "id": "f1c957c9-34eb-4c3a-b295-b84fe6abbc14",
          "name": "did_json"
        },
        "response": {
          "id": "4f5fc379-fbd7-4528-afd2-45ba59dda5dd",
          "status": "OK",
          "code": 200,
          "responseTime": 200,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eac8cd-3374-4720-b82b-b6efb86b8f60",
        "cursor": {
          "ref": "bfd93cbc-d5bc-4516-a3bd-3205197ac344",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "99d90478-2fb3-4b4b-8db1-05ddbe54c65e"
        },
        "item": {
          "id": "f3eac8cd-3374-4720-b82b-b6efb86b8f60",
          "name": "did:invalid"
        },
        "response": {
          "id": "475c56a8-d6e2-4808-8369-073ada74c534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eac8cd-3374-4720-b82b-b6efb86b8f60",
        "cursor": {
          "ref": "bfd93cbc-d5bc-4516-a3bd-3205197ac344",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "99d90478-2fb3-4b4b-8db1-05ddbe54c65e"
        },
        "item": {
          "id": "f3eac8cd-3374-4720-b82b-b6efb86b8f60",
          "name": "did:invalid"
        },
        "response": {
          "id": "475c56a8-d6e2-4808-8369-073ada74c534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04db0f41-3f77-4579-8255-67636761ebf0",
        "cursor": {
          "ref": "2b3083cf-b2f8-436c-acd3-553249cdc596",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b872a587-3ced-4c88-b5cc-a3adce934e39"
        },
        "item": {
          "id": "04db0f41-3f77-4579-8255-67636761ebf0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "40ecda2e-6feb-40f9-9f3c-ce09963a7d3a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 58,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309e03fc-8fc1-4bd3-8d1e-58b84fdf7902",
        "cursor": {
          "ref": "5a093c24-8da4-492c-b14e-6af66553da00",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a8a9bf19-e8d3-4c96-bdfc-5c83ab32f8cd"
        },
        "item": {
          "id": "309e03fc-8fc1-4bd3-8d1e-58b84fdf7902",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c89e0109-0641-4871-ad3c-5cf6ef294c0c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105a4c78-9846-453c-afd1-26793b1177b3",
        "cursor": {
          "ref": "494f9a5e-4ca3-4e8b-b94c-197d6b016925",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8859b315-aa06-4c45-bfe0-f8ae33936a68"
        },
        "item": {
          "id": "105a4c78-9846-453c-afd1-26793b1177b3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b4f957a4-84db-4155-9b6f-92a01561c9c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608438e9-aafe-4b0d-ad11-f5b219d5a864",
        "cursor": {
          "ref": "c5984f4c-c8e2-437b-84ca-c245c7a3f94c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "47c1eb14-950b-4887-b61c-76ced55f286f"
        },
        "item": {
          "id": "608438e9-aafe-4b0d-ad11-f5b219d5a864",
          "name": "identifiers"
        },
        "response": {
          "id": "f93f7508-938f-43c2-b028-cb9d03064add",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9aea9a4-e28c-4218-bf36-19fa145ba195",
        "cursor": {
          "ref": "4457ac5f-0919-4409-97e4-3170eb29d53f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f69e6e4c-75f5-46e7-a7dc-c5cb2b95d023"
        },
        "item": {
          "id": "b9aea9a4-e28c-4218-bf36-19fa145ba195",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6f1cb366-acad-430a-96ca-943351e67f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67adfd4f-dc39-4fc1-8e3f-a34077bf10b8",
        "cursor": {
          "ref": "18bac956-a1c1-42b3-9c55-a6beebbab674",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4ee9861b-0c48-47e6-a21b-24f2f29b2e77"
        },
        "item": {
          "id": "67adfd4f-dc39-4fc1-8e3f-a34077bf10b8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6e1fe6ee-719b-461b-a597-73303024440c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da90973-bb12-4c6d-b41d-76e40365f3c2",
        "cursor": {
          "ref": "4b946135-ee40-4842-a226-914ead00ec8d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d2240d64-ede3-4e73-9dea-0b3d6956d7a3"
        },
        "item": {
          "id": "9da90973-bb12-4c6d-b41d-76e40365f3c2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4fe4db53-373b-428c-ad13-75f093eb3ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75211358-6c10-4351-aabc-6a627fbe2031",
        "cursor": {
          "ref": "d38adf82-d8dd-4d59-b399-81662ad816ef",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "388f8cca-00b0-4e5f-a1e7-0dba481e05ce"
        },
        "item": {
          "id": "75211358-6c10-4351-aabc-6a627fbe2031",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ef212246-1374-4862-a966-b5aac69260a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bd1da7-0a5d-4698-8cc6-5195de3c12a1",
        "cursor": {
          "ref": "b12f655b-2703-44e6-a22d-fbcae216aec5",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1e9c270b-dd7b-4c6b-8a19-f6ef0808a86f"
        },
        "item": {
          "id": "23bd1da7-0a5d-4698-8cc6-5195de3c12a1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d3ede60a-bf65-466b-ad9c-b883ccb9bd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e74fc9-cbfd-4775-bdfb-dde3d3b0d740",
        "cursor": {
          "ref": "8869ec69-0ce0-4fbf-8e08-639b4ce6be2a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "14dd8efd-f0e5-4493-b8e5-28f554f64bb5"
        },
        "item": {
          "id": "77e74fc9-cbfd-4775-bdfb-dde3d3b0d740",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "91cd06a8-81b6-4514-8ee1-d8f639e1c08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c6a0c6-c188-47bd-b019-b1c7e23591a9",
        "cursor": {
          "ref": "4bfd2469-50eb-4b89-b556-23b066b03afd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7711703d-1c0e-4f6e-adf2-4904432b90ed"
        },
        "item": {
          "id": "22c6a0c6-c188-47bd-b019-b1c7e23591a9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "02613ec3-3532-4af9-8b99-241e4d9c9d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f44473-bc92-4c94-8a70-eedd0d19243f",
        "cursor": {
          "ref": "388b4416-75b0-443d-b67b-73f8815a4256",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c396240a-0a39-4f84-a4dd-9433e65b7f35"
        },
        "item": {
          "id": "70f44473-bc92-4c94-8a70-eedd0d19243f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "82aaaffc-c750-4192-b73a-7535163e186d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae371a74-e4e1-45de-aea3-4a7bc8c46814",
        "cursor": {
          "ref": "50548f51-2054-47a8-b026-813833bc773f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "69fe19ae-c6f1-4328-9179-ae067dcc3596"
        },
        "item": {
          "id": "ae371a74-e4e1-45de-aea3-4a7bc8c46814",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fbdd0e34-079b-4332-acea-dce7cd810ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6984f14-6df6-4e06-977c-4def85a77e0c",
        "cursor": {
          "ref": "c9ad0109-2a53-4960-887e-b6a60ff43d95",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bedc1c03-25f7-49dd-8374-56d0c92b9cfc"
        },
        "item": {
          "id": "f6984f14-6df6-4e06-977c-4def85a77e0c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "79e92a62-c453-421e-a9ed-1d6d1cbc2db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edbd5a0-ab8f-450e-9e31-2d02d72f05d4",
        "cursor": {
          "ref": "3bdc20fc-7a46-41ab-bfa1-67aa162b81a0",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a1754c36-e5d4-42fb-873d-35d4be9c81cc"
        },
        "item": {
          "id": "5edbd5a0-ab8f-450e-9e31-2d02d72f05d4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0f6b3bf6-0e1d-41a3-98ba-96507f825169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ff3854-90f1-42e1-b9bf-958d7817b78f",
        "cursor": {
          "ref": "755e4011-ea31-4d8c-b475-5d2120149b4f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "53d251e1-484b-45ce-b216-5f13f7288d57"
        },
        "item": {
          "id": "11ff3854-90f1-42e1-b9bf-958d7817b78f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "94fe317b-729b-463c-861b-52f432480488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae556f6f-02a2-41c1-bac1-da6e1db321b2",
        "cursor": {
          "ref": "254fc5e6-1ddc-4ddb-b066-07d500f72826",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fc364f7c-f294-4b11-9156-ae200ccc2632"
        },
        "item": {
          "id": "ae556f6f-02a2-41c1-bac1-da6e1db321b2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a28b7359-18ea-46cb-99a2-0ae1020c1aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c91f052-e7b2-4547-9f8d-22e2d4327528",
        "cursor": {
          "ref": "8bd3e16e-8e28-47a6-9335-06ecb93b9b73",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ee589d25-ed89-471c-a27b-50a6db9ec47f"
        },
        "item": {
          "id": "1c91f052-e7b2-4547-9f8d-22e2d4327528",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dc2b0096-7cdb-4c2d-a3df-786b2d6386f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79c8637-829b-45cb-b8c0-8c22b1dc8a47",
        "cursor": {
          "ref": "02e02384-9a46-4aad-a7a6-541abd4cf45f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "05748b9a-8e28-4dd5-84a3-57415b7681e7"
        },
        "item": {
          "id": "b79c8637-829b-45cb-b8c0-8c22b1dc8a47",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "276fc31f-d927-40ab-b6ba-4d303c7e14ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80ddcde-7239-4d38-8bcb-0dfee17939b3",
        "cursor": {
          "ref": "5a3c3ab3-a06f-4a5a-8f30-7f0735adc640",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "edce1c43-f34c-4c34-80ca-dc84b33716dc"
        },
        "item": {
          "id": "c80ddcde-7239-4d38-8bcb-0dfee17939b3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c332f045-aa0f-4119-bebf-25c56e2fb25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87aa1e45-3443-44b7-ae7a-559c7925ea2b",
        "cursor": {
          "ref": "08b8644f-c52c-48b4-bbc2-78e3241262e0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9358518a-1ebe-4221-a6b8-f13a75f858ec"
        },
        "item": {
          "id": "87aa1e45-3443-44b7-ae7a-559c7925ea2b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5e59fd00-b6f3-46dc-83b9-2125ba9bcf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd44790-d1c7-403c-aa5f-4b545771f4a4",
        "cursor": {
          "ref": "eb3bf5bb-ba15-4dac-b399-baf1a17c36f8",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7335fc1b-7c16-4574-9636-34143c5a415a"
        },
        "item": {
          "id": "efd44790-d1c7-403c-aa5f-4b545771f4a4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b8407471-d54c-485d-9f0d-ba109040bc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df2da68-f484-4b41-9deb-3ff669214f6d",
        "cursor": {
          "ref": "aa9436b3-e262-4e1a-a374-79e92c95405e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bef5e187-73ee-4acf-a223-7490238b1162"
        },
        "item": {
          "id": "2df2da68-f484-4b41-9deb-3ff669214f6d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1f52e444-9f03-4a28-ab8e-d0d675218959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31e17e3-cc32-4970-8967-584244751c1f",
        "cursor": {
          "ref": "f5aa59ac-f81e-4be6-aa0b-ce26fec66afc",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "24a877b4-90aa-4968-8023-8894c114dd0c"
        },
        "item": {
          "id": "f31e17e3-cc32-4970-8967-584244751c1f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "eab7a210-34b9-4afa-96a4-d260720229fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378927da-4e16-40e1-9fb6-701b85ee1bf2",
        "cursor": {
          "ref": "e5b96357-0ef0-4085-aa27-2feee5bc8d9f",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6eb9bd27-086b-41b1-9aa0-c41631556681"
        },
        "item": {
          "id": "378927da-4e16-40e1-9fb6-701b85ee1bf2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6a407ddb-8177-4cdd-9bc0-a6525d411637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f788e4-1db3-4ff9-ae3f-91a6eae94d62",
        "cursor": {
          "ref": "cc25a9f6-645c-4399-b5d9-5cd42e14edef",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "24190e3a-f524-417d-b0e7-efb4762b78f0"
        },
        "item": {
          "id": "01f788e4-1db3-4ff9-ae3f-91a6eae94d62",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fb2d954e-801b-478c-8ce2-87e090e63749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c060e51b-f731-47a8-8432-9877df4c398e",
        "cursor": {
          "ref": "388ff9e4-a5c9-411f-91f5-12a847e6e029",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ee6bd083-7f0d-4ca2-88d8-dfcfe68c3366"
        },
        "item": {
          "id": "c060e51b-f731-47a8-8432-9877df4c398e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f606a619-4dd0-41a8-ac92-897318c76478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bd3de8-8651-43a3-8c68-cdd96a3ab162",
        "cursor": {
          "ref": "454e6812-7768-471f-a53b-43e02fecf2fd",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2b627ebe-d733-4ab4-8b20-8d7d3163f56e"
        },
        "item": {
          "id": "85bd3de8-8651-43a3-8c68-cdd96a3ab162",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "320874a4-f2df-41ae-9082-11d7cbcd831a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5e8ef0-9546-4d96-9b11-0b87fbaa721c",
        "cursor": {
          "ref": "f594daa1-6d98-4dda-b8c1-9b307df9dded",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0ca9d34a-807c-4c3e-9077-3dd0673383eb"
        },
        "item": {
          "id": "0d5e8ef0-9546-4d96-9b11-0b87fbaa721c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "16c32c64-029a-44f0-b970-e9480c4c76c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce680eb1-0e92-4cd6-a496-3b8ff6e7d891",
        "cursor": {
          "ref": "a8af259b-de01-46c9-a35d-da1e88a7e609",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "af88307c-9cdc-45ee-b8e6-d565929c2426"
        },
        "item": {
          "id": "ce680eb1-0e92-4cd6-a496-3b8ff6e7d891",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9120b680-9109-42f3-9783-f9ef737ce531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034597b1-62f4-4cf6-a701-7181e6996cb4",
        "cursor": {
          "ref": "a7faed96-6745-49b7-9448-ed30104baa53",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "da4f69bd-b8f9-4988-b1f1-36e14bd3761a"
        },
        "item": {
          "id": "034597b1-62f4-4cf6-a701-7181e6996cb4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fe8770fa-00dd-4acb-9d01-937c607f1f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05627d0e-a263-4254-9091-224d36cba8d8",
        "cursor": {
          "ref": "f4fdef45-6a14-4639-9866-6910ef1acb7a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2a96b660-8bb2-4bea-87e3-b32bef08734a"
        },
        "item": {
          "id": "05627d0e-a263-4254-9091-224d36cba8d8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e8320ae7-8700-428a-9ef2-b488c944cb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81be684-762a-428f-a5c8-7f88917d88dd",
        "cursor": {
          "ref": "52d6cfbc-2e87-49a2-a8e8-760dda81bc19",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0afc3cc1-ea4c-433f-a73b-350887ae089f"
        },
        "item": {
          "id": "e81be684-762a-428f-a5c8-7f88917d88dd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "925de135-e0b2-4794-b1b8-9b8b5cfebb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98816409-aff4-469b-9058-5aeb9b1a2dd1",
        "cursor": {
          "ref": "467efc72-47e5-4b78-b672-d0310763e942",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d5636748-abfd-44ee-9592-063e101cdbe1"
        },
        "item": {
          "id": "98816409-aff4-469b-9058-5aeb9b1a2dd1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e7079ff3-4bd6-4488-9917-3dbecc177bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a189b85-950f-4550-96fa-0ba6b65de4ac",
        "cursor": {
          "ref": "d391d9e7-489b-4732-a287-56bfce204300",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c533214c-f9bb-4895-b5da-0cad92312ba5"
        },
        "item": {
          "id": "0a189b85-950f-4550-96fa-0ba6b65de4ac",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "18cc8f0c-6404-4ac4-901d-09c4819c2134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf306424-e0f9-45a1-a31b-7db45d42d39d",
        "cursor": {
          "ref": "93a46b9e-27aa-48e9-a96f-b7252f97287e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6ce4c004-2939-4c6c-b55a-ce11427e7b3a"
        },
        "item": {
          "id": "cf306424-e0f9-45a1-a31b-7db45d42d39d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7b229714-6905-4879-b05b-31c6ae6fb7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f2daa0-1e6f-4b94-a390-95b7df35c43c",
        "cursor": {
          "ref": "2a4a9f00-d784-46f3-9a70-061b55fd33b7",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c487353b-b6d7-49ea-94b2-adc746c4925f"
        },
        "item": {
          "id": "21f2daa0-1e6f-4b94-a390-95b7df35c43c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0da237a3-053c-4e5c-8d42-77932cd3aa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e9dd2b-2164-46e1-ab12-fa7bb18c8818",
        "cursor": {
          "ref": "0877d588-1305-4f52-9fdf-f8ccf0bb472e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2d7efc53-2979-48a7-aa49-c3c5ac8a289b"
        },
        "item": {
          "id": "45e9dd2b-2164-46e1-ab12-fa7bb18c8818",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b4403aaf-9807-4385-ab9e-f355de9a346f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b04276-ce43-4b04-a01a-b8e8778a9869",
        "cursor": {
          "ref": "91818d6d-5862-4271-96cd-dd961dd8c587",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c5592e12-665c-41dc-a5f1-d84d16c67d51"
        },
        "item": {
          "id": "f1b04276-ce43-4b04-a01a-b8e8778a9869",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "aecd4cf3-4a4b-46a1-97c5-2920a70fe49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f61405-1816-4cd2-ab7a-68ac5961ed54",
        "cursor": {
          "ref": "bf067ebd-03fa-40b3-ae0e-cebade3771cc",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8bc8af0d-a009-4ef1-a372-6fdbbb34d29f"
        },
        "item": {
          "id": "56f61405-1816-4cd2-ab7a-68ac5961ed54",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1aa31c65-bc85-4e50-8abb-f68f9dd9e4b3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1e834f-0bf2-4c74-a738-ede3549844db",
        "cursor": {
          "ref": "cd002538-00f2-4b31-8bb9-d8bae2510bd5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "15993bd0-0c8e-4502-ba18-e1da2f82192c"
        },
        "item": {
          "id": "da1e834f-0bf2-4c74-a738-ede3549844db",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0b750d98-881b-41af-94b0-231f8889a475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b5a868-d597-4238-bf08-101a1010058f",
        "cursor": {
          "ref": "5b9f8669-2a9a-40f7-9ce5-223116791161",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "af78ba6a-70e3-4f89-8619-1366053b4b2a"
        },
        "item": {
          "id": "84b5a868-d597-4238-bf08-101a1010058f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "88c60741-2ee0-4124-9904-15f9c65f26ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43abea11-5de5-4528-85d7-2bfab2806bc4",
        "cursor": {
          "ref": "e2f7920c-b6dc-4249-afad-1d8537fd86bb",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "02cc99d0-bdf6-4335-b4be-0ba9d0284b2a"
        },
        "item": {
          "id": "43abea11-5de5-4528-85d7-2bfab2806bc4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fe9d45e4-5057-4b45-a83d-36c8569bef4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f24366-7e33-4dd5-8a23-e803e01b0109",
        "cursor": {
          "ref": "3aac087c-8d29-4596-8b5d-9d6162d44c75",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "12c14ec7-e7e1-4d70-af0f-195288acb1a6"
        },
        "item": {
          "id": "97f24366-7e33-4dd5-8a23-e803e01b0109",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "48ce8620-d915-458e-82a2-1a665770e920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab2f4af-8fc9-4695-801e-1a3021d4ff94",
        "cursor": {
          "ref": "9685d254-99a7-40c7-a8a3-5e53081363b7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4811e73a-4dd9-4769-8dfd-997c25b33ab5"
        },
        "item": {
          "id": "8ab2f4af-8fc9-4695-801e-1a3021d4ff94",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2a4b27f1-2a87-4209-9e51-4cf22f1c083f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36334280-f391-458d-a1e3-02c91908ca1f",
        "cursor": {
          "ref": "8a0ec1f3-141e-4676-9744-3c542fbd1036",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bebc8934-fcc1-4d06-bf30-ca56ff50af43"
        },
        "item": {
          "id": "36334280-f391-458d-a1e3-02c91908ca1f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1d2591e1-ddd5-4001-a584-c145cb7b7193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814af29f-eb0a-46ab-a40f-ded4390952df",
        "cursor": {
          "ref": "232595c5-40be-460f-8ed2-ecd8adb9ccbb",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cae64296-c3d3-4add-a966-6fcf4828f65a"
        },
        "item": {
          "id": "814af29f-eb0a-46ab-a40f-ded4390952df",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f8560e51-95b1-4bb1-ab1e-48325aaa3c2f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3418b8-f46d-4f5e-a141-bee64d0faca2",
        "cursor": {
          "ref": "162e8d79-0c8b-4758-ac58-a87ecf31225c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d8f88915-c587-4dbf-9b74-692aaadd646b"
        },
        "item": {
          "id": "8b3418b8-f46d-4f5e-a141-bee64d0faca2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "40992945-00f8-4713-9de2-6a8345d00681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca885bc-77f8-4e6d-870c-03ad77bc1bde",
        "cursor": {
          "ref": "25e568a8-9a1f-479e-b0c7-4a78db435e49",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cbe36dae-e5db-4882-89d0-b590bbf3677d"
        },
        "item": {
          "id": "2ca885bc-77f8-4e6d-870c-03ad77bc1bde",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4e1f450a-9eb7-43c5-9f81-7383bc90fb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c37c33-b481-4126-9383-4b02dd5e08b9",
        "cursor": {
          "ref": "efce256e-89b4-4ea9-81ad-6893e39e32a7",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "519c46d0-4573-4c9a-919f-10a0c9daeca1"
        },
        "item": {
          "id": "c0c37c33-b481-4126-9383-4b02dd5e08b9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "838ac3fb-3fb7-47d0-bb58-3d8a190006f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c4da49-6694-4586-9108-62368fe5c73c",
        "cursor": {
          "ref": "c01dd972-ef99-406e-ab97-1d1cdd42a906",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "22f2ea55-95d4-4d69-aa4b-5eb8be79af47"
        },
        "item": {
          "id": "86c4da49-6694-4586-9108-62368fe5c73c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "71841c05-be6d-41f1-9dbe-91fa1e9e35dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29677eaf-0c2f-46cd-932b-fcfe0bf27f6d",
        "cursor": {
          "ref": "62a0872d-239e-41ea-9f9e-f8dbfead29ec",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "98b33be4-3108-4955-8026-d1a82b970bfa"
        },
        "item": {
          "id": "29677eaf-0c2f-46cd-932b-fcfe0bf27f6d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b8da1414-cb22-4e35-bf12-09c50643b10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175f7514-b155-4ddc-94e7-a5cb1b6e6098",
        "cursor": {
          "ref": "27bc14cf-4000-4753-80d4-a1e79ddaa2a2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "916038f6-34f0-49a1-abbd-43da1cdc647a"
        },
        "item": {
          "id": "175f7514-b155-4ddc-94e7-a5cb1b6e6098",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "21b3c56d-c3ca-4d8d-841a-d6fcbdb2e057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98ed202-232a-4588-b9c7-f8ed7271d2c3",
        "cursor": {
          "ref": "21e37ce9-f862-4bb4-bac4-60367cad3717",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "815de60c-945b-47be-85bf-4476b5cca7b9"
        },
        "item": {
          "id": "f98ed202-232a-4588-b9c7-f8ed7271d2c3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "084f48e7-0caf-4e0f-9f4e-de3b9e477859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88fecc4-fa4e-43a1-aed8-a87f455aabb7",
        "cursor": {
          "ref": "b831c6bb-3190-4f02-8245-1c03c7ee7c61",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ccba4ef1-78cf-408b-bf2b-5f54ee646b03"
        },
        "item": {
          "id": "e88fecc4-fa4e-43a1-aed8-a87f455aabb7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6bbbc9e5-8dcd-4e0c-b40a-a180ada43deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bc66c7-df20-48e1-9dd0-22ac86b2a5e8",
        "cursor": {
          "ref": "ec05b817-754e-498f-8593-e1948370aeb1",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4eddab00-6b1a-439c-bf48-3456a9a17bb4"
        },
        "item": {
          "id": "d7bc66c7-df20-48e1-9dd0-22ac86b2a5e8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c38cae0f-8e96-4eb8-9b02-441e25274e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68220908-9bd1-498b-b9c8-32e3c27b614f",
        "cursor": {
          "ref": "f1129383-4161-489c-9b2a-c080b95a01e6",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "45bc601d-deb3-4c30-9852-75cc5e380411"
        },
        "item": {
          "id": "68220908-9bd1-498b-b9c8-32e3c27b614f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "43bde0fe-1a45-47e5-877b-ebf2a7be1092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb644a6-a62b-4650-b0de-d7c00a151df8",
        "cursor": {
          "ref": "e07d0ca0-5fc5-4b6d-8487-0b271945a123",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4751410a-d809-44b3-9538-5c216a87f251"
        },
        "item": {
          "id": "9cb644a6-a62b-4650-b0de-d7c00a151df8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "41b39d32-2b53-4b24-8fa5-58f9b2373989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50eca81-9611-470a-b56d-c14d9bdb643c",
        "cursor": {
          "ref": "c9f8390a-3a14-4de7-86a7-ccfc1de6fbfd",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "083cb30b-a252-40e7-bfa6-298707f463ed"
        },
        "item": {
          "id": "a50eca81-9611-470a-b56d-c14d9bdb643c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "49d27b40-6bc0-48d1-b77f-fccbf966d4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f12bc7-a58f-4f54-853b-d98cfb03c3b6",
        "cursor": {
          "ref": "4d2a7ffd-da5c-4e59-b4c2-aeafb6d6caf8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e016aeea-1c9c-4ad4-9a92-af7d7a20e9df"
        },
        "item": {
          "id": "c6f12bc7-a58f-4f54-853b-d98cfb03c3b6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2db481c0-e45c-40bd-9c8a-0d092d11fea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df004bd-23c9-4882-85ec-fe320ef95668",
        "cursor": {
          "ref": "bd525fb0-dc25-4865-8b4e-6ef43441ee1f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "37e98e0f-32be-418d-ad3c-6602108c9521"
        },
        "item": {
          "id": "1df004bd-23c9-4882-85ec-fe320ef95668",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3aaaaf7f-f3de-4940-9f1c-47ece6bacb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388ef700-a7e9-4071-abb0-950baf26605b",
        "cursor": {
          "ref": "1a6cd33c-6757-4d4b-8011-65047a0e4e0c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3e5f88aa-4421-490a-b15a-711a1bcf8e48"
        },
        "item": {
          "id": "388ef700-a7e9-4071-abb0-950baf26605b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9afa10e5-785a-43a8-80ac-f86b72066404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dc41a2-5e8d-40e6-888c-de9d4b4f3eac",
        "cursor": {
          "ref": "67e9695a-d270-4a6e-b8f6-f37a8af67b5a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "02dd54b1-d0dc-4528-bca6-44115089347d"
        },
        "item": {
          "id": "58dc41a2-5e8d-40e6-888c-de9d4b4f3eac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9266abeb-8854-4005-862a-6d72a79e4626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b22c8dc-1c08-47ab-b0ea-adbca6a13444",
        "cursor": {
          "ref": "67fce6d9-94bb-49cb-a789-8ca87cd6f846",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c9ea16f5-b11c-4473-b304-b64981e7853a"
        },
        "item": {
          "id": "3b22c8dc-1c08-47ab-b0ea-adbca6a13444",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dbaa5d77-0384-4f10-be7c-42a48759cf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa511421-07e6-4031-a4bc-6b007e075050",
        "cursor": {
          "ref": "a91dfcc5-e1c2-4dad-9631-88a570714cb5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c8cf537e-65ae-429a-a5b0-a78d7db88e91"
        },
        "item": {
          "id": "fa511421-07e6-4031-a4bc-6b007e075050",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fab8c17c-c3af-40b8-8dd6-a290dc8ca8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8998f955-c93a-4f33-9a2c-285d59402ba3",
        "cursor": {
          "ref": "602e9c94-651c-4236-ae6e-58d9a0454e92",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "805b4cc4-e76d-4359-9886-c2b5964dc22c"
        },
        "item": {
          "id": "8998f955-c93a-4f33-9a2c-285d59402ba3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1f631118-6655-42fc-9f57-f9dafb8bbc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9739a4-9913-460d-a78c-92c0b090bef9",
        "cursor": {
          "ref": "c57f2172-de65-4af1-bf93-9a4bfaad1b4e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ccfa27fe-1440-4f87-becf-c231db509dd5"
        },
        "item": {
          "id": "3c9739a4-9913-460d-a78c-92c0b090bef9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cf89d5f2-89f3-4be1-9d92-e24c478a4a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd159cde-7b17-4ac9-bac9-102e992d3c4b",
        "cursor": {
          "ref": "322ae217-488d-4ef9-9f1e-b3d1b982047e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "22bda9f2-fe41-4a7c-95ee-c4498005f3af"
        },
        "item": {
          "id": "fd159cde-7b17-4ac9-bac9-102e992d3c4b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f9246f9d-e052-4ed0-9fe6-edac1e977332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96515ddb-05d0-4c9f-b4c2-952b3caf1c64",
        "cursor": {
          "ref": "31f21435-77d0-402e-8877-243d7aeb124c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ea958d0b-2c17-4406-944f-da9a1038bf11"
        },
        "item": {
          "id": "96515ddb-05d0-4c9f-b4c2-952b3caf1c64",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cb73b113-86b0-4dec-a0e9-034437c033eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4554892d-0853-48f7-bdc1-b7c8b6813a86",
        "cursor": {
          "ref": "3faf51c7-567d-4281-b2f5-8f44aa9e5fbf",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "acca0607-74d6-4382-9ac7-d7972f64d24d"
        },
        "item": {
          "id": "4554892d-0853-48f7-bdc1-b7c8b6813a86",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "87f48cf1-8119-4440-85a1-717cb13c1b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66a155f-ec48-4a6f-bff0-6cdee405cb5c",
        "cursor": {
          "ref": "ac482945-c56b-4137-be41-19d01d6498a1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "361c8904-1c1d-431c-a449-7f055abbae37"
        },
        "item": {
          "id": "a66a155f-ec48-4a6f-bff0-6cdee405cb5c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5d4bdda2-4b94-493a-88b5-68f954efc9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1043a6-5681-435e-9ccf-33a8f4a11963",
        "cursor": {
          "ref": "27355569-b010-4e8b-a3dc-895a19fa4a2b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d7871946-0907-4952-9582-82e67b998019"
        },
        "item": {
          "id": "6a1043a6-5681-435e-9ccf-33a8f4a11963",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "78fb2791-05ef-4a35-a49a-e104cb8eeda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ed61da-ea1f-4eca-a945-09514f2ec447",
        "cursor": {
          "ref": "3be6d720-a917-49d7-8303-69a1e63e7940",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "49ec9d7b-6efc-4b44-9c95-12a6e36f8ade"
        },
        "item": {
          "id": "f9ed61da-ea1f-4eca-a945-09514f2ec447",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8ea9d5bf-b9da-4f54-8b11-996c5b6a2003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246fcd84-cec1-4fcb-8a27-5bbfde2ff720",
        "cursor": {
          "ref": "652b06a7-d599-43d4-847f-4df5e49112aa",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "39275543-2a44-4ba8-9a2e-09f4333055f5"
        },
        "item": {
          "id": "246fcd84-cec1-4fcb-8a27-5bbfde2ff720",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "aac3436c-715a-486e-9126-4bdf32f9dd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9076c2-aa25-4836-8626-2bcfddce257c",
        "cursor": {
          "ref": "4ce1f5bf-ee23-46da-af8c-7e884acedd5b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ee2a3208-19fb-45a0-a35e-284af5e51ac8"
        },
        "item": {
          "id": "fe9076c2-aa25-4836-8626-2bcfddce257c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5d885b57-d658-4568-91ca-9a45522cb885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9737c565-3fc2-44d0-99dc-289a6e2b615c",
        "cursor": {
          "ref": "9cf2ce56-662f-4984-9817-37708886c331",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5ea0be03-61ce-4287-b195-a6e8f24f9eb9"
        },
        "item": {
          "id": "9737c565-3fc2-44d0-99dc-289a6e2b615c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a83fe0dc-4c35-4690-8a52-6934dfc8b8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631ef5d0-d768-4752-a563-38fc39dd8233",
        "cursor": {
          "ref": "eb46a5b3-d8f8-4d6c-9adf-2c4c2921d7a0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ee2ded91-7515-48b4-9a6a-6d7e31da5d80"
        },
        "item": {
          "id": "631ef5d0-d768-4752-a563-38fc39dd8233",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b2c649aa-5edf-4d03-9049-08efc43ad535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14241336-57bd-4676-8748-710fd9e78fb5",
        "cursor": {
          "ref": "e7892de0-f30e-440b-9d6e-2db74670edb7",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "506cd1bb-7873-4bcc-ab71-8fda678606c3"
        },
        "item": {
          "id": "14241336-57bd-4676-8748-710fd9e78fb5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "62d07513-c27c-41f2-bd61-0b9f85d38d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f89448-3382-42eb-a082-ae034bc15aef",
        "cursor": {
          "ref": "1349c640-31c4-4dce-81a3-74ad01b5fee1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "35c6f260-c12c-45c8-9f8d-970047d9bdf2"
        },
        "item": {
          "id": "13f89448-3382-42eb-a082-ae034bc15aef",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0eafa170-04bf-4e4e-8988-669996befcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146194b3-d447-4e23-a03c-f31b4af535be",
        "cursor": {
          "ref": "1260bb6a-e597-45f4-8393-cd036f6a8299",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0465a98b-6ad2-4bcf-ba45-222171884439"
        },
        "item": {
          "id": "146194b3-d447-4e23-a03c-f31b4af535be",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0728ef7b-0bfc-4ca2-9d89-804f47f9f762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812766c7-8ee4-4cb4-bdd8-182fdaa52d15",
        "cursor": {
          "ref": "1b0c68ff-753e-4695-9ffe-0d37a7c56868",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fb6ce1ad-5b02-4537-a587-7b86b7e9b796"
        },
        "item": {
          "id": "812766c7-8ee4-4cb4-bdd8-182fdaa52d15",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "24112ce6-d66d-4cc8-bd98-3bc0b4967721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9935bb2d-a14b-4322-93bf-29a30bf2ccdf",
        "cursor": {
          "ref": "9a6d8db0-fb40-4331-8fc5-5dfa40f493d4",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e169794a-5c18-4546-b707-046236bb455b"
        },
        "item": {
          "id": "9935bb2d-a14b-4322-93bf-29a30bf2ccdf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d82af435-887f-4655-bd59-3ad2e04d5f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fc24ab-fa41-4a56-a270-02a9b55e3485",
        "cursor": {
          "ref": "9b59a885-eb03-4ee3-910c-2fbf4950e66e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "634aba57-3b98-4126-b414-6f1046781680"
        },
        "item": {
          "id": "e1fc24ab-fa41-4a56-a270-02a9b55e3485",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b1862852-8c97-4a6a-9d4a-6f3c8d992dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1276dfe-5ce8-40df-92bd-d816baeead75",
        "cursor": {
          "ref": "c48a5319-f730-4122-bbf0-3a4563fc454b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "521bd88a-99bf-4b41-8f21-d2a3756191b2"
        },
        "item": {
          "id": "c1276dfe-5ce8-40df-92bd-d816baeead75",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "683b2a64-aab4-4310-9c81-43bf65f39e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea23b500-e39d-4833-a3ad-a5849feeef48",
        "cursor": {
          "ref": "82c8b1ab-d705-45b4-8ea1-4b3a25d0832f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ad4d8b2a-52e4-4feb-9839-ed7be854bec3"
        },
        "item": {
          "id": "ea23b500-e39d-4833-a3ad-a5849feeef48",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "af7673f3-7c83-4257-b790-69dadbc39b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb787147-76c6-4eb6-8464-a83d3bf74eca",
        "cursor": {
          "ref": "44c53c3e-05a2-41d0-956a-30914d251272",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b2fa42de-cb9f-4894-b702-5036960e4edd"
        },
        "item": {
          "id": "cb787147-76c6-4eb6-8464-a83d3bf74eca",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e487a090-8849-4eac-87ca-0674bb187533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4444b3b3-cf15-4684-b544-69295229a41b",
        "cursor": {
          "ref": "be69e59b-fe5c-409e-8581-629d200ff50c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6f1478a4-f6da-434e-8d45-bbdae2e7387a"
        },
        "item": {
          "id": "4444b3b3-cf15-4684-b544-69295229a41b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4f81fbe0-589f-4fb5-8db3-2290f1bb4b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a9cbb2-888c-47e9-b578-dbf491957f58",
        "cursor": {
          "ref": "19be1905-8d53-47a6-b50b-ac285c4c7188",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "266c9841-21f8-4fe9-85ca-6b4338aec558"
        },
        "item": {
          "id": "a2a9cbb2-888c-47e9-b578-dbf491957f58",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f5382a6d-0178-42d1-99e5-16c4d857890f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a05f2a-6b43-4909-a373-8e4dafba5bd0",
        "cursor": {
          "ref": "d2e5203e-7715-4f3c-8a55-e0a75877d08d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4e2305c0-aeef-4fbc-ba0f-8ddd5f1a21c6"
        },
        "item": {
          "id": "58a05f2a-6b43-4909-a373-8e4dafba5bd0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2fd23036-8b4d-454e-b017-cd1cd4d1ef03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe24ceab-d860-4454-bc18-dcda68fbd27a",
        "cursor": {
          "ref": "5e90af83-7af1-4dd1-9004-298bb8657ffd",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "eecbb3e9-3a39-4984-bdd5-c2ec1a23f07e"
        },
        "item": {
          "id": "fe24ceab-d860-4454-bc18-dcda68fbd27a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "782de3e0-ae22-4f10-ad99-2c1fe52f11f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e8e44b-5577-458d-8b29-6a3cbff8e5b1",
        "cursor": {
          "ref": "b617b084-86c4-4371-9172-9b72d23fdd47",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "78d847a4-ab5c-45d8-ad0d-d9f9de49749d"
        },
        "item": {
          "id": "a2e8e44b-5577-458d-8b29-6a3cbff8e5b1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "27d746c5-5371-49da-975c-9fd669bfbffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9d74ce-43b6-47b1-81a4-b76dfa400771",
        "cursor": {
          "ref": "307482a3-49a1-4340-bf40-ec5e7f9f24ab",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7334dfa2-f90d-4c29-905d-426c13d8d199"
        },
        "item": {
          "id": "fc9d74ce-43b6-47b1-81a4-b76dfa400771",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bcfe2006-c905-4e2c-bfc5-360a87964617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70684fcf-8807-42b9-9845-c184783c4dbc",
        "cursor": {
          "ref": "e3d0b63e-b854-4c8d-8027-703c7eb62ff2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f19b1ed8-ef91-4d3a-a77f-0da2c98a774a"
        },
        "item": {
          "id": "70684fcf-8807-42b9-9845-c184783c4dbc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b8f4ab3a-a328-4aac-ae13-032b38186255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2cfe74-e2bc-4c2b-a28b-f0dc03834363",
        "cursor": {
          "ref": "6a1bcc3c-9dc2-41e4-b7ee-556b72ea1b7f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e7409e99-bbb2-4be1-b16b-dcdbb5d3396f"
        },
        "item": {
          "id": "ec2cfe74-e2bc-4c2b-a28b-f0dc03834363",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "11b6fc05-4a69-482a-9ad7-b30c32505d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10232cfd-8359-412a-8bef-203a9c346450",
        "cursor": {
          "ref": "ce4b3bce-5b8d-4892-99a0-5193922b3525",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1b2e0953-5060-4f93-8e01-fd75e0c51145"
        },
        "item": {
          "id": "10232cfd-8359-412a-8bef-203a9c346450",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d98fde19-f2ad-4b3a-9ec3-b697772dc270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8079487b-9097-4b37-81ae-e307c7ff2586",
        "cursor": {
          "ref": "3318b8d2-63e7-41f5-bb0f-58e6bf0838d2",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "aba45a1a-e0f4-4069-8d76-16814680bf9a"
        },
        "item": {
          "id": "8079487b-9097-4b37-81ae-e307c7ff2586",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "455129a9-c145-4235-a572-d862e030ee2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfad4fc2-2b75-4b15-b548-325997fe6b6f",
        "cursor": {
          "ref": "624d1448-820d-4178-bb04-76358878cb08",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e71e8267-3651-4a2b-85d6-93f45fb3c472"
        },
        "item": {
          "id": "cfad4fc2-2b75-4b15-b548-325997fe6b6f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d3a0d07c-dc01-49d7-8e86-fc36159c46e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12379a19-3c71-4bb0-b5af-c496588084b2",
        "cursor": {
          "ref": "81ae1a0e-fec4-4656-84d3-54c22c69da0c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "16aabd9a-cd9a-4343-98b0-0c19b3d15b8e"
        },
        "item": {
          "id": "12379a19-3c71-4bb0-b5af-c496588084b2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1c7a29d2-8392-4cf0-91ce-1afb549c99bd",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f3ca4a-a7da-4d93-8250-d4c8a36f907b",
        "cursor": {
          "ref": "8e4abb1c-ccb9-46ae-8a3b-a8e62a7af1cc",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ad09b01a-9139-4522-ae63-2d84fb677bc0"
        },
        "item": {
          "id": "82f3ca4a-a7da-4d93-8250-d4c8a36f907b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ab2219ac-44ee-4684-a347-a6934501a334",
          "status": "Created",
          "code": 201,
          "responseTime": 118,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7703c4-bd25-411c-aae3-366feadc203a",
        "cursor": {
          "ref": "6687ec4a-6885-4a04-a6c3-916a54ffcc12",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8c3f825c-3938-4dfc-ac78-38b5a37b0c7d"
        },
        "item": {
          "id": "af7703c4-bd25-411c-aae3-366feadc203a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "02da68c8-f4bc-4410-8899-ff5b11947632",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d6ea68-a2b9-4857-9be4-78a76713520b",
        "cursor": {
          "ref": "f3219403-4e4e-41e3-8c0e-233f3a45032b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4d89e9e8-a4fa-4141-9d13-69a5fc9f8686"
        },
        "item": {
          "id": "c8d6ea68-a2b9-4857-9be4-78a76713520b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a6dcf4bb-386e-43a0-82dd-ac377e6b9d2a",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f2098a-2f93-4473-9949-0a67d0b91d03",
        "cursor": {
          "ref": "1ffbdb4a-17ab-40ad-9bad-7e129ab9c20f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d3bb1541-8888-4447-801f-d9c8e61a11d2"
        },
        "item": {
          "id": "92f2098a-2f93-4473-9949-0a67d0b91d03",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "55d799d8-1ef0-4db5-ab3a-91fe6794ed11",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb5b900-25cc-4dc3-ad74-33f458d000d8",
        "cursor": {
          "ref": "f94d9dd7-8654-4fce-b4bf-30071a72cfce",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f3a71a3d-9a03-4da1-a25b-3288805ffbcb"
        },
        "item": {
          "id": "7cb5b900-25cc-4dc3-ad74-33f458d000d8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2312d51f-94df-455b-a91a-89e3485414fd",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b5db8c-d606-4c2b-ae2f-542af1fe9db4",
        "cursor": {
          "ref": "9a17551e-bc83-4772-9dea-d184f1800535",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3736d7f9-6e14-41ca-add8-a8d1ef3225d8"
        },
        "item": {
          "id": "77b5db8c-d606-4c2b-ae2f-542af1fe9db4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c5f622fe-3ffc-4cb0-bac7-6515709a820e",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c18355-8ea7-4eb5-9fdb-766070532f05",
        "cursor": {
          "ref": "9d575077-57d9-4442-b66c-0e2c18841f9b",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "53102a0c-9cf3-45e8-b137-f751e649cf66"
        },
        "item": {
          "id": "b8c18355-8ea7-4eb5-9fdb-766070532f05",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "35d14f01-7d29-4986-a3af-029f7423c0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3354cc9-648b-4286-be3d-a5eca1876a7f",
        "cursor": {
          "ref": "fc4081fc-7a2f-4305-ba89-bb58f227147d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "59f9579a-eb19-4fe6-bc5f-3a37aabac105"
        },
        "item": {
          "id": "f3354cc9-648b-4286-be3d-a5eca1876a7f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dcf8bd5c-a8d2-4f34-b386-0596f66da8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37a8f6a-3746-4bca-815a-f18901035813",
        "cursor": {
          "ref": "b4bb1e1d-48cf-4b28-a21f-38ca80fd4fc8",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2a4b70f7-ae3c-4a6a-91f1-2bb1519f686b"
        },
        "item": {
          "id": "a37a8f6a-3746-4bca-815a-f18901035813",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "31c046f4-ad4b-40a6-91bc-d9b8a97e52ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb832ec7-98e4-4174-b764-0ca947eb8d87",
        "cursor": {
          "ref": "b3cf683e-6a57-471d-9bd4-c15307c73f36",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7472fed0-f5ea-4c29-a627-3df367c6295b"
        },
        "item": {
          "id": "fb832ec7-98e4-4174-b764-0ca947eb8d87",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bcde3e3a-3fe2-4516-9245-28404d6a8074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd9d6c0-1160-4f51-84fb-c9f06fb69a77",
        "cursor": {
          "ref": "f43a5b45-f1cf-478f-bfaa-6e3a9d405842",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "82f09c35-20b4-4b39-861e-54d04936cd61"
        },
        "item": {
          "id": "0cd9d6c0-1160-4f51-84fb-c9f06fb69a77",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d70c43c9-ac55-44a3-ab7d-8f41cd73e725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72c9b6e-0c23-46c6-8790-39bfd75101b0",
        "cursor": {
          "ref": "d9d4721b-3386-4a60-b120-0097971c5910",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6086e667-5c94-450f-9da1-08064dd1a223"
        },
        "item": {
          "id": "c72c9b6e-0c23-46c6-8790-39bfd75101b0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "299415b5-fab1-4d98-a27e-b36d80f62ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd3f7d4-1817-403c-8cd2-8668ca160a3c",
        "cursor": {
          "ref": "33830837-07dd-4778-8197-4055adb4a4fe",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bb7d276b-e4d1-4d8f-86a3-ad992f9bf899"
        },
        "item": {
          "id": "3fd3f7d4-1817-403c-8cd2-8668ca160a3c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "479a6509-9145-4a24-983b-9b7cf7e4ed3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50138768-df84-4903-8699-66d73d9e03e8",
        "cursor": {
          "ref": "642b54ad-801c-4144-9ae6-ec1401685d41",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ab626eed-0500-45dd-9b61-ac027066f51a"
        },
        "item": {
          "id": "50138768-df84-4903-8699-66d73d9e03e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6a44db12-34ed-4091-8a07-913eb5025efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1d1ed1-e5c9-4c7e-8501-332aba6553e8",
        "cursor": {
          "ref": "c736bd09-b58f-461a-80e2-8225cbdf61df",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ddf71054-6ef6-4220-bd77-41205a37e9e5"
        },
        "item": {
          "id": "8e1d1ed1-e5c9-4c7e-8501-332aba6553e8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "701bbd2a-7e24-40e5-924c-e8dcfe7ec9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc063ae-a9f8-45f3-af49-3c80af9a7272",
        "cursor": {
          "ref": "9765e308-45ad-4f43-b916-b5ea0ba4e1ac",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1ac5c50b-1a7f-4eb2-b23f-759cd5c6dd1e"
        },
        "item": {
          "id": "acc063ae-a9f8-45f3-af49-3c80af9a7272",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f5d23bea-cf54-489e-aefe-cb2c4fd70017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa7c0bb-672e-4209-ae5f-ae23428d76d3",
        "cursor": {
          "ref": "7c37a830-0182-4646-ab07-cf3452244a45",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7ad20de3-218d-4aae-85e8-703c82a15fd3"
        },
        "item": {
          "id": "2fa7c0bb-672e-4209-ae5f-ae23428d76d3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a08342b0-3d7f-4d2b-b59b-a9ce701b0b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8676d49-b6cb-4f9a-8475-c8ed3a93f9f2",
        "cursor": {
          "ref": "cc4cabf9-295b-4c72-8188-5ad34fd89646",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "98e3d07c-9aaa-424b-83e4-861a57f7dd8e"
        },
        "item": {
          "id": "d8676d49-b6cb-4f9a-8475-c8ed3a93f9f2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b6a75a71-a446-44cd-89e5-212f5be270b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd15f51-e8ec-4444-abfa-7a30fcbcfff9",
        "cursor": {
          "ref": "dbd31d78-7f2d-4135-9670-60baa39cf3f3",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "60206e25-bdf7-4354-97a3-65c14f9aab55"
        },
        "item": {
          "id": "0dd15f51-e8ec-4444-abfa-7a30fcbcfff9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bb4f5410-10d4-40e2-ac1c-b72135183271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04809c20-953a-4864-adde-a107573da219",
        "cursor": {
          "ref": "fc475319-3021-4a42-ad30-0017c9937c42",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2ba72c89-fdd8-417a-8017-ca70e089a2d8"
        },
        "item": {
          "id": "04809c20-953a-4864-adde-a107573da219",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3dd1f892-2256-44f3-aeca-b15bedfbb977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8285cf17-6a9e-4429-8fb9-789ef0584c83",
        "cursor": {
          "ref": "832c310c-bba9-45f2-9ef5-86255ce4277f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "93e6062e-a246-4cd0-ad57-93aa13f4e22c"
        },
        "item": {
          "id": "8285cf17-6a9e-4429-8fb9-789ef0584c83",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3ff72b1e-3272-422f-90f6-c1c59e62ada9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c5c8d8-9bd5-4969-8779-b08221db7b27",
        "cursor": {
          "ref": "e062dfbd-0cf9-4ddb-b4f1-023c56d497f6",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d1f03cd3-ce2c-4714-8b0a-e261fd5ee68e"
        },
        "item": {
          "id": "a4c5c8d8-9bd5-4969-8779-b08221db7b27",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c57392f0-f009-4fc6-85a5-d84d50fab122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea31a16-a37e-402a-b5a4-e7672fbf1f05",
        "cursor": {
          "ref": "d06b9499-bbfa-4df9-8eff-411670aa4d8d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d8167f03-1777-46e0-99b8-fac0347d7b03"
        },
        "item": {
          "id": "aea31a16-a37e-402a-b5a4-e7672fbf1f05",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "04ce4dd2-ed23-431e-8e02-53bb16c15f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c430e693-f45d-411c-9fcb-501232dc198e",
        "cursor": {
          "ref": "c77ed3fc-e470-475e-95b5-c9c7481d8f24",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "71d68c62-e642-452b-adf0-5c7b541d1c54"
        },
        "item": {
          "id": "c430e693-f45d-411c-9fcb-501232dc198e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "240b2d74-6a61-4b34-a0db-675503748651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1499c007-128b-4e64-8317-37f08843a85c",
        "cursor": {
          "ref": "695c5eea-232c-47ca-9bd9-97d5cb9774f3",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6adc4880-6773-4be5-bb55-a973e4774cde"
        },
        "item": {
          "id": "1499c007-128b-4e64-8317-37f08843a85c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9b421671-d005-4024-b9d7-b2c570caafb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d26f88-703a-422c-83b5-152ae26b93b4",
        "cursor": {
          "ref": "85413f52-4031-455c-9740-2cb842760677",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c3056b93-cc1c-4600-9b15-910aa145d71f"
        },
        "item": {
          "id": "c7d26f88-703a-422c-83b5-152ae26b93b4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b29e139e-7fe4-42a8-8885-8843dec4e669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df3bf72-51d5-4b1b-81f6-4c9e53b32326",
        "cursor": {
          "ref": "21b29d6d-e3c6-4ef9-a263-b144821c6823",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "73124623-8b23-44ca-8cd0-0df61d267e30"
        },
        "item": {
          "id": "5df3bf72-51d5-4b1b-81f6-4c9e53b32326",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9a8894d3-90c0-4767-a761-496f6c628b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40c3489-0146-467e-a3f2-2e182b4ca519",
        "cursor": {
          "ref": "fb910a36-7371-4b05-b3de-d48cf16b86cd",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9df0bed1-5f48-4dad-90dc-f9489204568a"
        },
        "item": {
          "id": "e40c3489-0146-467e-a3f2-2e182b4ca519",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1ebab5c5-ba9d-428d-aa27-5c70341d830a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682c1b61-7f84-403c-9fba-20c449fdda67",
        "cursor": {
          "ref": "f59ee701-6334-4211-b0f1-426df838041d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d2c04517-9c96-4769-8fda-9da28b1a0a95"
        },
        "item": {
          "id": "682c1b61-7f84-403c-9fba-20c449fdda67",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "989ec60f-dd42-44a6-b856-cfd3145745c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b668907-34f1-4ab2-be06-3431ae4dad36",
        "cursor": {
          "ref": "5d59f828-c651-406a-af14-d17422d36d21",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "51f36b2d-5dd4-413d-8229-2aaf3208fb72"
        },
        "item": {
          "id": "2b668907-34f1-4ab2-be06-3431ae4dad36",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "10421b25-2ed3-46f9-8569-cf0023422649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08296c28-55bb-4372-812c-d8f6b584db44",
        "cursor": {
          "ref": "4f54bf56-a28c-4c05-92ce-6f080dd88d46",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "79b87791-9784-4c2f-be58-55d5858fc3d1"
        },
        "item": {
          "id": "08296c28-55bb-4372-812c-d8f6b584db44",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3a217804-20bf-4d4b-9450-222b52ee19ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ef2185-6e63-48d8-95f2-fca2156e10da",
        "cursor": {
          "ref": "dc74a0ce-1b96-44f1-997a-b2e958c03224",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d04fce07-44ab-4c3b-a44a-84500621ca70"
        },
        "item": {
          "id": "b4ef2185-6e63-48d8-95f2-fca2156e10da",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "97665d04-3023-4252-9625-71cd0632c376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d94e889-2742-4149-9753-5adc1076b3d9",
        "cursor": {
          "ref": "f115a498-2026-4fe4-a77d-df90993b118b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0ec251b4-8c0e-4440-aa4c-fedd3063d7dd"
        },
        "item": {
          "id": "7d94e889-2742-4149-9753-5adc1076b3d9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "50cef003-c0e3-4f3e-9c88-b257b8e0c131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407e77ac-1c6a-48ec-bffa-b85790e5dfa2",
        "cursor": {
          "ref": "57b57ea8-eca1-4acc-a71f-27f2b92b3fcd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "66a9587f-380a-415a-8abc-a9563a3e9ed1"
        },
        "item": {
          "id": "407e77ac-1c6a-48ec-bffa-b85790e5dfa2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b6ba58a7-69e4-475b-8921-ec6d80db9114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2832e918-823d-4383-b027-4c8345b5b811",
        "cursor": {
          "ref": "52ae4fda-0386-4535-88d6-1d5b0d67185a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cc4ccd29-db2d-411f-8fad-4affcd3c1636"
        },
        "item": {
          "id": "2832e918-823d-4383-b027-4c8345b5b811",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e8867660-a1d3-42d6-a642-c0de6006d806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a8f5e8-a53c-44dc-912a-d1a7b98d8f61",
        "cursor": {
          "ref": "81ca4001-dbce-4d9f-96db-588a86dc52d6",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "71ea30fe-2ebf-4d24-91da-96aff579b447"
        },
        "item": {
          "id": "10a8f5e8-a53c-44dc-912a-d1a7b98d8f61",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dcb7e497-8b81-4fc4-ae37-ecdf80d134c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10715a54-3f96-4162-98a4-00801afc776c",
        "cursor": {
          "ref": "699f6485-bf39-4dc7-8413-e6001a4fa7a5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0be6a03e-8e23-457e-a2d3-94cb754783d0"
        },
        "item": {
          "id": "10715a54-3f96-4162-98a4-00801afc776c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ad862864-c691-4605-8036-e64b7ca436ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba19c71-cd34-4e19-b5a8-6a47d1b0d8d7",
        "cursor": {
          "ref": "7a4a1ab4-a9ec-47cd-8afd-2a5db4e58325",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "53eacc80-9341-4f36-b2c1-02be0f0ea05b"
        },
        "item": {
          "id": "4ba19c71-cd34-4e19-b5a8-6a47d1b0d8d7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8809afb3-4d63-4767-93a6-78fd4bcec00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbb4380-b13e-422c-9663-3a8d858b216a",
        "cursor": {
          "ref": "b4e51ad5-04c9-462b-9a72-14a875b05763",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8163e8f2-d640-4951-a98c-add48bfb2a41"
        },
        "item": {
          "id": "ebbb4380-b13e-422c-9663-3a8d858b216a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c05a28c0-f874-4cc5-89fb-7e3bcb9f30f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd9f1c3-f593-446c-83d7-9c1e7ddf55ae",
        "cursor": {
          "ref": "5f291ee7-6353-4ee4-a01e-429783b379da",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7b660433-a052-4eac-a577-f874298e7024"
        },
        "item": {
          "id": "efd9f1c3-f593-446c-83d7-9c1e7ddf55ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9aa54794-4904-42bd-907f-d81f1ec65ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b758a4f8-3d20-4c88-b459-afa5555dcb2d",
        "cursor": {
          "ref": "a9e9b2e8-d46f-4c6c-94d3-a7243bd19792",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7c44546f-4ba0-45ff-a1e1-3661e586d655"
        },
        "item": {
          "id": "b758a4f8-3d20-4c88-b459-afa5555dcb2d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "950100a2-7dec-4cef-ba57-e85f83614bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0930a788-955b-4325-96e1-714c96195bd4",
        "cursor": {
          "ref": "1ce89c79-7543-4b3f-99aa-239c62ef88a5",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "df691c91-45ad-46ea-8352-55635e99b5fe"
        },
        "item": {
          "id": "0930a788-955b-4325-96e1-714c96195bd4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "23c77305-c81a-4f4e-8a6c-dfa5de6b159f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa24d42-39e4-49b9-9b01-b7690e392cb7",
        "cursor": {
          "ref": "bffabc54-f0b2-482a-a0cc-b0ba86db74e9",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3df9e9ff-9a22-4cac-af57-36f82400dc05"
        },
        "item": {
          "id": "8fa24d42-39e4-49b9-9b01-b7690e392cb7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dfcc0f26-3c0a-49fe-ba8e-65d6a785c075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10db18b0-8c2b-4b90-a43e-798dcc15e2a3",
        "cursor": {
          "ref": "bd5142a6-5205-4a68-a713-b9b3e9ee7a8e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0f4d9a3d-dca9-4d6a-b5df-24c20365300b"
        },
        "item": {
          "id": "10db18b0-8c2b-4b90-a43e-798dcc15e2a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "650ef908-8e87-45b3-a297-75358fd9b972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b71ea0-53ad-4beb-ae8b-42e7b750e75d",
        "cursor": {
          "ref": "e9e24671-c724-451f-adca-b0125edb285f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "49f5360c-7e00-42e5-b163-343a824ccb5a"
        },
        "item": {
          "id": "d4b71ea0-53ad-4beb-ae8b-42e7b750e75d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9af37ffb-dc9c-4264-8001-fb09e936b9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdecb3e5-289d-48e4-b7a5-0f1f318cdd9e",
        "cursor": {
          "ref": "ae34fcf3-4804-4014-b0f2-cbeda10c296f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5af3b24d-e751-4459-acd9-22255403c10b"
        },
        "item": {
          "id": "cdecb3e5-289d-48e4-b7a5-0f1f318cdd9e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a06f1f38-9e7a-4a0e-8710-e2bf025244e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d69251f-fafa-4ede-9afd-08a82331a3ff",
        "cursor": {
          "ref": "89af4844-db84-4376-8332-1ed15ac838d4",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9e41f033-b6c2-412d-8d3b-88f69385eb20"
        },
        "item": {
          "id": "1d69251f-fafa-4ede-9afd-08a82331a3ff",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "478961b7-accc-4572-ae4a-a989cdbb88d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b03684-39b8-4fac-a0da-0a67f0a34f53",
        "cursor": {
          "ref": "914a0cf5-3cd1-446b-938f-0fe291663621",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b1305583-495c-410e-ab7e-8afee92bf0d6"
        },
        "item": {
          "id": "18b03684-39b8-4fac-a0da-0a67f0a34f53",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "025491a8-bdfd-4030-8e07-7a90785344d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597425a5-6a8d-4a6f-943f-0ddb15caf170",
        "cursor": {
          "ref": "cdda0bff-ccca-44f6-93cc-ecd4680f8944",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e707571f-491a-41da-8063-523d1496d447"
        },
        "item": {
          "id": "597425a5-6a8d-4a6f-943f-0ddb15caf170",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "48bb95c5-5666-45a4-813b-7a92b39bc28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37099147-619b-4628-a116-8570aa5c5370",
        "cursor": {
          "ref": "c60a5e7d-94ce-4788-a9ec-195b104c1ae2",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ab0119ab-d2bf-40e3-b18d-931190aeb440"
        },
        "item": {
          "id": "37099147-619b-4628-a116-8570aa5c5370",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3ea6feb3-28d0-45f1-8736-69f606e3a3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555e7bac-e39f-41c1-a6ce-29ed62ba8c63",
        "cursor": {
          "ref": "26a3b55c-c46d-47cc-9957-6c59eaa7fbaa",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b9fa3323-b878-4c5f-9eac-8ae644fa209e"
        },
        "item": {
          "id": "555e7bac-e39f-41c1-a6ce-29ed62ba8c63",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "32800660-0a16-440a-92e9-8501862bdc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614f8ca5-f6e4-47d7-9d44-41c58e824661",
        "cursor": {
          "ref": "aab13167-4438-40e1-a565-ac5917b84850",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bfae4737-c9f5-4eb1-b746-6f91da917383"
        },
        "item": {
          "id": "614f8ca5-f6e4-47d7-9d44-41c58e824661",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9a17822a-6dd0-4dfd-b49e-fcafe8346c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18fbf71-a430-41ce-a2ed-357a3c551f54",
        "cursor": {
          "ref": "7c73c068-9588-4a62-8f70-bf5e415f3f5e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b5230758-c08c-4597-8412-bf9ef5713f72"
        },
        "item": {
          "id": "c18fbf71-a430-41ce-a2ed-357a3c551f54",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e1fc2113-9ddd-4ef8-b20a-6af7a7e162a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a920379-0f32-402d-9942-1aed51f937a7",
        "cursor": {
          "ref": "de08b846-7eba-4d87-ae1e-4a7daa0f79eb",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3949db5c-33cc-49df-bb0d-92d726397069"
        },
        "item": {
          "id": "2a920379-0f32-402d-9942-1aed51f937a7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5da8d45c-3718-4702-bf3c-d4e8e2a83ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49b986a-e8c1-408c-896a-b955218b2512",
        "cursor": {
          "ref": "3a9891e3-d4a7-4acb-98b2-ef89856451db",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4d9bfff9-a1f7-46f2-b8e2-f2a986765f20"
        },
        "item": {
          "id": "f49b986a-e8c1-408c-896a-b955218b2512",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bc7b13a4-0f80-447d-a8a4-aba2ea239ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ac91ea-577b-4b1b-8c24-277c6db63d66",
        "cursor": {
          "ref": "fabd838e-be1f-4eb4-94cc-39562c2640b0",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c79ca579-7709-4f0b-a69d-38fcbe5f3f8e"
        },
        "item": {
          "id": "65ac91ea-577b-4b1b-8c24-277c6db63d66",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7b87e691-12f4-4c24-9174-ebe7c5bafc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fdf3fe-af11-4469-b60b-75b2fc57c18c",
        "cursor": {
          "ref": "f9764b85-e3b4-44dd-b8ab-ebbf4a474824",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2a66611d-53aa-4d52-9a3a-7f503f584e97"
        },
        "item": {
          "id": "20fdf3fe-af11-4469-b60b-75b2fc57c18c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d78bd1de-d607-4340-9cde-7f6db4cfa5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f474d902-2e1c-46bc-bc40-b4707107ebb7",
        "cursor": {
          "ref": "ebc49cf6-bbe0-41ea-9ba2-85c80fb62535",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8204308d-c1d8-437e-8ff5-39e84cd49aa2"
        },
        "item": {
          "id": "f474d902-2e1c-46bc-bc40-b4707107ebb7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e081b784-41be-4e47-824c-535d039445b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a64a726-5e91-4265-8a05-c24b9e38de40",
        "cursor": {
          "ref": "04967d8f-2c31-441f-ae4f-9d055e97c2fa",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "84006f2b-d742-450d-801b-f98e697a4c01"
        },
        "item": {
          "id": "6a64a726-5e91-4265-8a05-c24b9e38de40",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b682b5af-4a32-4bed-8f95-7f011369943a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82e56d7-d551-4a03-91e3-34b424ecd3e3",
        "cursor": {
          "ref": "c331043d-0898-4731-848d-987b2cedf159",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e0a60c1f-0121-4d05-8e62-8542a3e57ec8"
        },
        "item": {
          "id": "d82e56d7-d551-4a03-91e3-34b424ecd3e3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "01dd2c6b-8909-4fda-85b8-914abe9ba341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab164645-eb03-4e26-9fb0-38bbd18d8d32",
        "cursor": {
          "ref": "d89cd994-9462-4762-92e9-51be0cbc5fc4",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0a391357-4e35-466c-afd5-54cedd79d147"
        },
        "item": {
          "id": "ab164645-eb03-4e26-9fb0-38bbd18d8d32",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e385f3c0-f786-4354-9ae4-bd5ed0bb3022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3493c652-aac1-4fd1-a011-923b2aae81b5",
        "cursor": {
          "ref": "bbb1d106-49ff-46c8-a226-70a601400688",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "abd3ac9e-3067-4300-858d-81e7a1b12ebb"
        },
        "item": {
          "id": "3493c652-aac1-4fd1-a011-923b2aae81b5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "720da1f4-4882-433e-8163-67c75250dd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d045935-7021-4ef1-8477-f6e11c1de8fa",
        "cursor": {
          "ref": "ea66d558-401e-4631-a58c-663fc87d3470",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e8f6e20c-3fe8-47a8-98fd-d187b8d319b5"
        },
        "item": {
          "id": "6d045935-7021-4ef1-8477-f6e11c1de8fa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9b6201c0-ac95-426b-b885-1d65edcb994d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e67850-858a-441a-ae5f-41da5633c984",
        "cursor": {
          "ref": "7c0a44de-99c2-43ab-9b9a-31951b6c60d5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2615fd74-b025-40fb-856b-130dbc351ae3"
        },
        "item": {
          "id": "b2e67850-858a-441a-ae5f-41da5633c984",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "752f4e97-e174-4cc7-a154-577d380ec38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12988713-763f-4f1a-8b4e-8b14c06b88c7",
        "cursor": {
          "ref": "82115523-c71f-42c0-807a-4efb1cbbf102",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f814ebf7-a3fb-440c-a4e8-72bce46fe7db"
        },
        "item": {
          "id": "12988713-763f-4f1a-8b4e-8b14c06b88c7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7111dfa-8bd2-48d1-9d47-917ad05e6a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8615a5-17e7-4c9e-bfef-fafe6539c1f5",
        "cursor": {
          "ref": "95da08c0-44c5-4c08-8f96-8107af3f9818",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4c3758fb-2445-4a39-9b29-837c7743fa9d"
        },
        "item": {
          "id": "fe8615a5-17e7-4c9e-bfef-fafe6539c1f5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5fcc3787-ab91-46ce-8841-e8bfcd2d5e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4f0a95-01cd-433b-ba7e-80e278e76727",
        "cursor": {
          "ref": "8833aa01-6208-4cc2-83d9-2a9d02bef758",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a9c6c3a1-67e7-49be-843b-9989281fe06c"
        },
        "item": {
          "id": "5e4f0a95-01cd-433b-ba7e-80e278e76727",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b5a443f7-2f33-4a37-bb2d-07a420315df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8697d1ff-3065-4cc7-9efe-9c1177bcf50e",
        "cursor": {
          "ref": "32a72bb2-c864-4039-be51-e4dc3cf5c32f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "51abe62f-4460-42db-ba5f-8221cbb4906c"
        },
        "item": {
          "id": "8697d1ff-3065-4cc7-9efe-9c1177bcf50e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ee049ead-fcde-4395-9209-ece22d336201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fd796c-e0c8-4dd7-99cb-cab6bccb6e0f",
        "cursor": {
          "ref": "95bccca3-c28f-48b9-855e-519aae3df5fd",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "80789923-8e96-4b2e-8b63-cfcd6baf6d1d"
        },
        "item": {
          "id": "31fd796c-e0c8-4dd7-99cb-cab6bccb6e0f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "84420e4b-78f5-4ee3-97df-1c38ae1d1453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cbe922-8df4-4067-b928-7746d7636c41",
        "cursor": {
          "ref": "9e07d676-9c3e-4aae-8720-3b652e0bec79",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "44697911-bb9b-4ec6-9a73-14d4c2ff3311"
        },
        "item": {
          "id": "a2cbe922-8df4-4067-b928-7746d7636c41",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "204fc529-2af0-4e8c-a313-2528fa299fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7502d7-d9b8-4c5e-b1e2-dce0842a5669",
        "cursor": {
          "ref": "03f28a8d-3260-4d05-b55a-95474220d2e0",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e602e495-8135-4aac-a9d1-6b10af2c1a9e"
        },
        "item": {
          "id": "4e7502d7-d9b8-4c5e-b1e2-dce0842a5669",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6ba60cb0-7d75-4296-b457-8dcae6546f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414a806e-9c85-4d0c-953f-822ac0594e66",
        "cursor": {
          "ref": "b42fb1e0-b81a-4523-b487-38b4d28a45d2",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a2843a2d-b39f-474d-8278-ee8a3a88d10b"
        },
        "item": {
          "id": "414a806e-9c85-4d0c-953f-822ac0594e66",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d597e355-5943-4f1b-82f4-d7e3cf5383f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86f7767-732a-4fac-9aa7-fa2f94259f1e",
        "cursor": {
          "ref": "e09da293-4961-4c65-becd-5ca169468b0a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "55eb0538-09c5-46cc-b252-5219c36aa372"
        },
        "item": {
          "id": "a86f7767-732a-4fac-9aa7-fa2f94259f1e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8d3a3c8e-3bfd-4f0f-b409-81375d38ce38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf04110-7e11-4b48-91bb-530eb86b8301",
        "cursor": {
          "ref": "fbe883e1-5af8-49b3-b48c-7eb17f21711a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ffea6090-53ba-48d5-a3f5-07bf7474b25f"
        },
        "item": {
          "id": "8cf04110-7e11-4b48-91bb-530eb86b8301",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2e463be0-cb97-4dc6-ae63-9402cdf0af3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4f3fa2-9d87-4abf-be37-5131f7f77f14",
        "cursor": {
          "ref": "74d33514-0152-4d16-b1f2-0841afe7d1d9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9814aaac-6ff1-4eaa-8d8d-5b055b411185"
        },
        "item": {
          "id": "4e4f3fa2-9d87-4abf-be37-5131f7f77f14",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b0a4b168-f8ef-4257-adf0-35d007b3f3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97150d10-f669-497c-8e84-a8ce65ac4e37",
        "cursor": {
          "ref": "f25980e2-7307-465c-89f4-0de33c78d7c7",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c9f0f4be-d05e-4926-baae-a97b0806de0e"
        },
        "item": {
          "id": "97150d10-f669-497c-8e84-a8ce65ac4e37",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "55757edf-620f-4961-894f-5683f70b19ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e79b26f-86bd-41b7-b715-0bfad3c87cf8",
        "cursor": {
          "ref": "1f0cac91-eb31-449c-8f11-34d16b06dd3a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d8c0933d-0472-48b2-b393-fd6a1a29e73c"
        },
        "item": {
          "id": "9e79b26f-86bd-41b7-b715-0bfad3c87cf8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4fda5ffe-fe21-4234-bec6-cc03b516da2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0f00dc-e0b3-43de-bc5f-4b3c183f7aa1",
        "cursor": {
          "ref": "9e5d2d4a-982a-42c1-ba01-876a55d61fca",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2eb6fff8-637a-43af-9f19-9a00451d869b"
        },
        "item": {
          "id": "dc0f00dc-e0b3-43de-bc5f-4b3c183f7aa1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "43ca424e-3211-4d0d-b06f-04d80aac4798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063c7366-07f1-4f12-94d8-3febf0b59996",
        "cursor": {
          "ref": "36baa39a-f712-466f-b0de-9875ed0e5b93",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "096c8db4-d13e-4047-86c9-e97f4872410a"
        },
        "item": {
          "id": "063c7366-07f1-4f12-94d8-3febf0b59996",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0e845227-ed43-41aa-ab1f-54d176d1c7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d648e8-0ce5-4c42-ab04-c12eb72b33f9",
        "cursor": {
          "ref": "01893ca2-a39c-447e-9f62-1f64e56c946f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2b2a9d2a-a0b4-40fd-abfe-3e7bd760d440"
        },
        "item": {
          "id": "23d648e8-0ce5-4c42-ab04-c12eb72b33f9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0520587a-a104-4451-818f-5d260350c2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36bc4d4-1d7d-4dca-b379-dc75ee273d3e",
        "cursor": {
          "ref": "412e2042-e8ef-42c1-bd9c-9814bef5292f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f6aaf547-a3f9-4fc0-bda8-a5140efc3182"
        },
        "item": {
          "id": "c36bc4d4-1d7d-4dca-b379-dc75ee273d3e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5afd41d3-96dc-4e1d-aab9-c9bbcabd742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e030c21d-f9e7-4686-af9f-3a6177c02250",
        "cursor": {
          "ref": "142eee61-490e-4bc7-b22c-bcedf9801897",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e64e66fc-f056-4a25-a09d-5368cb4fa5e3"
        },
        "item": {
          "id": "e030c21d-f9e7-4686-af9f-3a6177c02250",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "689557bd-01ab-4c9d-acee-35caae52a3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bb027b-9076-4a6d-8d25-36566a49bc85",
        "cursor": {
          "ref": "3b2a6379-255e-46dc-a653-c3cfb84b8f82",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d97f44c9-fb22-40dc-a00c-9cd33600eb16"
        },
        "item": {
          "id": "c8bb027b-9076-4a6d-8d25-36566a49bc85",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4a4dc15d-859d-470c-9998-fa915bbc0efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d94bad7-5479-42a9-ad7a-3f7898533585",
        "cursor": {
          "ref": "ff4b23b1-d90d-4301-8991-e32e85f9c8d1",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "32aca61b-e2ed-43e5-9921-1f078a347b55"
        },
        "item": {
          "id": "7d94bad7-5479-42a9-ad7a-3f7898533585",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e55c185c-cbf2-4cf9-8d14-1035c7dd734c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6776d7-59e4-41a3-8ffe-d4e2e4bdc163",
        "cursor": {
          "ref": "4bdc1d86-c7ac-4c6c-80fa-aed5ba62a29e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "af3a2599-050e-4acb-9fb4-db087122d2c1"
        },
        "item": {
          "id": "ba6776d7-59e4-41a3-8ffe-d4e2e4bdc163",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1f757410-22df-4aa7-b313-89a76ba671ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fb1976-916c-4c41-8bd8-9bca68995f5f",
        "cursor": {
          "ref": "891084bf-adc4-4682-b0b7-901278325541",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4af30635-f4b6-4aea-9a97-7aa6c0772ca5"
        },
        "item": {
          "id": "41fb1976-916c-4c41-8bd8-9bca68995f5f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "328c57b8-5adf-488b-aa22-f2176615fbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5115ffff-313a-48da-9a9c-261f7801772c",
        "cursor": {
          "ref": "17321753-3f91-4d90-bbe7-d60c8c542a50",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c08b65dd-d212-40e2-a99a-45fdad77873e"
        },
        "item": {
          "id": "5115ffff-313a-48da-9a9c-261f7801772c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c423fd92-c79f-4308-9a5e-523d1889c1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a7651d-2737-4a5b-8f5b-2aff41370dcb",
        "cursor": {
          "ref": "61bcb5d3-f202-4190-be00-20f067575b22",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5384ccd4-4ae7-42b7-bfb1-b5354f0c83a8"
        },
        "item": {
          "id": "66a7651d-2737-4a5b-8f5b-2aff41370dcb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "07a4f86b-fab1-429e-a059-4b241a1e7a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356003b5-0a41-4508-950d-c614a597fc93",
        "cursor": {
          "ref": "772e3c9a-28e6-46e3-b0a6-f19bbb3a525d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9679b312-d42f-49c2-917b-318fd67b8dbf"
        },
        "item": {
          "id": "356003b5-0a41-4508-950d-c614a597fc93",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5941bdb7-600d-4d7a-ac11-1ffa59f52ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2240aeb1-310c-454d-9bf4-d0dcaf724ccb",
        "cursor": {
          "ref": "ff8f4a91-10ea-4611-b273-60600a201fd5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9a6796e7-4436-4e5c-9a35-5b7d56f7baac"
        },
        "item": {
          "id": "2240aeb1-310c-454d-9bf4-d0dcaf724ccb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0a1b85f0-faec-47fe-8e2a-195b49163e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b812e3-8fa5-496d-986c-789ba39c741e",
        "cursor": {
          "ref": "c05b9e1a-1a42-4b15-b513-2593a084c952",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "10c87773-63ee-4706-9513-3fcb657adb0b"
        },
        "item": {
          "id": "92b812e3-8fa5-496d-986c-789ba39c741e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a06a71ec-7703-4b5c-a63a-b291d14388a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53c4a67-7c30-488d-9ab2-839540442399",
        "cursor": {
          "ref": "8f8f29e8-5800-4802-8481-9a42ddf12439",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a4f4271a-2c96-4eac-a511-ac21983010d1"
        },
        "item": {
          "id": "d53c4a67-7c30-488d-9ab2-839540442399",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bbffc624-f56e-4dc4-9796-241bd105a262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910db8bc-a9ca-4ff9-9832-54f087e73dab",
        "cursor": {
          "ref": "94682760-cc3c-4cfb-8ac3-fdd4c1c8377c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f65401fc-c08a-4694-a9cf-09dc1cfcac9f"
        },
        "item": {
          "id": "910db8bc-a9ca-4ff9-9832-54f087e73dab",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "83a1db87-734c-47a0-a82e-5ac161318dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060312fd-b26d-4418-8db3-e4ffeaee30a6",
        "cursor": {
          "ref": "29b60c4d-fcf5-4576-8ed2-4d2a958606e2",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e4e91e39-2101-4ed9-8e8f-50fb0e454865"
        },
        "item": {
          "id": "060312fd-b26d-4418-8db3-e4ffeaee30a6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ca5833a4-ebe8-46a3-bad0-75fa7ce84642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc9bbb1-8900-4c0a-a0ac-f043e1170a8f",
        "cursor": {
          "ref": "e3fcd69b-b5a4-4efc-9145-b18412061721",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "29f1ad32-42a2-4133-85e6-db2371723022"
        },
        "item": {
          "id": "bbc9bbb1-8900-4c0a-a0ac-f043e1170a8f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f3a20fde-5cfa-44ff-8b0f-d6677c706fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c77b867-4db2-44bd-ab19-76014a670487",
        "cursor": {
          "ref": "b4f80c0b-76df-4659-8094-d312617502dd",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7dc3e5e0-a9aa-41e4-9535-4a1020d203a8"
        },
        "item": {
          "id": "4c77b867-4db2-44bd-ab19-76014a670487",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0cf90d31-07dd-40c3-8513-8c277ceaaaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f293b50-fb9c-4722-9e0d-86c9c8403b22",
        "cursor": {
          "ref": "2763f9b9-5e67-4a14-aab5-dad79c82bf2f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e4bb97c9-879b-413b-b0a6-569a625a61a2"
        },
        "item": {
          "id": "7f293b50-fb9c-4722-9e0d-86c9c8403b22",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2ef79603-ff06-4de1-9725-231e57d585ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d400aad-5fcc-4d6c-b00b-8e4124505f7f",
        "cursor": {
          "ref": "e6366a32-a7c5-4bf9-a201-f054b9f01ead",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d050b781-1a37-40f3-900c-65b8968ca624"
        },
        "item": {
          "id": "8d400aad-5fcc-4d6c-b00b-8e4124505f7f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5d4636a1-c4f0-4e1c-8137-15bff0903917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8c7c6b-9bc1-475a-959c-79a2f11abb35",
        "cursor": {
          "ref": "33b893ac-ff5f-457a-829e-32eed29cb396",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ecefeed8-a35a-446d-be42-48d75b12282d"
        },
        "item": {
          "id": "1f8c7c6b-9bc1-475a-959c-79a2f11abb35",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e0a8bca3-ee37-4ceb-8050-239ba627ebe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03dcae3-0e65-4f03-af1f-63aa389493c9",
        "cursor": {
          "ref": "06ca67d0-f27f-4580-a3aa-852ea4af692c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6d4542b2-15f6-47ef-a31b-695fa32c2e06"
        },
        "item": {
          "id": "d03dcae3-0e65-4f03-af1f-63aa389493c9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b277d3b6-f3bb-416f-be59-077b0034d849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1aa52c6-b864-49e0-afc4-eeca9ccfad5c",
        "cursor": {
          "ref": "0e73038e-e6cf-4178-bb39-681e23967161",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8f9e80e7-2402-4598-b9a9-f21be8913246"
        },
        "item": {
          "id": "a1aa52c6-b864-49e0-afc4-eeca9ccfad5c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d110f1a6-518c-411a-a247-0329bda68b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814a705c-4742-4600-880b-af97eb591840",
        "cursor": {
          "ref": "e6e884c8-46f7-45d4-98a5-d28cfc292dde",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "33076df9-1e45-4307-af2f-1787f0f7ccec"
        },
        "item": {
          "id": "814a705c-4742-4600-880b-af97eb591840",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c6c6c525-7240-4670-a8dd-34cfd14f9c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b629605d-740c-4e93-858e-3c54fa685eb4",
        "cursor": {
          "ref": "335f0a33-f343-438f-a270-e02db7cb8c12",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d4defcca-07b4-4db0-99b7-d35925ee6140"
        },
        "item": {
          "id": "b629605d-740c-4e93-858e-3c54fa685eb4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "534a2f42-d1b6-4e88-b0f7-8298984290e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4b088f-219e-406a-8f4a-9ee17299eb8f",
        "cursor": {
          "ref": "ee124c8d-ed23-4c84-993b-dcf906938d8b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8160c0da-a10c-4b87-b41a-dbc8e3b14cb8"
        },
        "item": {
          "id": "9f4b088f-219e-406a-8f4a-9ee17299eb8f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5d9afbcf-dcd8-4b2c-8c0d-ba2df498baa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ca0446-dd74-4bda-a761-82fe38ea66b5",
        "cursor": {
          "ref": "eab09e45-2337-4a61-bc5c-8dd76af7b504",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "94f537c7-e327-4374-889d-26ac2dbb6c89"
        },
        "item": {
          "id": "57ca0446-dd74-4bda-a761-82fe38ea66b5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9b218045-cb5b-478b-a8f7-83937b4aff9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294ef9d6-2a57-4e35-a26f-dc81872e85ea",
        "cursor": {
          "ref": "7c46be74-5b9d-4c45-b56f-a1828e10e3c4",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9b5389ba-a69a-47d2-9bf3-a464e967aa20"
        },
        "item": {
          "id": "294ef9d6-2a57-4e35-a26f-dc81872e85ea",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c2fd7380-f762-4706-b901-7153254605b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff1f232-e93c-4c32-9d49-227f5428f35f",
        "cursor": {
          "ref": "1d113a2c-7b67-48d9-b8d6-b6e5391e1ca2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e0d0bfe8-39a2-4a95-a6f9-daa79b8740b0"
        },
        "item": {
          "id": "dff1f232-e93c-4c32-9d49-227f5428f35f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "67391459-d010-447a-bb4c-a4b53777c873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362fe5cf-7c4f-4c7d-865c-f3dad0a31670",
        "cursor": {
          "ref": "24b062da-dc06-4041-b6cc-1191619d867a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "42132358-6fa6-45f1-964c-478722fed7e3"
        },
        "item": {
          "id": "362fe5cf-7c4f-4c7d-865c-f3dad0a31670",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a853fb11-2d5d-4f81-8080-1bdff4abe9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327707d6-8e6b-460b-9f34-d32c67a49e45",
        "cursor": {
          "ref": "7190f9a9-7d8f-42d5-96a7-a7610423d55b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "204ac34f-aa58-489b-958d-024fcaae66c3"
        },
        "item": {
          "id": "327707d6-8e6b-460b-9f34-d32c67a49e45",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8aa651fb-f3f5-4d64-870c-fde07804b1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a63f539-94a6-401c-8dac-cee9d3f140ed",
        "cursor": {
          "ref": "3969bd39-081e-4e22-a549-04cff047fb03",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "da11c703-4e38-4985-9995-b85ad154ebf9"
        },
        "item": {
          "id": "4a63f539-94a6-401c-8dac-cee9d3f140ed",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "38d2c496-d0f5-4d35-bd5c-7bf3ca3ccd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beacde38-b01c-4fc4-8760-062757a249ed",
        "cursor": {
          "ref": "c713e459-4762-4693-9a11-1cc4a28bf49a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "df1159b9-c4fe-4493-8b3f-5eef8fa713a5"
        },
        "item": {
          "id": "beacde38-b01c-4fc4-8760-062757a249ed",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "66c68f4b-5811-4db9-a5d8-dc0ac246ecea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9e37cf-ad5e-4a33-810a-c71810c9e6c1",
        "cursor": {
          "ref": "7380db76-ea2e-416e-b627-67f7b817dca9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4ed801f2-dd49-414a-bef6-793f361f93c9"
        },
        "item": {
          "id": "4d9e37cf-ad5e-4a33-810a-c71810c9e6c1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "35533727-6b80-4179-b133-78d7fae04803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a316476d-fd8e-47d3-93a7-41c72922c5a7",
        "cursor": {
          "ref": "960dda6e-60ed-4446-b9b8-d4a81ede9526",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9bb99de1-ad98-4676-a18b-7749e5272e82"
        },
        "item": {
          "id": "a316476d-fd8e-47d3-93a7-41c72922c5a7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e6d06094-b13d-4502-8ec1-3b73b848c737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d56a83-7d16-4f27-b319-1f446786cfde",
        "cursor": {
          "ref": "4cdafd24-7c0a-4d41-8229-9d0a776a5f44",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "36027ab6-deba-4a17-a0a3-4f549033d8e1"
        },
        "item": {
          "id": "35d56a83-7d16-4f27-b319-1f446786cfde",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "36208ea1-18cd-4eb3-aab9-81be03efd902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736d1808-f703-4537-83b6-0abaeee6df1e",
        "cursor": {
          "ref": "8d68845a-7eba-47d3-996d-4923b4b5afdc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c5441905-5813-4054-951c-a21ae5d6805d"
        },
        "item": {
          "id": "736d1808-f703-4537-83b6-0abaeee6df1e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "089fb514-39fc-4534-b0ff-afc813400d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1681e6-3bf3-401e-990a-57361720b9b9",
        "cursor": {
          "ref": "d92a4b9b-c448-44f2-b16d-b1e8e333e13b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "745f6959-449c-4bea-954c-d2f0bf69e16a"
        },
        "item": {
          "id": "ac1681e6-3bf3-401e-990a-57361720b9b9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bd025943-9ff4-4bb4-94f8-57159ac38db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101c9ff7-6d27-4446-bf2a-aba5e6551a89",
        "cursor": {
          "ref": "8d361a11-d7ff-4a7f-92f7-daaf2dc71919",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "50785ba3-1316-4aaa-814b-0629a01500bf"
        },
        "item": {
          "id": "101c9ff7-6d27-4446-bf2a-aba5e6551a89",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ead12a92-6c26-4e61-83f7-7e330d09048a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af30cb0-9423-4b0c-9380-eb5107a6fa19",
        "cursor": {
          "ref": "de4370de-90f4-42bf-ac33-695ad82c4033",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a762c504-6030-461a-bf27-dad38b5140d1"
        },
        "item": {
          "id": "0af30cb0-9423-4b0c-9380-eb5107a6fa19",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "473f0d15-e954-4b08-8c85-56b2425b304e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f24df7d-e553-4d07-a212-07d8c370f80a",
        "cursor": {
          "ref": "e7d396d6-01ae-41a5-b755-fa3bcab67d28",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1d4cf6c8-93d8-4721-8fd7-cf721bd1df00"
        },
        "item": {
          "id": "1f24df7d-e553-4d07-a212-07d8c370f80a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6894f9f8-495b-4c18-8ad0-8e0670eecf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a73fa17-ab00-47e1-b782-24ca83c67965",
        "cursor": {
          "ref": "e72741b2-dc08-45ab-81c7-331b900acff5",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b16559cc-0c8e-44f2-9f63-d237c87fd5ff"
        },
        "item": {
          "id": "3a73fa17-ab00-47e1-b782-24ca83c67965",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b35686ef-ff3d-40e9-b368-572dd912c6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8814e9f1-0261-4b0f-927a-bf8ccb14ed0d",
        "cursor": {
          "ref": "288e9494-4f56-4d58-904a-3c4b06f7b388",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2d34f456-61cc-4630-8dae-0b87dcce0060"
        },
        "item": {
          "id": "8814e9f1-0261-4b0f-927a-bf8ccb14ed0d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "50e7efd5-1b76-49cc-916d-b28ce8328c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4a04a5-8d52-421f-a9b3-d4818261b0e0",
        "cursor": {
          "ref": "24750e12-e693-4811-8306-7a70a810e6b2",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "885ef168-d453-46f8-9fa6-ce766746971d"
        },
        "item": {
          "id": "0d4a04a5-8d52-421f-a9b3-d4818261b0e0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "12d8f3a1-7538-479e-a73a-6b001b8febea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404a898e-624a-4b30-ab91-01eefb10ab48",
        "cursor": {
          "ref": "8c81c1c2-80ef-490c-90ac-3d8668a61b79",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "efde9138-b343-4693-a16d-df19e257caaf"
        },
        "item": {
          "id": "404a898e-624a-4b30-ab91-01eefb10ab48",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "880bb6a6-14a4-4015-b0e7-795cd619a863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256e195d-e172-4a5c-ae48-db814f11ce4e",
        "cursor": {
          "ref": "f655c540-a421-4c8b-85f8-726ec7430e2a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8914a986-d117-4317-ba15-cfa4cd27b546"
        },
        "item": {
          "id": "256e195d-e172-4a5c-ae48-db814f11ce4e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8de3ac8f-52e2-4ede-9de0-659a10217338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57738c69-aae0-4f38-a923-ba64c5f8b456",
        "cursor": {
          "ref": "9fe52bfd-7f3f-4097-afbd-f441e573f4d0",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1c251c89-13e5-4594-a125-33e6bbda6bad"
        },
        "item": {
          "id": "57738c69-aae0-4f38-a923-ba64c5f8b456",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2a1b63b3-4d93-4953-a6b3-000cd449bffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00ccdd2-474b-4b69-a893-7ae32021ed5f",
        "cursor": {
          "ref": "2c9b0c0f-2f00-4647-bfd7-c42b25a3a526",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e2d3c5bd-8203-433d-80c9-bf62698cad1f"
        },
        "item": {
          "id": "b00ccdd2-474b-4b69-a893-7ae32021ed5f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1cd91f11-daa1-4169-8e22-a347396f1228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fea8a8-c1bf-445c-bc9f-3e243c55a970",
        "cursor": {
          "ref": "1d1138b4-a820-499a-a8c2-aafef6afcfee",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eb5d95c7-db06-4ec6-a3fb-3a66f4290f48"
        },
        "item": {
          "id": "21fea8a8-c1bf-445c-bc9f-3e243c55a970",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7cc1a8e3-1f28-418d-9d04-c562f6f05efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c475966-cbe6-4169-83bd-df3da88b2633",
        "cursor": {
          "ref": "86edc678-f667-445f-90a2-cfbc7e8bcd1e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "10072de9-3501-4e18-af19-0fcc3a52b5a4"
        },
        "item": {
          "id": "4c475966-cbe6-4169-83bd-df3da88b2633",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d03a46fb-f510-4d39-bfa2-73a5cdf1dc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac47d8a-ec01-45c5-9a41-61e1cbed6b64",
        "cursor": {
          "ref": "7fad7ec9-4a5e-47bf-ba35-c81d322e6cbc",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "868fcf93-c152-4fdf-ae4b-d2265c55042c"
        },
        "item": {
          "id": "bac47d8a-ec01-45c5-9a41-61e1cbed6b64",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c13921a8-a67a-4734-9356-83c2dbfc72f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78de11d4-a6fc-46e3-9147-e6ab7b0e6dc0",
        "cursor": {
          "ref": "017762ad-2135-4679-8960-0727b48da3fa",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "29eb74e8-d426-48c9-bcb1-6511c295bd5f"
        },
        "item": {
          "id": "78de11d4-a6fc-46e3-9147-e6ab7b0e6dc0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "db644263-798b-4c39-b1b3-10d373670e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6e7631-f924-4112-95f7-5685d3441888",
        "cursor": {
          "ref": "40cbc64d-b93d-4777-8d2e-ba0ad7cf843e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "21da72e6-87be-4c34-97e3-712931156bc9"
        },
        "item": {
          "id": "9b6e7631-f924-4112-95f7-5685d3441888",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "844a25f5-1670-4422-9433-8af0c82ce37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6baccd-ec59-4173-961b-cc9f542f4596",
        "cursor": {
          "ref": "51a13e46-dd4d-45cb-8d59-9b12bcec39d6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "634bdce7-7656-4acd-9458-9c8c73b7ea3d"
        },
        "item": {
          "id": "1e6baccd-ec59-4173-961b-cc9f542f4596",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "89044816-2420-4866-9430-623eb8a8bdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57bcd6a-2eed-4274-9117-27575d39d6e1",
        "cursor": {
          "ref": "502f91f2-8c85-45ad-8e9a-aec61d694d04",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "48d0be5e-93af-438f-b31c-b947495c4692"
        },
        "item": {
          "id": "a57bcd6a-2eed-4274-9117-27575d39d6e1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c1fe1860-2c18-4814-b3f5-32b9c3c787f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd360b5-ecad-493f-9df7-e37980470ca5",
        "cursor": {
          "ref": "1c24bd8c-74d4-4ee0-a5a4-4e670941a5c1",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e2010731-555c-4129-9bcb-a257af477e19"
        },
        "item": {
          "id": "6bd360b5-ecad-493f-9df7-e37980470ca5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4288d52e-4e73-4ed0-adc2-3922eddd4fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8e5960-2130-4675-93b6-e96ae174d08e",
        "cursor": {
          "ref": "03f272d3-1bc9-4863-ade3-11e0c740cc1e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "84752207-d7d0-4686-bbe2-a4ad5ad19085"
        },
        "item": {
          "id": "8d8e5960-2130-4675-93b6-e96ae174d08e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a72ae3a4-8bb4-4b81-a3db-d42b017f66d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adda7bf6-af9f-438e-ac42-1a40665ec17d",
        "cursor": {
          "ref": "39346c8b-c8a2-4bbe-bd96-8f6d58f61b48",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a51fc5ee-b34c-49b6-a74b-a3e9ca7bb8c0"
        },
        "item": {
          "id": "adda7bf6-af9f-438e-ac42-1a40665ec17d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b057b437-4828-4bd6-945d-16b65b2cde76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1664be2c-f652-47df-abe3-43813f12d85b",
        "cursor": {
          "ref": "7139d824-4b44-42d0-b11f-d969568da922",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "38c0fa6c-7c46-4758-914e-697c3183a9f8"
        },
        "item": {
          "id": "1664be2c-f652-47df-abe3-43813f12d85b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7f82a76b-0a22-4947-9944-1c02bd9f5f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd1caec-5035-4301-b759-a5508f7e5c2a",
        "cursor": {
          "ref": "42644b84-cb28-4fca-98f5-976951eb087a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0a99747a-b042-4818-a122-f52c23ef3938"
        },
        "item": {
          "id": "2fd1caec-5035-4301-b759-a5508f7e5c2a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bef69acd-dec8-4ea8-9b43-6ddcd46c539e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d373fa-7162-4f9f-8eeb-53e8ef74a4a8",
        "cursor": {
          "ref": "cf2d25b7-7cfd-4cd5-8c1f-bc2379bc35ba",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b1bad6d5-a788-48d2-833d-dd46f44641cb"
        },
        "item": {
          "id": "f4d373fa-7162-4f9f-8eeb-53e8ef74a4a8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "df3ad6cb-fcf9-41c0-acee-ce54fff6b159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb73977-022f-4b5e-9404-6378016e47a2",
        "cursor": {
          "ref": "06fb85a2-2ac3-4c7f-87f8-c9ecafaa838b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "270e2078-0f57-4a49-bc49-28baa414fe6b"
        },
        "item": {
          "id": "cbb73977-022f-4b5e-9404-6378016e47a2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "eb2bc824-436f-4f8e-bb06-7ba2a1c98b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66e1289-73e6-4574-81e2-2bfc4b1b390c",
        "cursor": {
          "ref": "42668b1a-f0b9-4a82-8048-763a1404b34a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b241ca61-a72a-489f-b883-354b0a7dce8c"
        },
        "item": {
          "id": "d66e1289-73e6-4574-81e2-2bfc4b1b390c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "894e770a-1731-4f33-982d-5622cbae60a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f9a35f-0115-4bed-8448-2e85310ce6cc",
        "cursor": {
          "ref": "2b9b1a26-c949-41d3-a755-dacd663ed2d5",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "348a8972-a888-4045-b982-e39938cb7213"
        },
        "item": {
          "id": "85f9a35f-0115-4bed-8448-2e85310ce6cc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2f1d98c5-2aed-42c6-a374-daa244b6afef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed2a625-34b2-414a-b1bd-8df43e47fb34",
        "cursor": {
          "ref": "6083efb2-8c66-4d58-8035-1c6262f44b45",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "799c49aa-14a1-42e7-9199-fbbeaad292bb"
        },
        "item": {
          "id": "9ed2a625-34b2-414a-b1bd-8df43e47fb34",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b465fe00-fa15-48dc-af41-ec259212052c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3794041c-5009-49f5-9117-8d9931a63846",
        "cursor": {
          "ref": "f5454964-4b28-4347-919d-677014fba0c0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "78829d40-04c0-475d-ae67-df4ca11d7061"
        },
        "item": {
          "id": "3794041c-5009-49f5-9117-8d9931a63846",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cf26397f-1888-4cf4-9c6a-65e26b66fe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948ff4a1-a9b9-4338-b3e9-6477ba07d9c1",
        "cursor": {
          "ref": "041525fd-c57a-4d5a-8efc-439132c0bacd",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f1fb19cc-504c-4459-bcab-202e9b632cf5"
        },
        "item": {
          "id": "948ff4a1-a9b9-4338-b3e9-6477ba07d9c1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e29efa39-7b32-49f7-bb74-b5a8b2b94a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6832ee-b97a-4099-bd4c-5ae829f4d93f",
        "cursor": {
          "ref": "2fba4d35-e40c-423b-b2e6-cc1af3746762",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c40109e9-890c-4939-a761-7ff64431f4de"
        },
        "item": {
          "id": "dc6832ee-b97a-4099-bd4c-5ae829f4d93f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cfc6bda3-1d1d-4024-89f1-b8eede5b6a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b89041-bdb2-49ba-908e-497cfc15b734",
        "cursor": {
          "ref": "6d08bfc5-7634-4c93-92b9-3d2ce302999e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fa2a18fb-0874-4d70-aca6-b2d1ce11e9c3"
        },
        "item": {
          "id": "02b89041-bdb2-49ba-908e-497cfc15b734",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "686a00a4-bbba-4bff-9b47-a20742f0306f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d503812-4e08-44e5-b8f4-cd9c24ac8835",
        "cursor": {
          "ref": "09077d6d-e660-4836-8375-1aad71ceddaf",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dbdfa719-71d1-4057-942e-ab8a320aae80"
        },
        "item": {
          "id": "6d503812-4e08-44e5-b8f4-cd9c24ac8835",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3a183e5f-e77d-4aba-b479-376cafe3c980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2f5f21-2af6-4a3f-ba67-7954070b5580",
        "cursor": {
          "ref": "e10a378b-010a-4e0d-930d-b8d682d40065",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "60a566ce-fe4f-431c-9792-43dc6beabfef"
        },
        "item": {
          "id": "bc2f5f21-2af6-4a3f-ba67-7954070b5580",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b8b26aa0-bbee-4f1b-b506-bab3397457c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8593f727-fa45-45f1-a00c-256dbacc8cd1",
        "cursor": {
          "ref": "a9bdce84-9fc1-4dc2-a1e1-69812d78cb63",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a7ddcce7-d57a-44e6-b3c8-8d7343df8da7"
        },
        "item": {
          "id": "8593f727-fa45-45f1-a00c-256dbacc8cd1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7de821c8-3aa3-4e4f-9ddc-1e503fe79b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae348ee1-e8e6-4315-ac58-13f8e61f07f1",
        "cursor": {
          "ref": "4514129b-cb50-499a-bc3a-6341f06284ee",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d1c554fe-4590-4465-acef-ecb49837a947"
        },
        "item": {
          "id": "ae348ee1-e8e6-4315-ac58-13f8e61f07f1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "84ead577-f1ba-49e2-b00c-d46a4a1c3de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433f9051-5366-4d69-b943-abb10924aa9a",
        "cursor": {
          "ref": "2d7f3951-afdd-457f-9d55-c8b431d8c6ba",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5ebe531f-74ae-4e73-be19-255598ff2220"
        },
        "item": {
          "id": "433f9051-5366-4d69-b943-abb10924aa9a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e0f1ea5b-afac-4877-9f28-fd655a264a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed81c6d9-04a9-4fc5-9a30-5923ba4b354e",
        "cursor": {
          "ref": "c5e75fc7-9d39-4c99-a974-ac1517ca4685",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9e0daa4b-9390-4d8f-96bd-232cd245de54"
        },
        "item": {
          "id": "ed81c6d9-04a9-4fc5-9a30-5923ba4b354e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "07e070d6-dc8d-4723-9c44-55e6ab1b3d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095d911a-c3ce-47c6-b555-08fcf1b00e5e",
        "cursor": {
          "ref": "bf53c9dd-6c5a-43ab-97e4-07aa28085510",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b46e79b3-a89d-428c-b1ee-9e00df37f49e"
        },
        "item": {
          "id": "095d911a-c3ce-47c6-b555-08fcf1b00e5e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b83a2f1a-2d9a-4a79-863e-dbde2830573f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb15499-e708-49af-baa4-4fe27e56b1bf",
        "cursor": {
          "ref": "6ca637a2-8118-407c-9c96-2f3a6410a5e5",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1f150e2c-e8f4-424a-8ad7-3f49a274cfd6"
        },
        "item": {
          "id": "ffb15499-e708-49af-baa4-4fe27e56b1bf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b4d2c752-c1b0-4206-b21f-4b09054aca46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a73fd1-2fb3-41db-8912-d9bfbb7f41e2",
        "cursor": {
          "ref": "84691c9d-0a09-49d6-aaf5-b4bafafd9134",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fd068a04-dc47-4b4b-9c45-96be970a978b"
        },
        "item": {
          "id": "b0a73fd1-2fb3-41db-8912-d9bfbb7f41e2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6493d765-72e3-4257-b37f-c26b45f61f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6289f430-4496-4600-96e2-a4e39af4121c",
        "cursor": {
          "ref": "7df95a6b-2252-413d-b895-ae95f67cb098",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6c76fb1f-4a22-45ee-b220-a4fcdcae33a0"
        },
        "item": {
          "id": "6289f430-4496-4600-96e2-a4e39af4121c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "347a409e-c12d-42a8-9ad2-57e94e62b1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8950a8b6-b239-4de7-92c1-d91c02f4a4d6",
        "cursor": {
          "ref": "096c6915-924d-4739-81f5-a50988d78c8c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a70c7ac9-ec1b-4d6f-b395-59af06fb1211"
        },
        "item": {
          "id": "8950a8b6-b239-4de7-92c1-d91c02f4a4d6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "36428659-3447-403a-9664-45c490710b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1cfebe-295e-489a-9030-4487fe4c463f",
        "cursor": {
          "ref": "ca202c85-60aa-4fa1-8065-3d7473dbb265",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "92505176-bdb9-415f-80ec-49b66ab97358"
        },
        "item": {
          "id": "8f1cfebe-295e-489a-9030-4487fe4c463f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2c80c5e5-d343-4863-8b95-342397949ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c871345e-9ff7-44a7-8022-948112331751",
        "cursor": {
          "ref": "fb91fbb2-e912-49eb-b152-7db5384311a7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d9acc06a-46af-4da7-918f-e4219fb0a413"
        },
        "item": {
          "id": "c871345e-9ff7-44a7-8022-948112331751",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2a7101b5-70fb-40e9-a44a-5b3abbbe37e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cdedb5-a620-4489-8183-9b0b9b42187e",
        "cursor": {
          "ref": "c1e59b76-ed0a-4886-9f54-3c875d7b1f74",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "971a202b-3025-4218-a6fa-b30fd484162b"
        },
        "item": {
          "id": "e4cdedb5-a620-4489-8183-9b0b9b42187e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ec0ce9ac-3173-4437-b7bc-c6e5dfda3c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30ca2de-3e3d-4a8b-88e9-44efbbb14177",
        "cursor": {
          "ref": "1f63e439-ba72-47e4-a58a-93411a0a7bd3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "68aa2a73-b6dd-4483-ac93-0e9b5917278c"
        },
        "item": {
          "id": "f30ca2de-3e3d-4a8b-88e9-44efbbb14177",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9db96ae5-861a-4cba-ac81-0de61509ffdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dad79a8-4b6f-48b6-b126-678f8757ce25",
        "cursor": {
          "ref": "8eeff9d3-1760-4f03-9b3b-8e4cb7c54480",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7b3a60af-1f63-401d-b8b8-5efd9d947c9e"
        },
        "item": {
          "id": "7dad79a8-4b6f-48b6-b126-678f8757ce25",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d7df1e4a-82cc-4857-a826-90e4095082fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a80865f-cc1a-41ef-9e98-3adbd0b4d061",
        "cursor": {
          "ref": "3f0380d1-0215-452d-ba32-1dad98a4c551",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8f07684b-faeb-47fa-97cf-e29b36c87d2f"
        },
        "item": {
          "id": "3a80865f-cc1a-41ef-9e98-3adbd0b4d061",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4bd9060f-6723-4277-ba16-cffbaef436f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2045e48e-2a25-4fb2-b7b8-cd49016a9ea1",
        "cursor": {
          "ref": "12e36272-e3fa-4892-96ec-8bfe1ad92e96",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4bdf6438-a93e-4ad3-bd37-f07867de2089"
        },
        "item": {
          "id": "2045e48e-2a25-4fb2-b7b8-cd49016a9ea1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "913f3bfb-5ec1-4fd1-a389-4999e1ed982e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765988e9-d8e3-4866-813f-ece235231d25",
        "cursor": {
          "ref": "dbded7ba-969b-46dd-9c23-a61ddadc4c8b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "68f01a3b-ca65-48d4-8dc5-2df594fc34f9"
        },
        "item": {
          "id": "765988e9-d8e3-4866-813f-ece235231d25",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d084b008-90e0-48c2-8602-4422d73ed002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e83ad9-de1b-4516-a2ea-171b956a0d22",
        "cursor": {
          "ref": "8511d6c3-d687-45ec-bf53-bb8a843bf2e3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "dab1bc96-0b2f-4b00-a7c2-025cb6e8c04a"
        },
        "item": {
          "id": "76e83ad9-de1b-4516-a2ea-171b956a0d22",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "635b725d-8139-407f-ac90-ffab1a0b8408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d646f4-ed9d-49bd-a83d-be1de7bd4521",
        "cursor": {
          "ref": "e417eefa-01cf-4407-b2af-47679b45cd2d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ef07e06b-5978-46ae-b325-cc0ccc7edbe9"
        },
        "item": {
          "id": "c2d646f4-ed9d-49bd-a83d-be1de7bd4521",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cebeb6df-83d2-497e-872d-24ef0e5a9cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e14924-c553-4286-9f52-72cfc6b55e8c",
        "cursor": {
          "ref": "f2e358c7-1418-4517-84c0-3560e2a95944",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1ca286a2-e92e-49bb-a33f-493039fce625"
        },
        "item": {
          "id": "42e14924-c553-4286-9f52-72cfc6b55e8c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "98c0150c-a1e8-48f1-924e-3b9aff6069de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db53f74c-8752-4c06-ab20-458852cecf6e",
        "cursor": {
          "ref": "b9ba4f38-103c-4276-9b6f-b7c850c3c801",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "750bf844-89c6-45c3-aa8b-8aa5e6202c24"
        },
        "item": {
          "id": "db53f74c-8752-4c06-ab20-458852cecf6e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e575240b-5ec7-4520-a5c1-593c15cd70eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb42976-af62-4570-94f7-9edeb78903d2",
        "cursor": {
          "ref": "59ede921-adb2-4ed2-a683-8fef48ab6e46",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d3c2e191-9056-45ff-83eb-23bbafe98f9f"
        },
        "item": {
          "id": "7fb42976-af62-4570-94f7-9edeb78903d2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3badd4d3-6112-4367-9527-0dda2442bdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5406957b-65ce-42b3-8c49-f09345076140",
        "cursor": {
          "ref": "660821ae-964d-4f06-883d-907864a6c7b2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3d68bb56-faac-4e56-a122-7a1dca817a16"
        },
        "item": {
          "id": "5406957b-65ce-42b3-8c49-f09345076140",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b2623ec1-5ea6-44c2-a61e-cdf8420c523b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566b8409-138c-437e-9dbc-65f891b98240",
        "cursor": {
          "ref": "e15eb7ce-3ae6-4dc8-b13e-2064ffd049aa",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8b6fd7ca-52f6-4800-846a-03c003ef9155"
        },
        "item": {
          "id": "566b8409-138c-437e-9dbc-65f891b98240",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a50eb289-089a-42df-bd22-2ae7ceec4a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea0e6f4-9288-46d6-8347-4b32608eecd6",
        "cursor": {
          "ref": "e08ff34a-af19-44e2-8af5-28ac67da79e4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6189c885-4e5e-47ff-8468-c2f5a5048d46"
        },
        "item": {
          "id": "bea0e6f4-9288-46d6-8347-4b32608eecd6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b6a722fc-7c6b-454c-bac0-32bfafadf039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82c41d2-c8e3-40b9-8216-66d09242d3b8",
        "cursor": {
          "ref": "1c102e61-c874-46d5-b84e-be86ceb4c0ea",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "65e2643f-0b72-461b-8701-32c2f6389c57"
        },
        "item": {
          "id": "e82c41d2-c8e3-40b9-8216-66d09242d3b8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b4bd459e-6eb0-4ead-829a-b20ecf2d74a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acc604e-49f6-41a0-bf67-47a7912abef0",
        "cursor": {
          "ref": "45775615-3fe6-407b-8646-cf42f05c3806",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3117a799-c2b8-489a-93e0-a73a014a4cdb"
        },
        "item": {
          "id": "1acc604e-49f6-41a0-bf67-47a7912abef0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1ebc5c39-70c7-4c85-86bd-0e82febb7784",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7aa96ff-ccde-4ca8-80af-3fb4c6178180",
        "cursor": {
          "ref": "59dbbdb7-1379-4f9f-ba1b-5f38c144e1db",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "032a886b-4715-41e5-ace2-f977066b073b"
        },
        "item": {
          "id": "c7aa96ff-ccde-4ca8-80af-3fb4c6178180",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fa1bb39e-7027-49dc-a8d6-0b9aef0f4fef",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafc61ad-a985-4135-ae96-3674e46523a4",
        "cursor": {
          "ref": "baebdd67-989d-4d89-b66d-2b5cb71c2bcf",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "406b26a6-97a7-4287-91ac-863666de36ab"
        },
        "item": {
          "id": "eafc61ad-a985-4135-ae96-3674e46523a4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "672df360-9247-4a19-be6f-baaa16aeb90c",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c374b006-b03d-4d0e-91b7-ae64308c0e61",
        "cursor": {
          "ref": "c9adb4e9-08b4-4073-b089-69b795e7b8a0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5d69f276-31aa-41f8-8b73-370b06c66cc1"
        },
        "item": {
          "id": "c374b006-b03d-4d0e-91b7-ae64308c0e61",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "384e7e2c-5cdd-42d3-b275-65c908c6d85c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c374b006-b03d-4d0e-91b7-ae64308c0e61",
        "cursor": {
          "ref": "c9adb4e9-08b4-4073-b089-69b795e7b8a0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5d69f276-31aa-41f8-8b73-370b06c66cc1"
        },
        "item": {
          "id": "c374b006-b03d-4d0e-91b7-ae64308c0e61",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "384e7e2c-5cdd-42d3-b275-65c908c6d85c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecccaaf-0f94-4990-9687-c9be4d5f7d27",
        "cursor": {
          "ref": "8dd4bde9-b571-48ac-adab-74d086d584f0",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7264b54c-3c3a-402b-ab56-df818ad1f82b"
        },
        "item": {
          "id": "3ecccaaf-0f94-4990-9687-c9be4d5f7d27",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e2550c26-788d-45ac-bac6-b236e78dc2d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c63de8a-d58f-4688-8c53-52325f63c206",
        "cursor": {
          "ref": "068b1570-4003-47ee-a6c5-58eb727e6e7c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d8f3c802-d2c7-40e6-9bc4-a45ec0fb2a9f"
        },
        "item": {
          "id": "9c63de8a-d58f-4688-8c53-52325f63c206",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8681b6ea-c146-4061-8644-3e20237a4101",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}