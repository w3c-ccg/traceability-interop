{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "35a9b17d-cc14-4d8a-8041-acfc4c3469ce",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6c754f7f-ca6a-404e-a1e3-5762f1a1a258",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "42eb4fcc-e192-4361-86ae-d00c18ac662a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "145e4b15-10bc-4f29-973c-afeba001f4ec"
                }
              }
            ]
          },
          {
            "id": "5570cd91-de2a-4191-8853-06ab7c002fc3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "601c9d55-635b-4325-bead-353f86fc3536",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6d1176d4-2637-4278-a45e-76ed3f266278"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bbfc8873-bee7-4ca5-8ada-22e2b62b178f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2a680918-bdb0-4235-8bc3-826e23678251",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f6d9091-d9f6-4365-a9cb-29c24564f532",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79ece9e8-cbf0-4b0e-93e9-a2e5e6bc73f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14bb3f1b-4726-49cf-ba12-738a9c7a6c6f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "301dcd1b-aab6-438b-b529-7d1beecf0a07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b7002f0-693b-4323-b18b-75d30cc03917"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eccd5508-f009-488c-bce0-15fec4f65630",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ccb43f52-8310-439d-b0b5-2152bafb1322"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43fa4bda-9ac8-4204-8444-eb343bdfe5e3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "91713003-6de2-471d-b90f-3916175ad216"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ceb20906-f45a-4a24-82d7-c5c0f0c2ed64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22356018-9860-465d-9575-0b88c3202e04"
            }
          }
        ]
      },
      {
        "id": "b042912b-106d-47de-b8cc-4fc585bd7e21",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f810fada-06a3-421e-8ec0-a1db282b90ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afd78cbf-a679-4249-98d8-2223cab6f793",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac4bda63-68da-4e28-822b-fe22e99e123b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c53e372-b597-4560-8849-93ebdfb31679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02f407c4-4938-472a-b3ea-7859d0aa5f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc31ee9-ef92-49a1-9431-c442cecc6ae8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ad0bf6-754c-443f-b32b-e57fd9a94df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "550d28b0-385c-443a-a0ea-6976b8981b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cc947c-e11d-469b-be84-40ca6f86df72",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed006de4-451d-436d-8dd6-bb538c06837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "658f31d0-df05-49e2-a9cb-e71eb15122fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2086e690-9d29-4492-a9d4-9e51bfcccc93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99a45c5e-dd86-4ac8-a0c3-9a60c9e49307",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cf2afd-cd66-4f3d-aa29-f26a24dab419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb26da99-237c-4bb8-833d-336276cd743d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77031075-09f1-4e46-97de-4da5a8bb912d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90878ed2-b6ea-4680-9fca-7225ad025faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec7bb52-19d6-4420-a54f-d0c7e90d14bc",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cae93f-0751-4f8e-abeb-ed2ae7e171c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "984dcc88-00c5-4121-bcc2-47acb31c00e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f11a3b-fdde-4da6-bcb2-d09fcf1a9d47",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e1144dbe-11b5-4539-acb4-ca96b524b17b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0a964fe2-78a0-435c-9bdc-b833218c8fae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b99d132-afbd-412c-8e4d-84a4e1962296",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bb195a1-91ec-4f07-ad07-990216450159",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5c0f48ba-f57e-4be9-b397-6bd6c13bc876"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03a2c8cd-fd9d-4f0f-90d2-f41a9f7948b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9f33e68d-d2fa-4655-a329-b5dc6b7f4f0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "428ee3ee-d7d7-4f4c-be70-b6795cfec0c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4963a8be-5779-4071-a2fd-0ee63f92eb93"
            }
          }
        ]
      },
      {
        "id": "731e73bb-72f2-4374-8baa-c4dbe24eb3d6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a4c1b94f-e988-40df-a8c6-de3e761a1f85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "557defb6-dfe5-48fe-a7e2-d307f08eb038",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7a83ff7c-bcd1-40d4-a2af-4b56b5df212f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e12eb73-fc4e-431e-8927-9a8dd2f02f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658b3035-195d-4791-8b2a-6bd6390b75f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0bc9d2-b339-4db0-bf15-c1a0752044a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "232c9a0a-4e5c-42f4-b23c-87b8e451a96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8964b24f-616b-4010-ba72-33119efd5d10",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e864235a-8591-41de-a045-e906e69966dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9835f802-769e-448a-8e99-29b22ea47f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0e8caf-a02e-46da-b95d-779c7a9ba21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46689464-faa6-4175-986d-41fe7872d6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76779761-9266-4c55-b818-3112c1a959ea",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59bdb00-11a4-4325-b8fe-192f00cf1f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b432a269-e2e0-4e6a-ac74-27c907ee8a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e81fe9-5706-4cc5-96a3-148e43c86fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e05bf416-9b07-4a53-ae70-7e4a9dac487a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9afe708-7088-4d09-84a1-f0d2c1cf9bc2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a0e292-2af4-4aad-94e3-f8bf0af742c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e46ffb3-8e01-45cd-a14a-cfcf4e4eb757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae41a795-76b0-495c-ae40-58f467409f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "749cd39e-ec2f-404e-80db-f91a4dcfc2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f72480-526b-43a4-8a9d-2bfa3f85637f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae84de3b-0f04-4bd2-88eb-12978386d5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095d05c1-5d93-4374-8c23-21ac12c3d7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2d63cb-52b7-4eff-90f1-264f6bd96b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a298534c-e588-44b2-9225-a83e0cf771c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73c3684-0a78-4869-8eb2-19880c6de873",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355cb758-072b-42b5-ba2f-55aa73ddbc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071cd471-43c8-4a7b-b5e7-8e7425cc9bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c077c471-c520-48f6-8568-ecc8f2aaad70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cff61e5c-dd23-471a-a821-0677f4d6a716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf78267-ecf7-479a-a7c2-b41fbabf090f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8616622-ed97-4cc7-9f12-24509b25f937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bafbd9-12e7-49b6-bcfe-a15be5bd2c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050fead1-3abb-495f-9dbd-1f7dfc233901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbf1c31d-6569-4df6-9433-eb1be0215905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbcbfd8-e2ce-4509-9173-97ba740123bd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcb6a5c-ad9d-47ec-b899-aa0f90fc781c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc64cf3-b512-4163-bd80-b5f960df1bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4d6788-80d7-4a13-8f83-8e543edca8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c1d0de3-deee-40f4-8e15-223c1c0d6760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7510358-5538-4cb4-a724-c79977fe71b9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec06b2d-d8a6-42b2-b521-c32fbe7b382e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8ef2ac-ff09-42f9-8b80-7e2bf0d79cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9961d865-1b34-4478-8674-5e1d1664d9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5416450d-d94a-43ce-94ee-28c67418bbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db3c31b-151d-496c-bf70-c82b6abdd11e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb7a3da-cd5e-4ead-be32-7148f8a2613a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cdcf53-efeb-4003-82a9-c56830ccf5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0b4665-19fe-44fd-b937-eda641eb5c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc49c72c-d77b-4fd5-adce-b2a763ca8d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f7ef02-d813-4505-bb41-340586eba622",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823683c6-3ee2-40f6-879a-515273e5bf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9766a37a-078c-4712-9e11-ba9355451295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10296385-52aa-4cac-a565-a6620b2dc643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81df6fbb-cfb0-4847-9a88-1b09bdf87356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8882b9e2-883a-45c6-9713-1a67ed08e5b8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90238603-bd07-454b-b0fb-cb6a9bc3c86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df035bd-b749-48e4-92e1-48b9ba98ce45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65af1420-7866-4309-a604-fda932acf476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e95e27aa-1b9f-4484-8140-718bddf750ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552a2d6e-0b05-4e2a-a646-0a834b29fc98",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4aedd67-09bf-453c-a1d0-dc6d0a8b9edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ee8496-9687-4a38-84d3-a9a656cb87fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd50032-9b5e-44be-becc-70aa84d5e928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6222952a-ece0-4775-b762-a66a0ba6dd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0146a221-bf39-493b-9bcd-f4eb77c343ca",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fb6eb6-dfbf-42ec-83ef-93881fea3145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6844940d-8136-4b2d-9832-adb5eb07bc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc67c0e-5909-4794-afd6-be0d5f9854be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaa2a404-e678-4ec7-a8a0-1e2bed9c87fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461dace9-9e43-4b87-bbed-b3c88a7f3777",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0cc4c9-895e-4979-b994-2998faea718c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86d7504-85c5-4016-9bed-4166b7c7b353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e989fbc8-6535-4c67-8c96-aa59eea8358e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fcee3d8-05ed-4931-8b73-13173c103a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4aa68b2-f54e-4e78-a5c7-24604a3cc9cf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196a0d4e-dbae-4539-ac64-9c714e1ac39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95226e4e-f97b-4332-8a02-79a536659dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d56b3dc-33db-456d-8127-d71e9ba87d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bbe5966-899e-48a7-a5f3-66110e492a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfae0e0-23b2-4701-8c18-6b0151c75cd8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6192c0e-bf01-4e27-b99a-f1d4ec480fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd102338-c888-46ae-bdfd-aa55aa07ad19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8e0077-8ec9-45dc-82e7-2290d7ecfaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "664b184d-28fb-4dea-a251-ca1eae44e2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e166954b-b5a1-4355-be84-1ea54a8b423a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27855177-6afa-4ce1-8152-619118c8b8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b80862-04d5-4c15-bc22-21d72ec6b7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c62a500-bf64-4d82-b6c1-054425db64e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "757a0679-0f32-4e27-981a-3b01f8709af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c99002a-9b9e-4c57-b297-69800de74359",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8799dfb-e8e1-4bc2-a192-133d3bcfbb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9e6a8b-9804-4131-b383-e57bdf7714cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1527ec4a-bd0c-40dc-96c5-fe4d9b7eff62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b3d3ba-1876-4052-af11-c48074251322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b596c4-1e20-44c7-b9a0-67611e4226a8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952126dc-54a8-4142-87f9-49b95eb0f748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209892c6-c68c-43b6-b53f-cf090bc4beab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36ac928-8f85-45ea-a041-70718fa9d8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73b43e6-3452-45a6-bc96-b2ac5c1ed897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7153d28-7c81-4b42-9102-80a459489882",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a259a6f-b671-4a43-b856-60a9bc838ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d432ae40-9dfa-4155-a029-b1050b08f31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad088be8-4fbc-41db-b406-74c7d9000168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f40d00a-fd4b-406b-bd62-4345555a9a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee4599e-8388-4e7a-b8fa-f87a59724d6f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ea336e-6d5b-4ae1-884a-b3348f4603ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec709070-45fb-4343-a875-ca171a65f9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad6af39-95fd-488d-a9c6-b84b34b6b7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab33e4a-3d74-41af-9880-b4aae1acc456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fe6c54-ce05-4e38-a20a-8c0e906853c5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063dbbcf-7874-4adc-8f8d-88da09e02b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b99df9-a75f-4ad7-a840-a53560662050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c411b7e-af0b-48ac-a715-68a35c218f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15f7f569-586f-4736-95b8-c847115a99bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308f0987-9921-40c0-8954-661b27840b69",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f40364-1fef-4a18-8b22-9f0a8d727200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3955a0-ebca-43ff-9187-becea2d1b4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48a4656-8b79-4b97-8405-a7506b7c5742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "445042ce-448f-4606-a291-e59940bb1f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a50363a-7800-495f-9512-3984dd6b2943",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72caa5c-7cf0-4bde-9336-eb1a77743fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e5022e-ce47-477e-87b9-db599bb8383b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c64d5e-61cc-4080-82d5-b735fc0dfd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bab703a-429d-4d78-af16-17eca3ddb0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c37b628-2657-4df4-9147-26362320e105",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8f7005-13b5-42dc-8fea-d6612113d5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6086936e-d00e-4d96-8b8a-e68fa981ca40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2c2d12-dfe7-459f-81d4-8c39dd8d4302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bda7ad8b-a557-4715-9279-b894dc2d6fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8b2c7b-0d67-4beb-877b-58aad8925c49",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1812c0-4555-4cf2-8fa3-90e24bddbbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082cfe89-3090-4756-b183-d61b0f6e7b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091db3eb-07a7-4324-b284-e117d59931ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1aa873-8853-45a1-a975-850bc0511a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb44fa3-7f89-44cd-bbf8-8cb4410cd792",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e99f72-0ed0-4e20-b0ec-44a863fa3a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d18b97-3c50-40b9-9be7-a7bc3eab0236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9a29c5-4baa-47ea-b437-4f295c4dbd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1db61c-4137-47c5-9433-382169e4af5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f40580c-32ad-4592-9b90-60e0b202e95a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf83900b-283d-4bef-b9a7-ff1c8fb4dec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe51c6da-883f-46eb-9a1f-604079ee9625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020fc820-fcf8-420f-a152-bbc0bd1d5164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3b02c1-0776-4dab-863a-ed5292b40e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ca32c1-9a94-47c7-bd33-ca8c75f8f108",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be67f460-7352-48dd-b6c8-ad4216d46e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f271f44-e778-4356-b291-84805ee23bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ecd578-83cb-4ca2-9792-a15ddf175274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad52681-9f25-4543-9de6-a5496843b319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84d9974-0352-4ad7-b220-cd35d22a4bed",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a0fd70-c890-425e-9391-ff0d4dffd44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230add9f-054e-4f6f-8ca1-1f0972a48807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb06d8c-8db4-43b8-804d-e08336a4bf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7c13b7-ebb5-460d-aff7-e48de8d10beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad79ced2-830e-4374-b152-c3c6e7a9a88d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131d5215-533f-4b71-87ad-9a378cdeb746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964f7545-dbc0-4111-b8a5-5271a207c0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85a23b7-5c86-4301-9c88-3a5b4d470e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "130df398-7781-4a6e-b5cd-3f2e6815c28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b76730-b874-4605-b349-8f51c9c46aa2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7943c9e3-fb29-4461-8283-46591c2b128e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d5eba9-9b9b-486b-9e07-87a993ca8e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9be8650-60f4-46ce-b070-627112dd58ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f809d8d-04b1-4c3c-8550-061d695903cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3bb0a3-d402-4b30-bfe8-c93fea208c5b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe2a8bb-63d9-4597-b8d4-fe8857468980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a54904-6742-49c1-b99a-f34cdb7b043b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d9b7bd-cb1b-4c3f-80b9-cf1d4b621198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c89e829-88b6-4d61-b640-6e4611cfc5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870be3d6-e913-4893-a4c1-1a9f9dc0c38f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7128de-e950-4ecd-bc00-828dc3cda032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e37d4e5-6bbc-4ebe-9ee3-54cfbe35c07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219fda1a-3667-4c41-8732-8ea1a81c905c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7878ee-8e53-4634-9580-7cd0f6100788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7506cca1-cfcc-4025-b0e5-5af983719296",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6b76b4-0e75-4644-8609-0ababa50b5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78dca0b1-9250-4d1d-9580-f1ab88e6a20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007b42a9-7188-4a76-80ae-ec7863c82d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "003d3e99-c007-4905-a7ac-0977f0106710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f491e9b-ea8c-44c0-aabd-86ddc5a95012",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cac7e2c-5ef1-4443-8421-c9edae50c99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796b490e-76df-4baa-bd6b-92a2d5af9091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e6c8c1-c327-4a5a-ba8d-efec17787d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc6c110-e10c-4ebd-886e-ee6b11a81609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ed839c-2e45-4f15-96d0-3b1b64cfb42a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68922956-e097-4c61-b586-2f595bf0f51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091b8e95-2510-422c-b3bb-978bf4d8114a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4bdf25-4206-4d4b-98f5-361e82536027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec66a434-8665-4417-ab16-97a6448f8da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa9fc07-54c3-4eee-945d-70b0e0092bfa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cad1880-d9fe-413c-93b6-58ea1c40af1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f750a5-8ca9-4025-81a3-9a6cd27d39ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfe4c31-2c0e-41b7-ba9d-26f01786cde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1adb7089-2eae-4c0d-ac9a-d511deac3590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5036e4a-0587-4ab4-8031-c2b91c0c2053",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2a70c6-b30d-4760-af51-77b164174e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a3ec61-474d-4534-ad2d-11bbe6ab4cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74912c42-3444-4bc4-86a0-9b3452363030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9205e07-53f6-43a2-9949-5406fd8c7dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6287b9-62a1-4e08-92fa-888414b97d0d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2a0116-e1bd-4f31-9905-1391782f5aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c47117-ac46-4276-ac0f-46f32ebd84ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dde1429-6e97-4249-bb1a-8f3b99ad8e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9be6e8ea-a846-4e99-99ea-c1e862a5af77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a724369-59cc-44c9-8053-9100239411ab",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c06477f-c9fa-4d75-b81c-f6a4bcf5a07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bb4bd5-e879-43ab-9f85-e279c20c1474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9281b481-75c8-46ab-85c6-e454da00a8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3822ea5d-b611-43a5-b9f8-5c43a87c325b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1103bf81-12a6-4413-aaef-3b484492381e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32fca97-acb3-4731-9925-9fe44abe824b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcff3c7-931a-41a1-bdeb-c0b7251efeff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcbe11f-f3d8-4718-9683-395864d17ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0216f4a9-0f15-498b-bbc2-f02aa66710fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224efabe-f5b8-4621-9313-bf1fa55b2bf9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778639a6-c907-4040-a2c6-206ea9caa6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b801d95e-dcb9-44c8-bc8f-1126eeb7339d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322b77d4-2807-4d39-8efd-1cc6cb6879d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a339c24-aaa7-410b-bf7c-c264090869bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec19c56-2302-477d-a82e-dd6186a4bfa4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b63c844-511c-4649-b1f2-5a8fa3987c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2470403-1516-49df-be8c-bd43d5f725ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9634e229-7250-41bc-8823-eda5842f451e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9211a2ba-2eb0-4c7f-8222-29b7cbad3679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630efd2b-2f59-4729-bf72-0a92a4ba8efd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2f7246-4ed9-466f-ad1e-fca196779994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba68466-649c-4818-bbc2-f3e0a109e39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dac0b5-25c0-42de-b4bb-df28b7d9dfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f850249-9070-48cb-b5e1-807b250bef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50448beb-5005-4564-a568-bc8a01701852",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1171dc7c-dc46-4b58-8265-d7ca54afa126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518bfa22-679c-41b3-9b8f-d3f30c9b589c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e723cc1d-e797-41f2-abd0-cc8b894d0cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c4712e-fdb3-4b6e-a19a-dcf116ce2bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9f74ae-332b-4c92-8021-1654c7d33e00",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efc82d6-bc6d-4a48-9a58-6370488f5896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ab3b7a-b5a5-475d-a13d-53805dc78a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0baefedc-b407-464e-90f5-f38791ed45cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f485709-3023-40f5-afc8-db8d9c608bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a71bea4-59fa-4c7a-97ec-06c0aa863eb1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1560f6de-cb3c-4ce6-a950-6f8262394d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80c9fcf-43a5-4438-9d59-f305913d35d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c42c46-f81c-42c4-bfed-b7f7e0601f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4298e5c2-023f-4307-8269-9e9e1cc0ff05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0367b2-568e-4a58-800a-3e803ca641a8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d49c56-e371-451f-933f-cba7e6e15a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30da087e-a0a4-4f17-8286-4937212e4992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d436cb-532a-4246-90f7-5420f3419160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26423024-4799-4d2e-b05c-be66783d9641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1261d1c1-01b9-4302-9a4d-1b7d677ecb0b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0212402-011d-4d07-b7a1-3564588668c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b073a2-98f6-4916-8795-08f88fd8599a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f053395-ee95-4f32-848f-a082d9b677a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bec439e-8ce7-4505-9cee-69034090b4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19e881f-c137-47d7-8c02-908fe17dd5aa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aae4c5-741c-4a69-a190-66697bc8961c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793de847-4c55-42aa-8547-c2f441de3776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178a62ab-217e-4e2c-941b-5fdca3dc2d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d338bc2f-927c-48f9-88e2-b9227327b281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1a7fa0-4e57-482a-9444-540718564370",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d69c096-862c-4aad-90e2-62969a0cc48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df924d1-486f-4424-9100-90dce366d1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810da3ca-9109-438d-903b-7f3606892131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a1e7d6-2c7a-4120-855a-1d34e94fa530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9f7a88-17c1-4e49-b199-39cc785f881c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878605f7-9c10-41d3-9f62-6bea1145921d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac4bc59-1a1d-42c5-9516-fb52501c2ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589101e2-bc68-4b14-969b-43ba5ffe9177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca8e8e4-8d95-4a72-8e31-050a8be0f5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98eabcb4-9ca7-497e-bfa9-61ff0a215b20",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bea6b94-f0c0-40fe-8a53-09a45c100bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097442b0-330e-481e-bb94-913b51be2297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa58237d-d23a-44a5-bb46-27025ec82a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2603e94a-f02c-4c5a-ad01-5d102369c120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6000e9-002e-4db4-b601-5f0d09e7dc0b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e230f968-a5fe-4de0-87d2-523938cc8333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee43ef0f-f602-4d23-ba2f-aa6c1730f64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277c9aed-1361-4811-bff7-f99d255ad660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6666e87f-4b8d-473f-974a-0107a37d8bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a61e420-35e1-4ac4-8009-13951a89e8b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dd1d48-b851-4e2f-96c4-b695f2c2f232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07f8c1b-5e93-485c-a78f-114090a013bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b6946c-f4a4-432d-b896-205f16acd89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf9848f-6b88-4928-965c-d9511a990692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a0ef97-e768-4a36-a98f-45d176676419",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4624e0-b6fa-41e6-a167-c79f8e66c0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c268a8-d19d-491f-ae35-93e6297b4dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e39ff2-8f8b-4d58-8f40-3dce7f1101a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0ac84e-b105-4019-a401-f0bee4eb99d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922ad84d-8911-44c3-97ee-a52f52bb03d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910e9e6b-8214-4602-bcaf-6985917fbfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8729c3ad-b300-42f0-9a71-b9a71fc6eade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6590fc32-6f63-4589-a966-7abbd71c5662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2133991b-dfc7-4769-b7e2-e2c5d667f234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8933655b-d69c-45dd-aca2-fad93925bad9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54daa300-7d53-4a61-8517-5a621c046198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3e4607-f840-40e2-9435-fcd5e772f1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d202be-aca5-4b1c-a818-67b36597ef58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "756c82fa-46cb-426b-8c24-b93cf3215019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a01d2f0-fd24-4841-b104-1912902d4634",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8ac21d-2c14-4460-a9c3-995c1b20d075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f1f23d-16bd-40a7-9632-c269e50453d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca94401-0872-44b1-a8af-b8bfe0367a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "97230f78-953c-4ef6-84d0-391e95039ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ade30fa-0b65-46cd-8773-0f7a17b38966",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52671416-4d4a-4f65-b419-d05979fc1d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7797b3be-1877-4bef-8ecc-a86437367d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb2e181-df42-404c-9421-3cec7230daaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7508783a-1403-499b-9947-9d201c9b4bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7de86c-c432-4dc2-b4f0-3b7a59635c4c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bed6a42-196e-4ad8-a418-b5e0268ba06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a973ac-36bd-4473-8258-4c29d82e8979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7014525e-676b-4a7f-854d-ee42f7245388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "940b54bd-4955-4542-9548-b26168d92322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f17de87-09a9-43fc-997c-66b89732e4f2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a2cda9-47aa-4ad3-b613-2be523124b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50230d6-27df-4d9e-be36-125b00e85238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a33107-848b-46a9-a854-14a0a1767c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f6f55e-a8e4-462b-bc61-b43a5705d381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26229e5e-19d1-4a39-8c57-2b05e9dae3b4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2006679-8334-45cf-90e8-33baf6937ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e850b9-f3d8-4a64-92e1-99791107e485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a28d95f-ae62-4d76-bda9-af1160c4da50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9c0a25-2e3a-47a6-baaf-92ca79e705f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f508bf11-1b2d-464a-aa21-b7ad2de8683b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6456be27-0f67-4bf0-a062-8fa1cec36092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab05dd09-3a63-429a-9c50-3b49f4637f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6958a7-99e5-4751-98a4-b65d457f8983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2574de8a-c6d0-4141-bc4f-71fdb8f1efb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8e5740-cc7e-45fd-90a9-f14372210346",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f503a26-46e9-471f-8151-f07114a5bbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d84622a-eba7-4c0c-b4a7-a98e7f69905c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2a48e5-79a8-4d9a-923e-dd0be68374db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13128b1b-88f5-48e2-8021-409ce0161cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8694a63-6fa5-436f-8260-89ac252ee834",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7460f471-665f-4ca7-a842-c79b8e21ad68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e764e42a-6476-4b2a-8e96-75a01ac7f49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894473df-1580-4bf9-921f-295bcc8ed911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "defb74db-18e1-4631-bed5-5bb8a83a8021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4553dcfa-c270-4b8c-b8de-f988e1c0dc59",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ddf6a4-eea0-45c4-9e73-cc9edbda73bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba2f501-f381-44cf-aaa0-6374fd6f235d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1b53db-9d0a-4e46-a71b-87089804d374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "354416a3-6f5d-46ad-be04-2ed97acf67b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fce3647-f10e-4629-8383-781ac16aeef7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d5d16e-e3b1-48a4-abf7-0f4acf41ea67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a60b46-bc25-426b-bdd0-aafdae5dbe39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063404dc-1f20-4975-afc8-eab7a5669209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7e0004-7014-4c15-9e06-e2cdee508e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffdba9c-1e41-4b48-8d22-792672a69515",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd70d229-db77-4834-8c81-09d47b428701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4717f7d3-0baf-411c-9809-c92d382c01e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77586c9f-ce21-47c2-ac35-550dd7d0ec77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc2af39-1dc2-44cc-85ba-5cd9b9cc3c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317ab2a3-0b93-4e2c-b5d8-ec9d3a19ef3c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac7aab7-a9c7-40ae-9fea-4541a1bb2a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07e90c6-1f72-4267-ad14-532b96804d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e8679c-6f36-4d54-af36-1ccf7eb0cc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68d623bb-7c7e-455b-90ed-497a81ba2e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ff1a14-50c3-4251-b2e9-0ba1b525b9f4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a5cdf3-89af-4652-a8d4-b01360285fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1050d56b-ffe5-4511-ab0a-f9b6bd7c0d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da6de0a-31cd-47a3-a258-607a236c185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be6d13fe-eb4f-4680-b681-6a3e34ca9507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69fb948-2782-4d09-ae41-a797d27bf101",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92daa6d1-d616-4bef-a468-1d2ff7417375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79ea531-469c-4c9b-97a2-7b6682ae0daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76454718-77a3-49df-866c-4d482978ef70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf98ac8b-d6b9-472a-b16b-dbb81b5b0fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c0bb39-1c3a-4f1c-8af9-99732a193949",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5a55b5-233e-4c1a-b4f4-21da964398cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd522f6c-e182-4ae8-877b-bc6a77fa7108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d915f7ba-d578-4481-8779-58f8ddc8e1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ca34bd-2942-4f4e-9386-9f8e67264255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab46f06-fbfd-44f7-9350-8d55e9c77dbe",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20aad904-2230-43cc-809d-cf4537bb5447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17873c2-eb28-43ff-8ff7-38401e3d0925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d213a71-3ddc-41e7-b3d0-1f56e7546a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a65ec49-1e6c-40da-b8fd-95b46cd8b0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd5edf5-8983-424b-9c1a-d8830083b603",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61382258-30bf-4bfc-85ca-4e1cc56af4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e039f3ee-7c24-4c83-8c85-93aee826d99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b625622e-6c5b-4570-8b6f-a082c9005197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f07a0e3-a982-45e8-8215-d60a01c9799e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7601fced-1890-438c-abf4-2cb76dee08aa",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecec106-36ad-4f8f-8a40-5deff125caa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f3b100-c818-43b3-9c5f-5fb65bdf990e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5584d7-f77e-4fcb-ab9f-f137c2caca01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96e92db9-3168-4276-97ee-91788fa1ec67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aabb667-1b15-4dc4-8689-41575c9b265e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f835288e-fc11-4a9e-86d2-918ca0b27125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5350a3ad-e5ab-465f-8c8d-51d0d1991ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b459090-a093-47ce-87c4-e3434a0db74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "470cb2c1-abcc-49de-9727-cd2b909b1405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb218a5-ead2-4d55-9f91-7d067f61f30c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d454c069-a9d5-461b-9500-b6ea80b271e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df087284-e6e9-468f-b925-e51ad0bc1b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d08674c-3ee0-4719-aac3-02e192da0a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc1a1da-6032-4e71-a8c9-a4104aaf2979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b34df0-14f5-4c5f-bb1d-4b2ac58109eb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f69328e-dd57-48fb-b8fc-c148a2d82d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c68be0-3412-4bed-9db6-c49fc01af6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc064d0-f6e4-4a11-a5d2-0091dbf62eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a871772-b400-4dac-9899-b6696c33a25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9183a96-d809-49e1-8e8d-9ff2ff94ab85",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00e596c-23b5-4d90-bc65-e2c543707b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f760458-6701-4112-9811-7978ba5d4ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac677aa3-fb89-4b2c-86b9-9c196f7928ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1d2601-f985-449c-8374-b5aae281b41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10caeda-3731-4eff-917d-0ac3ceb9af63",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a0d218-e4a0-4282-8ace-e57279b102d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe4c8a2-9075-4abc-9b9c-9dfe917d831c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd8d937-e70b-42cc-945e-db1454f2f848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddfde6b-4102-4d7f-8d01-a40b873d5eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfc4413-12b0-4fed-9b94-1018f516d131",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c2e5b9-2a3f-4e16-b307-e737e4b4f915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1562b8-9a1e-4fc9-8c79-ba59224388f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54894875-3677-47c3-bde3-adee2c5d845e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3d31e4-d2a9-47b3-952e-3a1be312804b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d4d88d-27ca-44b0-8dee-817958b84ea4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede8c4bc-3eb8-4890-8a1a-c0aca5421cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b35e04-feb7-414e-871f-690ac0983a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1855fedf-9a8a-4cd7-b53b-a734b568faeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62d5857c-16a4-4ee9-bd3c-008303adaf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac28a6a9-82f9-47c7-8ca0-f1b59f1710b0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a41ed1-f7c5-4b9c-ab3f-128a61c0cd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666063b8-370c-4bd8-8140-80214c7c6d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182d4706-1bc6-4db6-a100-dceacab2887a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "511ec369-0838-4b87-9c46-917d5d32a175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff06d8c-e0f3-4417-b223-0345d83cbda7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1747e9a4-39ba-4ed5-8265-11ab0f07dc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a492060-be85-44b2-b017-624bf6b05c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990f89c7-3d8b-4296-9d71-0dfd353a69d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20d583a3-8351-4c5e-8687-bf0674085704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ef54fe-9f03-4ea4-abff-c4d17496059e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d1c8cf-4caf-4eb1-8e30-9050641f57db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9f6056-3a35-41a1-b5e6-2822a15e5b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4291bb42-1c68-4a79-a096-2893dc6e6042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "44b72598-a068-4836-86fa-d83f2922a7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e6e32d-fa57-4be3-9f99-422112f36a46",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f42416-da1a-4c36-8a66-9fab14efac95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994a307b-d7b5-4ff5-9659-46555e05c1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a07cf57-ba64-401f-bd95-aaa4aefd0c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "94e2b5c4-9106-473d-9189-e535c5bf9f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a70579-a74f-459a-8982-8f7f58298cb6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634d6877-1662-4c18-8280-df94fe765f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ad5994-0a86-4913-9eb7-448f8b101b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c561c82-ee46-4927-b517-a976667e667f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "316ee0a5-f1f7-4278-9a0a-db4255dc133a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5190a727-3ac5-4d87-9ac5-f4de3e38fd27",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0567bd38-e072-4959-93e1-9a92f81fbb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d69b56-7189-49d7-a854-4381d1d85874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc14cf7-276d-43cc-bc2b-0da7047420b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7361a6b3-d74d-4964-9054-00aa2b65abe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391524bf-51d9-4053-91b0-3a3998b5cfa1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbd3f87-8cdb-429d-8f2c-530c59ebbfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c2830cbf-bd4b-439e-b274-c02fc02e4db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298f827c-05fb-4056-a7c3-5a50b89afc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c95898e4-95e6-4ab4-9dde-5611930a5d44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "793b601a-56d9-403f-8111-7834fcdf15bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24abddfa-939c-47cb-a0cf-201d22c781d6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885862f1-55a2-48a7-80a5-d94d44c0c7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cbad38d-a7eb-4b14-bdfa-00e5790bae4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458a42c6-d300-4dee-a7ba-d3b222b32344",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7563bce-732d-4c08-8f35-3c86f95be700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf07cd54-b6e2-4179-a594-7747e93dbedf",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a12ca04-07c0-43eb-b5e1-7be06a18d3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82e9e933-7392-408e-beb0-e282fd4e27be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12976fff-2905-4b2c-a4ab-9d4b6eba88c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "189a1340-1803-4ac7-8ec2-1a0664c95900"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c15e93a1-5ef9-4128-9e2c-94f4aa8f327d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da3b8f98-7500-4c3a-bc01-5a9618ed9685"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cb5250e-7eea-4769-8fbf-78f3a5c713dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6097f6b1-d6b3-45bc-809d-8a037d0d8c6f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7be04219-0ee6-43a5-b3b7-629bbe569b03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "884ff5af-aab2-4205-8db3-d2153e1b63c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d62b7a5b-6b21-43c4-a409-54d8ceb1e5e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ec5460a-b62f-420c-b7a8-187274782160"
                }
              }
            ]
          },
          {
            "id": "b1b754a1-0040-4dd5-9e5b-acdd4ff60e4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c099678-6922-4ff0-8c1f-8a7e8f2c4675",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f9cb58d-e738-4ee1-bad2-0ff619add620",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50bab5ed-c477-4f16-bf47-5c01c1030384"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "105adc23-5557-48e1-8555-b1a08e529111",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61bff94d-d0f8-4011-a787-5da93da27bb2"
                    }
                  }
                ]
              },
              {
                "id": "1cf04f67-aa18-4376-8149-36a66a683e3b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c1f9d00-4791-4646-b463-19f0ef13ee8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4788598b-61ac-4f9c-9874-f2c3bc8ed2c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17ffec98-0eb9-4cfa-abe4-7d1763d9477f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d125ae4c-e633-4025-975d-ec4ace7f4799"
                    }
                  }
                ]
              },
              {
                "id": "fc8fd4fa-e91d-4924-9c83-19fadaa189f4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59dc7cd4-711e-482a-ba55-d54284f72836",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6df3bcb6-ea22-48e2-aa48-1fbfd8207da2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58d79d15-9a9c-4266-93c3-b88b320e86e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2fdb0dda-fd63-427a-b06f-484a87350c78"
                    }
                  }
                ]
              },
              {
                "id": "858883f2-6780-445e-a6a6-ac29591036a5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ee2bdc6-7f63-479a-83a4-724e63a6c3da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6e4a1ee-33dd-42c6-9c41-f70286b3d176"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26a7285e-180b-4bf6-8e99-8518700e0f40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b2c44f8f-6215-4650-873a-bd07ec65bc08"
                    }
                  }
                ]
              },
              {
                "id": "c7d289df-046d-40f0-be7c-d9bcc677f950",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08ee1067-62cf-4c86-b7ed-a9b84f5c76db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "928e0399-8213-4538-9a0c-9bd7dfe430ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2be9bdb-8b77-4a59-bfee-4c18b70115a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e17af774-d577-4403-9fd3-b7bc9a80500a"
                    }
                  }
                ]
              },
              {
                "id": "99d8d3e6-c3d2-4fea-bfb3-df22cf031f34",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07aaec2a-d322-49c8-8d02-4a8b7c8e911d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76acc88d-2ad4-4dae-b7fb-22efe49fb534"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc72fc8e-3c75-4847-92d8-4984672a2ce3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4fd04e52-53c5-4358-94e1-b12c48ac9706"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39f9e7d0-ea2c-4bbd-943f-82503bb4bef3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de027412-73ed-4742-809e-e94128ffd0db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "21c351e0-a0f3-45f9-bfa5-999de39408e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "861a3928-40d1-437a-ae7a-235e7cf60be5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba93d3c0-4b23-4390-b68d-602e4ef7d2d5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d871812b-128f-4dfe-b859-cadfaa853e13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1e50ff5-c357-4519-a3e8-17cfeff0e115",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b7fadeb-0991-46bb-a6d9-62ecc2be1c39"
            }
          }
        ]
      },
      {
        "id": "276987f5-90ae-4f51-b902-aa5140f73627",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0914fdb2-186e-4f74-a416-3885ccf09350",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f4b88ff-593d-4f1d-957a-7e1a97c6c4ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c8776ab-290e-45c5-aafc-e4c3db590db6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5830463e-9978-4dc2-a1af-67b65cdf32c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cdefd6-81c7-4caf-8573-cd638a530bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db62129-5fc2-4cdc-af26-4f22c21e818c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "219b0012-ebf8-41fa-aba3-2b2b16006d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c868985a-7315-4a67-81cc-44f4a6f8eba9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b96a726-fe17-4e22-a424-d4bac128d810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1f7119-c525-4de9-b408-9e97dd4efaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8e95c0-71b4-494b-913b-f3386c4420f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b2eee7-4438-4848-a389-b3e8bdaf5493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be73516-dd39-4cc8-b22a-cbc5ef947632",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4a1c1f-f7e5-46fa-9ffd-729a9f066dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4cfc14-9836-4e22-9b13-2737349f857e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f07c01-b9b3-451b-8a39-8553bbac274e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "106e9937-d2b0-4583-aef5-ccf59c089ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d035b4-c6cc-4518-a889-3bfc30f3cf10",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180387f6-051e-4d1b-a690-294846f60a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a29e14-7cc6-46fb-ade4-68b0dced03a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07317157-47e9-422d-9b0d-11ec7f2fb302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43f6811c-79de-4a10-97f7-9fb83ffed705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c8e56a-0919-4db1-b468-1f9e7c6ed6c4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959702a3-eb50-4e52-bfb4-166854f23f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617d7ed1-304e-4549-b2a2-4444b0bc7c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac8c09c-b08b-4e1a-b323-241122a0b90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f14180d-d0ae-49ad-96aa-c9a8475ad77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65fdf4e-de71-49be-99fd-a638c1648e4f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64cc427-7d81-466a-a48c-84b4a79c18f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b62d4a-84a6-44f2-8eba-1208f8b6eb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5233da6c-9689-4c9b-b625-f8a11510fbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f60ab621-c8c0-4018-ab84-6f830a53ea6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc468749-0a27-43f1-823c-d1fed707e375",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca08e6f9-5f04-4b03-9b75-0de22cfc06e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abea1a7f-9c9d-4f39-b8c0-ee7fb1fba59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beca0c37-d804-4fc0-8d20-20eb59309048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "84cbcd18-b421-48dd-b186-fb47583431ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31ecef5-b554-4ed0-8267-58bace03c1dd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c41c13-fffc-433e-9f3c-b96834881fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359b5791-7254-4eb0-9e67-83fad18ff395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18a2514-0fe8-479b-b1eb-37ccee235837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de787c7b-3362-4d6e-ad5d-8bc9b43cddd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e12d6c7-35e9-4d1a-b27c-cab70bf99224",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab88e399-452c-459e-93b8-2feed939abaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd818af9-45e7-4f70-b546-8f2f667c1909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004501fa-59a4-46fa-8b2b-6312c96521a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd0d88a-75fe-40d6-a9bc-61a45f31cec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4799b2af-6988-4cbc-ba87-efe5f702ce3c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e4f057-c826-478f-9bb9-50b27e381193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5303141d-2d5e-41d1-bd18-ec924e2437b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fd5aae-576b-4af6-b725-da2ef8ad4a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b081064e-1a34-49f2-9d11-93e8bd36cf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5993a671-7358-4656-b04e-485adff4922a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb24675-bedd-4ac8-8c61-b675edd72a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba755a4-50e8-4f17-ab04-d7f772779a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48f7c6b-4ba6-4469-9708-18a894b06649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e7916911-8645-442a-b902-2ccf9c209191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35c3d95-7221-4b88-81af-9aee6eaa44ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484b2c6e-5f60-4f35-8dea-c466e57fd672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6525b2b1-bad0-4687-a6ae-d08ca924d7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b06fef-dbba-4b2b-a2ff-2aefadbad5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f762f9-a97a-438c-95b1-6bc24b2aebfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b053acd-9f6f-4ee3-9e92-d61458ce935b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a1573c-3e7b-4ab7-a1ec-5314066362f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59b03a3-c82e-48f9-9a83-e10f86fd6854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644043d1-f8f2-42ef-8de5-812a36764d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4262d46b-bad6-432d-a464-2139b054ca32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40b40a1-215e-4911-b030-1325bd29c356",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fdea97-8d7d-4d4c-8b3c-951632b0e681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35be791-b21a-4931-b288-9e97fbea174d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e449be-1674-4736-80d5-ee06782b748c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a21d06e-d6cf-4d4e-86b2-04433ed35793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3f9d80-3708-4fa3-99e2-0cce98faa1a7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54f9a31-f3ed-4f49-bb2a-7186d854632b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49606519-025d-4fec-8bba-c74669ed3880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d51b79-27ff-4e2f-87a6-c38353947e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5cc0d0-5ff5-4780-80ce-81ee29079cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653aa231-60e1-45f1-bcee-b11927e73e98",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa3c8ef-f537-4ddc-99f7-fe2c403f3c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da81b0fb-486e-4810-99db-d872eb46cd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859fef0b-a3b5-4f22-883a-cc1e1007ed71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7586cf-2d24-490a-9a9a-31416eb5233b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40277d6a-ba60-4372-a542-2b72d585964b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34590d1a-8686-40bd-b167-425f001d6f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1c2310-6028-4109-8fd2-dcc15df0947e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705be6c6-0ee0-4508-8ae8-e4ebee92ed30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea57c5cc-44dd-4895-a7ec-6617a2f43a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650b4faa-9d17-47eb-9b10-76ece65f9e9a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4e947b-5f66-4ca6-b4a5-706761ff428a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c3e777-2fe9-4f4c-830e-4117ecbd0ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a02280-8c66-4770-b56d-e8aa56e7b1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac0d5d3-f8d7-49fc-883b-68d0d38e6436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4701bf04-85a2-47f3-ba41-89c3d8c2866d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38df88ce-d055-4d35-8275-baabb9e53278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379680b6-81ad-4672-87ea-96fa13e16660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf20125-2046-44d0-a909-4ccfaf14607a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "511ac44b-571e-4423-9153-68ddd1f44011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0392d940-231f-4370-8866-be15a93e5501",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aac5dae-6328-4702-a1b9-a529dd0eb837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af13c539-da0e-4bd0-be1c-175ee4d3a8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712d9860-3e4d-45c5-abe1-23e44a80c749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc3ad1b-466e-42cf-9fef-b488f5e42244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd0b96c-e885-484b-9eee-12d977275521",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14544e5-add3-4927-ac15-20f903d62a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ec0523-ec5b-42a7-b561-cb30a8bb6097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf514799-8848-4e6a-b6ba-e493c4fcae67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4d324a-205b-4fb6-b14e-28e19ed55d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022f8263-70e2-47fe-8771-bc7c594ac7cc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6434b0c9-4098-4345-bf09-868d59e83175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3f4077-d260-45f0-9d7c-5e5cb288014c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd4478f-f754-472f-81ff-d8ede01f86c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f908330b-0dcd-498e-9e16-ca584dbf32d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b19a57-81ad-47a8-ba79-55f9686746ed",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e3f4ac-8482-40b8-ba6e-82df6d76d42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6250573e-9246-466f-925a-52e8620a2d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c4308f-f2e4-4987-a465-cd7e48298bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de37c9aa-5964-48e2-a8af-755d0849bd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ffcfd0-a1be-4f9a-a0c4-eb948a73ef3a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5d69bf-1ad4-4ba6-801f-870ca3772636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72104bba-e0d8-440a-9204-021358661085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b127da-b2f1-42e5-be6f-4be2a1226a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a47326c-b9ca-4299-b639-c52733789a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea4d5bc-46ae-4975-ac08-6e29f3e3c2e3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ad0d21-2d71-4c1a-8922-cc8e45b06d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49561541-38bb-4760-810e-e9106b706fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76db7d11-7eb0-4350-82c6-f52bb0b2b2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1f4725-77f9-4fba-a6b6-ad1bf47bb50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8c28cf-c5cc-423a-871a-b570a099e5f1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b40302e-cfa2-4cc6-8864-e2c91118af3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1799cab2-0424-4af4-804e-19bd5f9dcbd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b683a5d-6e42-4e6d-83fe-63aeed5a8737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7ced97-7b66-43ba-b27c-f4a3c8e8be00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627920ec-55f9-4471-a0b6-4126aed19951",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed8bf9c-ff3d-4d61-b6b1-3268af568a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a93a6bf-a754-47f8-9536-86b546ffb9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d642ea-3658-4120-a381-019a2b9f5620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7e3081-e338-44e0-9a9e-841cbc0396e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a5adcb-6144-405f-9b61-5a878238911a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb1c17f-cddb-4d70-88a2-70921dd10d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fa0f81-f57e-414f-a326-461328e5f30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e92d8a0-e127-4f45-be63-759d9d8fd1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc8e418-1864-418d-92d3-143c89ff4f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0613ec9-e96d-4955-8195-55e655e01b49",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c7b4ce-0898-43f4-b091-550f1ab7083f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016b3353-70a5-4fe4-86e0-42b23fbc46e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270e9051-34f7-4fcb-8fb7-7a03cf1556f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f864bd-b53b-4e29-9924-e0a03602a940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674cbf5a-92ad-4a6b-a3e9-3777c0046383",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9935e3db-7aa8-48ae-bc43-b6e8795447a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5454a05-d590-44f7-81df-51787792148f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e679a14a-badb-45fb-bb31-4141be3a57b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0c8e04-775a-499b-906f-0959135f3e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3031e370-de92-424a-8667-c85103aaf9a1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc30de1-017e-4ca5-8c41-5f5ee686a5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95bb86e-352c-40d9-8e75-f08e915e1fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e859917e-cf72-49b3-b373-31a4e3856028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0b8a5a-75be-41cb-bedd-9809f4a0a7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4272bd7a-7aa7-42bc-895d-aee27e9bda11",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06a9964-e765-4e40-adb4-0430f0330cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab16c938-5856-4dfe-840f-a134b32cdaa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671f5731-6127-45fa-8f42-a0d01a41e504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82801669-f4f3-4df5-9763-1a4a1603af4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ea3d688-1e4b-4e56-8e96-2209cfb27984",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3de0eff8-8fcd-472f-b59f-d7254c8c5408",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5941406d-2932-4a21-8e63-50e743d3b92f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e612c916-246f-47d2-9c8d-7d4fb2f48ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668d72ca-9c5c-4da7-b64b-919a6791f8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35bd21bb-1e54-42a2-a6d6-3891b86dfa0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac138076-9400-4433-b279-c2d6e9d5b950",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51d6131-e004-4630-98ce-99447b6962a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "788e9b2c-a2e5-4c4d-805a-89b6fe3190d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076bb7da-ab9b-434e-8627-d59558e6a5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32cf4cae-c430-4a4f-8530-f5f8c0f75e09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e90ef3ff-52b0-450d-93c8-f6543845ca5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e6bd87d-04ed-4efe-b8eb-ea86e09cfd8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9615ffb4-7b27-49a8-83cc-66bc47c0a94e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01165f20-f973-4d27-9d49-5cb209c71beb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "571f8ac2-386a-42a7-93f3-3747e9729fff",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "724d466e-5ab0-4be5-8920-25bc773dba64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74089474-6cc8-4b40-a049-f3764ce52d4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae4ecabd-c5c1-4a7d-a8bd-09dc24b3a7c4"
            }
          }
        ]
      },
      {
        "id": "b3a28b50-f5c0-4ede-94ca-82b39b33bf31",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e222871f-72cc-4bfe-a0b0-7fed1c105fc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "304402e9-0da2-48e5-8c05-0046fc66eacf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebbe1aa5-cafe-41b4-87d8-02ed6f3f031a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a927cd-82c2-4717-97c2-8cab4f0e1fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b6d59f-011e-4e58-a532-4f24e5f4b4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23ce6fd-5213-4b70-b555-e31278cb71fb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1378c77-e779-4031-96a5-88900e87b1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359234e9-c202-4986-9462-f03fe44b5b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f989c606-8956-4b2b-a921-8e2c236d6c22",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb73bb45-bc77-422d-a8dd-89982a972950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96ce640-1299-4842-ada8-c36bb95f8447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f0a6dd-144f-49b7-ad73-3bb38cfca642",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1175a0c4-fa0f-4eb9-8537-4aa7d5ae4859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f188697-f797-4989-8732-c7702dcb3430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d81a65-5771-437f-98f9-9c44af00d2bb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f5c3b0-ba4c-466a-a277-c1e2e7a8b8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd35c44-d814-458b-944d-9adb5adb6159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef357ac-a539-4c43-ad56-70e5524fd729",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab73bc1-fa10-4bf5-b852-fb94b1d2f52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7890f330-22f4-49ca-9c85-5a67af0dfd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc7c160-d383-471b-8314-086c56a88de0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1001102-8f8a-4396-a0e8-ccda38f2d9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d00177-c80c-4762-bae5-161346343542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2681293-0ee9-4e4d-ad5f-e9e974f24f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b923b684-932f-4528-8e0d-df9a56db77cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9716cba0-41fc-4844-a444-abde63e56613",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922023d4-3d73-43d2-89f4-53647c3f69b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d2bc172-e56a-4a6b-abf7-ee663a7a3e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c187c66-80f0-4bcd-ab32-e1ac7fd0b1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02489eb-855d-4842-9c28-8e17778e3a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e684c4e-69cb-49bc-ab88-0e47c148dbe9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e1d97c-f873-43e9-9b7d-d1ae7b0e816b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc6e63ac-fbb8-4d65-84c5-3fa761998242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdec378-e399-4612-bf03-c87e565ce47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb23eee2-ec53-4787-bec0-0feab5edf58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ae3c1c-61cd-4153-93f0-6f41b972aca9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31ea9d8-bbf8-45e4-a899-bf9cae0aee22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78760af-ef05-4f55-bd55-a40501c607f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b06647-b6a6-46e2-94b3-961f7c69e345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0732f10b-635a-4723-acb7-2c064c5a5aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98bd3c7-fd46-4b68-b6ee-b815ed0aba89",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b3115b-5030-4cdf-8e5b-785ae47406fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c63f18a-cdd9-466a-8642-c70c1ec547e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316d603d-c072-4666-99c7-fc5b5f3d6cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f995a84-eb48-4381-9dfc-084581054cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413bf9b0-7455-421c-9af8-0e515304a5fb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb8154f-959b-431c-939d-161f4884153d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ef9bf7-06f3-4b52-94ba-1447d1c8dcee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48deb76-825b-4c95-a23f-10abc131e61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b59637-ec5a-492d-b22b-d32236ada87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf4e2f6-c5b0-49fd-ad9b-a74e911868a4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab597f3d-8971-493c-bed6-3234988de08f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d87a9f-acd1-4c4a-820b-c617acee0895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d76e24-2617-479e-a67a-a35e2a2fa346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5145be38-fed1-4ebf-b84c-232b19fb8c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a70f19-62ea-4e4e-a811-d8c6dd7e3fda",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6095c36-66ea-49d0-94d6-d4cc4cb19b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "310c667c-f0ce-4085-b17c-302b021996e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94baaeff-3387-4769-b69f-c8fce7547310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea9008c-26e8-4338-9782-cb94cf0ba1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d186345-2150-4a11-bcf0-ecf0389778b9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e00843-8ac4-4d14-80ec-7abee7ad674a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6943822-eddc-4588-9bd0-ed21cf440214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeddf27-a24d-4478-918a-ad27424ed07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f023d3cb-d68d-4b15-854a-95ac430db1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4112768-c40c-4d5a-a2d1-4c9a858344dd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2822a07-6a0f-4655-a1fc-0d874c42d18e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0389647-06cf-408d-ae38-98efefaa523c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221e6295-7e61-4b60-873b-8b1194992d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f02a8b-7c47-4d83-bf42-c135b30009e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb06801-1395-4bfa-bd3c-dc832c01bba9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7e4199-1785-404f-a366-b345672e0a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2fc3f7-a622-4469-aca2-59b846faa651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bb10c5-8adc-4d5c-b082-7189bc1dca6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb13242e-a80a-4e93-9dc9-45d8fb007664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e152745-0601-4d57-ae02-09be779fdc0a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d655a943-05c9-4a2e-8e9b-e13603f82e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcf3ddc-0e6c-4477-9e2f-cdc287e66ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ae7a62-216f-4e44-b919-8c43ae679acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a482de9-1519-448d-90fa-66e16efe2ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925fbfe6-e5bd-4a88-b862-00a89590c64d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc5e24d-2573-4d48-98d9-3138cae95b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dd8985-9918-4681-a993-ca3c0870bf92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e84fd7c-1581-49a2-b149-411d0c05a93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a79eab1-6880-451e-829d-b10d4e0e307a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0e0858-a208-43a9-bec5-932a55555cae",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f37483b-e34f-4821-8d68-91f227436ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa01ac14-dfa0-4b81-affa-c5b5f4ce724e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798edf40-3d85-4c43-bb88-c5a2050a407f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42370bd9-16ce-4dc2-91d7-2a978677d3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5071bb55-28b7-4e96-b3bd-aad5f9361b5b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2ab1e2-37fd-4ba1-a8f0-0b26d6439c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3999e6a-ee45-4dcc-bb49-905706eaef6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c77a3b-2ed3-4083-9b14-af1a7de06248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673878ca-b9e5-4687-8c2b-72803b9f3d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11abfbcd-68ac-4e81-877a-36698ac0835a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cba2817-3ebf-4682-b87b-5a66bc1d8335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9af6aa7-2f88-4140-94a6-ca8d32dc7561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c130d4af-3a34-41cf-bd97-16195573b447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939acd64-fba1-4410-9fff-66e9a1be0c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc41531-11d2-4e22-bde3-9a411202ab49",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9d6e77-2156-4f7e-b498-df42c3bd0ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab55f24-2a4d-4064-86f6-4cbd865ad078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c2df0d-11ec-4be6-be61-00a4a09a783e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab2af14-10c2-4207-8ec1-8459529af141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d91ba5-93fa-4d23-a558-583b79a7834e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d96a565-91d6-432a-80fd-809dc587674c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e5dfe4a-7e7b-4387-85f2-253cb2963eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaa289c-3030-4748-b0ab-88608a84dec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265dd861-f05b-41d0-a936-c5513fa599a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2925dc2b-7129-4883-912a-d56d02c1cb94",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f119ec0-7c63-4e5c-bb76-436a2c056aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817ad823-0f7e-4130-b701-5f9d97845ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2b3d2c-d2e4-4c3b-9214-c44ee9c5621a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0f31c0-874e-4bdf-89cf-623ca37d9da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efb20af-24ed-4cc4-a332-1d776770248a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e2177b-59a9-4deb-bda9-543b4d4336cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de115999-a6f6-48fc-81c2-f4c15ad7cb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd6a71d-e6cc-4640-99ce-e72f587c0cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfee16ee-23c9-4db8-8910-0fdfd2635fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bac3ac2-23c3-482f-ae0d-caf5ce23a6cd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da8bbdc-3423-4cb9-8a8a-52f9f2268c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abab5149-233d-4ec9-9297-dee950fa9017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f025fb-5d83-40df-89f1-6eb76030212b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bb9898-7332-4c0c-bb66-1b4ee62ca5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0921c70f-bef2-4f51-bdd6-887cb880d2be",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b676e19-00d6-4c23-95a3-f9c6a866981e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98a7330-e7ca-4835-b0b0-1caff014e616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd822ce-ce62-4622-81ab-dbd7f736b362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5cb8df-bbd3-4e53-825e-d1c43472fd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317eac36-b28c-454b-bbfa-7d32268dc193",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b42cf57-31ac-4237-a875-cf4e78d5565e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931f79dd-8a3e-429d-894c-5ea2a77a9a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e82937-a9b3-4dba-95f1-fbdbdb82668e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8605697e-f92d-4be0-a1ec-7a623115e827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3655d61e-ab52-4d51-b9db-9636dcdc88ec",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6eb725-bd2f-4445-ad9b-d4c4b33947a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cf40bf3-0d18-4f3b-8bb4-e2bc5e0a935f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac89712-d4b3-4934-93b4-77ce68ffdc74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdca9e1-b7b4-47ad-8c99-0d3b0401f4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dda5f4e-a4ca-4cc7-a344-119e3c32959e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe19bc5f-b9ec-427a-8609-5a87dba1179d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16fc81b9-a966-4099-a33d-bf6c8416a38f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93ac8a1-2a0b-4eba-bc2f-20175ee00342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad2148b-6420-4b1b-8a20-213c00646895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99025292-edeb-4e15-8f21-b37e186eb9dc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8670fc0-e2a9-4778-893b-d314feb2c6d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08214e8-a54d-4e51-b442-a7d949accdde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d95838-c414-47f0-9c17-8f160fc22dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e28a1c-ad97-4f43-aabc-9d4d51124f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1d349d-b7c1-474a-bed0-7115b99d80da",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3121cbae-8947-4741-847b-ec27f5e762fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2531d8a3-e8d3-40a1-9703-f01276fd851a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4570aa-dec3-497f-8a02-4ab47b53325e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf25e38-e92d-41f6-8231-157d03fb355d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95622fb-e1dc-48cf-a8aa-ba8231c92c98",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce25edf-576e-4558-ad6b-605846c32872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8d05a6-913c-4b34-a733-4f960de28c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a142bc-322b-488c-abfb-45f1b4edeeae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c985e1-e1b3-4bf7-84b2-6028f649044d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00710bc5-88b3-4235-ad87-8eb0a2f23b4b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155cc4e9-8ba3-4404-9b5e-36efb9032b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3aad07c-9187-4a37-b6b9-4c584bb23d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f694a2-d364-4d32-b5a7-e1bfd3689a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7ba8ab-7232-459e-ac7e-b3d90c5d7524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61a353f-db45-4472-b848-a4912ba67527",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858f2803-7d7b-4cf1-8c65-76e7c895b469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59bb186-7e43-4714-869f-74b17d68f707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5341825-bc8a-42fd-a79e-262eb59a07a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e97097-a477-46c4-9c29-6d274cab203d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0596647b-2b0c-413b-8a71-2a277cb81a8c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8733c4ed-f4d5-4967-9cbb-1539bc9ff694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8df14e-4832-42d9-bdd7-ce0bbe5f5e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d070b28-8786-4045-9391-3d6d7ef5478c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0f0c61-6b72-496f-bfea-93dffe2298f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c40f80a-a0df-486a-92f1-8d68620d7f3c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a75afc-feec-44e3-91cd-cc2237aa205b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9733ab44-ddb2-476b-ac3c-ece4e6cf10c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7e5df9-3048-4557-a373-c31bb39af955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c976e0d-e6d2-49d1-aafb-de3dd1a458be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0de0864-a1f7-4062-8c97-70dbc951dc32",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672fa274-a462-4778-ab0d-e87de4e97431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b769d8-4c4f-4aef-8e5c-3a72e03b9004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe70a0a1-8df8-4d07-8573-8edafc16b8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18f9531-c329-416d-99a9-a3df30110e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf0fb24-5c81-4918-ae30-5c4ecd1ae809",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86634ae7-6354-455e-bd04-ff5b9f3f38ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10f1bc0-83c0-41ba-9ef3-985aa353f5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c8bc9f-8170-4f7c-9aac-94f68ff7a068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9348239e-82c4-4d0f-8af7-97bf2b2aca0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db81eb96-7321-4bc4-93a8-ff257adca002",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e15f62-65c9-4b37-b894-0352427ab07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ef7c89-a3c8-4c4d-b83d-14c41cea4f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6fd8a6-d7b0-4aab-934e-a7bedaf4c8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a85ab28-7097-4f9c-b677-0dd40799b7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b4ae94-3816-45a4-bdeb-5b23e3a5c640",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfbd259-6289-4c63-8983-3c81430d02e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c503843-8a0b-4761-9442-8e34be71f655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031e19d5-3bd7-43c7-bf6f-99972014e3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811071b6-1ae2-4219-ae69-1c807b8f73eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a828eb3e-16be-4497-ae6a-498b5d9281e9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5618bea7-15d3-4eb8-8309-334b98c9ec8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f7c72c-0949-45de-8c3e-39cb6551b887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466300e3-e377-48ec-8e85-d25f578e8842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6102874-1cd5-4ee4-b303-4911beeede99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba9af3f-a90e-4077-b74e-b691922d988f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb4bc14-71d5-4e50-a4a6-18c31b1a4b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99e7df7-e8a6-4a0a-95cd-dab2e36e1bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91361e7d-37e6-4995-be6e-76d89e7dcc1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff73659-1d9f-4618-8256-62558eadf958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d257cb-e79d-4c3e-9786-b56003030d6a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f2c6e6-9379-46b2-ab42-a20cae771fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7df2c5-7ab1-4c7f-96dc-e7917951a6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f697ce9-abfa-4c6c-84ef-347d2088c9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561df18d-736d-452d-8033-ff66c815c1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb272299-bcca-4bdc-97c4-037f291b94bd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d2626b-3c60-423e-844a-28c1595a1721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639dfa2f-318b-40ca-a172-30d659096514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb37196-7b56-4b81-9cbe-6c19ffb58bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4a50c3-3f55-495d-826d-b084e813e2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed703996-123b-4d89-9481-001a644fca7b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adffbebd-27fa-48b8-b3d8-633a3eaa8254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9f86e6-ea27-4ee6-9646-7df1ca363d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f57b8ba-630a-4d94-ae9d-13e1eb1f5d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69689033-2b58-4548-b07c-7fb4f2562105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c31623-b10b-4e80-bb67-1791a79cd7e6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de54969-c343-4184-86aa-bf41993b843d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f85655-5be8-4b85-a98b-a458e3fbad76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecbfc24-9bb1-4c88-b8d4-b1e41b8f3a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d997a4c5-a41e-4a46-91e4-72b872270dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e8bdb4-c65a-476c-a2a6-ebd4a130ed10",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b57043-eae4-4c8e-9f6d-219591257acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d801fa36-3e63-46af-a2e7-aeaeef1a4fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f0d958-d980-43b3-80aa-6a6a2c73e270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc1996f-fd6d-46da-bf89-14bdbf998efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0633c77c-d675-4b2e-92ba-578bf3692b40",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf69fa9-01ae-4b0f-94b5-0c3357f05fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13ac116-ad05-4183-86e7-6403f5acd28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa866444-55e0-4571-a58b-2524b554f0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad30a4f-a072-4b01-9e94-1d3e4bca7067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3d0065-8185-467b-892e-912b9992db0f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3800118-bed5-45e3-987d-a9c53afa6e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c479445-408b-4f8a-acfa-d2ed491d7113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eebe8f-0ff6-4fca-9634-94c6d80b1b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e07cc88-4d3d-4286-9346-0d740ff4da96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450b80b9-9db8-4a8e-81d9-89450902864b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326fb20f-43ad-41e2-9b2c-2f6b2f2840ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9062449e-5deb-4229-bdbe-75a044cdfb20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebdd21a-e97a-4ff3-a03c-9e04ab3cc3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd8ed6e-47f4-44a7-aa5e-f8112cce7d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4622c6-2142-4a34-a60a-aa6f742444f1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b95a118-dbfd-4c24-94bf-fbf8f3de93dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3921cf0-d79b-470f-8f52-95808ce08a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcffd152-c9d0-41d1-abe6-58c59eaed265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c2f655-6d74-4918-affc-4c1e1f4890cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5a5027-3985-4d02-b7e3-86511047f57f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0163f438-af58-4952-b971-6975d6529fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c4e069-1a72-4426-aaa6-7f9bf83b2b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0dde9a-f175-4089-a0e7-315edb3a47fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7340d91a-8a35-42f8-b1fb-40333eb5f619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d195ee-83cb-4340-b447-d7d5caab977a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8025e66-ad31-4c13-9fa2-5e6846dda11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93564713-fc8b-4411-8335-d0075e26e8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044d8238-64f4-4730-8226-f69491a6d4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffde9f5d-0601-44ea-87fc-5699db717cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1765932a-9ed0-4545-8166-071db5bc7bba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80134058-fbbd-469a-82c2-e6de4277a8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587f6ece-bd28-4561-897c-76ccafc0b556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a2ff22-a3e6-4af8-b4c3-6e4a61e27fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97b05dc-4253-45b7-aeee-d0f676941285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7d49f8-0108-475c-a6a9-1916fae12086",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736f896b-c3e4-4703-bada-745d4651fdad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c597e75-92ca-48bd-923d-9353af411574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef9c2f4-1a7f-48e1-93d0-9910de7e15d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468305f4-9f6b-4cae-b4e7-e4b279efaba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86c3df6-8572-4a8a-87e7-390f56e75442",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbcb37e-3377-44d7-890b-e8220ba53f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b32c5df-9181-4768-acab-136a986e2610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7736c3f4-c562-4c28-ab39-58c58a832e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052fde4d-e9b0-4a21-a894-10bd2f968e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d1dff9-6aaf-4837-91e7-57d68c1746c9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f23e38-5fba-48d7-9fc7-0a7b25a9bf5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0f4a30-3ba6-46fd-a584-dbbfeec5bddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706f7abe-6cd2-4f2c-a8a9-5b0843767882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fa6b38-85f8-4767-86db-0fec4fb5f304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ba8928-e3c0-40d3-92a9-dfc5890a4ab3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76569ebb-3ffd-4bd8-b894-ca5d03783566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657f6661-d872-4fc2-8a0a-9837dc678ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b358e73a-f411-446e-bb1b-3e6fc5882976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adb9b9d-0858-48f9-b939-8bc53cc32474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38953c83-fc31-4b36-8227-99dfe9161fee",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986656e3-a5d1-4bef-ad6b-67d3227ad91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e46f117-1038-421c-a134-3013e4c00e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6780582c-5445-4430-84a7-81395a0e16ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd86b461-04a4-44bf-94d6-a6fe5ee7eb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e427f10-3aaf-4e80-8fa6-87af8dcb0a30",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced1b363-d48f-4650-8a2b-df98d591bac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65df1eb5-dbd2-4e04-ba06-29b2158558fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9504a735-667e-4abe-ad3c-cbe15cf83b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f138ceef-0d12-4b36-95e9-f09c98f911b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163b3a0b-eb03-4ae5-95a2-381a0aae07fb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8094b93-613d-4987-a1b0-cfefea6c3481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac085790-1553-4dc5-a20b-c1ead61ef392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0615c2f6-4cd1-4210-b02a-fe08d00c0f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb97a6e-9116-4c3c-8bb4-3cabe7d3d007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffaa0db-d938-4dd5-868e-9a02a8f0904a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2e3606-2118-4f7f-be99-5575550e7f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82a2b59d-5325-48c2-bc6b-e267e4884dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d41151f-664e-4ef0-80c6-91df11e7b80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8841ad63-af73-40b1-b5ff-e2edfffdc70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6acdba-4940-40f4-8d69-f9e3a4fbd4bf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8513891b-3d7c-45ae-8188-2c816169978f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825ba81a-77bb-44e0-bd54-c354c90c8b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dc4b37-b884-4518-89c9-b6b7929b10b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670ea05d-b7e7-42d5-a3e0-fe05a53bb357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c94554-55b0-44ed-8776-1b3123a8f8ea",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5876cf-6dea-4e7d-9390-f07648d8b395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9c75f3c-e73c-4617-abd8-75e491d63e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a62cfb9-6d05-41d5-aaf8-71cd22c9bb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bb8732-4ca9-440d-aa34-9ca37cdf9c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fa5c9e-a48a-4665-8078-e2061e8988ce",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504ae329-1c3c-4306-9960-1a606ebba2f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df679a1b-b30b-45f0-9a3f-06dd2c835119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d435763-ba87-4090-8c7a-d80e49fb0c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f15d3a-260c-4be4-bebb-f4387865a573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2745ef5-f212-4bbb-aa05-027cf3476d51",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c28cc5-df6b-4958-b5bd-28a48291f2c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a058b96-15b4-4efa-b0d0-c726840b385f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56471e12-6e42-4f26-93e7-d06fea25d55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19570b09-f8e5-421c-8052-18717c258b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b36206-6c8f-47c5-8f04-366ccbcb280e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabc39ac-4c36-4b64-a5c4-d4013e0e12a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01dc780-a387-491c-9822-60cff959e5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5a2ce8-05dd-4957-8a6b-41390064e9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ce3213-75a0-445f-b62c-159bba5bd4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce451f9a-af20-4c5f-a319-4984588b106a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1b0e3d-e5c2-4d53-ac55-7e897a115b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d94da317-b226-40bf-a55c-51581ca91fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e2b4a1-9960-471d-b4fb-63908f22cf61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3385b7b-6519-42e8-924a-dea7b2f19a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e04f4b0-aa84-4f1b-8c02-aba5532c7e30",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1696e0c5-1963-4102-ac1e-44f82ea60995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71afc6df-51b8-47bf-83dd-0dc000aa370c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180ede80-bf3f-407a-9b13-615d002939b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7b71a7-1632-4449-8ea1-08c1c85d65b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c942f6-2c96-491f-9cec-3ac0a81156f6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d070c043-747e-425d-9fca-70aa96175800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4776c9ed-92c4-4931-a696-38b79a61e644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b2ab3d-df61-42c6-b37e-77a8bd152750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b3b05d-c8ab-4893-8800-3f05c3e39670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b223eb-5a07-4799-b93e-8546e9ff5d3d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d5f2a0-8670-4ea8-84cd-7b63364a7e44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add81ef2-f195-4392-8639-647afdf114fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec871f-9a1e-4767-a29d-58977fd6e055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e4d61f-9781-43af-8bbd-14053f454f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84068c71-349a-4f94-a4b7-e294c7c8954e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e29bec0-f8d7-422c-afe4-87c0830bfd96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e88e1ffe-7aef-4d23-adc4-463566527212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b82f79-4677-494f-affd-ad91039ce964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca2d805-2566-4c6a-af5d-d898c7ba2ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4239b369-360a-4ef2-943f-3ce2d5483b53",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38d2b29-f5a3-4a20-9bae-bb2292dd8e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c7043e8-b5db-4e6c-ad4e-cf8ed0109e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c2d327-4824-4e86-a55d-620d537f0c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1df7cf8-5f58-490d-b79d-1043ed41abfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe775b1-fe61-4e6d-8b64-1eb8ea1db071",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621ea77b-284a-4a18-a2a3-64a91ebc199a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55845b81-fdf5-4000-83c4-cb0024796704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b967e0f-0764-41e9-a952-e9838d2e2d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e6ec20-0c10-477a-bb54-ad0a04a2c3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ec5730-f5a0-4b4e-a87c-52afaf7fc112",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee26fd6c-3b72-487a-b5cf-fca7827fd041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d8a326-5280-455b-a2ea-1211a8ead55c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a05fc1-c7a8-4b14-9dec-fee8b45d8772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775f67f3-a41d-434f-a6f0-e4e6dfb59504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9c0e12-17ac-4a54-8fed-c7fa9d3c398d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c627dba8-3aea-485d-8015-d53e13073c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e0fff94-8260-4b99-86df-7265a7f802ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c049b71-730f-4d62-b700-212e85e0decb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9baed17e-317b-4601-aeb0-e28578a130be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1361d38-5cb4-4f4e-b3d7-cdea6dcf9ca0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f047f2-cbea-4f56-8d8b-7cb15571d5b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "390be8dd-40de-4820-8658-a7e6b1bb6a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a745f7-2648-433c-8074-66ae61309fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13952e8-f595-4ffc-b003-0647c820f2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c43a834-4841-4984-998d-a0b87145a177",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ecd1fb-eec4-4f6f-8067-07f9a50a847e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc1e8e2-2ee6-4ecd-bca7-c5b789dc0e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268b3bed-7238-4b2b-9a0c-6a6a28d08113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf7b3ee-95fe-4ec8-b460-db1c72502df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89151b3-333e-4930-b510-d5d2a92d67f1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f35f0c-b7ba-4044-bbef-a355215cff45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9de2d296-751c-436e-9178-53d7d66714ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120c9118-8e5b-4aba-bc78-6a69c7270a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56532ce6-74a7-4607-ab23-7f9d0e9a8a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31632182-e5b3-4065-ae8d-4915f76960b0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264e11d3-a717-43b9-aa0d-dc97478192db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "152ed2ed-c1c8-48f2-a8d2-706313f2b6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f87e68-cf7d-4ad6-a69a-61afd2875ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d69612-615b-46a1-b43a-4b032d8c933d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ef9d6c-6724-41a2-9a09-d17e89db4dc2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6858d0d1-8e3d-458a-bf41-1ccf539d4c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54aa7f9a-bc48-4cef-93d6-dd6f5aee8891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47043f05-a359-4cb0-9884-f6fcdffc0f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b719b3e-2b5c-4e72-9c08-d87390d7637e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8beca6b-9801-4a13-a5d7-75e566252113",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1a2bf1-9fbd-49b3-a839-54d246b18afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f209df4-321a-40cd-9619-3bb0f484f17a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a592516-5fd7-4108-8b73-08183316ca18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a33a4a5-6b3e-415b-9dd8-3b968b664cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7716d3b-b31d-40f8-8520-400a59040cc4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c0ba43-e8bb-40d6-a5a2-141097bf29e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6327f3c0-926f-4362-834f-82906b64d619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74601e2e-4bcb-4955-9751-117b1206dd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f6d6a9-692e-42cf-9962-8624a184cb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd6451c-1efe-4b32-b7e2-4b3566e60c49",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8576dc93-41d3-497d-81b1-829991c80680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03dc89e2-eb10-4bf2-b47d-38e60e767ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7336cea-271d-48de-901e-b5f18c26ecc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd36c2d5-afb3-429d-89f9-242c81b95fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9779ec-7cdf-4395-9055-6d32f489a7d9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818335ef-d991-4cff-84d4-63b6ead3c095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e5c3f1-27b2-4081-8a61-7e56fdc62de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8884cb1-f5fc-459f-b43d-3dcb9d6c73f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252c3670-653e-486e-b54b-e6fc37fdbc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07b9f4d-8468-492d-b0d1-1ea15010fa0e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bf6d31-a653-459c-8401-051d24031d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48cb89f9-a039-4e35-ad87-c73ef0183c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6b0fa7-5159-4f47-bba6-fb709f991c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca873d3-7a39-4016-b373-32bdd4cc8c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dd8086-b394-4e4c-8bcb-0d8cde274980",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b52ec71-59ba-4d7a-b176-b597d080263e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8da55ae-8d93-422f-ab71-faf346324ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721381c8-c1a7-439c-96d5-efd6b4871f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20e45b0-a199-41de-a755-d5c89d2bd45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9365d9a4-947f-4894-ae11-1d6470bc2d01",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcabd08-4c52-413f-908e-60c5ea9168eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2b39bb-8f64-4897-bda7-a19850cbbec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d10b61-0a5e-46da-9dd9-8754ff6b5be8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c893ad-482b-4320-90cf-128a5d8acc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bbb233-12b8-41f4-8a20-27dfab1f1140",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fb8689-5c6b-49e2-af49-62a7c5f948b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441dce0e-0fe8-4862-abcb-703bf52c5136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce424ee-21ac-4691-8839-d454682d33eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00673c50-f9d9-4656-9747-a49dbb1f644d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9072f59d-1e1e-4364-b29d-9a7c41d3cd37",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3317a3-22ca-44ee-8fb4-8482c2bf206b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b06542-cf7e-41c0-b2ed-0195cde53420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50372bd6-882b-49a0-8508-7d032ddd2b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff96d4f-bff2-411f-be59-5c57db275eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e68d378-2969-4f94-b64e-d85fef630941",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5bf670-983a-4d71-adda-898e44371532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c607c7f-9136-4a62-8437-c306224d73aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5203e2f8-2fac-465a-abb7-90f5179743fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf2182a-60a0-43f1-a2bb-63641a58aefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac01f6e-41b5-43c8-96b9-7564a0e44ba8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab888229-6600-4377-9731-9bcd46421382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7474d6d3-782b-4d51-a1f5-0f02328e00c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae01d463-4172-4452-8bd5-2ee84030aafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a4dfb0-4d4f-4cd3-b6ca-d4a9dc2f1ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c653de-a690-464a-bb11-44403eedb833",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d58445c-152c-4985-988d-bd88334846d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7595ff-1797-4820-ad4e-62633fa2a188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b5e654-fb56-4925-a60d-9405eaffa3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db47b5ba-9c9d-4321-90f2-5319b4b0239b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002ca9d1-7970-4167-aaf5-e4051b3b371e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409c83ea-5e69-4e92-a064-0cade928ae9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9174f456-d247-4ffd-b7f9-bf6938ca3657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "133459f3-b729-4a2a-a882-2b5153dfa6b4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c47677d-9a20-43e9-834c-10c2f3b2557c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1253726-9c6c-4885-a57f-99c674c03a51",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e595f495-a96b-4782-b6cb-c581674b624a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1056c5e1-0188-457a-97f7-858cf3b4bc75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c3fa78-0601-4061-9054-90d7b4f81aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282032bd-9650-42aa-9432-fa521e0eb2b2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b617c38-05ac-4880-a0f3-e828f1888782",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc0e59f6-48c5-4e83-8cf9-8f1d7349f177"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d22ebbd9-de56-49f0-b290-87036ef757b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d83a70c8-f66f-4c6d-9c20-13c371dabefd"
                    }
                  }
                ]
              },
              {
                "id": "6cf8ca57-9185-49f8-a006-308cea04134b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11a7d683-7afc-472f-8a54-347a8a025a67",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c91f81-b0a4-4cab-86a4-437deedb14b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e3aa4309-2455-403f-8374-6ffddb937928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee0b216-cc8e-4ca6-a7b1-4449751270d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49dcfb34-17c2-4cfc-8b48-b684b2277b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449cd4c8-6472-4682-b8e7-c15e765aba58",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991556c6-373b-40c3-a656-6f1f651ffff3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1eec519f-20dc-4b98-873d-f95ddb6d11e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a55444d-cd2e-4731-93ca-db40e36c94e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc82de51-bacd-4ddd-b9e7-98832b8e34a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d35a5cc0-f031-4f0d-96f4-a1f9a3b528a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6f81fb6-d375-4fe1-bb57-53db798cd187"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67c03384-bb8a-40fd-83ff-1c167b9eaf60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7528422b-3a09-40d9-b504-d079985650e2"
                    }
                  }
                ]
              },
              {
                "id": "bc2bdca4-2f52-472b-ad24-a8da4e841b40",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "25e0ee1b-cb3d-47c8-be0c-b0935e852739",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6869f1-dd59-400f-8e44-c61f9290768d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bb33571e-9f24-4c30-b6d1-783953a0e48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d352a15f-e2d4-4738-ae6c-28a2a0429b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86ce68b-e603-4829-9b5a-bab4f5a7563a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c9e6d4f3-d3eb-4ec7-bfd2-1f25f2fe2678",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5758dfb6-3805-4a9c-bf09-74b7a63e5588",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4d57426-64e7-4540-8764-9adf0f895323",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f703af3f-5bbf-41d5-a36d-cfb7e1fe15ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c721fee-25ff-4b80-af27-eb40fbcb3323",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fc5645b-f800-4753-a7b7-2c3123cad372"
                    }
                  }
                ]
              },
              {
                "id": "17e564ed-c4ae-4d21-be85-d6d305b2da22",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06ff837e-28f0-4492-b0b8-a7820e983ad4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4541b9b-d07c-4d28-80d7-165751a3a10d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c5f0593-13ef-4fea-a44b-604b38499bde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1587a76a-16ad-4918-8eb9-6bc16bf33650"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "713e91bd-c892-4ee2-bbd9-2768d6a117cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "38599f9c-19ca-431f-a551-1a2217d54070"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e229a06c-69fa-470a-be04-4718dcc1e5b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7e3633e-1309-40d1-bdd7-846fe622f594"
            }
          }
        ]
      },
      {
        "id": "f68a62b7-d3fd-4872-9059-abb5308ee5ef",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3ed3afb2-19ab-4d6c-be3b-b0632faa3f97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ca02360-67a0-4e35-96f1-714377cdf16d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37bdf274-11c6-4a9b-86a9-a8132bab472c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16be695a-5c56-4c1b-9a19-05b4b27cf51c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f5d3e02f-c233-4f1e-9b8c-807f305e5fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ec2fe1-1c32-46b2-ab9c-ca748a2716f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3da9b5e2-18f8-482e-92c2-876baa39a5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fce84c-d236-4fc7-bbfe-9fe5f630e84d",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11500b18-7eda-45f1-8192-8a037ee1c81f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1ccd9be1-7c22-47d1-b5bf-a7de21447da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54d7884-35e3-4400-8fd2-b2680eef4dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7c6ad3a-d9f7-427c-8e05-fed2e1c3711a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b56c6d80-9570-4014-afdd-35a5418c4863",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e48221a-0a26-46a4-831e-4c5a55ee0ba0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1727434c-d0e5-4052-826e-00797d3afd06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0000d811-5d12-4048-9ef3-e207ef42e055"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f911384a-e183-42ab-97b8-a4151f2c8ea8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1323363b-a936-4c57-9d3d-3649a10654b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58b74769-4b44-4b81-9318-27d5a5a02aea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9a04a3f-e97f-4244-9a09-c28b752c6e0f"
            }
          }
        ]
      },
      {
        "id": "ba8b0310-7715-4043-96c6-fb9b333ffe3e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8c9745ed-4858-4ebe-8157-3cc97ac14756",
            "name": "Negative Testing",
            "item": [
              {
                "id": "475ff407-b60c-4789-815d-c561886b082d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7c0572e-a735-443c-88ed-175d659a45d6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190998b0-a009-46d3-b8bc-24d053289ec3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d3e859b-a188-4f0b-b377-6f02bfe4fa99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4b87da-0a7c-4034-8cf8-b90999c14feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fa8c356-dc81-4a4e-989e-a70c364bdeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116cb8f7-4b05-459e-a8e1-f42de9fd010c",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f04fa74-ef3a-4a40-a2be-cc12c4d8833c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6f005b6c-b201-4922-aa74-eb2c5b85e388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09220a21-9ae4-4d03-b069-3f47f25a5be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87bf57b2-7fca-404c-8536-bbb649cdfad1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33f292d9-1df7-40fe-a1ea-c5aafb59447a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b57442c1-35a6-4581-871b-fc3e1dca1b6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b154bad-e1e9-41c9-9495-cacf183d3e07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2efd007f-ddb1-4d44-95ff-71765af94871"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a6e7a8e-4464-48d4-9b94-ea6fe9677b11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d8aeb85-33fd-4edb-bbaf-2ccbc1ad4c3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e77e548f-2fe2-41bb-bd8b-b7afd40483cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33eb0251-5965-436c-9c39-e3d9aac43874"
            }
          }
        ]
      },
      {
        "id": "ce71c5f8-b04c-460f-ab9d-7ddb9751b432",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dc0998ea-1197-4424-8411-7c81b0611265",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e98d540-0edf-4590-bfdd-316326e9fa36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19014ead-54d3-4b4e-ad36-ad4a66eb5e98",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c5c99f-8787-4aeb-bb48-78d8945af6bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af40972c-04d6-499c-bc08-f859183f0e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f5a56d-53c6-47c2-bf9e-72ab491e61e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbad6525-dec2-4aa7-8eab-9aaf5853dc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f295257-119c-4c09-a40f-ed2c43581d6d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c0db42-d6f4-4c1f-bf35-6dbf4ccf6a2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8aff4479-3a18-4660-817f-349c0620c0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71540f3-fd7b-4a6c-a904-4e62a3fc919a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b86be733-5d7e-4041-8025-d2fb519b1862"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "379bf729-a1cb-4c90-85a3-1b0851d137e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c05572b2-f782-41ba-96e6-bf0b2d5d4565"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cb50c7a-90f4-46ec-a13b-f733bd72dbac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6912542-5ffd-4d50-965d-f1d92f452cd1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "825ae484-c125-4d85-86e3-75d8c3ee67b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5e0a61f9-4d0d-4ed9-b825-f805f3efa3b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad64b1eb-c117-43aa-9f73-66e7453d085b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b0a2178-f784-4ab5-8683-fd691317681b"
            }
          }
        ]
      },
      {
        "id": "b4ac485a-6828-4f0c-aa23-fd4abdcc2051",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5e7f4ab-9c5c-40e4-b1b6-7fc90113786a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e0f7dba-0542-48b7-bd05-5e1ecd7ac24a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "18b805c6-2cd9-48e9-a633-29ad8920c6a1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b6fe6ae-e2e9-4703-a4bf-55fe5c4a0d8b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edd8fffc-5177-42c3-9497-4476551727d4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 41.85769230769232,
      "responseMin": 18,
      "responseMax": 459,
      "responseSd": 41.801073533112856,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685061466408,
      "completed": 1685061489927
    },
    "executions": [
      {
        "id": "6c754f7f-ca6a-404e-a1e3-5762f1a1a258",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "35355ffb-07e3-4b80-bbe2-846a3db6d725",
          "httpRequestId": "38ecdf4e-3e08-42f8-8331-5c89fbc61d6a"
        },
        "item": {
          "id": "6c754f7f-ca6a-404e-a1e3-5762f1a1a258",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cb952bf6-c247-495a-8506-ef2690d35a3d",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 0
        }
      },
      {
        "id": "5570cd91-de2a-4191-8853-06ab7c002fc3",
        "cursor": {
          "ref": "7f87e31c-e9fd-4d92-ae21-b5fe8378bdcc",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "99aa45f8-ff11-4339-87b0-44a55e42aa91"
        },
        "item": {
          "id": "5570cd91-de2a-4191-8853-06ab7c002fc3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fa51eafa-1c74-4633-bab0-f9a6fa14272b",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "6f6d9091-d9f6-4365-a9cb-29c24564f532",
        "cursor": {
          "ref": "ed01e007-92e9-4796-ad0a-93c8c2ba6bdf",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a1fe88fa-03c1-46d0-9173-25a2dd44b31e"
        },
        "item": {
          "id": "6f6d9091-d9f6-4365-a9cb-29c24564f532",
          "name": "did_json"
        },
        "response": {
          "id": "c8ca75ec-8fc9-4541-9db0-9c6f9ab1448e",
          "status": "OK",
          "code": 200,
          "responseTime": 148,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4bda63-68da-4e28-822b-fe22e99e123b",
        "cursor": {
          "ref": "bce43f61-687e-4e7e-8225-cd09705fd107",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cabcea0f-e6f3-47e9-9d7d-a7272d30848a"
        },
        "item": {
          "id": "ac4bda63-68da-4e28-822b-fe22e99e123b",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a8e78d8-1bdf-42d7-8d93-9daea8e3971e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4bda63-68da-4e28-822b-fe22e99e123b",
        "cursor": {
          "ref": "bce43f61-687e-4e7e-8225-cd09705fd107",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cabcea0f-e6f3-47e9-9d7d-a7272d30848a"
        },
        "item": {
          "id": "ac4bda63-68da-4e28-822b-fe22e99e123b",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a8e78d8-1bdf-42d7-8d93-9daea8e3971e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc31ee9-ef92-49a1-9431-c442cecc6ae8",
        "cursor": {
          "ref": "25c03607-063c-4648-b797-8fce73432f97",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a95d6930-0029-4a7d-b55a-95c2f732a093"
        },
        "item": {
          "id": "3bc31ee9-ef92-49a1-9431-c442cecc6ae8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ca6d8186-96c8-46ad-9708-32fc907a9a20",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cc947c-e11d-469b-be84-40ca6f86df72",
        "cursor": {
          "ref": "f41afdd1-1951-443b-b32e-708beab5b24a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bf22f5e3-e692-493f-ba71-03f46ac65980"
        },
        "item": {
          "id": "54cc947c-e11d-469b-be84-40ca6f86df72",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8259d3fa-5d7a-4066-abd7-293d1d6b7601",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a45c5e-dd86-4ac8-a0c3-9a60c9e49307",
        "cursor": {
          "ref": "1a4e21df-59bb-4102-98ec-d3cd72c3163b",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ef0b478b-6d85-4614-a689-a6e95e81139e"
        },
        "item": {
          "id": "99a45c5e-dd86-4ac8-a0c3-9a60c9e49307",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c393255d-3fb6-44bd-a775-2abf4defe9fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec7bb52-19d6-4420-a54f-d0c7e90d14bc",
        "cursor": {
          "ref": "608dc538-e053-402f-871c-78a63c27d22c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "51b27797-5808-496a-8970-5e8b37722ee3"
        },
        "item": {
          "id": "fec7bb52-19d6-4420-a54f-d0c7e90d14bc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e0f950b8-f3ed-4c03-a18a-23f20d07d85e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec7bb52-19d6-4420-a54f-d0c7e90d14bc",
        "cursor": {
          "ref": "608dc538-e053-402f-871c-78a63c27d22c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "51b27797-5808-496a-8970-5e8b37722ee3"
        },
        "item": {
          "id": "fec7bb52-19d6-4420-a54f-d0c7e90d14bc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e0f950b8-f3ed-4c03-a18a-23f20d07d85e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b99d132-afbd-412c-8e4d-84a4e1962296",
        "cursor": {
          "ref": "8646ad24-4fc8-4a2f-a20a-8d1da866c7fa",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ea36d9a5-8741-4b83-9e4c-61b70ff0dd56"
        },
        "item": {
          "id": "0b99d132-afbd-412c-8e4d-84a4e1962296",
          "name": "identifiers"
        },
        "response": {
          "id": "ebef8812-d077-46bb-a409-457d34be5785",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a83ff7c-bcd1-40d4-a2af-4b56b5df212f",
        "cursor": {
          "ref": "8e9aba72-fcd2-49a4-a4c2-3d1706b97710",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2008ce60-af92-4b20-89a1-43f9558275a4"
        },
        "item": {
          "id": "7a83ff7c-bcd1-40d4-a2af-4b56b5df212f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47bc526e-cb68-4f64-901b-053e13d6d973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a83ff7c-bcd1-40d4-a2af-4b56b5df212f",
        "cursor": {
          "ref": "8e9aba72-fcd2-49a4-a4c2-3d1706b97710",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2008ce60-af92-4b20-89a1-43f9558275a4"
        },
        "item": {
          "id": "7a83ff7c-bcd1-40d4-a2af-4b56b5df212f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47bc526e-cb68-4f64-901b-053e13d6d973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8964b24f-616b-4010-ba72-33119efd5d10",
        "cursor": {
          "ref": "3ae62b6f-8ac0-42c0-8139-0d6417270f88",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3b5c585f-4372-4bb9-b19a-0eb302e62b5f"
        },
        "item": {
          "id": "8964b24f-616b-4010-ba72-33119efd5d10",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "05c6cd29-62ae-454d-a2c9-e46aa2b1de31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76779761-9266-4c55-b818-3112c1a959ea",
        "cursor": {
          "ref": "9babcb22-bfa3-46f3-89a5-4f7028ddb66f",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ad32f467-8234-481c-8e01-15bc1f104e65"
        },
        "item": {
          "id": "76779761-9266-4c55-b818-3112c1a959ea",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "59ee99b9-8676-4b61-85b7-01bb49f39fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9afe708-7088-4d09-84a1-f0d2c1cf9bc2",
        "cursor": {
          "ref": "32be653c-cbc4-41db-b72f-f7fc42cdcdbd",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "52939a4d-0ca2-4508-8d2a-047753d2953d"
        },
        "item": {
          "id": "c9afe708-7088-4d09-84a1-f0d2c1cf9bc2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a6f4a211-8c1d-4464-8498-d8e9c03bda07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f72480-526b-43a4-8a9d-2bfa3f85637f",
        "cursor": {
          "ref": "ea994f0a-c012-4e9f-bdf9-c45b4cc8526d",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5f2c478c-7a74-4124-842f-03668fad2318"
        },
        "item": {
          "id": "b8f72480-526b-43a4-8a9d-2bfa3f85637f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d9da5ba4-2ba5-488e-8bf9-6995c93cffcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73c3684-0a78-4869-8eb2-19880c6de873",
        "cursor": {
          "ref": "c145e4c7-2114-45c6-8717-31485a8f95d2",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d9df709f-beef-4f21-9488-f90edf532d31"
        },
        "item": {
          "id": "d73c3684-0a78-4869-8eb2-19880c6de873",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "57c32017-2175-4a7d-a113-7acfddb2da5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf78267-ecf7-479a-a7c2-b41fbabf090f",
        "cursor": {
          "ref": "9b30a2fe-2f16-4ad2-8b77-bee4888676da",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c053f940-7758-4963-85eb-329ffcec5496"
        },
        "item": {
          "id": "9cf78267-ecf7-479a-a7c2-b41fbabf090f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "29620a79-e9a6-47d3-8eea-f7ebbea62801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbcbfd8-e2ce-4509-9173-97ba740123bd",
        "cursor": {
          "ref": "b48407f3-d8ee-4474-b4ca-10cecfdaa22c",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e8b29c77-7ae1-408b-a952-c4da8db87c77"
        },
        "item": {
          "id": "7dbcbfd8-e2ce-4509-9173-97ba740123bd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5d6da9c1-f553-49aa-9d39-20e1e9c70104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7510358-5538-4cb4-a724-c79977fe71b9",
        "cursor": {
          "ref": "8273dd33-d3a2-45ea-b81c-37cb6b82052a",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c4eb4513-274e-4040-b47f-696ad82ac0ac"
        },
        "item": {
          "id": "e7510358-5538-4cb4-a724-c79977fe71b9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d3582655-48b5-4616-a197-e7a4db20d29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db3c31b-151d-496c-bf70-c82b6abdd11e",
        "cursor": {
          "ref": "d56f118c-2b1a-49ee-b29a-72a7d5e507a2",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "82c80915-be16-459c-b71f-73edb92cbbae"
        },
        "item": {
          "id": "2db3c31b-151d-496c-bf70-c82b6abdd11e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0e1160f5-250b-4a16-8cd1-27992cb32ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f7ef02-d813-4505-bb41-340586eba622",
        "cursor": {
          "ref": "1760bf5f-cd4b-4672-9e43-60469456b59c",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e12c0ebf-6b30-4d1a-a740-dbdebedf2fdd"
        },
        "item": {
          "id": "53f7ef02-d813-4505-bb41-340586eba622",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ec019156-4785-4002-95ec-a98589455868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8882b9e2-883a-45c6-9713-1a67ed08e5b8",
        "cursor": {
          "ref": "773f0dcf-6a73-4fcb-81a6-61af5220a77a",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3e8dd715-f3aa-467a-b3ad-b69a85b0f14f"
        },
        "item": {
          "id": "8882b9e2-883a-45c6-9713-1a67ed08e5b8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7cfaf709-ea0e-41ae-8cd9-184d6f8ca8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552a2d6e-0b05-4e2a-a646-0a834b29fc98",
        "cursor": {
          "ref": "f7567308-f2b6-4298-b403-ddb5701a5b6d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2d6a817d-1979-4b24-ba13-44f8b8bedb9b"
        },
        "item": {
          "id": "552a2d6e-0b05-4e2a-a646-0a834b29fc98",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d0c9de1a-a66a-419d-8054-4a3e563e0d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0146a221-bf39-493b-9bcd-f4eb77c343ca",
        "cursor": {
          "ref": "797d0297-1cda-4e78-a171-919aa5576a6d",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7804de27-8a24-4964-b846-46a9574a13d2"
        },
        "item": {
          "id": "0146a221-bf39-493b-9bcd-f4eb77c343ca",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "72ce27a6-6e76-4ea7-8501-a2553bae6de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461dace9-9e43-4b87-bbed-b3c88a7f3777",
        "cursor": {
          "ref": "9d2beeaf-a764-4f81-aa56-2f246d4a2443",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "34611162-e2f9-4b75-ae78-a4865b7872fd"
        },
        "item": {
          "id": "461dace9-9e43-4b87-bbed-b3c88a7f3777",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5970bd1a-d315-4abe-baaa-c8973eced20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4aa68b2-f54e-4e78-a5c7-24604a3cc9cf",
        "cursor": {
          "ref": "8366c6cb-0e2d-40ad-8164-f2dc0dd25d2a",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fdf1336d-17bb-46d4-80fd-b9ba1cb32a82"
        },
        "item": {
          "id": "c4aa68b2-f54e-4e78-a5c7-24604a3cc9cf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "358e4d0e-3b16-4b1b-903d-5fb899d77c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfae0e0-23b2-4701-8c18-6b0151c75cd8",
        "cursor": {
          "ref": "c56cec94-e85e-4a93-a5c1-0486cc7fe610",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5ec13464-4bec-4cf5-9d58-65fdc78dffba"
        },
        "item": {
          "id": "fbfae0e0-23b2-4701-8c18-6b0151c75cd8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aa722142-ce8a-47e5-b9a5-b6faa8555cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e166954b-b5a1-4355-be84-1ea54a8b423a",
        "cursor": {
          "ref": "de517ce9-65f2-4def-a06c-762b2339f4be",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1a75765e-6717-41ef-b075-19402d895d0d"
        },
        "item": {
          "id": "e166954b-b5a1-4355-be84-1ea54a8b423a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "10a57a3a-f563-4c9a-b203-e2a53bac3ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c99002a-9b9e-4c57-b297-69800de74359",
        "cursor": {
          "ref": "12bf4c26-f1b3-4996-8bdf-cf88a5320457",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6483cc7c-8708-4f4b-a5df-5cb0772fe129"
        },
        "item": {
          "id": "6c99002a-9b9e-4c57-b297-69800de74359",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0f79ab49-6f55-4935-88bc-ba4a0e792ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b596c4-1e20-44c7-b9a0-67611e4226a8",
        "cursor": {
          "ref": "d5c96d4f-4cc1-4743-9aa7-1bd05142c5b2",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "740c7a17-3e4a-49d9-9230-632fa538ac46"
        },
        "item": {
          "id": "92b596c4-1e20-44c7-b9a0-67611e4226a8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "426a3499-35fa-43ad-b512-1a9cee9f42cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7153d28-7c81-4b42-9102-80a459489882",
        "cursor": {
          "ref": "54f6d9ef-822c-4400-98f2-123b0e24eb21",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "21fc55ad-e83e-456f-a6b6-037001088246"
        },
        "item": {
          "id": "f7153d28-7c81-4b42-9102-80a459489882",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "91b69da1-5f68-48c6-b5ac-58bb8c7c426a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee4599e-8388-4e7a-b8fa-f87a59724d6f",
        "cursor": {
          "ref": "9785f7e2-2e6f-417e-b1f2-3aad2c4997b3",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6d5b1fd6-5742-4b1e-ab27-91b329f81b64"
        },
        "item": {
          "id": "fee4599e-8388-4e7a-b8fa-f87a59724d6f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b81cf70d-8f68-4f49-b11b-1944121e99ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fe6c54-ce05-4e38-a20a-8c0e906853c5",
        "cursor": {
          "ref": "125d618e-c5a3-48c4-81fd-fc97c20ffc5e",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cafe02c4-2f09-4b80-8ea1-e7945768b3fe"
        },
        "item": {
          "id": "17fe6c54-ce05-4e38-a20a-8c0e906853c5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c0217a25-c11f-4208-b92b-5399a11bedca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308f0987-9921-40c0-8954-661b27840b69",
        "cursor": {
          "ref": "994de797-a4c6-408e-aae5-0d1099bc715c",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3e28e3b2-a36f-4079-aa1c-7c1c8c2548da"
        },
        "item": {
          "id": "308f0987-9921-40c0-8954-661b27840b69",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d125e388-6886-438e-a8eb-3d93e5ae65d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a50363a-7800-495f-9512-3984dd6b2943",
        "cursor": {
          "ref": "29f02073-5711-43c7-aace-95ac45e406d7",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0ea52370-e37d-414a-9219-422fe868fa14"
        },
        "item": {
          "id": "3a50363a-7800-495f-9512-3984dd6b2943",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8b46ab4b-9b95-4f0f-9ac6-966fbcd2d515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c37b628-2657-4df4-9147-26362320e105",
        "cursor": {
          "ref": "8681f498-3d7d-490f-a649-f82f5f6cdd8a",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "280401f9-e847-4782-b564-3a75f2eb724a"
        },
        "item": {
          "id": "7c37b628-2657-4df4-9147-26362320e105",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8dc48e30-4dbe-4f77-a6da-8739a728512a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8b2c7b-0d67-4beb-877b-58aad8925c49",
        "cursor": {
          "ref": "0602daaa-c857-4bef-8dde-7d3b92e1d355",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3d5881e0-f7e5-4424-aaa4-72e1b93bc6c6"
        },
        "item": {
          "id": "ee8b2c7b-0d67-4beb-877b-58aad8925c49",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f0afa9f1-c140-453d-b3bc-9e6624cfbbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb44fa3-7f89-44cd-bbf8-8cb4410cd792",
        "cursor": {
          "ref": "7314c4de-4221-40cd-8bfb-99fe1a56d310",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2c706391-781a-4807-95a8-a9629e4933e6"
        },
        "item": {
          "id": "ddb44fa3-7f89-44cd-bbf8-8cb4410cd792",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d88786b3-2e51-422c-8256-405d5237ecdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f40580c-32ad-4592-9b90-60e0b202e95a",
        "cursor": {
          "ref": "ca82af8c-150a-47fd-a226-261d1110d558",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fb7362a1-2ace-4ef8-9efb-4b57f4a3ab37"
        },
        "item": {
          "id": "3f40580c-32ad-4592-9b90-60e0b202e95a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fb6fa317-bed1-440e-a0f5-aba1572b7867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ca32c1-9a94-47c7-bd33-ca8c75f8f108",
        "cursor": {
          "ref": "4aea25e5-9aec-4c7e-90a3-7a256641881b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "76577082-a426-4d21-ac1e-3a4ac23dae38"
        },
        "item": {
          "id": "33ca32c1-9a94-47c7-bd33-ca8c75f8f108",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8a0ae6f4-7d68-4fad-b303-f99b5b50b75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84d9974-0352-4ad7-b220-cd35d22a4bed",
        "cursor": {
          "ref": "95c8a68c-7bef-4a68-81f5-218384a27972",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "82181170-a3dc-407a-b029-b4e5ed0fba10"
        },
        "item": {
          "id": "a84d9974-0352-4ad7-b220-cd35d22a4bed",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "588d4528-e1e7-4917-b5cd-0d476c593b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad79ced2-830e-4374-b152-c3c6e7a9a88d",
        "cursor": {
          "ref": "32c57b9a-e2e2-400b-9158-2d41bba96794",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d33a7b51-dfa2-4454-9097-e151f849473d"
        },
        "item": {
          "id": "ad79ced2-830e-4374-b152-c3c6e7a9a88d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "57d548c7-2e80-4f0c-907d-fea05757583a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b76730-b874-4605-b349-8f51c9c46aa2",
        "cursor": {
          "ref": "4d0686f2-1c55-4a10-8c29-b78686179db4",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ca44af28-de48-4f1a-a9af-bcbff67a5282"
        },
        "item": {
          "id": "a4b76730-b874-4605-b349-8f51c9c46aa2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d719f024-9720-42a9-b44a-c629edf7551b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3bb0a3-d402-4b30-bfe8-c93fea208c5b",
        "cursor": {
          "ref": "8721314d-216d-4c93-8d2c-3c8ad7867268",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fc43d624-d0c6-46a4-b5bd-99ea0001bf72"
        },
        "item": {
          "id": "ab3bb0a3-d402-4b30-bfe8-c93fea208c5b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "45a87e16-d252-465b-b262-1dda8bfe8c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870be3d6-e913-4893-a4c1-1a9f9dc0c38f",
        "cursor": {
          "ref": "48077c1d-036a-4ae1-a30b-cf6190b45918",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "07021396-6c0a-465e-a56f-f76d42276337"
        },
        "item": {
          "id": "870be3d6-e913-4893-a4c1-1a9f9dc0c38f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0ca8877b-746f-4a0a-aef6-4822384c62aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7506cca1-cfcc-4025-b0e5-5af983719296",
        "cursor": {
          "ref": "ecb6acc7-db21-4439-af89-6c2778a81fc3",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "767f8e89-1731-45b7-ae51-e72dd84ec9c9"
        },
        "item": {
          "id": "7506cca1-cfcc-4025-b0e5-5af983719296",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0a6568d9-b742-4661-8ba8-80865b9a3d35",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f491e9b-ea8c-44c0-aabd-86ddc5a95012",
        "cursor": {
          "ref": "8f43fcf3-b124-46d3-bc0b-78f5e2971ae8",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f0524f2b-4abe-4df9-86d6-b4ee72502eb8"
        },
        "item": {
          "id": "9f491e9b-ea8c-44c0-aabd-86ddc5a95012",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9d1df0c0-6de0-4ca7-8bfc-e9bde95b7f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ed839c-2e45-4f15-96d0-3b1b64cfb42a",
        "cursor": {
          "ref": "603c0923-4075-4652-8823-fd03f844bf0c",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e8097161-05f3-452a-9558-d92a5dfceb6b"
        },
        "item": {
          "id": "72ed839c-2e45-4f15-96d0-3b1b64cfb42a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "00da3cd1-0dfa-479c-9020-98c9aacdf0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa9fc07-54c3-4eee-945d-70b0e0092bfa",
        "cursor": {
          "ref": "4358fe02-bce9-41e3-ba03-62fc2c75d9a4",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "814a1481-00bb-4b33-b9d1-7ce6b2c3f638"
        },
        "item": {
          "id": "0fa9fc07-54c3-4eee-945d-70b0e0092bfa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3089e29a-7922-4906-81ac-b6aaa5040b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5036e4a-0587-4ab4-8031-c2b91c0c2053",
        "cursor": {
          "ref": "093812dd-e37b-484f-af1e-0267ba7e3a31",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "27de4f48-fe7b-4b7e-99a1-a44a377f604b"
        },
        "item": {
          "id": "b5036e4a-0587-4ab4-8031-c2b91c0c2053",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "134bdab0-7fd3-4879-9bd6-5dfff6a5b385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6287b9-62a1-4e08-92fa-888414b97d0d",
        "cursor": {
          "ref": "9147ea6e-7fbd-4dcf-b39b-701a38b8200f",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b797784e-2cbc-4e6a-9ed0-3353ffe8a7a5"
        },
        "item": {
          "id": "3a6287b9-62a1-4e08-92fa-888414b97d0d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "744de193-88d8-41cf-8b82-0d7887d3a962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a724369-59cc-44c9-8053-9100239411ab",
        "cursor": {
          "ref": "0f7ebe64-f0bb-461a-85fd-f9c33656b9ee",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e9c65f36-9fd1-4001-98ee-08a9919476bc"
        },
        "item": {
          "id": "6a724369-59cc-44c9-8053-9100239411ab",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8a9fbd59-1d74-4b70-b780-eee48a6e44ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1103bf81-12a6-4413-aaef-3b484492381e",
        "cursor": {
          "ref": "58ebb487-89e8-4aae-9b09-3875268394fb",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e74c2b31-ddae-406d-ae12-9c924d4b8fe7"
        },
        "item": {
          "id": "1103bf81-12a6-4413-aaef-3b484492381e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7c706513-bdae-4306-b5a8-da3100902ab2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224efabe-f5b8-4621-9313-bf1fa55b2bf9",
        "cursor": {
          "ref": "71edc5c2-427c-4669-84b7-99b020de4720",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4174853e-802a-4ac8-82d1-bdcce2e31ca8"
        },
        "item": {
          "id": "224efabe-f5b8-4621-9313-bf1fa55b2bf9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "270ad79f-2160-4e27-a900-67b0f0875203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec19c56-2302-477d-a82e-dd6186a4bfa4",
        "cursor": {
          "ref": "f787792e-c561-44b3-8463-bb77db373590",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b23cedbb-42e4-4059-a62a-5ac0ce343413"
        },
        "item": {
          "id": "4ec19c56-2302-477d-a82e-dd6186a4bfa4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c832737c-4f69-4066-be24-5fdb58bce883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630efd2b-2f59-4729-bf72-0a92a4ba8efd",
        "cursor": {
          "ref": "49c29808-32ab-4aff-ab32-b33955beb1ba",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "57900434-3fb9-4005-bb65-b9035370549a"
        },
        "item": {
          "id": "630efd2b-2f59-4729-bf72-0a92a4ba8efd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3f575683-eeda-4a97-8f47-6ae5eed4cc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50448beb-5005-4564-a568-bc8a01701852",
        "cursor": {
          "ref": "b509a3f4-649a-418e-a848-5ced6ab7ea41",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dceb55aa-a7ae-4d5e-b0f5-c309161b3cec"
        },
        "item": {
          "id": "50448beb-5005-4564-a568-bc8a01701852",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "12f87524-d23e-4909-bc79-c3b3438701b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9f74ae-332b-4c92-8021-1654c7d33e00",
        "cursor": {
          "ref": "83c14de0-c6d0-4ec1-a3d6-63d506e464e2",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "faf07126-fa0c-4cc4-9698-f0b93d3a2468"
        },
        "item": {
          "id": "ac9f74ae-332b-4c92-8021-1654c7d33e00",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9b8b9df9-3716-41a9-ad48-696b47f6e584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a71bea4-59fa-4c7a-97ec-06c0aa863eb1",
        "cursor": {
          "ref": "e77b2220-a609-47e2-8466-1fb2f61e8b1a",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aa39bfae-6df0-44e2-ac34-7472825dc464"
        },
        "item": {
          "id": "1a71bea4-59fa-4c7a-97ec-06c0aa863eb1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bbf853a9-f304-4236-bd79-0d29014fa934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0367b2-568e-4a58-800a-3e803ca641a8",
        "cursor": {
          "ref": "53005d4d-7261-4410-928c-6c0f0a78b737",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "80c94eac-cb2f-48d3-9cbe-5db28d6cc88a"
        },
        "item": {
          "id": "ef0367b2-568e-4a58-800a-3e803ca641a8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "baa36ea3-1e42-4738-807a-8081e90d9b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1261d1c1-01b9-4302-9a4d-1b7d677ecb0b",
        "cursor": {
          "ref": "e412e289-5039-4674-b441-211804ae8da5",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "51663b10-5a45-4d0f-a804-3395d6577988"
        },
        "item": {
          "id": "1261d1c1-01b9-4302-9a4d-1b7d677ecb0b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a4d4c2ce-8bfd-483c-b1af-7ffcc74f37aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19e881f-c137-47d7-8c02-908fe17dd5aa",
        "cursor": {
          "ref": "701db80c-70a6-42c4-b56a-b32e240d787a",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d8370a87-96e0-41fe-8483-8b0f38cf9ada"
        },
        "item": {
          "id": "c19e881f-c137-47d7-8c02-908fe17dd5aa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d5ef313c-0230-4160-85b9-9ca04fbb6222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1a7fa0-4e57-482a-9444-540718564370",
        "cursor": {
          "ref": "8a2cf190-e0d3-4cc0-ae40-40f574354139",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e0a89acf-b987-4a96-a5d9-852308781afc"
        },
        "item": {
          "id": "5f1a7fa0-4e57-482a-9444-540718564370",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "66e1045e-1b0b-40e7-9848-ff4ee39bcec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9f7a88-17c1-4e49-b199-39cc785f881c",
        "cursor": {
          "ref": "89797699-9867-4539-8660-ec5079013832",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c971eb8c-c54f-4d7b-855e-356f8f7fe18f"
        },
        "item": {
          "id": "9f9f7a88-17c1-4e49-b199-39cc785f881c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c6cb1c61-22a0-48d1-8533-6f64cf3d9e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98eabcb4-9ca7-497e-bfa9-61ff0a215b20",
        "cursor": {
          "ref": "2b8665b7-b63b-4af2-89da-2a1a7eec5b00",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4a612054-d294-49a7-bc8b-807f2425948f"
        },
        "item": {
          "id": "98eabcb4-9ca7-497e-bfa9-61ff0a215b20",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4fd9c962-ec28-40e9-bb2d-22b85e6f7210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6000e9-002e-4db4-b601-5f0d09e7dc0b",
        "cursor": {
          "ref": "1e6d6c01-da1a-47ad-89be-d814402c1f61",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "af0b3328-b28c-4a9f-b20d-8ceb0de096a8"
        },
        "item": {
          "id": "ac6000e9-002e-4db4-b601-5f0d09e7dc0b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "84913624-90bf-4d9e-9411-4155ee6ed74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a61e420-35e1-4ac4-8009-13951a89e8b9",
        "cursor": {
          "ref": "7f8d3a5e-6eec-4e6a-aba5-673924f55571",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "522b6f24-fa1e-4a7b-844d-9a3357ac95d8"
        },
        "item": {
          "id": "8a61e420-35e1-4ac4-8009-13951a89e8b9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "60fbc67a-6a67-47c6-a0cf-3b34a806963c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a0ef97-e768-4a36-a98f-45d176676419",
        "cursor": {
          "ref": "be97d587-03fa-4986-a803-48df59374728",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a6f0a667-0546-4127-8068-719224204885"
        },
        "item": {
          "id": "c0a0ef97-e768-4a36-a98f-45d176676419",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1bc3335b-65d1-4c10-9f53-c0d1e63c1f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922ad84d-8911-44c3-97ee-a52f52bb03d3",
        "cursor": {
          "ref": "6392b4a3-a898-4781-8bc7-12a1f808d9e7",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0c320085-6087-4682-b25c-8a3a39fbd36d"
        },
        "item": {
          "id": "922ad84d-8911-44c3-97ee-a52f52bb03d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a56820a9-888b-4168-8ce3-72b6ff6af7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8933655b-d69c-45dd-aca2-fad93925bad9",
        "cursor": {
          "ref": "05ce09ba-1adc-40b8-8d1b-95cb8dbb8a13",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ba3b2378-208e-44fa-96d7-f78b864cf068"
        },
        "item": {
          "id": "8933655b-d69c-45dd-aca2-fad93925bad9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2f5f0e70-92df-4f9e-8bc7-430df36ededa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a01d2f0-fd24-4841-b104-1912902d4634",
        "cursor": {
          "ref": "9597d224-5b48-4a17-9996-00aa47ca773b",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "60b5baa7-d225-4f69-9076-4c8f664889ae"
        },
        "item": {
          "id": "0a01d2f0-fd24-4841-b104-1912902d4634",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "54c11ce5-4261-405f-ad47-be28bd208513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ade30fa-0b65-46cd-8773-0f7a17b38966",
        "cursor": {
          "ref": "5c21babb-1fb5-4e0d-ac51-c482ac791f48",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b52121e5-63b5-4074-8caf-f5af157a4033"
        },
        "item": {
          "id": "7ade30fa-0b65-46cd-8773-0f7a17b38966",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9cc46c76-e752-48fd-abfc-73b616e8774e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7de86c-c432-4dc2-b4f0-3b7a59635c4c",
        "cursor": {
          "ref": "230b17bd-ee07-413a-a504-3280d08a464f",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "abfe3b87-040d-4058-be92-c69e0ea3bfc6"
        },
        "item": {
          "id": "6c7de86c-c432-4dc2-b4f0-3b7a59635c4c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c1e2d100-af95-439e-96ba-d9693a391d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f17de87-09a9-43fc-997c-66b89732e4f2",
        "cursor": {
          "ref": "d6015e3f-4b42-4878-ba86-b389db72da66",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3837dbda-4604-4633-855d-f944c95680c1"
        },
        "item": {
          "id": "7f17de87-09a9-43fc-997c-66b89732e4f2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6fb8266a-6b40-43cb-949f-c62a5f7bd56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26229e5e-19d1-4a39-8c57-2b05e9dae3b4",
        "cursor": {
          "ref": "0f3fb256-fba3-4a59-ac84-26f9762a99e3",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fb4b98ec-6674-4771-8f65-81e76a34e2f7"
        },
        "item": {
          "id": "26229e5e-19d1-4a39-8c57-2b05e9dae3b4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f0f795e0-d50d-40ea-93da-5b6e7a6f1719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f508bf11-1b2d-464a-aa21-b7ad2de8683b",
        "cursor": {
          "ref": "30e4fb62-8e50-4f98-8849-b98e9678c3c1",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fe87d14b-cb12-44ee-b234-6d0a2489b615"
        },
        "item": {
          "id": "f508bf11-1b2d-464a-aa21-b7ad2de8683b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e82af2a5-001c-4e60-9d9a-cf5544259d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8e5740-cc7e-45fd-90a9-f14372210346",
        "cursor": {
          "ref": "4ffcc9ba-425e-4f31-b339-e028b2c14c10",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a07cb04e-f93d-4770-8dca-1a188e3b5c9f"
        },
        "item": {
          "id": "cc8e5740-cc7e-45fd-90a9-f14372210346",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "339abc7d-c167-44cd-ac74-0ced862a3502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8694a63-6fa5-436f-8260-89ac252ee834",
        "cursor": {
          "ref": "cd087aee-33ac-48c2-b6f9-6aec9db2df7d",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a9929120-8dec-40c6-95f1-f6e6e5a589df"
        },
        "item": {
          "id": "b8694a63-6fa5-436f-8260-89ac252ee834",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "11ffd821-b986-43f1-a93b-36db74e57271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4553dcfa-c270-4b8c-b8de-f988e1c0dc59",
        "cursor": {
          "ref": "a1234e43-09e9-4144-9184-002da25bf454",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "18d983ed-b6c5-4dc4-b453-b001c07eba1f"
        },
        "item": {
          "id": "4553dcfa-c270-4b8c-b8de-f988e1c0dc59",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a41a8dde-7092-43c8-a392-75ae20562ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fce3647-f10e-4629-8383-781ac16aeef7",
        "cursor": {
          "ref": "ed3f311d-4dec-4ff4-b185-452aa253fcec",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f4ac623e-5548-4ba8-8494-3ba7a2b64d4d"
        },
        "item": {
          "id": "6fce3647-f10e-4629-8383-781ac16aeef7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "95234a34-a910-45d4-84ef-76db5acbdbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffdba9c-1e41-4b48-8d22-792672a69515",
        "cursor": {
          "ref": "5dd12720-d434-4d0b-8cec-0d033b4c410b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1564ce28-daba-4521-8da4-7cbb2a54253d"
        },
        "item": {
          "id": "7ffdba9c-1e41-4b48-8d22-792672a69515",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "26751e9c-b39c-4518-a77b-b69a0cb0cc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317ab2a3-0b93-4e2c-b5d8-ec9d3a19ef3c",
        "cursor": {
          "ref": "1e0da2f2-1ab7-4387-b747-d13f1f30369c",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "38c76c60-8874-4677-8595-875c42ac8cc9"
        },
        "item": {
          "id": "317ab2a3-0b93-4e2c-b5d8-ec9d3a19ef3c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5fd38e93-6746-4399-b58e-2a5dafed5358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ff1a14-50c3-4251-b2e9-0ba1b525b9f4",
        "cursor": {
          "ref": "09138acd-1356-47d6-b7bc-dd4fee2d2c1a",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a7078422-1453-4612-a9e3-89b19ad63c1c"
        },
        "item": {
          "id": "28ff1a14-50c3-4251-b2e9-0ba1b525b9f4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "af964a8c-3538-4050-84fa-641f2552cc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69fb948-2782-4d09-ae41-a797d27bf101",
        "cursor": {
          "ref": "843fe16d-c193-4ed8-8e0a-86610df448de",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dacc9dd2-5730-424d-9910-042a04fce962"
        },
        "item": {
          "id": "b69fb948-2782-4d09-ae41-a797d27bf101",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fc406139-89ef-4f14-b708-f78e17553365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c0bb39-1c3a-4f1c-8af9-99732a193949",
        "cursor": {
          "ref": "3869cda1-6813-4a96-bccd-45c324b56b36",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dd0ac12a-e32a-4d97-ad5d-65f83238bcde"
        },
        "item": {
          "id": "f6c0bb39-1c3a-4f1c-8af9-99732a193949",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "feb81a20-49ad-4836-8459-cace84378f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab46f06-fbfd-44f7-9350-8d55e9c77dbe",
        "cursor": {
          "ref": "64324a52-76d5-461b-af87-378252266e82",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e23536fb-b5d9-4174-bff2-798856e93327"
        },
        "item": {
          "id": "9ab46f06-fbfd-44f7-9350-8d55e9c77dbe",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9214f5eb-da9a-413b-9e7f-a76f3878d244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd5edf5-8983-424b-9c1a-d8830083b603",
        "cursor": {
          "ref": "1cd7cbd6-5ffe-448e-97e0-12b42c1ef745",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8a06bb9c-5374-4b1b-8c54-df702ac18c97"
        },
        "item": {
          "id": "bfd5edf5-8983-424b-9c1a-d8830083b603",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7bc92978-4bae-4103-9947-debb63d29487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7601fced-1890-438c-abf4-2cb76dee08aa",
        "cursor": {
          "ref": "62dba717-70cc-4b19-8554-ce3c0dcdeb31",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "38bb9427-444a-459b-bbd3-77794ef0e204"
        },
        "item": {
          "id": "7601fced-1890-438c-abf4-2cb76dee08aa",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6e8c9218-66aa-4020-97d1-44cb8f275a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aabb667-1b15-4dc4-8689-41575c9b265e",
        "cursor": {
          "ref": "11c68eeb-c7fe-46eb-9993-b894aa3c556b",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4d6d2ef9-da9a-4c07-be00-d6f55c16b3a5"
        },
        "item": {
          "id": "2aabb667-1b15-4dc4-8689-41575c9b265e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7d3007f7-6726-498f-8e7c-a324bc0f09c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb218a5-ead2-4d55-9f91-7d067f61f30c",
        "cursor": {
          "ref": "a6b4d2da-c837-4278-bdc6-691ba8c67fe2",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "058b730c-c1ef-4758-ae1c-4ad1ccef1b1d"
        },
        "item": {
          "id": "0cb218a5-ead2-4d55-9f91-7d067f61f30c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2342370c-0e7b-491b-b480-d05324ecb228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b34df0-14f5-4c5f-bb1d-4b2ac58109eb",
        "cursor": {
          "ref": "5cadb866-4304-4ec0-9a3a-129c6c4ae4db",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fb5bb068-7c75-4cda-9666-542e6046ed52"
        },
        "item": {
          "id": "48b34df0-14f5-4c5f-bb1d-4b2ac58109eb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e64c1114-71bb-443e-a457-a5cdebe31c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9183a96-d809-49e1-8e8d-9ff2ff94ab85",
        "cursor": {
          "ref": "26bc0715-f3e9-49a5-b632-3f5953eac9d7",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "569bfe8c-7a8c-4171-b4bf-3cd12a9fa04e"
        },
        "item": {
          "id": "c9183a96-d809-49e1-8e8d-9ff2ff94ab85",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0fb95a78-6487-4e83-9184-003d70d0355e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10caeda-3731-4eff-917d-0ac3ceb9af63",
        "cursor": {
          "ref": "c45270f0-b397-4b93-be4c-992e8f3888e3",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2b2d2a7b-9432-4f1f-8fb4-8d279c1b5d8c"
        },
        "item": {
          "id": "c10caeda-3731-4eff-917d-0ac3ceb9af63",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "61dbab08-363f-4e95-aed7-21a4e8f25cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfc4413-12b0-4fed-9b94-1018f516d131",
        "cursor": {
          "ref": "9a35b431-d0f3-40f2-90ab-888ab82593d2",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "95a49446-603d-4442-a99d-4a588390c89d"
        },
        "item": {
          "id": "abfc4413-12b0-4fed-9b94-1018f516d131",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0be6de32-0418-4c7d-a7bd-2171b5259087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d4d88d-27ca-44b0-8dee-817958b84ea4",
        "cursor": {
          "ref": "206e9bc9-89fa-4e4b-a00f-1969fb7151c9",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a36693df-0f91-4c28-95f5-94df90e93bf6"
        },
        "item": {
          "id": "f2d4d88d-27ca-44b0-8dee-817958b84ea4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "86ab352e-1118-4254-b203-393abcd6be9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac28a6a9-82f9-47c7-8ca0-f1b59f1710b0",
        "cursor": {
          "ref": "efdf9877-0bea-4f38-812f-d0969cd2aac9",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8552c682-5cbe-4617-8f3e-259254c356a1"
        },
        "item": {
          "id": "ac28a6a9-82f9-47c7-8ca0-f1b59f1710b0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0f20b604-1350-4660-8d63-b3c591cae59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff06d8c-e0f3-4417-b223-0345d83cbda7",
        "cursor": {
          "ref": "bd6462d5-5957-42b2-9cfb-3c3bd163d2e9",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f995201a-2b7a-464d-886b-507fa5455543"
        },
        "item": {
          "id": "2ff06d8c-e0f3-4417-b223-0345d83cbda7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fbb05f5e-28ec-4f0d-8b11-2c72755468c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ef54fe-9f03-4ea4-abff-c4d17496059e",
        "cursor": {
          "ref": "c9fcdb8d-ca5d-464f-a65a-9ad5b3364112",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "71d8c706-f6db-4006-ba9a-02c73f6a288f"
        },
        "item": {
          "id": "43ef54fe-9f03-4ea4-abff-c4d17496059e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "051a73fc-a631-40d0-8ee7-61d6d6b13f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e6e32d-fa57-4be3-9f99-422112f36a46",
        "cursor": {
          "ref": "dc6e808f-49cc-4c6b-a854-748e65de3799",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e7b8e845-c53e-4ee9-927c-6afdd6a8d9ec"
        },
        "item": {
          "id": "48e6e32d-fa57-4be3-9f99-422112f36a46",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "68e43924-2305-4e77-a62f-33d7159a2dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a70579-a74f-459a-8982-8f7f58298cb6",
        "cursor": {
          "ref": "7dfc70a3-0cca-4ef1-a7f0-05e2a82633ed",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ca4d8903-d8ba-4096-b7ac-aa0e8c7b38e0"
        },
        "item": {
          "id": "79a70579-a74f-459a-8982-8f7f58298cb6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8241fbdb-4ef7-40cd-8f47-6ac1a93f52cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5190a727-3ac5-4d87-9ac5-f4de3e38fd27",
        "cursor": {
          "ref": "731d60cc-74ce-4cf3-9f03-587d1bb02e86",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "abc514ef-4169-4da0-9918-58b1519a3966"
        },
        "item": {
          "id": "5190a727-3ac5-4d87-9ac5-f4de3e38fd27",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e1c0aadf-5a0b-41b2-9772-131c44055f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391524bf-51d9-4053-91b0-3a3998b5cfa1",
        "cursor": {
          "ref": "93bccfaa-5f40-487c-b74a-6ba3ac38adc4",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d262ce9a-f310-48b8-b41f-7069ccabfd0f"
        },
        "item": {
          "id": "391524bf-51d9-4053-91b0-3a3998b5cfa1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4f655568-1022-47b7-a62a-3b625fd2a36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24abddfa-939c-47cb-a0cf-201d22c781d6",
        "cursor": {
          "ref": "6a284c09-36f6-48ff-92c7-01e5e3e40e48",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e5703ffa-afc8-426d-a9a7-88e7905ce182"
        },
        "item": {
          "id": "24abddfa-939c-47cb-a0cf-201d22c781d6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3ce9ab8f-61d4-4f12-869d-23e9736c2981",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf07cd54-b6e2-4179-a594-7747e93dbedf",
        "cursor": {
          "ref": "c8089c89-a4a0-4928-b2ac-0ccbb44fa031",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "32137d7e-2aae-4ea8-a16b-0c702bb5867a"
        },
        "item": {
          "id": "cf07cd54-b6e2-4179-a594-7747e93dbedf",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0c92990f-0b33-4361-9630-9f366efb0c49",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 221,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c099678-6922-4ff0-8c1f-8a7e8f2c4675",
        "cursor": {
          "ref": "aaed0b62-b865-41fd-84b1-de16733c50a7",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "162f00b7-93e5-47eb-bf47-c8698481db71"
        },
        "item": {
          "id": "1c099678-6922-4ff0-8c1f-8a7e8f2c4675",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5bb56b13-4c0c-4164-8031-0adcf90763bb",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf04f67-aa18-4376-8149-36a66a683e3b",
        "cursor": {
          "ref": "92b20c3d-3486-4c6f-abc5-7e6c4c36a40b",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5033a8b6-fd1d-452e-97b1-68417d6870e6"
        },
        "item": {
          "id": "1cf04f67-aa18-4376-8149-36a66a683e3b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "748b72b1-159f-4b44-9148-146878a75a6d",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8fd4fa-e91d-4924-9c83-19fadaa189f4",
        "cursor": {
          "ref": "c2081409-362f-401e-a528-3d6aade3f6be",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8e248c0c-68f7-4743-9ca5-9b416233c08f"
        },
        "item": {
          "id": "fc8fd4fa-e91d-4924-9c83-19fadaa189f4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b95537e8-59fb-4407-b5fa-77c907b71b28",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "858883f2-6780-445e-a6a6-ac29591036a5",
        "cursor": {
          "ref": "482ebf1f-9244-41c0-b12d-92e4d909e5bb",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "79f989e2-a443-4d20-8983-040c258adde2"
        },
        "item": {
          "id": "858883f2-6780-445e-a6a6-ac29591036a5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1aa78d75-48d0-4c05-8531-84262316cf56",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d289df-046d-40f0-be7c-d9bcc677f950",
        "cursor": {
          "ref": "252cfdaf-606b-485e-9d26-15ce37a6187d",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9f170070-586b-42e9-a242-388a8122eef6"
        },
        "item": {
          "id": "c7d289df-046d-40f0-be7c-d9bcc677f950",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "668cbb49-52d8-49e4-bfae-25915f84f2cd",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d8d3e6-c3d2-4fea-bfb3-df22cf031f34",
        "cursor": {
          "ref": "c9433b05-9a97-4ff7-bd83-a3b0a933aa0e",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6b863194-ceea-4c1e-8841-0057a2bb36a2"
        },
        "item": {
          "id": "99d8d3e6-c3d2-4fea-bfb3-df22cf031f34",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "198facb5-830e-49ad-beaa-ed1de95a833f",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8776ab-290e-45c5-aafc-e4c3db590db6",
        "cursor": {
          "ref": "184f22e3-984d-46a3-b9f4-7d9c4e153a26",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3e324abf-2a0f-4fda-9e43-f80f6ab200bf"
        },
        "item": {
          "id": "0c8776ab-290e-45c5-aafc-e4c3db590db6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7d0d0995-958c-4c9e-be45-5c3d76ef971a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8776ab-290e-45c5-aafc-e4c3db590db6",
        "cursor": {
          "ref": "184f22e3-984d-46a3-b9f4-7d9c4e153a26",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3e324abf-2a0f-4fda-9e43-f80f6ab200bf"
        },
        "item": {
          "id": "0c8776ab-290e-45c5-aafc-e4c3db590db6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7d0d0995-958c-4c9e-be45-5c3d76ef971a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c868985a-7315-4a67-81cc-44f4a6f8eba9",
        "cursor": {
          "ref": "83195f79-f75b-4099-bd1c-b589308a12b9",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e4b24aa9-fa00-4d99-befe-58d552e521db"
        },
        "item": {
          "id": "c868985a-7315-4a67-81cc-44f4a6f8eba9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5d93d59e-f5e0-4ce2-b970-f9922ff78740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be73516-dd39-4cc8-b22a-cbc5ef947632",
        "cursor": {
          "ref": "09ae9488-e1b4-459c-9436-8117f5a5030f",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "56ac7bde-9f9d-4903-b477-d1b7252add24"
        },
        "item": {
          "id": "5be73516-dd39-4cc8-b22a-cbc5ef947632",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "96f150fb-f29d-439b-975f-ba93a46ee3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d035b4-c6cc-4518-a889-3bfc30f3cf10",
        "cursor": {
          "ref": "7575b37d-290d-4ddf-b100-e8ca93119228",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "675833c3-4025-4991-aa2d-3a877c342d71"
        },
        "item": {
          "id": "c6d035b4-c6cc-4518-a889-3bfc30f3cf10",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "12d4ee48-b548-442b-9f09-7193b19a324c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c8e56a-0919-4db1-b468-1f9e7c6ed6c4",
        "cursor": {
          "ref": "ee375969-bd31-46e1-8ad9-a6ecce88cfb0",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b4ffd799-ad77-4ea1-a2ce-d09d6b8b6844"
        },
        "item": {
          "id": "82c8e56a-0919-4db1-b468-1f9e7c6ed6c4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ceb2b865-773c-40d8-a5bf-890373ad8b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65fdf4e-de71-49be-99fd-a638c1648e4f",
        "cursor": {
          "ref": "8175a7f9-fc79-47b4-ae46-7a31da8d632f",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d711d568-df95-46c2-b1c3-3e6be304e049"
        },
        "item": {
          "id": "e65fdf4e-de71-49be-99fd-a638c1648e4f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "480877ab-e367-47c5-ad59-61c876fdf3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc468749-0a27-43f1-823c-d1fed707e375",
        "cursor": {
          "ref": "abacfd09-ec75-4763-8c8c-85712cb8c63c",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a6dc7951-e99c-4876-8679-22784d9df75f"
        },
        "item": {
          "id": "bc468749-0a27-43f1-823c-d1fed707e375",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d21afae1-f8be-4ed6-9b2d-05d413023c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31ecef5-b554-4ed0-8267-58bace03c1dd",
        "cursor": {
          "ref": "21a4156a-0869-4dd1-87d4-8b0b661715de",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "083a6eef-3d07-49e8-be00-0472e187c952"
        },
        "item": {
          "id": "f31ecef5-b554-4ed0-8267-58bace03c1dd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0108c1fb-a44d-4c60-ac78-249fdf6981e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e12d6c7-35e9-4d1a-b27c-cab70bf99224",
        "cursor": {
          "ref": "77d947e2-e54d-4c35-bc42-6483e7410a90",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bb67d554-fb3c-4858-84fb-576f85d972c3"
        },
        "item": {
          "id": "6e12d6c7-35e9-4d1a-b27c-cab70bf99224",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "47e3adf9-4f88-4210-9588-c22f9c991eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4799b2af-6988-4cbc-ba87-efe5f702ce3c",
        "cursor": {
          "ref": "11adbdb5-71c2-40ad-971d-b8187bbdc828",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1d31b761-70fd-4d45-82f8-86d384cd392d"
        },
        "item": {
          "id": "4799b2af-6988-4cbc-ba87-efe5f702ce3c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "578948d6-38a0-429b-bd75-dd2873c025dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5993a671-7358-4656-b04e-485adff4922a",
        "cursor": {
          "ref": "ce5daef8-ef72-493e-bbc2-9e18652c88bb",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f60a7fe3-9d1b-47bd-ab2a-e0a17d59fad8"
        },
        "item": {
          "id": "5993a671-7358-4656-b04e-485adff4922a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "592de9c9-58c4-4f8d-aeee-1269389124b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35c3d95-7221-4b88-81af-9aee6eaa44ff",
        "cursor": {
          "ref": "e80bda8c-9659-433e-88cb-3277be793b68",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c3803487-0bd6-44af-98b3-02b92113d23b"
        },
        "item": {
          "id": "f35c3d95-7221-4b88-81af-9aee6eaa44ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6bf0f56a-a501-4381-8c31-a3795076214e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b053acd-9f6f-4ee3-9e92-d61458ce935b",
        "cursor": {
          "ref": "d29f578d-c8ec-4b66-b636-84f95291fa0b",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a3ab8852-38da-48fe-a27d-43c8f73371c1"
        },
        "item": {
          "id": "2b053acd-9f6f-4ee3-9e92-d61458ce935b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "752e977e-10cb-4fd8-b23a-219c2885ba10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40b40a1-215e-4911-b030-1325bd29c356",
        "cursor": {
          "ref": "7dc8b1ca-1e47-471c-836b-35e6d32a6f4c",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8c4861c0-5e9f-4252-a4a5-4dc8351da45f"
        },
        "item": {
          "id": "f40b40a1-215e-4911-b030-1325bd29c356",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bb592ea4-b86d-40a4-a706-c3d7f1a68bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3f9d80-3708-4fa3-99e2-0cce98faa1a7",
        "cursor": {
          "ref": "f55a6384-54e7-4f26-9434-e1dd5f335f86",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ff73399f-a08a-455c-8022-49589335c3c6"
        },
        "item": {
          "id": "1f3f9d80-3708-4fa3-99e2-0cce98faa1a7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d89b3318-d8c6-4544-9e41-fe3bf3e8c95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653aa231-60e1-45f1-bcee-b11927e73e98",
        "cursor": {
          "ref": "b7fae295-6e25-4fc2-bc00-3dd7e752d565",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b61d67af-9441-46e2-85c3-c7d6687c5dc9"
        },
        "item": {
          "id": "653aa231-60e1-45f1-bcee-b11927e73e98",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f61e59a2-610b-40db-b840-a4544a07d869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40277d6a-ba60-4372-a542-2b72d585964b",
        "cursor": {
          "ref": "9664846b-9731-4af2-847f-3344b0a1e060",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ee527834-5b9f-4633-8304-526ffaae3c2f"
        },
        "item": {
          "id": "40277d6a-ba60-4372-a542-2b72d585964b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "662b75e0-6a8c-47ca-b22b-7f523c37ae37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650b4faa-9d17-47eb-9b10-76ece65f9e9a",
        "cursor": {
          "ref": "d70e05b6-811f-4ec0-a65a-c18faf4c3102",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0fd1a9c7-0704-4dce-859b-69facf3025f4"
        },
        "item": {
          "id": "650b4faa-9d17-47eb-9b10-76ece65f9e9a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eab04099-8e5f-434b-b087-b3d4efe42ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4701bf04-85a2-47f3-ba41-89c3d8c2866d",
        "cursor": {
          "ref": "967dc0f7-e146-447b-b2db-619bc87cc337",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b6ed5871-a478-4b63-9f9f-481bdf1fd64a"
        },
        "item": {
          "id": "4701bf04-85a2-47f3-ba41-89c3d8c2866d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d0609d49-f59c-49c1-b4db-62bce8b18095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0392d940-231f-4370-8866-be15a93e5501",
        "cursor": {
          "ref": "fcfd40f0-91b6-4512-ae4b-1b869f483b85",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a478660-ba57-4aa1-b5a4-cc163e9183e6"
        },
        "item": {
          "id": "0392d940-231f-4370-8866-be15a93e5501",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ae30a46a-436a-4d1e-bddd-d117e69db70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd0b96c-e885-484b-9eee-12d977275521",
        "cursor": {
          "ref": "f54a4b55-d86a-4ccf-a5ad-881a229f6a85",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1e76d3d1-c0e8-42ff-a728-36c1d33ef1aa"
        },
        "item": {
          "id": "0fd0b96c-e885-484b-9eee-12d977275521",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "300a7658-6313-4d9b-b9e0-07c31814400a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022f8263-70e2-47fe-8771-bc7c594ac7cc",
        "cursor": {
          "ref": "26be4c8b-11f6-43e1-afda-57cd5ac6e57b",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e01846a8-b02d-4887-b92f-1555e9f3a318"
        },
        "item": {
          "id": "022f8263-70e2-47fe-8771-bc7c594ac7cc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bb2e4721-f015-4601-b489-df641cf5dc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b19a57-81ad-47a8-ba79-55f9686746ed",
        "cursor": {
          "ref": "96ea614f-1454-48b8-a4dd-ea4580c6a6d8",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c5b41a72-8634-4286-8b4b-74bc651be665"
        },
        "item": {
          "id": "f8b19a57-81ad-47a8-ba79-55f9686746ed",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "928a22e2-43c1-48e0-9a08-34791c5c05ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ffcfd0-a1be-4f9a-a0c4-eb948a73ef3a",
        "cursor": {
          "ref": "0f878e72-47b5-45a1-ba12-bba5e7706cb8",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "01d0b363-9a39-4f81-ae0a-311e866a6d1a"
        },
        "item": {
          "id": "24ffcfd0-a1be-4f9a-a0c4-eb948a73ef3a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "929501ae-cd6c-43f5-baf5-097914f73b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea4d5bc-46ae-4975-ac08-6e29f3e3c2e3",
        "cursor": {
          "ref": "15a89520-4973-4458-b65f-97842caf7b61",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6838ecee-4ae0-4706-8ada-d36acca04653"
        },
        "item": {
          "id": "4ea4d5bc-46ae-4975-ac08-6e29f3e3c2e3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "49206b72-23bf-403e-af4e-5c2e1613317e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8c28cf-c5cc-423a-871a-b570a099e5f1",
        "cursor": {
          "ref": "1657f486-9f4c-4268-bd28-c781910ecdac",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1c000e4e-69f0-4020-8036-3ae8928d0fa6"
        },
        "item": {
          "id": "3a8c28cf-c5cc-423a-871a-b570a099e5f1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "97a53d29-835d-4cc5-ada3-3d66a8d9ad4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627920ec-55f9-4471-a0b6-4126aed19951",
        "cursor": {
          "ref": "ce34d2b4-4964-44b7-b924-d3d0e31bd870",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "730c2864-7401-46fc-9771-9dd200b00090"
        },
        "item": {
          "id": "627920ec-55f9-4471-a0b6-4126aed19951",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f4954e1f-e777-48ae-ac97-5c1af8be3528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a5adcb-6144-405f-9b61-5a878238911a",
        "cursor": {
          "ref": "9cfbb17e-8e3f-486a-9c49-ad587128792c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f5d80404-810c-4ce0-9120-a6d13b687392"
        },
        "item": {
          "id": "15a5adcb-6144-405f-9b61-5a878238911a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "492c246b-c409-4bf4-a508-9b182b67fa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0613ec9-e96d-4955-8195-55e655e01b49",
        "cursor": {
          "ref": "939dde40-fad8-4b80-ba03-aa853832bb30",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9a45f1a1-1240-4802-954f-8772866d037e"
        },
        "item": {
          "id": "d0613ec9-e96d-4955-8195-55e655e01b49",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "121b1daf-ab56-4094-80ab-ea49741aa7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674cbf5a-92ad-4a6b-a3e9-3777c0046383",
        "cursor": {
          "ref": "951c0570-3b65-4276-afdc-3eeaf29aaaf6",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bc347acd-8fcc-4e4b-8435-0fcc64c77a96"
        },
        "item": {
          "id": "674cbf5a-92ad-4a6b-a3e9-3777c0046383",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f3721556-195d-4bdf-9502-f6af0f2cfbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3031e370-de92-424a-8667-c85103aaf9a1",
        "cursor": {
          "ref": "98af7e19-35b3-4d25-b19f-6dab3c09cba8",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "eec638b5-2839-4145-9e64-a1222de13d46"
        },
        "item": {
          "id": "3031e370-de92-424a-8667-c85103aaf9a1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5f608fa0-ff5e-4199-b942-931ea6b12b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4272bd7a-7aa7-42bc-895d-aee27e9bda11",
        "cursor": {
          "ref": "45e9dbf4-998e-41a0-8ea3-8eac5307841c",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2687a095-4dd6-443b-8bc3-c935d72b5752"
        },
        "item": {
          "id": "4272bd7a-7aa7-42bc-895d-aee27e9bda11",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a8e24355-622d-4808-b858-251a74e337b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de0eff8-8fcd-472f-b59f-d7254c8c5408",
        "cursor": {
          "ref": "7d0256a6-3672-4eb5-9327-526c84acf8eb",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e5556a3a-2d08-470b-a6b8-3f80adb507c0"
        },
        "item": {
          "id": "3de0eff8-8fcd-472f-b59f-d7254c8c5408",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fa4a1fff-ed79-4bb5-8ff4-63b178dc0c40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac138076-9400-4433-b279-c2d6e9d5b950",
        "cursor": {
          "ref": "8374a38e-55b2-4a41-8449-a72071fa8be2",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8b32b319-655a-4b7f-9ec1-3f7c308cacea"
        },
        "item": {
          "id": "ac138076-9400-4433-b279-c2d6e9d5b950",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "872e0e35-6ef5-4900-a017-47038c41322e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbe1aa5-cafe-41b4-87d8-02ed6f3f031a",
        "cursor": {
          "ref": "78ac2703-2a77-40cf-a205-959001402e2f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6c629597-bf20-4ac0-bfec-352723e041fb"
        },
        "item": {
          "id": "ebbe1aa5-cafe-41b4-87d8-02ed6f3f031a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7b397eaa-84dd-44f8-bdd3-2d71f9b140f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbe1aa5-cafe-41b4-87d8-02ed6f3f031a",
        "cursor": {
          "ref": "78ac2703-2a77-40cf-a205-959001402e2f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6c629597-bf20-4ac0-bfec-352723e041fb"
        },
        "item": {
          "id": "ebbe1aa5-cafe-41b4-87d8-02ed6f3f031a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7b397eaa-84dd-44f8-bdd3-2d71f9b140f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23ce6fd-5213-4b70-b555-e31278cb71fb",
        "cursor": {
          "ref": "8a1984b2-9ec3-438f-a580-55cb952dd8d1",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5475bde0-f496-448e-aaeb-5a990d64e3e1"
        },
        "item": {
          "id": "d23ce6fd-5213-4b70-b555-e31278cb71fb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a732902b-2cf1-442f-9af3-a2f4ffcf6c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f989c606-8956-4b2b-a921-8e2c236d6c22",
        "cursor": {
          "ref": "f589df23-a5c5-4dd9-bda8-3eeec4c59a6a",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aa2feee6-dfef-4448-9eca-14cf386a5f0b"
        },
        "item": {
          "id": "f989c606-8956-4b2b-a921-8e2c236d6c22",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "faf1339c-7f30-4d45-b650-2c28aad469d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f0a6dd-144f-49b7-ad73-3bb38cfca642",
        "cursor": {
          "ref": "e09a3465-1693-4d4f-afe6-65b9f391b9d5",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f5a79acc-5dce-46d6-8d8b-b4c918ccafd5"
        },
        "item": {
          "id": "42f0a6dd-144f-49b7-ad73-3bb38cfca642",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a12dd087-825c-44ea-8073-d354004143a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d81a65-5771-437f-98f9-9c44af00d2bb",
        "cursor": {
          "ref": "52ef472c-7dc6-41ab-85fc-e3780cf4c9c2",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ab9b9b89-4549-4d6f-a699-ba5090d1b7a6"
        },
        "item": {
          "id": "70d81a65-5771-437f-98f9-9c44af00d2bb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9339d680-6b7f-48a4-b557-db534df23743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef357ac-a539-4c43-ad56-70e5524fd729",
        "cursor": {
          "ref": "dc3a8a78-ff53-422b-901e-4ca7957addca",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d782b11f-9b04-4904-b0dc-4e6f7bd9c8cf"
        },
        "item": {
          "id": "cef357ac-a539-4c43-ad56-70e5524fd729",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2e07576d-b5b9-4852-93bc-1652f77dd366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc7c160-d383-471b-8314-086c56a88de0",
        "cursor": {
          "ref": "84d76004-8195-437c-ac81-6377af3562f1",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ebe3dd11-2de6-4213-88af-ac079cc37363"
        },
        "item": {
          "id": "9dc7c160-d383-471b-8314-086c56a88de0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "71a603a6-1f5f-46e6-8c0a-ef1ae0d1d701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9716cba0-41fc-4844-a444-abde63e56613",
        "cursor": {
          "ref": "1603cbbf-e798-460f-9184-259af3d87658",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "887e8ad5-55d7-468a-8450-fe8531c847c5"
        },
        "item": {
          "id": "9716cba0-41fc-4844-a444-abde63e56613",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b8cfbdf3-ebe8-4666-b6f3-2b18640bbb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e684c4e-69cb-49bc-ab88-0e47c148dbe9",
        "cursor": {
          "ref": "f637fd0c-1440-4028-8f9e-ebf567dd6217",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7ef8a991-4f21-48d3-b215-084ae5dad96e"
        },
        "item": {
          "id": "0e684c4e-69cb-49bc-ab88-0e47c148dbe9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8b3b6444-e0fe-4ab5-8f68-3786b8d852a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ae3c1c-61cd-4153-93f0-6f41b972aca9",
        "cursor": {
          "ref": "d70ad80a-1bb4-4d5f-a73b-727d4c9ee483",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c8204e59-d4c3-463b-8ecf-eaa4c93d0b81"
        },
        "item": {
          "id": "77ae3c1c-61cd-4153-93f0-6f41b972aca9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "898c7e34-09b5-4f5e-81ac-7c5353fec40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98bd3c7-fd46-4b68-b6ee-b815ed0aba89",
        "cursor": {
          "ref": "eb0178f5-9e24-46d0-b11e-867b41968f90",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "672cfde3-9a91-4687-8fff-c9f09295f719"
        },
        "item": {
          "id": "c98bd3c7-fd46-4b68-b6ee-b815ed0aba89",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7c3efb5a-9e04-4000-af3f-6b84524f8d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413bf9b0-7455-421c-9af8-0e515304a5fb",
        "cursor": {
          "ref": "d5c9e55e-4b0b-4d72-ab03-9188ca17ec0a",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "85db1c37-c3b3-4062-a96e-9dfdd5adb6b8"
        },
        "item": {
          "id": "413bf9b0-7455-421c-9af8-0e515304a5fb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e7944129-e102-4f8e-9994-7a2ed6b5339f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf4e2f6-c5b0-49fd-ad9b-a74e911868a4",
        "cursor": {
          "ref": "02c891e1-4d40-48c7-a540-ca87fa19c241",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "476852e1-0f3c-4e26-ad80-15fc6b66de79"
        },
        "item": {
          "id": "7bf4e2f6-c5b0-49fd-ad9b-a74e911868a4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e8a1430b-db3f-4e53-adaa-3260cbf6173b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a70f19-62ea-4e4e-a811-d8c6dd7e3fda",
        "cursor": {
          "ref": "29ac2347-78b6-425f-881a-ea49c3b576fc",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6bd92836-a4df-41ba-9e0b-fafd24c2f65f"
        },
        "item": {
          "id": "30a70f19-62ea-4e4e-a811-d8c6dd7e3fda",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "287ee07c-d37a-43ac-8fbd-d7dca1876c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d186345-2150-4a11-bcf0-ecf0389778b9",
        "cursor": {
          "ref": "6755a1f6-841e-4fe0-aca8-67bbbd3daa93",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c779dc9e-9e8d-4b88-8326-092006cb3ef1"
        },
        "item": {
          "id": "1d186345-2150-4a11-bcf0-ecf0389778b9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b82ab7f8-2059-4710-99c7-5171449dd289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4112768-c40c-4d5a-a2d1-4c9a858344dd",
        "cursor": {
          "ref": "9c19fe68-e72f-4d12-a774-eb8b36ef8fd3",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "460dd639-a383-4c80-b46f-196a715fd19a"
        },
        "item": {
          "id": "e4112768-c40c-4d5a-a2d1-4c9a858344dd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7444f51b-b066-48e2-99aa-2e84759416f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb06801-1395-4bfa-bd3c-dc832c01bba9",
        "cursor": {
          "ref": "3487c77b-e037-467a-b8a9-fb0167b080e6",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6dc54e59-65c8-452c-ad4c-23700e1326c0"
        },
        "item": {
          "id": "2cb06801-1395-4bfa-bd3c-dc832c01bba9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ee22a59f-d32b-4293-8663-5623d1e5897a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e152745-0601-4d57-ae02-09be779fdc0a",
        "cursor": {
          "ref": "00e27c5a-7f93-4bb8-be0e-410fe5486b65",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a9e4d60d-90bf-4d14-92ac-8d6df5fc67eb"
        },
        "item": {
          "id": "6e152745-0601-4d57-ae02-09be779fdc0a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9ab5ba96-e070-4897-9497-d9b7f8f5fc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925fbfe6-e5bd-4a88-b862-00a89590c64d",
        "cursor": {
          "ref": "df7839b6-dae9-49a3-bb5a-ed55dde00277",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3d46c04a-233c-4d5a-9da0-9a26e043254d"
        },
        "item": {
          "id": "925fbfe6-e5bd-4a88-b862-00a89590c64d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "39855300-2f87-4302-8e35-d3bc48d81332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0e0858-a208-43a9-bec5-932a55555cae",
        "cursor": {
          "ref": "12ec7a18-7f4d-4d5d-94de-2706a4847919",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "04f4d020-201d-4986-ac7a-51f643983a12"
        },
        "item": {
          "id": "ca0e0858-a208-43a9-bec5-932a55555cae",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6bd83d40-b711-4e5e-88da-c73972451004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5071bb55-28b7-4e96-b3bd-aad5f9361b5b",
        "cursor": {
          "ref": "e4c0482f-078e-4ec1-bb0d-67963a08cf25",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4095a74e-c334-4067-b766-f3f6f663933d"
        },
        "item": {
          "id": "5071bb55-28b7-4e96-b3bd-aad5f9361b5b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fb9246a5-c5e3-42d1-9dd8-2bca14186fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11abfbcd-68ac-4e81-877a-36698ac0835a",
        "cursor": {
          "ref": "2d0e3edc-1dea-4279-82ae-d9ad4eea58f7",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e87733ae-f021-4efb-ae08-4997f0a87224"
        },
        "item": {
          "id": "11abfbcd-68ac-4e81-877a-36698ac0835a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c3062582-53e0-4d7d-96b1-3d5d007f9119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc41531-11d2-4e22-bde3-9a411202ab49",
        "cursor": {
          "ref": "f60f086c-58eb-45e2-9ed7-c57d86f751f5",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f5ec0c8d-96ed-4434-8b51-641609740f62"
        },
        "item": {
          "id": "7cc41531-11d2-4e22-bde3-9a411202ab49",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7a940ea7-6962-4b8f-a18c-0bc74dbcc1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d91ba5-93fa-4d23-a558-583b79a7834e",
        "cursor": {
          "ref": "f182c692-13ad-4b50-bd10-b37e1a6d11cc",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "22e255dd-7f74-4a9b-bdaa-70bee6330b68"
        },
        "item": {
          "id": "54d91ba5-93fa-4d23-a558-583b79a7834e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "45a9437a-7959-4b08-bb52-0c1a6d2d192c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2925dc2b-7129-4883-912a-d56d02c1cb94",
        "cursor": {
          "ref": "10d52afe-aea1-4021-af87-2da8531d03b4",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bbf05577-f0a3-4c21-a21f-9715dea784af"
        },
        "item": {
          "id": "2925dc2b-7129-4883-912a-d56d02c1cb94",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2e024a57-9082-4eb0-a191-bc2a346bb165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efb20af-24ed-4cc4-a332-1d776770248a",
        "cursor": {
          "ref": "2569949d-4fcc-498c-b81f-267fa6798d9b",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "681d2053-ad0f-499d-b4b2-d9f45978b8bd"
        },
        "item": {
          "id": "5efb20af-24ed-4cc4-a332-1d776770248a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "09f5f9ad-0aa8-4c9b-b904-f51412338452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bac3ac2-23c3-482f-ae0d-caf5ce23a6cd",
        "cursor": {
          "ref": "ec8f29e4-c8eb-4d57-b966-b7c26e3fa942",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "11ac39d6-4ca7-4989-93d3-9b60cbcbefb1"
        },
        "item": {
          "id": "1bac3ac2-23c3-482f-ae0d-caf5ce23a6cd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8080e9e6-286e-481e-8018-1526988ef8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0921c70f-bef2-4f51-bdd6-887cb880d2be",
        "cursor": {
          "ref": "93216dcf-a7ef-404c-a24f-b91f50825d1e",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c8e42678-b436-410e-9aca-ebc90a85792e"
        },
        "item": {
          "id": "0921c70f-bef2-4f51-bdd6-887cb880d2be",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7a9855a4-17d2-45f4-a98e-bed4477be918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317eac36-b28c-454b-bbfa-7d32268dc193",
        "cursor": {
          "ref": "826e5174-7447-4f64-8675-5292bdf92b44",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "22f911b0-0823-496d-80d1-9aa38f2e195f"
        },
        "item": {
          "id": "317eac36-b28c-454b-bbfa-7d32268dc193",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4f3b01e5-6d21-4ee0-8a09-7c775ae60c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3655d61e-ab52-4d51-b9db-9636dcdc88ec",
        "cursor": {
          "ref": "01e12cf7-0705-4aaf-88ea-4ec4434ddfd9",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bb8debab-8d17-47ae-8208-832d466b0a3d"
        },
        "item": {
          "id": "3655d61e-ab52-4d51-b9db-9636dcdc88ec",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f0dcc6b2-b5b9-4980-a89f-45ca9b3e4e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dda5f4e-a4ca-4cc7-a344-119e3c32959e",
        "cursor": {
          "ref": "bf7364d6-1e24-49f4-8a5e-56a972ae385c",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a5e443f9-5d43-4786-9cd5-726c9828a58e"
        },
        "item": {
          "id": "3dda5f4e-a4ca-4cc7-a344-119e3c32959e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "87bb66bf-0d20-4f7b-886f-a189d6e21d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99025292-edeb-4e15-8f21-b37e186eb9dc",
        "cursor": {
          "ref": "25ecdbb8-bd84-4215-87b9-a871281a2311",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5a0246ac-f8c9-4114-9ed1-c1e46b4ad895"
        },
        "item": {
          "id": "99025292-edeb-4e15-8f21-b37e186eb9dc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1af0de97-8783-4291-aa13-2aeb5b861822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1d349d-b7c1-474a-bed0-7115b99d80da",
        "cursor": {
          "ref": "75c61ed8-203a-48b4-a569-03513570b999",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bb13994c-298e-4864-97c7-ac2bffd3dcd5"
        },
        "item": {
          "id": "9f1d349d-b7c1-474a-bed0-7115b99d80da",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7efbd4f9-516b-4748-895a-173950e8c8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95622fb-e1dc-48cf-a8aa-ba8231c92c98",
        "cursor": {
          "ref": "0cd72135-417c-4e12-9173-d019e677ade8",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5454751f-7bc3-47e2-9cd0-ee5faef28d9b"
        },
        "item": {
          "id": "c95622fb-e1dc-48cf-a8aa-ba8231c92c98",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1cb20370-79fd-443e-8d69-789d6c93e975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00710bc5-88b3-4235-ad87-8eb0a2f23b4b",
        "cursor": {
          "ref": "7ec62dba-6e63-4b18-85d9-d2c470b0a7f3",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7bb2c55b-42f3-4c76-959a-f40025abbfe4"
        },
        "item": {
          "id": "00710bc5-88b3-4235-ad87-8eb0a2f23b4b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cc4f5887-4172-4808-b28a-06ff20d310d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61a353f-db45-4472-b848-a4912ba67527",
        "cursor": {
          "ref": "493827af-705b-4f2c-94f6-2fd75055d1dd",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "df90f1ae-0917-4701-954d-8834ecd3fdd5"
        },
        "item": {
          "id": "d61a353f-db45-4472-b848-a4912ba67527",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "47c80c3a-66cb-4061-a2a8-086a33480916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0596647b-2b0c-413b-8a71-2a277cb81a8c",
        "cursor": {
          "ref": "80469719-2d5b-4e9a-84a3-758da259369d",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "68f79066-5887-4e74-b4db-44938908a6e3"
        },
        "item": {
          "id": "0596647b-2b0c-413b-8a71-2a277cb81a8c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "903f1413-af87-4eef-a193-dd5bcbc5d57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c40f80a-a0df-486a-92f1-8d68620d7f3c",
        "cursor": {
          "ref": "1e143c94-1ebf-4121-9a99-4fe7a985e32e",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f72ca26a-b44b-4009-b1ce-9d2881bc2b7d"
        },
        "item": {
          "id": "6c40f80a-a0df-486a-92f1-8d68620d7f3c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2fa01331-486a-4500-86b6-0da23db0ec3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0de0864-a1f7-4062-8c97-70dbc951dc32",
        "cursor": {
          "ref": "8d6b1d72-a1b3-4a57-b55a-7b6dd2cca2b3",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b302862d-7bd0-4a5d-b1ea-323a130537f0"
        },
        "item": {
          "id": "c0de0864-a1f7-4062-8c97-70dbc951dc32",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4169f02b-f1c1-446e-bd24-d057ad59a2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf0fb24-5c81-4918-ae30-5c4ecd1ae809",
        "cursor": {
          "ref": "9015e3a6-b795-4bcc-82d7-2587cf1eb6ee",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "967f5edb-34c3-4c9f-8ce1-ce7c02193f77"
        },
        "item": {
          "id": "ccf0fb24-5c81-4918-ae30-5c4ecd1ae809",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "520d6a7a-5313-4545-8d80-d5774f5c3fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db81eb96-7321-4bc4-93a8-ff257adca002",
        "cursor": {
          "ref": "6ccd5b68-be37-4319-a81e-2144c87ac0b0",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4b3296e5-f3ee-42ec-a03b-6b3b447d0d69"
        },
        "item": {
          "id": "db81eb96-7321-4bc4-93a8-ff257adca002",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ab0b0318-6f7b-43cc-ac06-d5291534e506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b4ae94-3816-45a4-bdeb-5b23e3a5c640",
        "cursor": {
          "ref": "0105eaf5-39c8-4e6b-bf4d-d651240b883e",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "20606ffa-542d-4999-9a67-e3f5b6debafa"
        },
        "item": {
          "id": "22b4ae94-3816-45a4-bdeb-5b23e3a5c640",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ea7aa5ca-840e-4db9-a452-72053aefa719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a828eb3e-16be-4497-ae6a-498b5d9281e9",
        "cursor": {
          "ref": "b2f07677-82bc-4b00-a1b3-36ee6ed77307",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a71d753e-5ba7-4be8-9a07-d4225518b35a"
        },
        "item": {
          "id": "a828eb3e-16be-4497-ae6a-498b5d9281e9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "aeb9d2db-c385-4e58-a999-533076bcb3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba9af3f-a90e-4077-b74e-b691922d988f",
        "cursor": {
          "ref": "6a339bbe-180c-4480-9ba6-23a17ec564c7",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "76714dc7-9f18-47cc-8adb-ceddb26c1764"
        },
        "item": {
          "id": "eba9af3f-a90e-4077-b74e-b691922d988f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "08a045f4-0a25-44f0-b747-12df4559db34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d257cb-e79d-4c3e-9786-b56003030d6a",
        "cursor": {
          "ref": "db94ff4d-4e5d-429c-94ec-d7b1185c0f43",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3ba790de-85bf-47a6-bc76-d41a0b381948"
        },
        "item": {
          "id": "59d257cb-e79d-4c3e-9786-b56003030d6a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "44929a18-aaa1-4ac7-a42f-9e3c1e0eb508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb272299-bcca-4bdc-97c4-037f291b94bd",
        "cursor": {
          "ref": "1f174569-0e0d-45d6-9f1d-0f5e95ceb27c",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cc163364-273a-48d2-b2ba-d56f7477628c"
        },
        "item": {
          "id": "eb272299-bcca-4bdc-97c4-037f291b94bd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "538afb83-ee5b-4889-b04a-5bcd9576ddd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed703996-123b-4d89-9481-001a644fca7b",
        "cursor": {
          "ref": "f4f38e88-2e5a-4c25-9cde-f8d5fbcca6cb",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "77501ee6-af25-4d30-a7a5-6443e4f5cbff"
        },
        "item": {
          "id": "ed703996-123b-4d89-9481-001a644fca7b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "13b9d1b7-ecb6-41fa-b428-4f7d9847cee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c31623-b10b-4e80-bb67-1791a79cd7e6",
        "cursor": {
          "ref": "ee1379e3-13ab-43f9-8d44-332bd8c7350f",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "38110eaf-96e5-45bd-9b78-dc422ace3199"
        },
        "item": {
          "id": "b8c31623-b10b-4e80-bb67-1791a79cd7e6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f50d7124-d3eb-4d46-88e7-f15c387ddd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e8bdb4-c65a-476c-a2a6-ebd4a130ed10",
        "cursor": {
          "ref": "e3e0a787-0af9-46e8-9786-8b3a21ac2300",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "00c0aaca-c22b-4788-880b-01554fe15b87"
        },
        "item": {
          "id": "10e8bdb4-c65a-476c-a2a6-ebd4a130ed10",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "37716d61-59d7-4fa0-b96f-beb14ff4a225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0633c77c-d675-4b2e-92ba-578bf3692b40",
        "cursor": {
          "ref": "0318b9c4-b194-40e9-baab-29b679e89720",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "292eadf9-dbc8-4268-80c7-c44496191545"
        },
        "item": {
          "id": "0633c77c-d675-4b2e-92ba-578bf3692b40",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "085ba550-046f-434b-a532-8dbc0c6c6d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3d0065-8185-467b-892e-912b9992db0f",
        "cursor": {
          "ref": "0cb6768c-cee4-4827-9987-f019deb6d2c1",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1e5daa81-55dd-4d46-8e02-fbf3f9da14a0"
        },
        "item": {
          "id": "8c3d0065-8185-467b-892e-912b9992db0f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "52208c92-9f18-405d-ab6a-021fbbbd813f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450b80b9-9db8-4a8e-81d9-89450902864b",
        "cursor": {
          "ref": "d9a3248e-ffbf-46c4-a149-924c4821d3c7",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2cdf70eb-01bc-4643-a982-2f47715abc49"
        },
        "item": {
          "id": "450b80b9-9db8-4a8e-81d9-89450902864b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "abaa6d2c-933e-4f44-8fd2-15418bd0fb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4622c6-2142-4a34-a60a-aa6f742444f1",
        "cursor": {
          "ref": "6c79fc7e-c52b-49e7-bf88-7de30cb84c3b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d3e8fe53-ee8f-4ecb-a0c0-6f797b835628"
        },
        "item": {
          "id": "9c4622c6-2142-4a34-a60a-aa6f742444f1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7ce649e2-67ce-4166-ae4e-110df8be4635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5a5027-3985-4d02-b7e3-86511047f57f",
        "cursor": {
          "ref": "580455fe-d9bb-4ee6-8ae5-2d61715c139e",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b3c28d1e-0a4f-4fd1-8c5f-55b5f4c7abc6"
        },
        "item": {
          "id": "3e5a5027-3985-4d02-b7e3-86511047f57f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9da70ac9-f4c8-46f0-905e-8a429924b5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d195ee-83cb-4340-b447-d7d5caab977a",
        "cursor": {
          "ref": "5dc7239d-69db-41de-a430-25635527dc9b",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c7885566-4b63-4ae7-9d30-b76576313e57"
        },
        "item": {
          "id": "48d195ee-83cb-4340-b447-d7d5caab977a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "95c49abc-6359-415d-9476-932c34ea94ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1765932a-9ed0-4545-8166-071db5bc7bba",
        "cursor": {
          "ref": "8bb21f53-9a67-4c56-92b2-2eabedd0442a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b5b07736-2b9b-47bc-ac88-a1058540b239"
        },
        "item": {
          "id": "1765932a-9ed0-4545-8166-071db5bc7bba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2ff4f3c3-0068-441f-a131-8e1043b6f9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7d49f8-0108-475c-a6a9-1916fae12086",
        "cursor": {
          "ref": "515b59f7-742d-4fdb-801b-398b2f974af8",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3effcb5b-d74d-40d6-8c10-7881fba4b546"
        },
        "item": {
          "id": "fa7d49f8-0108-475c-a6a9-1916fae12086",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "06030904-865f-4ce7-8b86-49ee821ce46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86c3df6-8572-4a8a-87e7-390f56e75442",
        "cursor": {
          "ref": "066dd526-d0df-4dc7-9d66-8539740161f7",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8a7fc8ff-1239-4f41-b245-cfa0cb749ac4"
        },
        "item": {
          "id": "d86c3df6-8572-4a8a-87e7-390f56e75442",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6bf04239-8014-4513-8024-27ebbaf71ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d1dff9-6aaf-4837-91e7-57d68c1746c9",
        "cursor": {
          "ref": "56dad6ec-82ae-426d-8a75-d2670e18f1e7",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "32b9dba2-b55c-4837-ac84-fd27940b8df1"
        },
        "item": {
          "id": "66d1dff9-6aaf-4837-91e7-57d68c1746c9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "edf9532b-4983-4077-a50d-68d11977349d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ba8928-e3c0-40d3-92a9-dfc5890a4ab3",
        "cursor": {
          "ref": "797aa451-657b-44ad-8e23-f1010f8e4fd7",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4057adff-cc9a-4b3d-be84-71c25cd6a067"
        },
        "item": {
          "id": "08ba8928-e3c0-40d3-92a9-dfc5890a4ab3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ebb2930a-166c-4608-bfe6-41f386cce111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38953c83-fc31-4b36-8227-99dfe9161fee",
        "cursor": {
          "ref": "78ee69cd-e367-4a29-8ebb-0c66980e1a37",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1a4b5fe9-fbaa-40c0-bb93-3a69eedcd735"
        },
        "item": {
          "id": "38953c83-fc31-4b36-8227-99dfe9161fee",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ecb87d58-4b80-4f9c-beb4-73f3357de868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e427f10-3aaf-4e80-8fa6-87af8dcb0a30",
        "cursor": {
          "ref": "db1d7a52-c8f6-46d8-bed9-32790795415c",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9173258a-d707-4ca5-9fd0-85c85c14f97e"
        },
        "item": {
          "id": "9e427f10-3aaf-4e80-8fa6-87af8dcb0a30",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8087a6e6-497a-4ee1-a303-70f15348e62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163b3a0b-eb03-4ae5-95a2-381a0aae07fb",
        "cursor": {
          "ref": "361251f8-7276-4f28-800c-1ad4fb7b754b",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cdac4b72-782d-4017-8906-099c2ddc2468"
        },
        "item": {
          "id": "163b3a0b-eb03-4ae5-95a2-381a0aae07fb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1fbe7350-5e75-4d4c-9080-dd4d011da32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffaa0db-d938-4dd5-868e-9a02a8f0904a",
        "cursor": {
          "ref": "2a6bedb5-c185-4cbf-833c-23c3bca7f927",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1cfe72ce-3ebd-4162-b282-941175823886"
        },
        "item": {
          "id": "7ffaa0db-d938-4dd5-868e-9a02a8f0904a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ac039d13-4f5c-4210-9ec1-aac8ab35b6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6acdba-4940-40f4-8d69-f9e3a4fbd4bf",
        "cursor": {
          "ref": "87d43c5e-84a4-431b-a455-5680446768ae",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "160042ed-b8ca-49ef-a9e3-2e30faf235ec"
        },
        "item": {
          "id": "5a6acdba-4940-40f4-8d69-f9e3a4fbd4bf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c6a5bf15-dfcc-409d-93eb-372f8fe7588f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c94554-55b0-44ed-8776-1b3123a8f8ea",
        "cursor": {
          "ref": "157a4904-86ea-42f4-880f-a67563fb8152",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c4138db6-2f3e-4f3c-9141-08aa98972add"
        },
        "item": {
          "id": "98c94554-55b0-44ed-8776-1b3123a8f8ea",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8c0a76d8-fe12-45b1-aa18-92f15ee26a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fa5c9e-a48a-4665-8078-e2061e8988ce",
        "cursor": {
          "ref": "42245a83-ea00-4361-90a4-a7e3b98c073d",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4306cca5-5c3f-47a2-be48-6edeae737ce0"
        },
        "item": {
          "id": "43fa5c9e-a48a-4665-8078-e2061e8988ce",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "73c91959-5f90-43a4-a397-778e46b041bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2745ef5-f212-4bbb-aa05-027cf3476d51",
        "cursor": {
          "ref": "82a4feca-f8b0-4417-9feb-84d833842bd9",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e34dad33-7ae8-445d-a0e1-12b15be7f307"
        },
        "item": {
          "id": "b2745ef5-f212-4bbb-aa05-027cf3476d51",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "443fe121-4ebb-4ba2-ba0c-1493d3ea967f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b36206-6c8f-47c5-8f04-366ccbcb280e",
        "cursor": {
          "ref": "7e1fe69e-16b6-46ee-a40c-b647ca5dbdf2",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9849b63e-118e-4f8c-8bff-7e047ac9124d"
        },
        "item": {
          "id": "e4b36206-6c8f-47c5-8f04-366ccbcb280e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c60517da-2db3-40e0-bf72-4a35be541481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce451f9a-af20-4c5f-a319-4984588b106a",
        "cursor": {
          "ref": "7fa7e57e-082e-40a6-937a-da5983e577a6",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fa84b23d-517c-4cb2-80bc-d2d30670dd2a"
        },
        "item": {
          "id": "ce451f9a-af20-4c5f-a319-4984588b106a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bc55fa2a-8a15-4879-8b5a-fa413709fe7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e04f4b0-aa84-4f1b-8c02-aba5532c7e30",
        "cursor": {
          "ref": "c8b8f2c5-745c-460d-91bc-b079264ce1a4",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f7ae2e3d-d097-4358-bcb3-17079b17c6c8"
        },
        "item": {
          "id": "1e04f4b0-aa84-4f1b-8c02-aba5532c7e30",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2c437cab-b691-4843-8c69-4a9b5ebf5abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c942f6-2c96-491f-9cec-3ac0a81156f6",
        "cursor": {
          "ref": "2fd10dfe-191d-45b4-b764-09a73033ec2f",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ff0938a9-d0dc-434a-9c80-e14a1412f157"
        },
        "item": {
          "id": "e0c942f6-2c96-491f-9cec-3ac0a81156f6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c5652277-c805-436a-875e-000393758e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b223eb-5a07-4799-b93e-8546e9ff5d3d",
        "cursor": {
          "ref": "d386871f-67ae-4f42-969b-d066b45f221c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aa468f0b-5884-4924-aea0-33822384978e"
        },
        "item": {
          "id": "36b223eb-5a07-4799-b93e-8546e9ff5d3d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0cdc1157-b913-4533-bdcd-7deb0f9ffc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84068c71-349a-4f94-a4b7-e294c7c8954e",
        "cursor": {
          "ref": "a48b0878-b7c5-4e1d-9ad0-1e1827db29e2",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "75637d88-dfc1-4051-9e03-50ffac648ae1"
        },
        "item": {
          "id": "84068c71-349a-4f94-a4b7-e294c7c8954e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1f652315-d513-4cb1-b705-3b27341f4245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4239b369-360a-4ef2-943f-3ce2d5483b53",
        "cursor": {
          "ref": "89902059-134f-4220-831f-97810754dd1a",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "69631645-965f-435f-92b7-238c6f50b864"
        },
        "item": {
          "id": "4239b369-360a-4ef2-943f-3ce2d5483b53",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "717a8332-8224-44bb-82ee-c584b551d036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe775b1-fe61-4e6d-8b64-1eb8ea1db071",
        "cursor": {
          "ref": "254cf23c-f154-49da-83d9-90a980ce7ed1",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4c5c1c41-08d2-4fec-b7b2-d27e6806b85f"
        },
        "item": {
          "id": "ffe775b1-fe61-4e6d-8b64-1eb8ea1db071",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fbf35af3-eac1-46cd-a0fc-fa76f7e52f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ec5730-f5a0-4b4e-a87c-52afaf7fc112",
        "cursor": {
          "ref": "27214374-cb88-4136-a17b-2169331cabe9",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a062e21f-2eba-456b-b9e2-bc5edd9c2619"
        },
        "item": {
          "id": "90ec5730-f5a0-4b4e-a87c-52afaf7fc112",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "26827277-f2ef-4c09-a9eb-7f6589d59eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9c0e12-17ac-4a54-8fed-c7fa9d3c398d",
        "cursor": {
          "ref": "6d44f95a-32eb-4445-86ab-20385e0f9e29",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5dbd1b85-0591-4070-8fef-4c770c1f1d3b"
        },
        "item": {
          "id": "9d9c0e12-17ac-4a54-8fed-c7fa9d3c398d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "77000a0b-f642-453f-9bc8-fc7073ad046b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1361d38-5cb4-4f4e-b3d7-cdea6dcf9ca0",
        "cursor": {
          "ref": "c82b8932-f71a-4d1d-98ef-65abc68ef86c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c8675a53-9d7c-42bb-8190-b585711669de"
        },
        "item": {
          "id": "b1361d38-5cb4-4f4e-b3d7-cdea6dcf9ca0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e41caf0d-6fca-49fc-8480-441c053200cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c43a834-4841-4984-998d-a0b87145a177",
        "cursor": {
          "ref": "af1843d9-f268-4662-adf2-7b59cad9039e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0e034ff6-6ea5-4a2a-ab7e-7c6ad686deb2"
        },
        "item": {
          "id": "1c43a834-4841-4984-998d-a0b87145a177",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1d4ecd2f-7e12-4028-b7ee-7cea7ec31c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89151b3-333e-4930-b510-d5d2a92d67f1",
        "cursor": {
          "ref": "560b858b-5f37-4167-a93e-8f2962959b95",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "14eb6a85-a446-4ead-b56d-aa67dc61fa1f"
        },
        "item": {
          "id": "d89151b3-333e-4930-b510-d5d2a92d67f1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f1b36fd8-15eb-46aa-a479-83ab2d9922a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31632182-e5b3-4065-ae8d-4915f76960b0",
        "cursor": {
          "ref": "388d9fea-57db-4ceb-a4a2-b59e710c93ed",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "835fca26-aaf2-41ef-9fa8-e97d5ff83973"
        },
        "item": {
          "id": "31632182-e5b3-4065-ae8d-4915f76960b0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a8f46e68-c23a-43f5-b716-972605230774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ef9d6c-6724-41a2-9a09-d17e89db4dc2",
        "cursor": {
          "ref": "88f8ecd5-1409-4282-8a22-d874e96e1384",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c172850b-a92e-40c8-b5de-2f0436ae158f"
        },
        "item": {
          "id": "d0ef9d6c-6724-41a2-9a09-d17e89db4dc2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f3423f2d-802a-4efd-be85-280c918e64e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8beca6b-9801-4a13-a5d7-75e566252113",
        "cursor": {
          "ref": "2b7c9306-1797-46a5-8e95-a69cdb52028b",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "984a918f-39fb-4a9f-8372-fe279919a85c"
        },
        "item": {
          "id": "a8beca6b-9801-4a13-a5d7-75e566252113",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "57b41394-ea16-4263-b518-a5dd531e2e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7716d3b-b31d-40f8-8520-400a59040cc4",
        "cursor": {
          "ref": "bab157b7-cfd7-4c9c-bb80-0f838aa47d9d",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0e22d2c4-d479-45a6-bcbd-0cd46c7fc1af"
        },
        "item": {
          "id": "c7716d3b-b31d-40f8-8520-400a59040cc4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6820b208-8555-454d-b3e3-22783dd93ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd6451c-1efe-4b32-b7e2-4b3566e60c49",
        "cursor": {
          "ref": "7d5b5b69-b8f8-469d-b13a-f95c07386da9",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b9062787-bd52-4f81-87b1-fc09bcbc5eb1"
        },
        "item": {
          "id": "4fd6451c-1efe-4b32-b7e2-4b3566e60c49",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c99f4404-e49f-4ee3-a72c-9c019bb5665e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9779ec-7cdf-4395-9055-6d32f489a7d9",
        "cursor": {
          "ref": "d9c8d6f0-fc7b-4aa1-95c9-71336b782b00",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1e3ee9fc-d10d-4ea0-891d-ed4167d7d0ec"
        },
        "item": {
          "id": "3c9779ec-7cdf-4395-9055-6d32f489a7d9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "94927c79-e629-4e90-8ca9-c66870f64923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07b9f4d-8468-492d-b0d1-1ea15010fa0e",
        "cursor": {
          "ref": "1c0e46d1-a0b2-42d3-bb7f-1cf083d6bec4",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2e06dd51-a804-4dff-8a84-fabd7a8af7ca"
        },
        "item": {
          "id": "d07b9f4d-8468-492d-b0d1-1ea15010fa0e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b654b8ed-368c-4da7-a63a-764707608c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dd8086-b394-4e4c-8bcb-0d8cde274980",
        "cursor": {
          "ref": "efa989ad-2779-47fb-9c27-4b5cf4a49975",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6855c424-2ae0-4f19-bb14-c689b8ba77e4"
        },
        "item": {
          "id": "04dd8086-b394-4e4c-8bcb-0d8cde274980",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7faddf9d-c601-42e6-b58f-c65b3bd5d245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9365d9a4-947f-4894-ae11-1d6470bc2d01",
        "cursor": {
          "ref": "8633f255-c520-44dc-ad97-b571215a1898",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "443dee9e-560b-4365-88e2-52de6e841e78"
        },
        "item": {
          "id": "9365d9a4-947f-4894-ae11-1d6470bc2d01",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9732c059-7bd8-48a2-817c-9db2e836afa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bbb233-12b8-41f4-8a20-27dfab1f1140",
        "cursor": {
          "ref": "022c5b3a-336d-4c50-9d67-0b9869c8bb90",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "65fa6dc5-c856-4ccc-830d-5c7bd070856f"
        },
        "item": {
          "id": "71bbb233-12b8-41f4-8a20-27dfab1f1140",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6e27f58c-9c52-4048-b670-0b8753ab88fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9072f59d-1e1e-4364-b29d-9a7c41d3cd37",
        "cursor": {
          "ref": "9f9166f5-cb46-45d8-ab1c-32c72d054192",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b766fa8b-7753-4ab1-9c60-595d44c1da21"
        },
        "item": {
          "id": "9072f59d-1e1e-4364-b29d-9a7c41d3cd37",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f21f4ea5-c01f-48e4-943c-8de06ff41fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e68d378-2969-4f94-b64e-d85fef630941",
        "cursor": {
          "ref": "58dec943-58e7-47c5-8a36-0ecd1cb84ca9",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "63f63c49-0523-4bf9-b88b-6f48fbb38f1f"
        },
        "item": {
          "id": "7e68d378-2969-4f94-b64e-d85fef630941",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8687e6ec-1202-47a4-ac17-b5ba88af359d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac01f6e-41b5-43c8-96b9-7564a0e44ba8",
        "cursor": {
          "ref": "e28a1d86-84c2-4428-b603-da08ad5158d4",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1a5fdd3d-f4fc-4066-b402-ad28204a8799"
        },
        "item": {
          "id": "aac01f6e-41b5-43c8-96b9-7564a0e44ba8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a1a01f45-0254-4da3-a4ae-31d6fdae116e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c653de-a690-464a-bb11-44403eedb833",
        "cursor": {
          "ref": "3d9edb3f-b031-4f54-be11-9727a6c4416d",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1bccda4a-13bb-42af-b297-eecefebd654d"
        },
        "item": {
          "id": "57c653de-a690-464a-bb11-44403eedb833",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9a55423b-19dc-47f8-950a-c0552c1a60a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002ca9d1-7970-4167-aaf5-e4051b3b371e",
        "cursor": {
          "ref": "4602bfeb-2db9-4a1a-9583-a0a05bbba7ad",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "613a139e-2acd-4cf8-b0a7-d4fc9b5477d2"
        },
        "item": {
          "id": "002ca9d1-7970-4167-aaf5-e4051b3b371e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "003b7562-a675-4d94-addf-1f42ac572e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1253726-9c6c-4885-a57f-99c674c03a51",
        "cursor": {
          "ref": "9778f063-1ef6-4b8c-8b7c-e2b2add8996e",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "178b4357-dc2b-4ef2-b385-df0b7891b52b"
        },
        "item": {
          "id": "f1253726-9c6c-4885-a57f-99c674c03a51",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ed15b88e-a8d5-4ad5-8c4a-7610eae1f3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a7d683-7afc-472f-8a54-347a8a025a67",
        "cursor": {
          "ref": "36ade7c2-edad-4858-a372-9c5459c2b9fa",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "13fd7de3-1b22-479d-b287-bc1f3cbf8bc5"
        },
        "item": {
          "id": "11a7d683-7afc-472f-8a54-347a8a025a67",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2442208c-1117-4092-b71f-a525bbf87b7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449cd4c8-6472-4682-b8e7-c15e765aba58",
        "cursor": {
          "ref": "93a90d65-de13-44d7-92a2-1e540998efa4",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "caaa3070-d976-4c30-afe3-a3dea5f91961"
        },
        "item": {
          "id": "449cd4c8-6472-4682-b8e7-c15e765aba58",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "4bb63e23-bbfe-4943-beaf-f8fa1d053bb1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e0ee1b-cb3d-47c8-be0c-b0935e852739",
        "cursor": {
          "ref": "949599d6-a2ad-432d-b158-f0f61581d9d4",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "762c04c7-22c7-4deb-8604-743b45560988"
        },
        "item": {
          "id": "25e0ee1b-cb3d-47c8-be0c-b0935e852739",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cbd20c09-8953-4444-b025-39990bedb5c5",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5758dfb6-3805-4a9c-bf09-74b7a63e5588",
        "cursor": {
          "ref": "8939978b-b0cd-40f5-8356-607ced1d7ec2",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "98e85847-4eee-4a53-93d2-393a3e8672a5"
        },
        "item": {
          "id": "5758dfb6-3805-4a9c-bf09-74b7a63e5588",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1c1b8c1e-b40d-454c-bb84-f8787c1841a3",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e564ed-c4ae-4d21-be85-d6d305b2da22",
        "cursor": {
          "ref": "c087a6a8-06fe-4ff0-a9b0-df87cc93d8db",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b3b7be74-6f0e-4a0a-acac-25eab27ead48"
        },
        "item": {
          "id": "17e564ed-c4ae-4d21-be85-d6d305b2da22",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9960b60d-9c5d-4859-ab24-43353b805ddb",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bdf274-11c6-4a9b-86a9-a8132bab472c",
        "cursor": {
          "ref": "d9063ea7-d05d-4bab-a843-4f45a3cd76a9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d70628a3-8945-4bc9-8c2b-d149229e2c37"
        },
        "item": {
          "id": "37bdf274-11c6-4a9b-86a9-a8132bab472c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6bf5d984-0242-4de1-90e2-ff0df48d90d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bdf274-11c6-4a9b-86a9-a8132bab472c",
        "cursor": {
          "ref": "d9063ea7-d05d-4bab-a843-4f45a3cd76a9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d70628a3-8945-4bc9-8c2b-d149229e2c37"
        },
        "item": {
          "id": "37bdf274-11c6-4a9b-86a9-a8132bab472c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6bf5d984-0242-4de1-90e2-ff0df48d90d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bdf274-11c6-4a9b-86a9-a8132bab472c",
        "cursor": {
          "ref": "d9063ea7-d05d-4bab-a843-4f45a3cd76a9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d70628a3-8945-4bc9-8c2b-d149229e2c37"
        },
        "item": {
          "id": "37bdf274-11c6-4a9b-86a9-a8132bab472c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6bf5d984-0242-4de1-90e2-ff0df48d90d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fce84c-d236-4fc7-bbfe-9fe5f630e84d",
        "cursor": {
          "ref": "0f633e0a-3dd6-40a1-98ed-a9a36b031753",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2a7d61c7-0809-4e20-a119-43f4ab6cf57e"
        },
        "item": {
          "id": "e5fce84c-d236-4fc7-bbfe-9fe5f630e84d",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "590a131d-b4e1-4f39-a399-26ce9af6d72d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c0572e-a735-443c-88ed-175d659a45d6",
        "cursor": {
          "ref": "49899cdd-f815-4c41-a953-e3bec2cb6bc1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0f410501-7fff-4938-9afb-d037835f4a74"
        },
        "item": {
          "id": "e7c0572e-a735-443c-88ed-175d659a45d6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "79c49e7f-94b0-4e53-8602-ffef6526c15c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c0572e-a735-443c-88ed-175d659a45d6",
        "cursor": {
          "ref": "49899cdd-f815-4c41-a953-e3bec2cb6bc1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0f410501-7fff-4938-9afb-d037835f4a74"
        },
        "item": {
          "id": "e7c0572e-a735-443c-88ed-175d659a45d6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "79c49e7f-94b0-4e53-8602-ffef6526c15c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116cb8f7-4b05-459e-a8e1-f42de9fd010c",
        "cursor": {
          "ref": "d1b55963-7e77-49f3-a98f-a92e0357c88f",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c665d246-deaf-4b0a-b738-463aace6d16e"
        },
        "item": {
          "id": "116cb8f7-4b05-459e-a8e1-f42de9fd010c",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "70514ce7-b91f-4f4e-95dc-798bf3a66dc8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19014ead-54d3-4b4e-ad36-ad4a66eb5e98",
        "cursor": {
          "ref": "3f3baa73-95ac-457c-b14f-8da20f8680af",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "509b8050-a607-428f-a03a-e5dce3aa8049"
        },
        "item": {
          "id": "19014ead-54d3-4b4e-ad36-ad4a66eb5e98",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ae9a1d57-5d7d-4be8-bf72-4c86d10d4a6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19014ead-54d3-4b4e-ad36-ad4a66eb5e98",
        "cursor": {
          "ref": "3f3baa73-95ac-457c-b14f-8da20f8680af",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "509b8050-a607-428f-a03a-e5dce3aa8049"
        },
        "item": {
          "id": "19014ead-54d3-4b4e-ad36-ad4a66eb5e98",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ae9a1d57-5d7d-4be8-bf72-4c86d10d4a6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f295257-119c-4c09-a40f-ed2c43581d6d",
        "cursor": {
          "ref": "7bee60a8-33f3-42b3-9e94-b872874d0899",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "59666bd9-7fee-474a-8298-0f0606578a6e"
        },
        "item": {
          "id": "3f295257-119c-4c09-a40f-ed2c43581d6d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "509f6108-80c2-4cde-be11-203caf34941e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}