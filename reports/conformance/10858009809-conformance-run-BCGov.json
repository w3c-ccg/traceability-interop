{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "dde01c95-6702-4ed5-a75d-3a0f5ebd0277",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ed76e0cd-cadb-4cab-9399-b7aeb8a717a3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0a3008d-2360-45ba-a4ca-ad003c35693e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1284db30-15ff-4550-9049-257be5898161"
                }
              }
            ]
          },
          {
            "id": "f927b791-fb03-4a39-bde1-b6f108f89065",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1db2fa7d-b698-4e28-a8aa-75204cc9431e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fb9051d3-427c-4ab7-985d-0ef5a4001ed4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "be9fddc1-1c23-493b-bc39-173ae59aa806",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9635fe4d-b0f9-457e-9556-48bcd41ea398",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b5735747-d3c6-4e95-a02a-d9a18b91cfa9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f89e1154-0274-40d7-b3a4-be58e0d68038",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bef3af2-ced8-4b20-8918-b0904ba53641"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b1ebdf1-b830-4f4a-9527-97b87a7c15bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49a52166-c2fe-4cfd-ae43-dc096bf67d2a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "64a29603-a3b8-4d5e-b0b8-ed0aa19c7bd7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed506497-9d5a-4f72-9e95-f22eedaf697c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e3a7780-72f9-4c09-8648-d46206f24cfb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fcf1d07b-5f5d-4f23-af47-b644bc4dd90e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f51642c8-8d6c-4d7b-99a3-dcd844f2b462",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e99d21b3-8686-47b4-bf98-8dbf5c8bd503"
            }
          }
        ]
      },
      {
        "id": "7565c0db-2657-426e-90fb-b64ddb4af425",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a1ed2b1b-d2d8-4a56-9195-c0dc5a1b748e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f05b48c-900a-430d-be8a-c80f8d875401",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aebce0d5-1c36-4de0-85e4-eb106e55cf61",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1885745-503e-417f-8dcc-502233b83d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa70e17d-09b6-4a3b-8c29-11937db48be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca001c7-e48f-429a-9bbe-72a08769ff33",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefdd191-1a14-457b-aba7-ca2d7f8a7517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5723b5b8-7c4b-4736-a4a6-1ab40a6a4915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083599f9-2a4e-4688-9a94-84faaa25861f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df5b0ec-fa2b-474e-a3b8-afd6c75e5674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "faab2461-84f3-4303-98f5-1bea45fe9010"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25e6d812-3595-4741-9cf6-d6eec6dfde2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae9c745d-9871-471e-989f-373a81dd622a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d723b202-455f-4ad9-9f67-83240060d402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c666be69-7036-4f07-a7a4-77a6a9429997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa00c911-3993-4c6e-8c4b-3ee5cc7006c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84abe5c-e71c-4e76-b6ff-0235a63fb416"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9dc9afb8-445f-4a3a-ae95-9499358d8afd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d646948-f78a-4ae0-bc23-66b368eaf4b5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "156bb16c-1ed1-4f2e-a323-5bea80545bbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2bb41d1c-1e03-4efe-a1c8-96efd861a6f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ad1bbb6-de60-4b2c-a559-308af4487605",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "21f675d7-c47b-4add-897f-006203cc150f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "471f4d09-a80e-4ce4-9ba7-5ae4c49f4597",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62265aa0-9c45-4e27-809e-4043edbb9ac7"
            }
          }
        ]
      },
      {
        "id": "7e2534c2-bcef-428c-a6ab-82ed43c132a1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9f1422d0-b09e-43b3-af17-cc705c2f788d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b25d305e-ca95-43ba-9b6a-8d0751e1ef9f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "683af965-9731-4dc8-8d87-80bc9f1f87b4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c72feb-d413-444e-91a2-b870e459d1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a1453a-3c8c-4f28-b6ed-9ef8f01965a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25913a5-d2b2-4763-96c5-db513e016ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d537f873-d13f-4c96-931d-1fc62d8b9536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465d20c2-4764-4b5b-9b15-c51f1cadbec3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20604142-7f97-4ae0-81ae-9b52646df6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943cdd6c-5af2-4d1c-b015-2d3fc69fd069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4591d25-223c-4d2b-a4d5-fbb024ab4fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf95a447-39e8-48b5-91e5-78b4fc24844b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f780a93b-f4be-4201-8e3f-59bbf6e6fc3c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc4b1e2-5e0a-48b0-b4b3-a931cdcc81d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b140ef-0118-4a53-8b90-eb7f47bedd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59082e7f-a5a2-4a8c-b63c-a301a0bdc599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1158b6f-3a48-48ab-9d60-882bc5aae5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d3d46e-2b35-4145-b0cf-2b544bd0f253",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b951e1d3-eb1e-42e5-9a6f-7ae4d9537315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0789d496-83dc-4c51-8b44-3e9467f07d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d60ddd-d3ea-4da1-b848-0d6c2cbdc148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99bf2edc-2838-43ae-8f73-b07229cf6f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c09c76-4957-4000-b408-9f786d4480c0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7a1d63-eb4e-4b68-bfa6-39f2e9d9c402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddfa35d-8696-47de-bcdc-1e6287e2e827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9717b412-d0f1-48d7-88a2-a9683612772c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "474b54ed-2832-4a8f-bc55-d8bb1d9121fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc90b65-70d9-4235-8e3e-23511671f2d6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18785c0b-d5f9-4b5a-9c9d-1a1f077ba583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffff42a9-ddb0-4b9d-8ee6-4502f490a39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec232b24-0bfd-48be-a2e3-9398278d5ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4385ce27-5a7a-4453-bc1a-be2bf9777161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99840157-700f-4cab-93c0-db9b7cfcad4d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690f9508-35f4-4450-8596-75af2cedfe20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdd12f4-6b3a-4711-b344-1fc279daccde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7134348-f2e8-4bb2-ba9b-27df5dbd66a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b958c181-b050-4bf1-9560-ea8ecea1d042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c915656-1895-46b5-89a4-11e42159a75b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc7de4b-611a-4423-b47f-2ea20f148dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f4350b-9aad-4e59-b63f-33bfac7525f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1191f7ba-59df-4f9c-8701-65ac45e8976d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6352f01-1c27-4623-8cf2-87e890cd1560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40159e71-db46-4613-b243-93fc721fa9b4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5725a1f-750e-4186-bfc9-b548859f63eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7e259c-bb5c-4cb2-b5ff-f26738a314d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c818be14-4fb4-4c71-87c0-d671957b0bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aabbac9-c0e7-4f3b-b358-6b1048311e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfbf79d-afa3-4369-bd76-3ae108c491e8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0a93eb-56dd-462c-a7a6-948f460b8280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60149797-3d2c-4a9f-af1b-83a0dcb71bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de43c5b8-4457-4feb-977d-298913b5dbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7150011c-4fb6-4679-9719-2ecd9f49e519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a8b9ea-ec56-45e1-9293-58bc9d0b586b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5598996-0cf0-4fe8-9fad-b5c524f570b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055232cc-b8f8-4440-b056-ea601313ed38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceff6af4-2f2c-4966-849c-48211fc24f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32e77b77-2e1a-418c-b18f-4f58696804d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dd9edf-85f1-434a-bf49-71bb275aaef3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c21d39-452c-464a-ab6f-515ba63b57f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b248e2-6a0b-48bb-9095-0b9a5574b317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d95371-8550-49e1-b76d-0fff691049f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52e02219-262f-4d15-a913-53d1737a418e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275a477d-6242-42c7-9a36-41e8b15d5866",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83a89f9-1717-4f3d-83b3-c174ffae6ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd46c604-577c-43b8-863f-e33ba339b266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add2c4fc-15c6-45b3-bd1b-035367650d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f4a9454-a6ec-4715-8fd9-63563b3218aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb6589d-deec-4097-b6cf-eaa7dc992935",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45178d2-0cc4-4337-9bc2-fe7f42eb05e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f2acd1-ed07-43c5-81f9-13073e82ba25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf12bfb9-df2e-4d3a-8ae9-696fca58fb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d382de1-224a-40f8-89d9-1d5c68aa3768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29649b99-a14f-43b3-87fc-0defe50c4dbf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facb1234-abc9-47f5-bcff-2fe341c684a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efb4e6a-b973-4256-b7ae-905e37acae20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8ec34e-191b-498e-a4d2-5ba90aa6810a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68752eb0-bac3-48cc-984b-0cec0982c150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7fee75-682d-41c3-bbb9-04a033656863",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785f4b16-0e63-4b56-b509-a653ea0a779f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ae2611-7a30-43b0-a12b-37639cdfaea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc54927-f835-4cfe-87a5-8fb3703a525a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5244297c-cb89-4a62-b71f-ab2836a76007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4aef82c-eb3a-4181-97f8-7a282b11a721",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d954c5-092e-4812-b6ac-f9bc7af5b815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7e5532-b50c-4bf8-b944-dcf4f6339c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c626dd27-8bbd-4577-9a60-05977021221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d8d2b73-d5e3-4061-b264-e937e1cd448a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5a41ab-4853-46bf-a8d5-861eb51c7061",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f7a022-9aea-4e82-ba4a-2d39a1d82543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d7f92e-81b1-4fa1-9d61-9cb770693cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3899de3e-7fa5-45ab-9e5f-438a0f1750cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4230212-2379-401a-8a4c-818c983b22d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf670f29-e6fd-4bfb-a7a1-19e8b8711c8f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccbcd60-9483-44c1-a2d0-963c293c94fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a1c5b8-4bf7-46bf-bae3-e535f4ff396c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb1b0e7-b05f-4e96-ab49-979be198f9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ae46f7-6dc7-440d-aba5-1c4c9dcfda23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d81a8d-0886-493e-9cc0-2d142db3689d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb62948-dcd5-4169-9d1a-546a4988c770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361c3b70-0356-4164-bde7-76eb58549837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804a0173-91e3-4a79-9dec-6024ac78fa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60ce0e6a-6fe3-41d8-85b9-487fa3042da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac722026-75ed-45be-a4f7-835d9167ed97",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5237c1-899b-40ed-8279-684577024292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a8efa0-156e-41e7-8fdf-b47bd0e6d482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd617f1-8011-4590-82cb-c8de7c1bc478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54a1da54-9dda-44c6-82fd-4cfd79ae8b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a1caec-bc5f-4247-94c0-feacb58e7313",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d750579-5c55-4979-98c4-d42c68179e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ba3ace-d0ce-41be-8fa4-117abe8ba5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e2f5c5-44e6-4a34-919d-22e0314be620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a67abe49-d31d-4443-ba06-ec7bf563c02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ac9745-3f7e-46ec-84ec-c2ad45378964",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaf6ccc-822a-4436-96cb-3bb09ad5f11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e94b0e2-1ac4-48ee-885a-1531a4f1d1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43490c0-d3c9-4e10-a830-f616d55dc5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9988decb-a942-40f9-93b0-061bc2bbb297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552e0762-cad2-4413-ae7a-bc1202618a5e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6b6bdb-6c0a-4059-b178-8c7ab6db4bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb17be19-b09b-4fa8-88ca-686ffce327a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91116a8-29e7-4695-8475-a33b978f3d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eed04e7a-2a64-4f10-bd10-95cb8c6c3737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202d146b-8514-4a25-9ad2-8ac4110be3d5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ed932e-06f1-4d05-bbd5-1f78deffe54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5471a743-fa15-46b1-bf71-1c5805d9c618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088ef5da-099f-4bcd-9b15-4764215774da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b920c52-4187-4fdc-9888-d5b7b9e020d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa247db-2b46-47c9-b9df-7e279c230bdb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceff630e-2412-4377-8b2f-e8b8f765bf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8589ed1d-c6df-45be-b052-8ee88b5a0163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8eee76-3705-44c6-8c0b-40837c17c704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "956d0f18-2baf-4894-8d43-9f0252bcf6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df41614-03dd-4193-baf3-daf8cf1f5aa5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e485d918-6ae0-4503-9fa7-706fc52335a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33de37e0-e150-4a68-bec4-953391ea457a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a75e6a-2164-4264-9c8b-3bf94286ea1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dadffc99-6eb5-4145-9bb0-0a3754dd5814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e637ab-4e99-4800-9a46-a9f7fbd03276",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483bc005-1d85-48fe-8c01-3cb21ee02543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0b4f6b-3651-44b8-8849-46cb0d95d7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ab5680-9101-4f63-968d-66cd99c7f041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1df33b50-8c3b-4a84-bfee-c9a4afcc1b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d04410-7b96-46ee-81dd-8e7097f39910",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86452b9-4376-4492-9e2a-b62f439ef6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593c4c2f-13d8-4039-8b51-1008b9070e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c930c3e-be75-4a55-8b9c-f2763093cd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15aecf97-eb47-4b08-acc0-631cadca830b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fbcd2b-02d4-4e69-b8f5-1ef037c691d3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff8553c-3fd9-4b6c-a38e-7d1b5bed284a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825980ed-e4b8-4336-9ca3-a54e0ae071e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0261ee-1062-4457-9e8b-48c32510e813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "947d9f20-9c77-497f-8af4-2a235db00a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da52831-100e-4c96-82a6-524cc223a77a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab0adaa-4ef6-48fe-a2e0-bf3b9743c117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65bbe060-53a8-4626-aaf2-f597dae74744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d8450b-e708-4f6d-a821-47475b1a6ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96dd7243-ea2d-4d19-9e9c-16b92298a059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eb8bc9-be11-4f8b-abe6-bf2128e905de",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b36796-c4cb-4681-aaf3-ff13e6ee41f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e210511-4650-49b4-a4d7-b599e3429673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082e73a7-58aa-4c77-b215-b00e20ae7074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f81bd6-e6b5-44ad-a93f-ddb649cad8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab915eac-bd44-49c0-98e9-39a00d65573c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c7cf12-62b1-448e-b39b-e4d2ec0477d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3075a5d-8097-412f-a5da-713ca15c223e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daf460a-1037-4250-bc6b-02e4ed68949a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3e753e-120e-4dfc-93a3-8a09caab97d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044f4011-bd29-4f0a-a374-0624fedc6655",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618c343e-5e0a-4f21-9cec-030039b6d1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dc84c8-10f2-428f-85e2-62c69824d655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13a390a-0a02-4582-b796-fbb0a6f78407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75a79c5a-6c34-4f3e-b435-51a446d21ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7ccd18-0ca6-4931-9462-2e6b88b69d65",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10e9aac-3212-4e64-8621-083cfa37f5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3e7839-041b-4527-a1f4-8344bbc01975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91b759c-c7c0-4f5d-918b-c6e7e2b27d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7ee653-0efd-470c-8b76-c0c582f81e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3a98e7-7b27-41a7-a480-a57f8bce951e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9084f2cc-7377-4089-8027-a8ae08e235ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6b2b9ba-ca32-4de2-a6fd-d71f4245783c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a119698c-724f-47d5-be19-7743299d9c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c32b0f1-22fb-4796-963c-931d241bb3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd8ab83-52dc-4555-aba3-f13aeead5c08",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68760325-97d4-48d6-9819-25f12117b80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7326351-1652-44dc-9865-8d15f7608833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ed4c9f-a05d-4b54-8048-6282e66d75e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7869fc5-2c62-44be-9181-4c1a96afc565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a017184-b803-472d-82cf-b58d5f7b5bc1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f03d9f-05ae-4342-9744-6a8ada1c16c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc738e28-f218-4dd7-9ccc-3614a1a4136c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a39775-5fdb-4ab1-8d93-22dc1bf97b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d377ae5-13b8-4947-aa70-f114e9cc9460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1970eb5-e8d1-4bb2-872c-d3639081b42d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9e6685-af2e-4fbd-8fc4-13d8400ae020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f183b4-ea9b-433e-8897-8178b6b5c616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433b6864-3176-4be0-8f41-511d5d6d2ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a734be6d-d4a3-4d89-954e-8afcada36585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54745c32-7585-42da-b302-fa24fb3f9051",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558d66e4-56a2-4bc1-811e-68bc818522cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f453739-8db8-4e48-bdb4-4ca24b613088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0bf27e-4880-4b59-8a38-2ec4883f5c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75261081-06cc-4a71-9c46-996d462abf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290cd90a-2ceb-4c83-a297-8a7bb163957f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b730547c-af13-4356-85c8-31dc24f1aef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6a4d99-d384-451d-a85b-e18e66022625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c054dc1-2054-4f2b-ac5f-51b6050baf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "134ce1e5-c2b6-4607-962b-a84e4680b0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a59a756-e4b1-41bb-b68e-c2e95a4e547f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e76c3f7-00e9-4835-9a9e-4ed9b1ed074f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851165b1-d9c4-4137-bd6f-3de5657b63df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d930db-90a9-40ed-8ef9-57d6b7dcc0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f79df800-cb23-454a-ad25-020a330ede9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738920a5-e23a-4147-abcf-ae3107a08587",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2f3f1b-7cb6-437a-9278-ac4b42e94c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40a466d-00c4-4ada-bad1-b5a3d9f30026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5205669c-516c-4a35-977e-11ffc5c29d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a27df294-bc2c-4620-b537-7c010896f3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a053cb-92ef-4a3e-b61b-ac6357532b23",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9615019-bdc9-4b44-b8a8-89eef82f95ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c1de1b-6a49-4ff0-a2c8-a7b25fd2a737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cc7ca8-3fb8-4c89-a113-09a0eab3671e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2ff707-ce57-4f00-9bd3-320fd2e0bf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e876b8c9-a784-48ab-a06d-027d644fe62b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaf00a5-0aa7-48ff-84ce-f61c4818e82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ff5767-cb81-4974-aa2d-3eea92f57bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2d98e5-7b7a-4956-bd17-d6a38a5e188d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e45e0737-6c95-4e94-bcda-e022079bd9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b884b5e-5947-4c23-88c3-6b256fb33e86",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fb5e35-b91a-4cd0-9fa0-a93627efee5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe90700c-607f-4715-be7c-72a663ada8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fcea03-a345-4ea1-b4f1-ad03c6073070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e53141a-25b0-404e-a33c-efab687e77ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a91ce3d-4489-466c-81d2-22d55bf07222",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2377746f-b652-42fc-badb-918ec6c8238a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bbadf1-8b30-44ef-baea-7d3864ad2d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6f77eb-a492-42e3-9a96-5972faeb0d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9267f1-bce8-492f-9c42-2cc197782330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9df49d-570c-4742-ac34-a186c9b35904",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c98b1b9-1d69-45e8-80f5-8f9fa70cb2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834bc1bd-42b7-41c7-a12b-69bc0c8da629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d88067-ebf2-4f2c-bde2-efd81bef994b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "947f3e71-3802-496e-8ebc-431d97f7d04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b78b04-26ae-4b92-8af7-a36c925916a7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d14950b-069d-4761-8be0-8245ccbc41cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6395a27c-de81-4d0f-ad63-4eff05364ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d415eec4-b626-4d9a-b86d-d7ead2b57278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95f3d4f3-33a3-47c2-9a09-4036ad2ae2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52192b5c-8d0d-4c2c-93a8-41f230321de0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde1c319-03ce-49ec-9f7a-bb6e4da87128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ec0406-4346-4b7c-9bde-53b6301f1a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ea5057-25f9-457b-bf50-39346579834a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99aaff37-a2cd-45b8-9d0a-51cd20296081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee27bdd-890f-46a6-8b8a-52b600c2b123",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e66957-1ecd-4668-9be4-9618f83fccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0aae4a-25ac-40c0-9999-8165d270402a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00f9773-bb9a-499a-bc1f-bc02a266a743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8abec53-010a-41f3-a54f-309380107a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b96571-6071-44bd-b2b9-f434bb537296",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f4a10f-ca86-4290-9b43-e654a0d7d536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6052cdb0-616e-4e14-89a7-2d2517a091c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318bdb2e-7e39-4f02-9e8f-61d5ed901b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c540d379-5a53-4971-ae5a-2a56e8f1b84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33a644e-7b53-42c2-a9be-383bae856a40",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c0b1d8-6532-4411-9ead-5bf1a33507d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153c6732-a6a6-4a8c-8756-6d779b387086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e58b1d-c433-4761-9061-7ac40f7108c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23155cec-3e15-4351-be59-259f6069509e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b7ad06-e896-43b2-a320-d917b6de6975",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66f7294-16da-4742-aa18-74e58bb77480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f9315f-d10d-468c-a37e-8aef67ede8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5288c629-f539-4ee4-99e1-2a2833c832ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eca8fb84-c4d3-4e73-884b-ada0de5656dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4dcf6fe-6074-4fb1-a859-4441c4a23585",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fe6cd7-62a0-4756-82cc-3c396edd3aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abfbd9c8-e9ae-46d2-857f-3313de128c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe7c1a0-fad8-43b2-909b-bb45c1ac9782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a14bdf3f-88f0-40b4-a5ed-43fcd6da9d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef55d3b-67da-4072-b845-8cf991b84de7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c251e0-dc5c-4ee7-96d0-4ba747a97a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a49a27-22a7-4319-9b44-99f2922f5ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e442c9bf-18ee-44a6-ba3b-b8e112aee9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9679d322-bc7a-4555-a7ca-2ea2e877985e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382b7b10-a423-49ca-97ef-700124b24b8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b873afc-7204-413c-84d7-c6be06d8fb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349ea7ef-c796-4f43-889e-5c34b7f0ff4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d43187a-83d1-4bb9-ab19-e1d08907cf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cf613b-f8c3-4201-9418-67e1235c6baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8f9d43-70cc-4403-8538-450027006690",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09780e1-a1b2-40ca-8c38-8ee70ba30969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28aa94a1-a1fe-4308-8f09-192b33253155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2da5b8-bb3e-4274-922c-34aad1515274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3b6fa7-0a8b-4bd0-8959-df1ff2fe83c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f65a93c-12e4-442e-9825-770d22cae86f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f1524d-fffa-4398-ac88-8b46adf697cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03338fd5-efce-48cb-8ed6-afa8f1019bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2c8ae1-371d-479c-aa73-30b131a5afc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "968dce03-ae03-4e84-95b0-e8e4ef64dee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7e4d7a-d561-4fde-b561-8952c5720834",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41972f0f-5c8a-4c99-abf8-cd311e8b51ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18625b24-9ba1-41ae-90c8-a422d34d526a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf38217-585c-4129-9b1d-e757589c68a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c655750a-8a40-4d60-a971-652fe0eccfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d9c31a-bd3d-4b02-9115-c741d6f2469b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03636de6-9ec8-453c-b8b5-095ac6afb9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5595ffbf-9616-45b7-a4aa-3f7481a25c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f9daeb-40eb-43a2-8852-dce159b37bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3fd0855-f919-451c-b715-0127098b67eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ec6eda-1bc6-47b1-9a32-fd8818045de9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c9dff5-757c-4d29-8530-1fb06a21f967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2592e0-2e07-4ee7-bd01-f5f8b145a559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bdbdbb-de63-47bd-9c99-705480f297be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9413ceb2-81d3-440c-9d21-8996de29bad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30b17f8-415a-44dc-a9e2-f8d393f0b508",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1f599f-de6a-41c8-aa54-70ba7634f5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3508f75-a402-4519-b9b9-61ac220f4b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80bf438-1e4c-4b3a-bc4f-5b80a5c10a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcaa92ab-825f-43f2-a17b-e401fb9ea7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b9efc1-5a3c-48c6-8c26-b1ab95656479",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795e2f0b-493a-43fe-9af4-d05dc52b1f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f310b608-e4d7-400d-8769-fddd92383d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207ffae5-91a0-4277-a4e4-e29bda3aa0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b38bf6b9-8e61-4093-aeff-acb3542024bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd17434-d793-455e-95af-049b72a77527",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f2269b-3aec-4b3d-a036-2df98965bc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b812a2bc-ad51-47aa-9d72-d39211e82b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d58a1ab-e976-4e8c-a4ff-6b4f9b25a06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2506b5-0413-4d40-a67a-11a7c7fa6d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439c1661-51b6-4a70-bf85-27fa5096de7a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70b6f97-39e1-463c-8c05-bc08c95011c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9833a69-03d6-4110-940b-f583c053bac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2157787a-b9b5-4007-a751-60aaddbb9785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f80bfb-b2bb-4150-91b2-536b104e9880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec9267c-217b-4a33-b163-d6f6dd8343bb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc391e8-7145-4b07-b0c0-a0d82e712bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b198385-bcac-4c67-8516-74e3edbf2ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c82d5c4-ec73-4205-99d7-90776bd29ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32cb56eb-e06e-45a5-96d2-bde60da1f8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da22ca17-bb42-4699-8209-a6714dfaabba",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f434f0b-2173-4240-a536-ff631c47a899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea4c95a-e52d-41e4-a192-f7c631178694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f498400-eeba-461e-b9da-ec9e83a00349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "af2b11a7-5708-4b29-bd2c-3df78ad2fbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ee4e1d-bc5d-46e4-93e1-e943769b8feb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261289b8-2cf8-4443-93a7-439a93320dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaf2ebb-a9f9-48d3-a11a-cff027ede98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488c4d42-dedc-4465-a62f-c5aa4002e496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "33efcd72-219d-4842-92f2-c7e06e319a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7c356b-b2ba-42f0-8be5-c29df8859454",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dfe4d5-aeb7-4ed9-8239-2dcb7acd444b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700986a9-bc1d-405a-8741-dbcd6b5a0068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abd17dc-00d2-4a82-971a-01199b3bf447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6332cc08-b529-4346-b0ec-d998f693e51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60259395-7d64-4a0a-9807-bd64481384ff",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497eb079-1ec6-4bac-b7f3-90a76a3393e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f0de77-ebd2-4f1e-8a97-c61e07e68ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8b81ea-9b63-4fbe-b255-41dfc05eeb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "115e3dff-d427-4895-bb6b-590d6290937d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa53d919-0ada-447e-bb54-a1d43b044ce7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e34b5d-f6af-4eca-a9fa-876bbb138386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b527bd-f8ab-4ac0-a5fa-2c3041c06439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9165a8-8805-4b95-86ea-d17dae4dc691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ef5a3e-7425-46f0-be71-cc4a103b4cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185d2197-5fec-4729-b0df-f9dc75bc10d7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0046f865-371c-40ad-add0-5cb5fa8fd385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcfd779-8f00-4baa-81ac-a080e389db0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cdc5e1-4b3d-455b-be61-eb7a25a338fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a75b2823-773d-4d34-b4bb-c8a86e5ad503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a688dc-03e3-44b8-bb3c-4eba8a9ffba3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b95d7a-2622-4e03-913a-b6563d14a60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d433ec-d2f1-4432-bb19-28c8c5efd3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52cad0a-2243-414c-b55e-696d4332d1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c02f1379-4514-462d-8085-f93dd0bbaa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe79b851-59fb-4dd3-a922-5b051bb2f73a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071c89c9-b122-4bd9-bf20-4480ae1048a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1092f8-aca3-45e2-b385-91e800dc4225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf6c203-675f-45f9-97d2-2a5ba9f80b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d42aeabe-4a11-4dca-92ed-486fef48a2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4d086f-f690-4c76-a598-4d4dcff94b1d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bea26b7-fce9-4de1-b199-5f594ce8c343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00106e9d-c60f-4d0c-b32b-a1b8038eaf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700b52f7-ee24-44cd-9d8d-d1d3725fd0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f3591e-41c0-47d6-85a8-22012948b64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81e5d57-f1dc-4c0e-bb2b-f176511b2554",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f784dc-265e-4c33-8689-0308022450d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f21176f-fd38-420e-82a5-3e4a5d1a8eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4b114d-93dd-4775-9d6f-1b4bb04126e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02cfc171-1b50-4301-bfca-ceccfafd5ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff42a86-a918-40c7-baf9-5cf931a66f16",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ab1829-7351-49ce-81f7-3309477f8c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab5f87c-343e-42b9-b875-b461bab757ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a5525b-2fa5-419a-b75b-38381deaecc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81c531c7-7ba8-48f8-9a49-010cb39c6fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25946aa-dbf9-4007-9a7e-124a3ccb3da1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6cacab-c71d-468c-a389-3d578b02f8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97c17e7-df03-4e7e-8e17-7b3914926f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867a7516-b92d-4574-9c72-dd7736a4e820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e4fa31-49ec-484c-b684-375e454586b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47998a5f-ff09-48e9-9a02-fcbeccd55974",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad6742f-8bb5-4431-bcf7-660524b8f81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04c1870-1c47-462a-971d-825541d6b48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594291aa-d9dd-4c2c-a336-27e9bf17eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f2495f-ea84-4d2c-b81c-b95016e00bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c58ac6-5229-4452-a577-4fcc13b66929",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e836e73-3ed0-433e-ac7c-96105c8252a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba76ac1e-45b2-4d98-b0b9-ca149276f966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1388ad1-03c4-4317-8cd4-2090ebffb96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7afba3b1-4f41-49a1-a718-02c2b6d567e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1445fd-04f9-4460-b19e-9bad8d7b2c98",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d991f9a9-99e9-4c4b-aa51-ce4f94172ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11adafd-154d-46c6-92d0-f3043239f00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7fe8cf-b2d3-442e-882c-8a1d63096541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a08a15d-85fd-4af1-ba79-c4fee68757a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd6c6e9-9e20-4de1-bed2-a12d811b3603",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235fd271-325c-47ae-839a-d215d2291f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9f0ac7-aba1-498b-ac0f-50a6d8ae8dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c32d53-1b39-4f5b-9b51-9b18566130ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5897a3d6-d9b1-49df-88a8-1a963e9eca3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a29308e-175b-41b7-9bfb-19cc9ac7a1ce",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56df4f23-0245-471f-bc81-b7e10a837b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02031bc3-8b85-49de-a147-5be4796b3db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3887896-aa51-4909-894d-7a326064c1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e5b21b-6f5c-47be-b523-c677b228404b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9492b04-4887-4407-b1bc-b8ca44335465",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7375d57d-ca73-4e09-ad97-d7dad1041f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecc1563-e723-418c-901d-fb52b957a9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559b0a38-3afa-401a-b5c8-2f6cccf495b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc3d1a8-7d6f-4d69-82d7-1d8b4088e707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9879892a-191a-4e39-9c1a-ea2d161fa7b7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82879f7-252a-41b8-9f7f-c7c63e4c1a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9e44f5-97d6-4c22-85a1-9a3833ea2b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8b1f5d-6b2c-4f11-9064-2fad3019d5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9dcb21-87ac-4800-8746-72c905fe3ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74bfd39-22b8-4662-9c5a-4b571f7df7aa",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fbea52-e7be-4f87-8d5b-b0fab3592dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdac6d2-77fe-4c11-8ed2-29500b2ad739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6441c5-2ac7-4a0a-b651-d2cf8ea6cc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec9c698-ebf8-4b26-95b7-f90556f699ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77039eb4-cb9d-47b1-93e3-c31d823d7934",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed445a2a-61a8-4447-a951-960fd7bcf445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b7a8af-54f7-4f7e-a735-f8167ce5744f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff544c0a-7401-4b0d-8358-976a436e6e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6d1a26-9ff6-447a-ac7b-0963677e886f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528afe32-d3e4-4dcf-8aff-d8208da0bcea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c93083-3695-4a58-a3ec-ac5cfb8a79bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b1065b-d757-4329-b2fc-410a92e49598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7284eb0f-1847-4fac-83d9-01cf4e251006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d2b872-7751-4c84-9aef-8e8c720bec2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5061a2f1-d890-45bd-be37-f028e71d7669",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28a1aea-d67f-4e46-a4db-86f98ed56d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4571ad9f-3c0e-417f-8304-c37a5e75bda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ab9053-cc3f-452b-b3ca-6235bf3e0630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d248c1-da3e-4694-947e-4b4cf6f3904e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd877d02-19df-4c76-ad32-7717f16d8842",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1220184-9628-4112-bcd9-8565be51c4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb60813-8166-4e2f-ae82-e2a9130cbdb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf4310c-70d7-4702-8e5b-72e1bd941119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "437b89f1-cf4b-4705-8cb8-88880515dfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54f79fc-5c80-4123-8838-5dd63485a370",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36509cd2-3f42-47bb-9bb0-8d335d690e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "76ac03ac-d77a-42e5-8beb-0a7f352c0227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61558501-6d15-4efa-a11f-fc4e036ad64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d166f454-3428-45b2-b072-9254dee53f65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "651fc190-e164-4f36-ba68-2193590d4cc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a6636e1-098c-424f-a0b1-86651a0e4113",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41fbe18-ee8e-48f9-8bf4-7e90de5f43f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69f18c7d-2204-4643-bfbb-f1c4b8f53bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc2afb1-e754-4960-855f-430dd17fddf1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36bde5a8-906a-4d65-8f23-3901dc073dad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d8ee6f7-a3e2-4f61-8db9-e9a6aad9f439",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a073985e-b23a-4cbe-90df-c77a760fd412"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efdce2c1-0dd7-4671-bfba-04e300762320",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edd3fc64-1800-4550-bdc4-26659d49a1c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91e822d0-932b-41c1-a6c7-db8dbbd64a6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ade30eb-fc4b-4598-bb47-db07c73acff5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dfc60f3b-bae6-4eca-bd10-0597c82b5a39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e28d5010-3f58-4558-a280-20bf1f0deb28"
                }
              }
            ]
          },
          {
            "id": "2daded05-51b6-48e5-ab42-e69e2ddf7f3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc48108d-c19c-47a2-bd5e-a5c88d26608c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "88f15709-43a2-4bf8-acab-20f04e787bfb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9058b719-4860-4aae-8bf7-86871b7ea009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "57fbcc95-d30b-41e9-86ad-c98ab92a259b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85834481-3065-4b70-8e1a-9f01697ea3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc14b70-6ed2-49ae-bd5c-36a02671685b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17c13d9a-1fc2-4a0d-b560-6f0d54ea5f9e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d16b971-b823-4ce1-9a5e-352804cea343",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f6d14a7-e16c-4692-8dd1-ce0074fe18f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b8e8ec5-a548-44da-be1a-5ca533300250",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e63e553a-cb6e-4d19-82a2-92addb26bb34"
                    }
                  }
                ]
              },
              {
                "id": "88764330-2d33-4781-aaef-c30608cee9f2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5eb5e0b-2200-4d4a-a40c-5c02b20414ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a26570c1-6dcc-414b-bd3d-3b933a4776be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b135ade9-c476-4627-87cc-ec9d5e2fea89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6fd9588d-ab63-4714-973d-db40e8fbb9b4"
                    }
                  }
                ]
              },
              {
                "id": "ae8f16dc-b4b2-4303-a25b-f1ea14a30b9a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c0f658d-9842-40b5-a22a-7175e3a3aa9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7390795-546e-412a-b6d4-d8962b925b69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee0dd751-f349-496f-bc3e-ec94f100fb64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5dd3fd33-8212-4db5-8b5f-249e651caf4f"
                    }
                  }
                ]
              },
              {
                "id": "53f35a28-4616-4151-bfb2-767f6b42f55a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d9b17ec-2d5c-4bba-81be-6317d1c65b52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6ee0243-4155-43a7-b73f-1ccbc6ebb261"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "173651db-bbac-4857-8596-a3b2c98df04c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "39e5300f-d03b-4d73-af89-c72f5aff0c6f"
                    }
                  }
                ]
              },
              {
                "id": "7cc0995e-9c99-4dbd-a417-a60a5515d7de",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "930f5805-381b-4b15-864c-8f3f89ecbd4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f27def4-7f7c-4f15-8c99-09c3cda0585a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "458f6d28-e4a0-4cc7-944e-14e394c49200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "798f1e28-1050-4237-ac3c-9f91a8ce5049"
                    }
                  }
                ]
              },
              {
                "id": "24d452fe-0352-4511-936c-202f4e76e6a0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "827274c3-dbb9-4a11-9aac-6c348bb4b764",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72366a19-c568-4b1d-ab20-9fcdd6cb6259"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53cf51fe-6c6a-41d1-92e4-4357ca10def5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d63e1ef-4eb6-437a-9a2f-b7d9e61528c8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c5d3bec-43be-485a-9473-950ca3aa504c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae618fb4-c4ba-4504-bd1c-2427412bb3a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3380f6a1-0504-4d36-ac71-5ac809bbb130",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d21625bb-221e-4ad4-988c-59ea5ed65b68"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a32bc2f5-f86c-4ed0-b7cd-d7f1bb7be3c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fa370246-665e-427d-958b-4ce784b6b3ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2f60196-179e-449b-82bc-3b2a6793d8ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9716fc8-ff8e-4056-a144-0f6e9791265c"
            }
          }
        ]
      },
      {
        "id": "6a41a390-b06e-4cbd-b7cf-dd23da641e2b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "714caa56-3a04-41bb-86cf-560a26e4631b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43ef0da5-eded-4da2-b364-67d919ebae15",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4e6c8246-424d-4b54-9e52-c42202ab90f9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e18e8f-5396-4d1a-9cc1-1d82b8f5a1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7684e879-dcf8-48c5-9e10-94efa25e0993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fd2aed-2a9b-4528-a1c4-e3beb5b9c336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2678976a-ab95-4151-a081-e8ed1ac3b69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63fb81a-ea8a-4f3c-a1c4-aff109dcca1a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a52062-4bb2-46ca-ad69-5cb09f7e081d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1905b3fe-ee2f-45b0-bdf5-9f74bd3da4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf9a155-bea3-4e7a-81c6-2341c720c2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e84d5a7-b995-4fc2-98fb-051d2d094cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63865831-6cfe-45b9-a88a-5652f132b78a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0905adb8-7a13-4123-bbe0-ac84c0eb530c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a5d3a8-505c-483f-b07b-9360c6bb24a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3649d901-a495-4670-bb40-10364415ced8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9d076e-ea29-42ff-bffd-980e19077ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa779ca5-edd1-4844-8b74-85253722029b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f2ca91-4c9d-4365-b7f3-ac57616d3c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32f5ab3-a848-4765-8219-61909dae38c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b786dd29-0d81-48ec-ac87-9e4354f1541d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db953d28-d14a-4efe-b7a8-a9657fdfd55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3013208b-a2ec-4e1a-a880-6fb110f0420f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b710dde9-43ef-4907-8f1a-594b4360d306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c03f78-341d-4336-b830-cca05dff1928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc76d580-35c1-46ae-8d1e-93e7ea2f3cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd36956-5022-473a-8d9e-6672b416c5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e223c8-abc2-4e64-89b0-3bc61e6e108c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7082ee0-f599-4a2f-874e-ec0f5006d10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62c9893-826b-4650-9304-66d3db4bbdd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b656a5a0-2517-4cbc-b106-7566dd341231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36be416d-c008-411a-853c-4fa14b3a56bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75836cc1-2bc2-47da-8a8f-002f118ccf17",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd6e92c-b354-4ebe-a3a7-269a03cb6a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f7006e-6b66-46e3-aba7-16f8d689282e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c571ed-afd5-4841-b070-28bb1c70bbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "742f3824-ce13-454a-8cde-56078fedfe0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00692379-8511-4e9f-b712-d8f0daf7fe49",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba7e114-60be-44a2-8db8-d3a9c12f1e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd23360-814c-4a8c-9f86-1091a2e58eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bf8e10-e2db-47c6-bb9c-f26091931d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c502e038-942d-45e0-a5de-41fdf044d268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56a4e26-9548-498d-bc33-55fd36e73757",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1110f4-4f70-4902-b772-a9ff47b3dd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b29a89-3615-44fc-90fb-581eedad6e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b5e3ed-ef82-44f2-9399-1281bbea9c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02e8622d-bac4-42ff-9496-702ddeb88b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d04b77-adf2-4e27-84b0-1a5472afa393",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d29e71f-700d-421c-8075-a922ad471120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a3afaa-0fbf-4604-bad9-7bc1888b2302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd95535f-fa62-4952-ae18-cf2411f9a5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ea90b7-8bef-493b-9ab6-e29ba655b495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f058ae6d-a1c9-422b-845c-d93a60d7b031",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83404c4f-7c3b-411c-8886-d46ec7f01825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6737af97-56be-4fb8-b96b-d56e5f96219d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a872dbb4-ee39-4383-b37d-dc935a700cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1c23ca39-c618-4dc3-aab3-fad97c2deaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb36b5a2-c00b-43ac-87f7-3e1002289097",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e83ef43-2dda-4355-885e-3d657784de5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1057b3d2-5935-42a7-9638-baef0c0fa112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092a9065-32a3-46e0-91e1-b9b1fb39524d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba263499-6a22-48f6-8bd6-4f79b119fdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bed287-6df8-4270-a60d-5126c94cc608",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0148bd-cffa-401c-b2c0-029a5f35df70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31dcbd2a-2bf3-4f5f-b760-7c37e4668f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28dcc4b-ed7e-4728-92d2-6519d54c0f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdd1e53-dc74-475a-b396-49fe3a310e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d1a916-2b2f-4bc3-bcdd-a04b1e5afb25",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38113cd8-1959-4f32-8794-84d4c99d948d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b70ff2-5272-497e-bf25-1895dd5c73c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7f2c4a-1c11-4029-8120-610a04486f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8645eb-875d-4b58-bd5f-7e4e4b70a107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70db02da-32b4-444f-a7c3-86f3f22b8ea6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34101ab7-8bbc-497e-a9d1-55937de55420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6962410f-24f6-47ea-86bd-0d03f3ccb222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec93848-5746-4a8f-ab8a-2f1618da8fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "24499023-185e-41c6-9a73-226ecba40674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015b1514-ccc0-4906-9d7f-9620815fd588",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e1f27c-c102-4cdd-9798-98656174250a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea42cef-2b6e-4072-a61b-4df67778a20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd2d4de-cd4c-4b83-9e80-ba58a9e21840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3287204-d01a-4bf0-a322-3b1c1419d8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b654dbc2-07e5-46ae-8a96-39d70374c875",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492b0301-bd41-496e-801e-322b545a9837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d2a888-e559-4bbf-9411-9ea651abf837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747e5877-102d-46d9-a2c3-557330522c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a04afb8-b883-45f8-b814-863bdbed04c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70468ba3-cf84-4e77-b808-6bd09b1cca58",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5afb88a-72a7-4e68-a0f2-9352edd618c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a409c862-2171-47ea-a67e-fdd1b145bd69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a78290e-49cc-4146-ab6b-f60e8cc4fb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f69c443-2671-453a-8eb6-c865e62111f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53fff7c-c1dc-46c6-aa40-ef1f7f2c5e33",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c65b48-07ec-441d-bf54-cbd66460224c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21ffd37-cc86-47f8-a35c-31a1a722a0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6036a18e-acda-4c02-b1dd-83dda3add373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3bcb5e5-c1a3-4f7a-8616-4818c78c2f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea82d5f-9740-41db-8b3e-4f438a576f7f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f194a974-555a-4f83-a129-6c02187152ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86d0064-84d9-4db6-b655-2fe5105e499e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a7d24d-a6dd-48a5-a5b5-386af49f2559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "168f7bc0-942a-4ac6-a54f-90622a346487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062ad215-4edf-4726-a596-4d12fe19d03d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a27414-1082-4d6e-b1fc-0271087d9b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c9f52c-7d2f-4b5b-8fcf-28934afe459c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f085efe-8f24-4628-909c-a7936682f6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a59311f2-5c25-49d7-b37c-10f85b020b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87dd675-c786-4c3f-b650-b7828cbdd382",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e108ec-0f6f-403e-8f8c-7ec0fc552ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2cb564-cd03-450a-b4f7-fcc989af6d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca6fc8a-0c34-462f-9331-db3458e95b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1f9805-6ece-42d4-aa96-1d85fce9f89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda970a6-3d4c-4ed4-8a39-c7db62db2447",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49819fe5-ea7a-4aa6-b359-e578679560c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93d75f3-eb9a-42ab-858c-e2ffce094639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eddc703-fabc-4a0c-8d4f-000686ce88b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e151e82-4b02-42da-8738-e6e9cd71ba99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e2e6e3-0760-4554-aee2-71d52ad3a9dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7c3cfb-3915-48bd-a1ab-02c0e96e6c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83f2288-87c5-40f9-a38c-102e9a1a5262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d903d86-d683-42da-a8b0-a00fd7b4d40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1745d5-101c-4f7d-bb30-d2ee1bd85097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7220e22-2c05-448e-a83d-383b86a0b79f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72feb4df-73ec-49a9-a242-d7a14b11a063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef112fcc-d532-4a16-9618-46dc3983dba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91dd742-da31-4bc4-b6a6-fc78c1d7ee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "811f764e-e26b-48ce-a12a-c2e2b79017de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24a9a81-53ea-410c-ab42-79003710dbc5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e8c287-b390-4c09-b572-58d588d961b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1693f7c-ab1d-4a7b-8352-ba9d5256d90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df22f653-76c4-4a67-805f-f5c51b962647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a558e1-46b1-4f5b-be7e-79b6ca4d668b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8547b276-2e0a-4894-844b-34a2b3f37307",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0911ad-72e3-48d8-b296-252343ccab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7033a4-354c-48f3-b223-0d5aca2348ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2161e3a-2ee5-4cd5-98e3-f8a01cf7cb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c25415-6f4a-42bf-b7d6-249cf8b0a084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d699e76-4b1c-49b7-ac91-240204dca51b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c32027-1b07-4cd6-a846-6573cd65556c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0ec066-3146-4adc-8086-63fe9f4e35b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd134c8-875a-4817-8434-ba6170c0566a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b49b18e-9894-499b-ab7f-64892966ec3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e736e442-55c8-4915-be18-d70d4d2d2ba7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd7ac93-bc8f-417b-8d69-e31453fa5658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0531007a-d0c9-4134-b149-5d6d2c599321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e576eb1-cfd6-45e7-a339-2bc4dedb896d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69760a0b-3ee2-45e6-b3ea-e86be1147549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad081dd-a2bc-4d50-97b8-9354e5dd56e7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6f6d09-c095-46be-b78c-dce5b96bb16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9145098-cd6a-447b-b9d5-89916ff86a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9101f167-e557-4681-9b5f-93ed2d886d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04d6db2-0557-45da-9a2a-1f66e7b55c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5482c12-a7d9-4039-b529-025c9bcadf4b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb7dca9-4518-4d61-9aaf-4894cf674972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4799fd9-6734-43da-9ed4-ce12d09f4362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f395fab-a9a8-4819-976f-d66c3f509f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7b391e-ef2a-4612-91ec-37f6a2de9126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a68270f-431e-40b8-942c-f081dbe26e3c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef9b611-0693-42de-a5dc-e9132be0e06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300fd3ee-976e-4efd-af64-b887a608fc78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c0c44c-01ee-451b-ab01-18cea9087220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df5a1563-68b5-489b-a1bf-4cbc3068ddc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdad2fba-6993-45bf-bc9e-a7a0dede3f60",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4a71ce-aa38-40e3-b164-8c36fa8ff4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a9d902-ef93-4e15-83b0-1121f983a9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e30254-050f-48ea-ac63-c90d5598d3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6022b845-c991-434a-983e-5f37a02038bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b726d83-5bca-46ef-bf5b-7d04a351da72",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8621dc-1a22-4111-92d7-50ab706bb4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8e1a1c-febe-40ad-9e6a-8177f5442e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc175d4-04d2-42f7-b9e8-35d86fccb7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f2c42a-83df-4d23-8afb-677bece194cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2b9248-f7a8-4b14-94e7-20237b88e9e4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ea39ec-00c7-42df-97c3-46f55acaad0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c86b45-9554-453e-9a6a-0e80ed96ead1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa81a20-ce7f-457d-82ca-f64d5ebf6367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc9ccce-7055-4a9a-a44d-d2fd97bd6f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703d38da-12c9-45f1-bfc0-bc63f94c93e7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52991679-2830-4511-ab7f-fb7dd06849a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c7ff9a-096a-47c7-9fa8-2a2d2c64d9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a49018-a13d-48a6-aac6-b19cd9c287b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ff80bb-a723-4300-83ce-ebf2c0b13b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933edd4e-407c-4ba0-bbef-ad7d25bea79c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ebf093-34c7-4601-a288-c94782f69950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95355d5a-f7a3-424d-8007-ffa39cfd80b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbc360d-1ae4-43ea-a30f-3d4d876cf6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "836757eb-6201-46c1-a7d2-c48be443e254"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "84712a97-df6d-4e13-9d25-10904d95811b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1110299d-0be3-4239-b801-f992e3351153",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa597f5-c5dd-4c1f-999e-d868401a19ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "56c52311-444d-4937-b3d1-5c8644b9f3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd5be15-c05f-4d7f-a2a6-2a49c3044f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "309a7325-8954-48b1-b7f4-fdfafecba967"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c54c4057-a73e-4d94-ae94-161be414add8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4983524a-481c-431a-b892-dd800b9b657a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01ea926b-6d8e-4294-bee3-f2f45dcab572",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d5ded46-d041-499b-8850-7e7c54dcada1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86868b88-c8a2-44ff-8fd1-c559e66d9eee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1376115c-f02e-417c-bb38-e86f9dca7180"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6e626d7-bf66-434d-83ad-ea667372bc8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26a52f6e-d68e-4d0b-b604-1c4291042d01"
            }
          }
        ]
      },
      {
        "id": "6b56f0b4-e47a-4d83-bbe6-7972d6e1e011",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1c022ba1-9ddf-40c7-b15e-aa2aa5481295",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02a91629-38a8-4b7f-b3fd-2014892b98a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a604ff7a-281b-46a5-86cb-b49200d6fd6a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562eab36-935f-4424-81b4-c523667fb380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c6d8a6-9cc7-464e-b07e-ea3385427433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aa45ef-afac-4d2d-b682-c5c1f1d2155d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3163fde-07b0-424b-971f-05d334db46c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86786c27-20fa-4c2a-815a-bf79923f26cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4478c9-e0e8-4673-a8d5-45f5ab9095ce",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477314db-4af9-4e42-b26a-addb809e70bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c92152e-f93f-4fdd-8dbc-efe4bfd0767b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06fac46-98f1-464d-8368-b32e50ce5fac",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5a6911-6ed7-461f-899a-45a1d015c60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73647b9f-c1fb-457a-8b56-9bcf1f14fd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58ccc86-6cdb-44fb-be46-82c1bcb1ef2e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a12d1ca-ee56-4b35-9efd-570a7700923e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4730932-ca38-4eaf-8da0-b0a25be299fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2050d54f-3532-4227-888f-3811c984f9d6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a245e57-a303-477c-ae42-00e85d916214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26985dd9-6205-4012-b406-801699d69c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fa2dc9-983a-4dae-a5d3-847b829b4bf5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ff2fbb-b578-4915-80bf-04acabf3da2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb022421-37be-454f-9f18-5ea04bd2122f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a64474-2967-4bbc-99ba-4ce30b18b226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3abbcd-2492-4087-aede-2be91cefe91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cc7299-c191-4ecc-9339-562fc5ceccbf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12c12a9-cd7f-4717-beda-33535eac23d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8858efca-f868-4cba-b2c0-ae2dcc88f41b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1de71f-affd-427a-b463-93485a83d114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe18fe1-c0c7-4d57-bcec-15ec46ea30ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d4cb38-04e2-455b-bdbd-6382e14ac0d5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af43645-efa9-463a-9d98-608366ef65b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9700e57f-70e5-4389-b015-b6f11885a1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9bf0c8-a764-499c-b157-3c8847a03d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fc4401-7033-465d-bc3e-62bab460972c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa08fa63-0f48-4236-8bba-68de109fe686",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31862a3c-8f37-4578-9b82-816ed0edf865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c161c52-8608-4e2c-9000-a50f48da91d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86989fc3-e6cf-4763-8a68-c497547c1cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53d047f-128d-49d6-b6c6-e11b32706fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4498e210-2b8a-4c1b-848d-405b98c2f459",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973ea354-6e5f-421b-af29-b59077dbb271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bde6bb-3183-4d9b-b466-aa4c3ca0c87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc59d2f8-cb86-403b-a5d1-d6d89318e735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c0d93e-6a54-489b-bbb3-19156c7032c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ed58f6-f890-47fc-b831-b819405899ea",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0d43c9-5908-4143-b040-a55275cba6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30063711-9167-43c1-aa2c-ac44f40943e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76e777a-79cd-4e0d-905e-ece093b6084d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03de139c-0e9a-4f6f-bf89-acbf8c011ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941e3077-ea57-41c0-a44e-9c17941f90ed",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae214ee8-795e-4722-bf86-0ba1ba18ae1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac462d02-ea10-413b-bd2c-1e00c390da27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2556007-ad12-4ff6-b851-8d9361fb9466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66d29b2-d9d5-4bae-9a50-82f278734c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da86ae00-fb0f-463d-bd59-c8f038a82aa2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6673c7c-acd2-47ed-a745-2ce7fc7b7b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccab9406-12e0-47a8-95c0-b335590ff03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581636ac-85ec-4117-b162-ca810097a689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3983a23c-fffa-4ebf-a69f-fee0b3535a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd43a65-095e-40bc-87c6-a1d7d8bcd5e3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bf95a1-0d72-47fd-be44-45a630817eff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d729d46d-9f9b-4815-ba23-d84b4cdc9383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b3ffe3-0c60-4985-8bb5-efbc4dfe22b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84312345-6888-405b-9b9c-e19ffd9b5295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6192016b-d6c1-4b89-bd91-d3a24ddadbb0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9daafa9-0a6c-4cbb-ae07-fd6c3a13575b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc26d8db-f6a9-4573-b5cd-f022c606b264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45377226-594c-4404-8e92-027455e29996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50273c7-d21c-4bb5-bcf9-59fc7a7472a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3cb1a6-41bc-4df4-88aa-8d021ecdc002",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f370349-72a9-4aeb-81fb-070a48397ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e823f6-597d-45fc-b05e-83af703b714a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67339d3-acb6-4b0d-8377-670c79e60aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eccc0a9-39c3-4d33-a2a6-91dbbf59faa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d3de6f-573b-46f7-8cdb-3b23a98b3d97",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a73e5cc-f5ff-479b-bf30-7fd3d18e5c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f1e147-1dc1-4089-8e1a-c8708dcc134e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77334d8b-b998-47b4-ad8b-82b61e9d933c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d86d8a-7769-4e3d-91f7-b8674b4da5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e0cc67-ddc0-4d64-abc1-ec3d6f890534",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f5bc37-0860-4cd0-a576-bc8481cdeea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d6b2ab-01e6-4622-8665-b0519499d8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3520d674-b90b-483a-a73b-0d960f98f5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2739f5-4dc7-4aa0-875c-083a83bc610e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105c3a2a-873d-40a5-b7d2-02805c22eeeb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc99555-7255-44f6-813c-083637a316d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd93394-bf1e-46d7-b2f1-7a1a5c673d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b90510-c3ec-4eaa-8539-ec0cab1543b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2f2cc1-3a77-4443-9a23-a45a3ea01b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532f3932-febd-4d99-97d8-8c6a65b7139a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d832e0a-fd7f-4cf9-8dfc-dfceeeb4621b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f812a1-bcc6-4dd0-bf41-a4fffb0179a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae42df0-afb6-4680-9800-34b51bae4120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67281603-6bc8-420a-8fc3-e26d60894207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9565f773-ed2b-47f6-8fc0-84456a8d38d0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84246fc1-beb4-428b-b243-d96834ee7457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda55c6a-3598-4faa-8b54-3c5539f0a9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8750d93-cfbf-415b-a798-77a28d742a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a53b7a1-b038-44b0-a0f1-ce16790ade1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f05485b-a1c9-4a2c-8550-d4262c8be07a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6192a590-719c-4d80-88f6-9a3e97720e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e4e8e5-3ee2-4fa6-8592-8c7e0a29678e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee8f418-61bb-403e-be52-06b1b0f0ba3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d84f14-3813-47fe-bb99-58d1cbe28d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7bac51-abe0-4861-910e-afef4c5bc22d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dc6521-9950-4699-bd20-830082b24556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ae884dd-d2cd-4e41-91a7-a4cf25e3fac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f043512-52ae-464d-a5a5-ce57fbbb6e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c56bf0-26bd-485e-882d-30ed0c3e3b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1accb83-9263-416a-b843-c13b94785a63",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7557c4-5e6b-451a-8c36-bac801781176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6451950-7283-4d2a-9124-45219596cf70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6eded6-ff53-41da-a08b-57b63a238c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c04aa82-e3eb-4132-b156-84f4dbaf8375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0161a9c-8f4c-4644-bf8a-1d1b74989e64",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0c9f80-f97f-47c2-8a46-c0398df12491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8d7fb6f-7bd6-4cbd-9eb5-0f14512537bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fd3e46-e429-4366-845e-3ba175d1bc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b14d6be-8bdb-46f0-bc62-faac9dba4e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34daed1-2aef-421e-9590-67e6265113cf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd8ac98-aaa8-4471-817e-411e091deed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f6ca71-df9d-4a86-97aa-a4522d05f2de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0ef925-5f41-499c-9b80-c02e0f9e7ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa54195-aea5-4ca9-8e3d-c5ea0e353ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d582fae1-b422-4e38-ba94-81d2485d9225",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb1c5a5-8e21-4884-99f6-fdc25f881014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3f9390-0c9b-4ef4-86d2-7c9e21741625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb69675c-6335-4ffe-977a-5f82c2d6ceb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd07aa69-7cd5-4cf7-be7d-930ba05a424b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55660ed8-78c9-44f9-926d-2485d67c4a89",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd28976-dc21-4725-9e33-85136d332a6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24aa86c0-7f1c-47f9-956c-3fcef4b8b46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f95856f-b163-4a17-9d57-5ea3dc6b984d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45b0db5-9cc2-4fc5-9811-eca399171876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba96958-6a9b-495a-977d-1847426f185d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437c34d3-a1ee-47e6-9aad-cc520b57ecf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fda8855-1039-4aba-b413-afdf85f18068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794aa405-09eb-4e51-ac95-eda434dfd599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd113a8-ba74-4266-9d4b-85a32ff6d588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f2db70-a747-473e-a5cb-d0c9b3ba1bf4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa67d1e-3d56-4a6b-967a-6ff6fa034754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ddcf05c-d7ad-4737-8316-c2ca0a3094fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47135b5a-3d56-4866-8c15-fc4f0486c7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359cebfa-47e3-4926-8e68-b4ec0ffe8d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8642d3-057b-4658-8aae-2c5116056340",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1d2e12-b1f0-493d-80a0-68df47873e31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5d4d3f8-9840-4833-a497-46a9d9880bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39ce726-43e5-44ad-895f-222d9dc1528f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de68982-b6b9-43b2-b639-76df8f0f02fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3409eec2-a23c-47e7-9ec5-13f79c4b501a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b82bdb-a8d4-4bc4-97fd-4a74631ed93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a469901a-d454-4213-82a0-c1079bc7b30e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeba3f8-3137-4705-b919-1fd30da9eac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a266d70e-8797-41ca-82ea-d0d79e47cf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd06ae33-b180-465a-8392-d265e56af439",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502b88e5-b57a-4dc5-8ae6-96de91e76a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5163929-9dcf-4dda-8538-5c28375292f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd53f8e8-aaea-42a5-919a-821f0337d4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fb4166-6e9a-481c-9885-d33e511bf07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e6d035-60a6-433e-afd5-5649d0dfd43c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4fa3d8-916e-4c93-9b21-4f2187779287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0594c6ae-ef19-42d6-a138-98ca8dec1769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c26a4e-5d9c-4b77-84ea-a653c7a0dd01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbf6553-1a6e-4f32-b8dc-fe266cdc2768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f82b6b0-c72b-441c-88b3-b37ee0856821",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a541a1-71c6-464b-a00d-511cbbe7b19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5aaac24-cdd8-4b41-bcd6-85e041825df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c562eea7-6fb9-4418-aa31-fbe495976be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beace375-2021-4ab7-8647-5476e8708aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a8c46d-485d-4241-b188-ff0350f83acf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45246dbc-112c-4347-8127-00c3dd4e28c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa5234c-3b01-433a-89eb-4904b275f30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f048def1-ce35-4d20-9e58-228c91fa8c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6681a470-6694-451b-9b3f-556c5420d29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302051e2-995f-4774-a50b-acb9ca966ebb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1511fe15-887e-4cce-98dc-e0e7b0ca4358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4718fc23-f4b7-4f23-8e83-2d03b1ae9d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fa43e4-6210-40af-9841-0e34ee0033eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a68520-dc62-483b-871f-15dce67922f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f62593-b68b-47ce-ae82-243fccbc9f63",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0f701a-9ccd-4024-a604-ba02e94ea0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c70edc-97c4-402b-93ff-a55530109ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ee06e2-d7a6-42aa-8edf-01db3568fb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31d8a40-8b8a-4dbf-bbea-76e0b03483a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd15db8c-d872-4249-a287-43628c76e263",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6e7cf3-e959-4166-9536-b6bb2e15fb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fbc090-47d0-4aae-bea1-0d4b59e4d604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803a383a-7b0e-4760-85e9-9472ef75e13b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a7cbe2-8ab4-487d-8414-d3607db23ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdfc9dd-1ff6-4c3e-911d-a10176f9cb21",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855da514-db87-4694-b676-137059200648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a602c3df-3b4f-42d5-ad11-a9006828aa7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaa9f5b-f0c0-44a9-9ace-94354632e23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e075cf-2be6-4ad1-86ff-b179eb212c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a1c7ef-791a-4889-b0d2-c85e4fd187e6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce567c9d-7bcf-4a62-8a6f-0a0e9e95def7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05fa575-e363-4e88-8179-249a43817780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead7d1f0-c5ce-4c0b-9257-60070fee9fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b37783-5335-4e40-9089-a68e49a07baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096bfd23-159e-41b3-8348-babc5db20c48",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03c1574-440c-426f-8e4d-7b0f022a3b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec83c5c-887d-437c-891d-90e77b9d8292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a341a83f-bda4-4d33-b106-5a86f5fe4fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb50260-8737-4e75-8793-772564838270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429071c9-ca5c-4683-aa4c-9fc1d7a0e890",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961f7c6d-4a64-4430-adad-5fab54e88e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026b1d18-4e94-4d27-a7f2-f1680efea00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcb8ffa-a945-40db-85ce-62e87732a26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a53c923-b9b1-45d3-b772-1c1141051a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524aed2a-2762-45a4-b080-14a4a82badfe",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20646d5e-3016-4211-bbc2-40b8dda2a114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e925a5f9-1e13-456a-aeb3-9147352b3332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b3e4fd-4d28-45ac-a2fb-56ec247100ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f718054c-9dba-46ef-bf7f-08bd3104741c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6aa52a2-b301-446e-a5bc-b4b64de72ca5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2609652-574c-46de-bbae-c8070e07fddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9501d9-f87a-4d30-949d-f5c5c7ca745b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528a87d1-aa2b-4da6-974e-2d868c31da27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ecc1ba-b89f-48d1-b307-e9c23267ac54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b764dbb-959e-4e00-ad16-c1fdd85b75dd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5226bd-be43-4ff3-ae4f-e628e5c68919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc5aed8-73b4-45aa-80a6-e0e09fa43d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e347ad7-9dc9-4b79-94a5-872b9b11630d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2cfacae-9895-4d00-aa7e-acef144820a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f19c964-cfcb-4fd4-9d68-95356f4af696",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58886fa6-1a82-4d67-963b-9dbd91af6ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c80f17-7c70-48f5-bd8d-71ffe974bf77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b1a7ed-3dc8-42b4-ad1d-7aed418e6211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9db5e9-438d-4008-a729-a0f9edc0ebcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ca6b89-17d4-49b9-8663-4f2dc0d866f6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90e01f1-f86e-4dca-b7f9-a374168eba1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf97549-3941-470a-a9d4-8d81f79cb3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934f9fb3-b42f-4200-9f24-5b09c51d4838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e8c526-4741-466b-baaa-4bc18821f71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5db72f-9090-4d94-a342-f40d5de8e69a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe995b11-2e6e-4127-8621-f31ec476f170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0323fca0-18ad-4556-917e-946f1e20e245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2c898c-cf82-4a1e-9952-86b87c026dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6afc6c8-7a7f-4435-8ab8-4deece6ba549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5342ea-2b98-4852-8d51-9d047f66e33b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222fef0b-88eb-45d6-946e-b64cbbab36ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6c31d6-2cb8-4a6b-98bb-bfa3405230e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201b44d5-b2e6-410c-a584-139ade36f1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fead7c-af26-4ced-85fb-4c88818a63d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff72e49-f3a4-4f5b-a0e7-35b86e7871b3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e567f99-1ad2-4b3d-bc6b-f6339ee8bb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a72f989-7547-4834-9fe8-0ae7d354aa39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35641d41-088f-425a-886e-187ba80a860d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abf5591-2238-463e-b9d3-70d4d222667c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0ca29f-d155-495e-955c-b48922066c5b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6510d58-3bd1-4773-a612-85ca3eb797e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e4d7fd-49fc-494e-88f6-8c64505cc8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ceb1480-9ded-4c07-bb24-3da20f450a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc6bb16a-f876-40b0-b645-6d8bad5b3e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a378e3b3-d9a5-4441-8f8d-7775b71403a0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860d46f4-aca3-4b46-a2dd-38ea932fdcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a978169c-201b-41e1-9137-ef2fdf884518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efc1565-c6c3-486f-a057-b34447d7da44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61b6480-7ba0-4f1d-956e-2f1296f76c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8241c4-275d-4d54-a67b-7e6842f811d3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0188b8a0-5538-43f3-a3e7-2f25c1ab50d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0309d3c4-2308-403c-9203-c5234d42576d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d045658e-f0f8-4de1-a064-14cbb88a4e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02edc87-67b3-409e-8552-9e2c6c68fd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4600f2-2a33-4778-bbbf-0f46bb3c435a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5615a9e5-9f42-4ee5-9bf7-ea638a25de3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb5801b-19e5-4249-b29b-44e9e0eae861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0124f27b-48fe-4974-a28b-2485f40a3454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbdc1b2-fc02-4594-a330-d7430908ceb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea87006-cac2-4c95-be63-a660e73b3ea1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fab6eec-540d-4867-8b49-12757ab6fe01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a79ea9-89ea-4cb9-b09f-a22d3d175727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba57a64-b18c-4ce0-baed-837996985a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c544e8c-12c5-4455-854d-35c4c0dd6d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce3018a-2e03-4196-8b3f-1f531af910d0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9732cf-deec-4b17-8891-663bc35c6ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9886decf-a473-42ae-b027-d65ec5994f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431f3edd-78cc-44b9-ab71-c657c1b5d5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c065aeff-1f61-421d-995a-6067b705ccf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c22ce9e-855b-4021-ba11-2b1ea5b62e15",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03547ec-4f1e-438c-8b63-cec0a022e72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2386c04c-1e1f-48fd-b544-2e34b6008a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670c7ba6-37ef-4080-8a8a-43b27033258c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24b5186-0892-4b0e-bb3c-f3db6a93990e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dac1ce-3d86-4cb0-9bd9-7509f694d745",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371b8392-025f-430b-8ab6-15c1f5ea4168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9482dff5-ffcf-4728-b85c-541501f11e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc09c45-bc0e-48aa-8a23-39fdf4697802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2ce6a5-ba01-4dd6-afca-64eb4fbfad53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7a013e-9996-4e5e-95f6-318df5855bb5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018c3a93-e271-4ecc-a74e-a2b43b701fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4aa645-264f-41a8-8128-c40d88ddb8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ef68e1-2804-4fdb-8cd9-b1030d37986a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa0891b-56d9-427d-9452-95b5002dffd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c8defb-9a58-49fc-b83c-a9f9060f91c9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1e4a8a-ab81-4896-8a71-cfcec836a042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91de644-49de-46d0-83c5-d25ede208dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f2ab8e-14a0-4a30-a9c5-cc4e764ae655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7016cc-acf0-43b0-9f77-9e5c47ec4d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef23f8c-28b5-4882-9628-016341cda7c0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9529169f-e8ef-4a85-9a98-0c6c1a513dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3ef660-3a54-4654-a3bb-3f534aa50910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62d8a6a-eff8-418d-b35a-d7edfac35716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eeb5914-0e5f-47fb-ad20-c1fc244e15b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc877c9-8f23-4b85-a170-a642421cb50b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff8b779-6445-4b3c-ae1c-2b6df7cece99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1d90b43-229f-431e-a092-b4a84f22f4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6466645e-26f5-452b-9c9a-6ac05b52ce64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22983399-942d-473d-bd74-234ea422c4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a97032f-e894-4aa8-b38a-5994bcc17429",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9ef70e-52ba-4d04-8c73-01210e393088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "705828c2-22e3-455d-b97d-96d9898d753d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d3b74b-4a65-47d0-aea4-c319bafb8710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15231bf-bd5d-4878-9412-4ee24a66d3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef341ab5-dc66-462a-813e-fdfb19f245d3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd572dc0-4c98-47a7-b509-a8b96a439df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18fa33dd-ba2d-4fec-a657-1d2acacbfdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d174bf-1fdc-4eed-b7d7-2f75281c3736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da4fc20-83b8-4873-90d4-4a5ae90a879e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033e39e2-2d2f-47c0-84a0-71db8384a01f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2872a81-3bab-4f0a-9d3b-280e3748df90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b131538c-91e9-4f95-aaa6-f1fddff00c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccabd699-9900-4445-baa9-da9991149ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a4c7ec-61ce-4aee-9569-d2807aa78c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b3b284-8def-49ed-9f38-e941b1a96255",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3608e479-9590-44db-bff2-ca4064e359c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd098cdc-5736-4ea3-8ef7-93200ac745b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1975761-56ba-4022-ba47-10a17e4a4690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635849cd-78d2-485e-8970-210ed61e03d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ed206c-5aea-4377-b8fe-2c48d5c23a75",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1af5c5-755e-4a63-a267-176917aa60a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4be4af18-36fb-4ea2-9962-37d595778ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6df740-e435-4cfc-b190-e47dc9cb2bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85fdc57-8873-4696-aeb5-9d3b6e46954f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0d2448-6fca-4b3b-865d-af15d377897a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf6eca6-0409-49f0-af85-734c5813aabe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e944705d-2526-4bf6-97f8-46b0d93aab6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0606b69e-06bb-41d0-9b2f-05911d0482c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4cf396-45c8-4b2a-b052-189263a18f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb22c763-81f7-405c-b266-35c67c7887f3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e0a1fd-8876-47f7-a898-fcbc4171cd1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55015c8f-a113-47e6-9394-c8e3cd7dc7d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61913bc8-9f0b-4cd8-b152-27ff80b8abf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d770dc-a8dd-4a55-b4bd-442d779acc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f610aec9-41b3-4041-8f21-96cd4c1b63ba",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9bbb3a-8522-4761-95d4-c5f5e2ce7558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c97557-fc33-4b18-b092-545e2e64d380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc25a1ba-233d-41d8-9c7d-4c1ab6b3c593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f40ed4-8546-44ba-9f86-cee559eaa6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787194ed-9d1c-43ae-900e-c16ce3555f06",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6dd001-23dd-4dbf-b148-a3644349fc38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c64df2d8-00b1-45c8-b66a-4f446fd3ebd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee398bf-fd91-49cb-9350-d7555190af18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970fa3a9-53c2-4340-9fa3-0ef48dc5347c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe96904d-8f62-492c-a21d-1c0b186a40c8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9bd94c-46a0-415c-b662-d18016a32de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daae614b-cdb7-4a75-a592-b9d47e293c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a3d0dc-84fd-4671-9f00-36834d495dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7f4051-74b6-4ae6-a1fa-a514069f3803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb2f26b-a0a7-4b51-b7db-d1569c8bd70a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646dd3ad-18e0-4059-9f76-cf700f7e4c7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c19d90aa-9533-4138-8f14-7d2a7478f40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f337c4-0eb1-435f-9d05-f9bb07089759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af34900-6779-4828-a9d8-7c410590d599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c2eb99-9d67-4312-b1ee-f5c001e066fc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0ead47-40ff-4840-9555-6efb820a0ff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b6d614-23c8-400a-abfc-752184c06648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8f785c-6056-40f8-b7b5-cc6220a81a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5525bb92-7cc6-4ec8-ad88-7b8eb684846f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5b3f37-9ee4-444f-b970-a51d65cbcb13",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304de512-605c-4e96-b2f9-0fa324831448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b3d98c-e049-4894-83e3-d773925ce489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3fe121-fbb3-485e-82cf-e059db5309bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3968f75f-e242-4d23-be3d-6b11718ba897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3144632-a8a0-40c5-9e76-b3c6daf0b4aa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a4012e-5eda-47cd-8baa-1c1d139e62e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a540a25d-395f-4245-8558-49a590edf683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18917936-4d5e-47c3-bb9b-ff4824766fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708becc5-57fc-46b9-8af0-6b57cc1364ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b7b59e-6d41-44a9-adac-0a56ea7c6dae",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d33fb85-ef20-4456-abb7-631661f2b302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a975d81-b0ae-4b6f-b38e-1e2d068225cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3866cbc3-269d-43bc-890d-8b737e5b99b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b1730d-1598-4b7a-a83e-368e7d73896a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5813bb-b9bf-4944-ba05-d3f5f1e6dd5d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4618c5b0-9eda-4a96-81bd-000e9d4415c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2675b6-21cd-48e9-a0e6-4046581b25f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd15fbf-82d6-42f7-9431-d7a8c38f75a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e59a3b-d051-48db-ac8b-893c5cf46823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa077bc-ceb3-443b-919f-dce53cf5af5c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ad3d15-1d29-4d4c-a4fa-7b169d25f719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc6b2f2-95bc-495f-87cd-1ccb471d403a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37677e8-30da-4b10-867d-a2e3aeac3b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437399cd-db8f-4605-8224-e3287ebc6cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b649d26-7a0b-4bee-8309-c36fe4f1c7eb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1b3c9c-496e-491d-8398-ec8294beef4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a7db7a-b166-4bcc-8bc5-a3533b94c255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e583cf58-48da-4c8b-9eba-314822b49142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33630ba1-50ca-445b-8c7f-22e631dc02e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637e3d85-a840-407c-b6f5-3ecd9d5bae9f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8061b113-f483-445d-9641-3dbd0016633e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b02036-5960-4f10-a9ac-fb2ed60211df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a042fb98-d9b4-4b7b-969c-a4fca098d8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654cdebc-966b-4d77-83f5-65ca6d0d26f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450a4af2-07cd-43d6-8f49-e1c4b4f0c988",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f2f547-4e4b-43ae-8098-50d2ecc5b914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50573293-ecb3-4191-bfc7-4ea9c06c3a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bccc6e-340a-48a9-a7fb-7a32e79106b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2e1df3-0d4b-4dd8-8a14-2d0550c7dbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8f439f-ccba-49df-b3b4-4c64309f8cf1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebbcba4-4a02-408b-949e-c6694c9d0603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c18fdd0-6e6e-493a-a567-58b467f8ef5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6947c43-09d0-4bab-a69e-41e876b98bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f230cc7-ffcf-4d7c-8f06-a5ddbb6b3120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07dc0ea9-39db-4c8e-b568-2523cb71107e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bf2cd8-ff6b-4a6e-a41f-455bda7df838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9109e769-431f-41f0-ba92-982636f3bc91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540f3d1b-121f-4384-9f91-ab3180ecfff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0cae6d-35e2-4343-9593-c9253e5d24f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82d2cc6-8f74-4e5e-9d1f-7abf199ef4d4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bbbf4f-d274-4213-b912-2c496249f0b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be66035-68c9-4931-a698-244182081afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9c248a-afd0-4db2-94e3-d87a3c14b74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41414239-0b5f-4989-baff-303b43f4f1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc75d43e-0873-48be-9016-f5ef7bdfad4d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4ff73e-8b12-41a0-a38b-84c435699055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acaa9c59-09a9-417d-b6dd-8c78bce0ef11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04e6d2a-78e3-485a-a8b4-188171a7a21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc6f819b-8981-4621-9244-246d89044a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fc5641-0931-4be5-9582-38594a87d1cd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c135a7-570d-4465-940a-11a5097d5503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e483b2d-9be4-4622-88f3-60b5dfec1371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179b2030-9118-4b80-8be9-056687cacd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5120b816-3c27-4370-a872-18df796de92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cf1642-1f0a-49e8-bb56-4fa7476dee50",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d8e231-096d-495a-a061-a40bfec99b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1936eab2-a754-4ad1-8fb5-8d69f12322e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ebb171-61df-4335-a0d8-b638795e801f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37425be-7c81-4954-a127-eb2129a8107f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d99cff8-1b6d-4a36-9f1f-bee7126e543f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a94f3cf-c887-4fa6-9291-2f3de60259c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12114d00-5be3-4e74-bb8a-0e0056078a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7fb843-e107-4e08-910b-dd37cefe4e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08f4758-8092-4544-8378-3cac53881b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31596e4d-1345-47af-b669-3c10ef2e5cb7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f008d99d-c650-45a3-b1c2-a3de82b72ce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf13d48-68c2-47e3-aefa-9a6ac4c14375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b112bf41-6262-4877-9e5a-3ed873636915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2644456-8be7-4ae0-95f8-2c5aee8510e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8adb34a-c94d-4488-9fb3-d23d983be7a9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27df0d4e-a9d8-4443-9152-95cbc6ed92b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc1992c-6b51-40da-bc9f-60ec8a6d2dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e222a8d1-a40e-42f1-b50d-d62bc9e41852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c031c8ce-9e95-4e21-94ca-4e1e5d2ae3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767ff593-efa5-48a9-8052-63ffa9c48f38",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e0fdfb-9b2a-44ad-9ddc-00bc714e167a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a647ffc2-3285-496b-bfef-3ea4dfbf79c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaae7f8-6e79-42fa-8d75-5d880f4d9b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654554a4-6f5c-47c0-a4ec-02532cda7901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a82332-6524-492d-9b10-19cf2b565f0b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907d5c05-6865-461b-ad93-85cdbb7069a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0352df43-c0cb-4f28-87e8-e1092ae854f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df5093c-e25e-43bb-8c70-c43fa59a58d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3173e7ec-7292-4c43-9cf6-64f722255063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e86656-0c16-401c-a0de-a0855ae46abe",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c180551b-6e64-4b64-a380-415fd41fd14c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "951fae39-5aea-4ee2-8c73-ab7b4c89a564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc5990-2907-46c7-bccd-f7ec15695357",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6946332e-e1d5-44c2-ad38-159b16c3e078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6ac891-4676-44c9-8075-eec6a3ce297a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462c8731-1caa-4103-a150-8cb1ab7b7b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b5e2de-7429-4733-828f-e9abaa36188c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362710a0-bf11-4124-8721-29f374e7347c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91da403-e5a6-48e3-a8af-54f19495498a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffe1bd3d-a332-4890-a307-0c31c6ba3170",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a661a52-8b6b-4c64-8aaa-7e085aedbe8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3f4b0fd-a8ca-4d7a-bf5c-2a4e6279a425",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b013cf4-59ba-4be6-8b3d-5b04def7c717"
                    }
                  }
                ]
              },
              {
                "id": "5771c9ff-1399-48d4-a26e-540391c2906c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00f9195e-d8a7-4820-9571-218018cee52a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30349f5d-559e-4147-97f6-38ff2d5471f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "acc0d84c-658c-4821-88e3-a7dcd1c851c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4c25cb-20f7-4a1d-964a-fb5a2b8cc7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d5c3414-22c5-4895-9361-beb35055da5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0eb595e-7cd0-4ab8-9ad4-4296fea11f6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "288b621f-ada7-48b1-a59e-2c88bee42327"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d59e28ad-a300-41ce-af38-e693e11aa0ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f81e5d0-7967-46a3-a388-79f2a3c38f3d"
                    }
                  }
                ]
              },
              {
                "id": "0f855518-955e-4aff-8e2d-d3fd3f4f1b23",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "52934617-75ed-480c-8f72-ad23d74a65f0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c45d4fa-81ff-4ce2-bf23-5b336068d703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0e5cbb59-aa00-4ea6-bee4-7390b020f772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e25c06-828a-457f-b105-0bfea7f730df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ee014a-89cd-42db-8519-f647ffad7e0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0123d7ba-98dc-4732-ad25-2e590a4ba18c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32dbf606-6c48-492a-9309-8d47505a485f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6a96777-540e-4fb7-85b7-b14bfda91f12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0e860b9a-3544-49d8-b65c-f8987741a263"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5a6032f-e740-4d71-848e-11636decc727",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86c65672-15e1-410a-9eb4-eaa8557582c3"
                    }
                  }
                ]
              },
              {
                "id": "4428cb2e-9dfd-40db-9f93-5791fc200f3c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1e3d0be-b19e-4ca4-b3d4-59628a631d37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "264c069d-bb4a-4fe8-9851-5174b2a38f06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "365e135c-9003-4a34-b497-1334fa5705ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "648502a5-2952-4a61-a014-8410b3e54bb6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c65619f-3368-40d0-ac80-801e425b0646",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b9dfef28-b1a6-4d6f-8040-63f96c2d9762"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1a49844-4091-42f2-9d60-473412783f2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bce5ef4-5fcb-4fca-886e-d2995dde71cd"
            }
          }
        ]
      },
      {
        "id": "25a2835b-00cf-4aad-9905-666b6779b9be",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f95cf73a-a4f8-4c95-9015-588365f10696",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b7e4f7c-d840-4ef6-a04f-11b9ed234a14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66c8f3fd-0ede-45d0-a387-512629ee7a76",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3be2154-8ca6-43df-b0af-b99527f98080",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "df757240-6a9b-4419-b8ea-a61888ffff91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fedd179-ebab-4522-b56d-3b68c0ae8e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "306ca768-68e0-411f-8b8d-ca51fa3b4d33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42710570-b191-46c3-958b-bb73230465b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bfd9f5f-2052-45de-aa2a-cfeb7985b8a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1bd6db7-864c-4c15-8651-063cba440422",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "402b114d-683c-4d9e-9b86-0a60d083beac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e274534a-fb45-43a2-830d-1d554554f395",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "45f62a8b-ece0-4738-8dab-cb8b0393dd56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ded43589-1953-4535-b6c4-0c5ebc60f39a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7d41004-091a-4ddf-b851-c4105930dd86"
            }
          }
        ]
      },
      {
        "id": "0109db7f-49e1-40c9-af9d-e704b0d07efd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0c10d843-b95a-4d2a-93ae-38d023db5291",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28d7d690-0760-40ab-9ba1-2dac4796a98c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7533ab64-b755-4f8b-bdc1-df3a065f2c00",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148a17ce-6ec4-404f-aa33-6ed23850f872",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22f0bcc4-bf0b-4f83-9567-f4bb9dab2b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb4bf8a-fcfd-4ff3-bae6-163a0e34b184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e02fb787-d235-49a6-9df2-4d00e7c2ddd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "281c95db-9d63-4300-b95a-442d8ed9090a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6204aaa-be83-4032-ba36-6e2ba8962986"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eacbe757-7c1e-4668-81ec-510c5bdc8ff9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "948117f1-3303-4598-8b84-b8ec857ec6f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "707b2d52-1863-47af-b86a-5e35ab0e2ba4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "58febcd2-403f-41dd-befa-a1902bc1a44a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ab9bd14-5904-4b39-bf19-f9bfe32f83f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c4b4306-3277-4298-ba7c-50a22d2b7d17"
            }
          }
        ]
      },
      {
        "id": "c11eb644-d2d2-48f8-9529-f18e859694f1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "753f1e69-7895-4278-b7ba-bc6a15fb25d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3281b573-7df4-4256-a6d4-bdbd27c95d9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4a26c72-5441-42e9-bf40-99bd7cde2324",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67045bde-e01e-49a1-8100-b7b1f7839ec7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9c362d5-9ede-4681-8661-cdf76eaff2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a49be7-f8f3-49d2-a371-72a0724fea2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "868d6286-0fa0-4aef-915b-df6f8148b2b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8958ebf5-1c43-45b8-bf60-89c001812f91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55b27502-bc3d-4091-8123-fd1291e14f16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eca8f5d3-8c61-4ca8-92d7-e5d125618575",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3c75762-3342-4268-a8db-505344400696"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7204d14-40f0-4641-8b83-1903ad1bf5ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79614456-6b9c-4917-8494-6fde7075b34c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e11124db-5340-4277-a1ae-36714aff8e18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0423b14d-8b09-49f6-9e5a-3ffa1d02eb92"
            }
          }
        ]
      },
      {
        "id": "40f6009e-10e9-4f39-99c2-8782f523a0cc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3df48459-7231-4abf-bd89-a17915378d73",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd2f6960-0bc0-4b58-8d2d-642e5ce5e624",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6026dacf-95c1-418c-872c-6d37059d34ef",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "773a0e51-4df7-4cc1-8cba-4bf12c2d494b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b98f099b-2566-490b-91a4-c74459a3dc1f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 433.1190476190478,
      "responseMin": 7,
      "responseMax": 14491,
      "responseSd": 2123.0318190915764,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726274558598,
      "completed": 1726274676364
    },
    "executions": [
      {
        "id": "ed76e0cd-cadb-4cab-9399-b7aeb8a717a3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f2c4ff15-6bc4-4478-8310-11617d3a2ba3",
          "httpRequestId": "27cc9b55-0681-4afa-9953-c22d095a537d"
        },
        "item": {
          "id": "ed76e0cd-cadb-4cab-9399-b7aeb8a717a3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ec39fd0a-6d44-442b-9939-72ee06894f9f",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "f927b791-fb03-4a39-bde1-b6f108f89065",
        "cursor": {
          "ref": "fb244b02-7b01-4496-bcdd-c1ee717ddfcf",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "13782851-7a8a-4415-a7ad-7a08824d1bd8"
        },
        "item": {
          "id": "f927b791-fb03-4a39-bde1-b6f108f89065",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "46ce0392-ffe9-4e88-9d4a-904c9b541c02",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "b5735747-d3c6-4e95-a02a-d9a18b91cfa9",
        "cursor": {
          "ref": "36dbbb68-3815-403e-a9aa-2fd3dd68531c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "73e7fccd-8d6d-4594-82b4-59db49505a70"
        },
        "item": {
          "id": "b5735747-d3c6-4e95-a02a-d9a18b91cfa9",
          "name": "did_json"
        },
        "response": {
          "id": "3aa9524f-2bc7-4ae8-b372-5c1a25ce0428",
          "status": "OK",
          "code": 200,
          "responseTime": 165,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebce0d5-1c36-4de0-85e4-eb106e55cf61",
        "cursor": {
          "ref": "1aaa5bb2-002e-4d96-a49f-ecab85db7718",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2912a362-822f-424d-a11a-421fbfa10549"
        },
        "item": {
          "id": "aebce0d5-1c36-4de0-85e4-eb106e55cf61",
          "name": "did:invalid"
        },
        "response": {
          "id": "0ce23011-4dee-4bf9-98a9-5f90bd0f8d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1876,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebce0d5-1c36-4de0-85e4-eb106e55cf61",
        "cursor": {
          "ref": "1aaa5bb2-002e-4d96-a49f-ecab85db7718",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2912a362-822f-424d-a11a-421fbfa10549"
        },
        "item": {
          "id": "aebce0d5-1c36-4de0-85e4-eb106e55cf61",
          "name": "did:invalid"
        },
        "response": {
          "id": "0ce23011-4dee-4bf9-98a9-5f90bd0f8d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1876,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca001c7-e48f-429a-9bbe-72a08769ff33",
        "cursor": {
          "ref": "668eebe0-6913-43d2-9a4a-efa5cfdbe0d0",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "67f3df33-0a78-4148-a1dd-8b465e2fa5db"
        },
        "item": {
          "id": "7ca001c7-e48f-429a-9bbe-72a08769ff33",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0769d69b-a2a9-4817-9218-bd4616824c26",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2020,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083599f9-2a4e-4688-9a94-84faaa25861f",
        "cursor": {
          "ref": "7ce43349-6b7b-4981-af40-18614d052e42",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c455705c-a39a-4823-82fd-723b665c4b92"
        },
        "item": {
          "id": "083599f9-2a4e-4688-9a94-84faaa25861f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9b33cb4b-9dfe-494c-8ac6-6964fc243501",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2390,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9c745d-9871-471e-989f-373a81dd622a",
        "cursor": {
          "ref": "5afefdb5-22a1-4043-8867-97b8a0813561",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9ffe969a-69bb-44f9-85bc-75f50443022a"
        },
        "item": {
          "id": "ae9c745d-9871-471e-989f-373a81dd622a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0aae9dc5-f32d-4ad0-a149-5d7743046044",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d646948-f78a-4ae0-bc23-66b368eaf4b5",
        "cursor": {
          "ref": "8f48bcea-06b2-4267-914d-ef29c0d39915",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "32b698f3-0bcc-4a50-86e3-f890bafffdb4"
        },
        "item": {
          "id": "0d646948-f78a-4ae0-bc23-66b368eaf4b5",
          "name": "identifiers"
        },
        "response": {
          "id": "474e62b5-b100-4bbc-8a83-544070bf962d",
          "status": "OK",
          "code": 200,
          "responseTime": 2517,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683af965-9731-4dc8-8d87-80bc9f1f87b4",
        "cursor": {
          "ref": "07a320ef-1c0b-4493-8fa2-743a3c4e2964",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2109328f-f547-4cb3-9b54-1a95f59d14e7"
        },
        "item": {
          "id": "683af965-9731-4dc8-8d87-80bc9f1f87b4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a640ff49-64a2-4b45-8da2-03d5fa11b5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465d20c2-4764-4b5b-9b15-c51f1cadbec3",
        "cursor": {
          "ref": "4c6d78d8-6a64-4c9a-b161-9215ea8cd9a8",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0d980c36-d91e-4268-b071-d14b0b8fd1cb"
        },
        "item": {
          "id": "465d20c2-4764-4b5b-9b15-c51f1cadbec3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "78741c9e-41ed-4414-a9a2-0ddc00cfdaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f780a93b-f4be-4201-8e3f-59bbf6e6fc3c",
        "cursor": {
          "ref": "4cd25bde-9a5f-48ca-b6aa-175adc7406e1",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0c4953f6-b598-4440-a881-c598696bff25"
        },
        "item": {
          "id": "f780a93b-f4be-4201-8e3f-59bbf6e6fc3c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "99d66a6c-f3f9-43f0-99f7-5905bb2b0455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d3d46e-2b35-4145-b0cf-2b544bd0f253",
        "cursor": {
          "ref": "cf93c638-a1bc-46f3-9d41-f70185bbe0c3",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d06e54ec-9e1d-4e4e-b6b0-31e3af12704c"
        },
        "item": {
          "id": "17d3d46e-2b35-4145-b0cf-2b544bd0f253",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5016116d-eb26-4005-b35a-d1bf02f87dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c09c76-4957-4000-b408-9f786d4480c0",
        "cursor": {
          "ref": "2c7ef0a1-ec94-4ee9-8943-ad39ef81b2ef",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8686d23b-3f47-478c-8bd9-67ae06a907c1"
        },
        "item": {
          "id": "e8c09c76-4957-4000-b408-9f786d4480c0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e87c72c8-93f2-4e7f-b6d1-bee0f4cce11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc90b65-70d9-4235-8e3e-23511671f2d6",
        "cursor": {
          "ref": "2196d6dc-0b69-4f61-83ca-edce8e49a690",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1d03c981-39fd-4759-b6ee-54fd65c3e845"
        },
        "item": {
          "id": "edc90b65-70d9-4235-8e3e-23511671f2d6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f906daa0-de54-4f4a-a317-696079bf5b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99840157-700f-4cab-93c0-db9b7cfcad4d",
        "cursor": {
          "ref": "f67784e1-234b-4d99-91c1-8f5e52810fdf",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "aad755d1-952a-47bb-b136-52348ea079fa"
        },
        "item": {
          "id": "99840157-700f-4cab-93c0-db9b7cfcad4d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d5e43ea8-9ba0-44c8-95c7-dcb73e450cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c915656-1895-46b5-89a4-11e42159a75b",
        "cursor": {
          "ref": "c9b1da6b-d852-4dc1-9b7a-b70f82fe1f04",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ad2b7b54-d408-4f0d-9f50-7deffd5627d8"
        },
        "item": {
          "id": "1c915656-1895-46b5-89a4-11e42159a75b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "638fd34f-51e5-4059-9adb-52ad84f40bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40159e71-db46-4613-b243-93fc721fa9b4",
        "cursor": {
          "ref": "d341ea98-63fc-4c56-8f53-a2e2d885084d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5525089d-9a9e-4dc4-a979-637f58986a82"
        },
        "item": {
          "id": "40159e71-db46-4613-b243-93fc721fa9b4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e4ef9a6d-2e19-4d80-a316-2f3bff8f7b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfbf79d-afa3-4369-bd76-3ae108c491e8",
        "cursor": {
          "ref": "7f706ba6-5e72-4faa-adb1-3845371e8761",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b4d42e8e-6b12-44da-bbe2-12cdebf9182b"
        },
        "item": {
          "id": "fdfbf79d-afa3-4369-bd76-3ae108c491e8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "beec962d-f962-40cc-a851-2bb589458cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a8b9ea-ec56-45e1-9293-58bc9d0b586b",
        "cursor": {
          "ref": "d94790ec-acb4-434e-9baf-e8cb0f9226f6",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cb87ab50-4ce0-4bc9-8325-f1befc8c4108"
        },
        "item": {
          "id": "94a8b9ea-ec56-45e1-9293-58bc9d0b586b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "72234ecf-232e-4591-9b7f-a1d80ddd211d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dd9edf-85f1-434a-bf49-71bb275aaef3",
        "cursor": {
          "ref": "c3818933-2531-4afc-990d-4f494598a5c3",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c91706fd-3db6-4e13-abe8-2b7332df5a5d"
        },
        "item": {
          "id": "78dd9edf-85f1-434a-bf49-71bb275aaef3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9de05e45-1c7d-45d4-9bb3-21f1092c245e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275a477d-6242-42c7-9a36-41e8b15d5866",
        "cursor": {
          "ref": "608d66d0-9ce0-4419-9fab-9f240f69fd98",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e2c711eb-e88b-466b-90e1-ef266f931d4c"
        },
        "item": {
          "id": "275a477d-6242-42c7-9a36-41e8b15d5866",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7214c13f-a4be-41bc-be3e-b49a28fb29a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb6589d-deec-4097-b6cf-eaa7dc992935",
        "cursor": {
          "ref": "ba1f6149-fe49-4c16-a0ce-127382765d39",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "36c36f40-594a-4375-ba24-3774f35f20bd"
        },
        "item": {
          "id": "edb6589d-deec-4097-b6cf-eaa7dc992935",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0a6b6fc3-c9ae-4c92-8623-19055a3c17cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29649b99-a14f-43b3-87fc-0defe50c4dbf",
        "cursor": {
          "ref": "733d3fba-a3d2-4c03-9b3e-046ccf13e0f2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9ea7edb4-d4e5-420c-82aa-998fd43baec4"
        },
        "item": {
          "id": "29649b99-a14f-43b3-87fc-0defe50c4dbf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "11c66efe-542e-43e2-a2f4-a72b14e59ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7fee75-682d-41c3-bbb9-04a033656863",
        "cursor": {
          "ref": "7834600d-d275-41a0-b88d-f965c6e90bf3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "80ce2e77-15e9-4f6d-a7f2-55a0cd4314b0"
        },
        "item": {
          "id": "5c7fee75-682d-41c3-bbb9-04a033656863",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "17e4c3d3-90f9-40d3-97fc-24f8727183ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4aef82c-eb3a-4181-97f8-7a282b11a721",
        "cursor": {
          "ref": "fcd451fe-1bd8-4f70-b4db-b0dbe579c326",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "58b9f2dd-f709-4a8e-aba6-76a6d95b295d"
        },
        "item": {
          "id": "f4aef82c-eb3a-4181-97f8-7a282b11a721",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2b31861a-510b-41ab-8f88-91c6efcd5859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5a41ab-4853-46bf-a8d5-861eb51c7061",
        "cursor": {
          "ref": "969861fb-6a69-4c21-b2cc-6a85a4b6ea56",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7a008225-4dad-4d8d-a4cd-6f7dddfb71c7"
        },
        "item": {
          "id": "1a5a41ab-4853-46bf-a8d5-861eb51c7061",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "483fb87d-4101-40a2-9e6b-29aa3e2fba7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf670f29-e6fd-4bfb-a7a1-19e8b8711c8f",
        "cursor": {
          "ref": "d94508fa-bcf3-46cb-b1a5-c5f9f01e015f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "65c3f69c-3293-4d0d-8536-3177a765d61b"
        },
        "item": {
          "id": "bf670f29-e6fd-4bfb-a7a1-19e8b8711c8f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3d4277db-8239-4f54-b669-dc2ef56b6025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d81a8d-0886-493e-9cc0-2d142db3689d",
        "cursor": {
          "ref": "311f3e19-6651-44db-bc92-820ed800673f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c5857a03-4101-4f90-878d-a74f1192d99f"
        },
        "item": {
          "id": "f7d81a8d-0886-493e-9cc0-2d142db3689d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "64fe9064-f638-4f75-bfd5-a8ddb2f04d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac722026-75ed-45be-a4f7-835d9167ed97",
        "cursor": {
          "ref": "6981664e-d208-4c45-a516-930060415277",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f403be4b-ccb1-4f76-ac16-29983d495266"
        },
        "item": {
          "id": "ac722026-75ed-45be-a4f7-835d9167ed97",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fd2d9adc-d536-4dec-a5ce-4b103cfd66ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a1caec-bc5f-4247-94c0-feacb58e7313",
        "cursor": {
          "ref": "39a54dcc-18cb-49ad-9ed7-3755430edfa3",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d281f4c7-2e10-4fa9-8a21-344ac7f2d845"
        },
        "item": {
          "id": "c2a1caec-bc5f-4247-94c0-feacb58e7313",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "592231ab-8e13-4d72-bc5c-d4dd001689e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ac9745-3f7e-46ec-84ec-c2ad45378964",
        "cursor": {
          "ref": "ab32fe64-c40e-424f-af01-277a2e339961",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4539f307-a142-448b-9799-4bbd8fead490"
        },
        "item": {
          "id": "91ac9745-3f7e-46ec-84ec-c2ad45378964",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "950a0527-0a18-4110-b1fb-46c39b07ea13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552e0762-cad2-4413-ae7a-bc1202618a5e",
        "cursor": {
          "ref": "f1520bbf-2a06-42da-aec9-889943878437",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d6bffc4e-cba2-45fd-8b08-e94a053040f2"
        },
        "item": {
          "id": "552e0762-cad2-4413-ae7a-bc1202618a5e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3200ea87-b7cf-4e4d-b0ab-c75c598f44e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202d146b-8514-4a25-9ad2-8ac4110be3d5",
        "cursor": {
          "ref": "029c19eb-5f3c-4c8f-9741-a2a6c62a0766",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f3d7d394-d968-4adf-9ac2-cb3c27db127e"
        },
        "item": {
          "id": "202d146b-8514-4a25-9ad2-8ac4110be3d5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2d1b3e1d-f7ab-4889-a6ef-ab55a967c4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa247db-2b46-47c9-b9df-7e279c230bdb",
        "cursor": {
          "ref": "b7de0e35-6bbc-42ff-b326-3c849bf23851",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e02ffb0a-8db8-4b3b-9058-beb30694781d"
        },
        "item": {
          "id": "caa247db-2b46-47c9-b9df-7e279c230bdb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "169eb9b2-e263-4ce1-b354-1fd0b6ef6d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df41614-03dd-4193-baf3-daf8cf1f5aa5",
        "cursor": {
          "ref": "f7f01201-bd34-49f4-8618-cef0be9d1cdb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f04cc1bc-a749-4ad5-a542-285a361c9cd1"
        },
        "item": {
          "id": "2df41614-03dd-4193-baf3-daf8cf1f5aa5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2f50bc2a-28d2-4dd1-a93c-c6ef2e245d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e637ab-4e99-4800-9a46-a9f7fbd03276",
        "cursor": {
          "ref": "61aab66b-6486-42b0-badc-6cf6c935fd30",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "265b68fa-8993-4cf6-857d-c593f8c5974b"
        },
        "item": {
          "id": "05e637ab-4e99-4800-9a46-a9f7fbd03276",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7343e71d-f90a-4500-a107-36fb27bdcd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d04410-7b96-46ee-81dd-8e7097f39910",
        "cursor": {
          "ref": "2e6c80dc-4303-4452-89a2-694fddff2357",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d8707873-e7fd-4230-b394-745de4839a1d"
        },
        "item": {
          "id": "d2d04410-7b96-46ee-81dd-8e7097f39910",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d41b156c-c038-485d-9ec4-7ee7eba23d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fbcd2b-02d4-4e69-b8f5-1ef037c691d3",
        "cursor": {
          "ref": "b54397a2-f0e4-46dc-84d4-fbc8000b770b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f5966dba-f055-4d9c-bf83-23cbcbe0f08a"
        },
        "item": {
          "id": "b2fbcd2b-02d4-4e69-b8f5-1ef037c691d3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "58ab2d82-331b-42e9-8730-734756120606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da52831-100e-4c96-82a6-524cc223a77a",
        "cursor": {
          "ref": "2042134b-38c3-44ea-a2f0-f39a1f47274e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0f406e64-faa3-4834-8c62-52e449e0bda4"
        },
        "item": {
          "id": "3da52831-100e-4c96-82a6-524cc223a77a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "af2de052-c57b-4c3c-883e-3829ee42571e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eb8bc9-be11-4f8b-abe6-bf2128e905de",
        "cursor": {
          "ref": "35aa6abd-55a7-4193-9b68-7cb7ad5ad618",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "972c93b6-bb2a-4783-9113-c190aa802bd4"
        },
        "item": {
          "id": "26eb8bc9-be11-4f8b-abe6-bf2128e905de",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7d35800c-760f-4514-8f35-1a668e2bf380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab915eac-bd44-49c0-98e9-39a00d65573c",
        "cursor": {
          "ref": "ca56ed98-1fa1-4685-bbf4-5dfc8fe3d308",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b2983b06-5729-4261-b66e-a7eefbd56809"
        },
        "item": {
          "id": "ab915eac-bd44-49c0-98e9-39a00d65573c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f3093af3-e275-46fc-a69f-d7449da21d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044f4011-bd29-4f0a-a374-0624fedc6655",
        "cursor": {
          "ref": "b5babaa8-8e10-4dd7-b97a-1df048523a8a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dc75259c-3d5c-4ed0-b01e-f08fee2f3a3a"
        },
        "item": {
          "id": "044f4011-bd29-4f0a-a374-0624fedc6655",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e9d0d187-fb4e-4661-9bf8-79771828cb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7ccd18-0ca6-4931-9462-2e6b88b69d65",
        "cursor": {
          "ref": "0eabc60d-6a5e-4229-bab0-115c6c03b865",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3aa8c3d3-0cb7-4af2-85bd-5840d6ca2dad"
        },
        "item": {
          "id": "ef7ccd18-0ca6-4931-9462-2e6b88b69d65",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7dbcdd52-2ac8-435c-9fee-8cd42049f819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3a98e7-7b27-41a7-a480-a57f8bce951e",
        "cursor": {
          "ref": "ba3130af-048b-43e2-9dc4-f246d02e8d06",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5de4f7b0-42d5-46f9-8b9b-2486f9c9f1c3"
        },
        "item": {
          "id": "1f3a98e7-7b27-41a7-a480-a57f8bce951e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "95d541aa-ed2b-4143-9b24-9eec44caea30",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd8ab83-52dc-4555-aba3-f13aeead5c08",
        "cursor": {
          "ref": "978ba1d5-011b-4f3f-97df-b4687a075f81",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c1a8ae62-f2e6-45dc-a1f7-11d81d449d6e"
        },
        "item": {
          "id": "5bd8ab83-52dc-4555-aba3-f13aeead5c08",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9dd9caf5-f9f7-4386-8062-ea06be8c94c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a017184-b803-472d-82cf-b58d5f7b5bc1",
        "cursor": {
          "ref": "ddb2c52a-d7c8-41ac-89fa-bac889230d46",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "81eb109a-5a5d-4d5b-9654-615f8e4706aa"
        },
        "item": {
          "id": "8a017184-b803-472d-82cf-b58d5f7b5bc1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b60f0e8c-58de-4ca7-8a14-21f8060d8f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1970eb5-e8d1-4bb2-872c-d3639081b42d",
        "cursor": {
          "ref": "2a705f63-e05e-4c0b-91ba-9d9fd1f262ee",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e81f8701-74ad-4075-872a-d5fb873cdf78"
        },
        "item": {
          "id": "a1970eb5-e8d1-4bb2-872c-d3639081b42d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "81602b69-cd2d-4465-b51a-973303222ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54745c32-7585-42da-b302-fa24fb3f9051",
        "cursor": {
          "ref": "c76e6621-b280-4b15-a6d9-bef1b4ffd556",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "efc63bea-616d-466a-887f-e99d337d7953"
        },
        "item": {
          "id": "54745c32-7585-42da-b302-fa24fb3f9051",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "84907ab7-1e31-4905-ba4c-175ff63152ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290cd90a-2ceb-4c83-a297-8a7bb163957f",
        "cursor": {
          "ref": "9fb08617-b312-4bdb-baeb-3fcea8b9ba06",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3fdd943b-81ab-4c45-a964-7bdefeb87390"
        },
        "item": {
          "id": "290cd90a-2ceb-4c83-a297-8a7bb163957f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c01bd193-241a-4c94-999e-c35ec222cbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a59a756-e4b1-41bb-b68e-c2e95a4e547f",
        "cursor": {
          "ref": "459f865d-d890-40a8-a084-49b77b82fda8",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "28c2f60d-e1c6-44f2-967b-2db176639ba6"
        },
        "item": {
          "id": "4a59a756-e4b1-41bb-b68e-c2e95a4e547f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "39e3c3e8-38b9-4463-89e0-218d09404c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738920a5-e23a-4147-abcf-ae3107a08587",
        "cursor": {
          "ref": "2e9d2f91-cf23-480a-ae90-7d23dddd06fd",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "85aa6415-ac92-4e34-8e79-aa88cf8bec88"
        },
        "item": {
          "id": "738920a5-e23a-4147-abcf-ae3107a08587",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "76627120-300d-4939-b691-314424fb6e79",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a053cb-92ef-4a3e-b61b-ac6357532b23",
        "cursor": {
          "ref": "40a7d48b-74c2-4c0b-a8d0-e5003bfa5001",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4311bc62-5c28-49e8-9113-bbef3645207e"
        },
        "item": {
          "id": "c1a053cb-92ef-4a3e-b61b-ac6357532b23",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0162c1ba-19d5-47fa-a778-394c3ea4e280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e876b8c9-a784-48ab-a06d-027d644fe62b",
        "cursor": {
          "ref": "2f9528c9-131e-4b71-872d-195c0429f428",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b8fa5c94-751f-461b-b475-c73a0061b2e6"
        },
        "item": {
          "id": "e876b8c9-a784-48ab-a06d-027d644fe62b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d6c9aabd-7e1b-464e-ab0b-1219018dfc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b884b5e-5947-4c23-88c3-6b256fb33e86",
        "cursor": {
          "ref": "2615ec94-94b4-46e2-9412-1fa5da654382",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fb6df712-2730-420d-9587-c1b1e3a4e4f2"
        },
        "item": {
          "id": "7b884b5e-5947-4c23-88c3-6b256fb33e86",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4efd9709-165a-4c55-a31d-6c4fcd371b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a91ce3d-4489-466c-81d2-22d55bf07222",
        "cursor": {
          "ref": "9d882863-8a86-472f-baad-bebdec9738df",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dd8b8ce7-5a34-43e6-ba2c-77c0d1b0e742"
        },
        "item": {
          "id": "2a91ce3d-4489-466c-81d2-22d55bf07222",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e2b878d2-9421-48f0-9d25-1275b786f533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9df49d-570c-4742-ac34-a186c9b35904",
        "cursor": {
          "ref": "4005b6d4-799f-4190-ba00-1d6006fe8d88",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fc641fce-edae-49fd-99d6-1621c35540c6"
        },
        "item": {
          "id": "af9df49d-570c-4742-ac34-a186c9b35904",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "317b5e5b-ba3c-4689-9b76-9c4f6cfd42dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b78b04-26ae-4b92-8af7-a36c925916a7",
        "cursor": {
          "ref": "a4574671-c2fb-46bb-ba11-07670e858f50",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "28cc709b-a345-4585-8029-d7ed122d6c4a"
        },
        "item": {
          "id": "f2b78b04-26ae-4b92-8af7-a36c925916a7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "74c47b8f-3891-4f54-af64-b181f02d745b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52192b5c-8d0d-4c2c-93a8-41f230321de0",
        "cursor": {
          "ref": "6d15557e-5f99-4296-a6ba-2c2678c7602e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ac623bfb-63c8-47ae-a77e-e595cd31d63a"
        },
        "item": {
          "id": "52192b5c-8d0d-4c2c-93a8-41f230321de0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c8e2c940-2523-4f4f-ae19-dfb10c25834c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee27bdd-890f-46a6-8b8a-52b600c2b123",
        "cursor": {
          "ref": "793c6368-1e32-44eb-984e-a82e79ca8cc9",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "584bc841-b23f-403d-9b20-9cbc83fc02d4"
        },
        "item": {
          "id": "1ee27bdd-890f-46a6-8b8a-52b600c2b123",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b95ace22-dfd2-4256-8c0b-74dbeff8abf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b96571-6071-44bd-b2b9-f434bb537296",
        "cursor": {
          "ref": "cfb560e4-c9d5-4d4b-ba48-b429fed66a6c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1459e3e9-df25-4c87-93bf-b9ae3395b03d"
        },
        "item": {
          "id": "82b96571-6071-44bd-b2b9-f434bb537296",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4b95c5df-f4b9-4249-a280-7a7b215c285f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33a644e-7b53-42c2-a9be-383bae856a40",
        "cursor": {
          "ref": "b375ef35-94a6-4812-ad48-b15ab8e53586",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "eeb0ec56-6b87-4d8e-9d75-aa3a614012d8"
        },
        "item": {
          "id": "d33a644e-7b53-42c2-a9be-383bae856a40",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8ec909fd-e7bc-42ea-aef2-81570fe57603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b7ad06-e896-43b2-a320-d917b6de6975",
        "cursor": {
          "ref": "5327a781-e425-47af-95c6-892c429a8dac",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "73938079-a3ad-4fd3-bdaa-f5e7d8bb6dea"
        },
        "item": {
          "id": "22b7ad06-e896-43b2-a320-d917b6de6975",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "45530ed7-41f9-4f47-980e-005e9eb62f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4dcf6fe-6074-4fb1-a859-4441c4a23585",
        "cursor": {
          "ref": "28983c1d-e9c0-4926-a300-42f6cf5a281f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "50bd3960-6cdf-456b-b5b6-fa299dca38e1"
        },
        "item": {
          "id": "f4dcf6fe-6074-4fb1-a859-4441c4a23585",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "26eaf17f-a6b8-4f27-b9c8-80826babcfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef55d3b-67da-4072-b845-8cf991b84de7",
        "cursor": {
          "ref": "c721b093-2036-499c-8fb2-7c75d220606e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ed1bb36b-3707-49e5-9218-54a110ebcc16"
        },
        "item": {
          "id": "7ef55d3b-67da-4072-b845-8cf991b84de7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7dacc61f-d355-4d39-bec4-be5d6b708e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382b7b10-a423-49ca-97ef-700124b24b8c",
        "cursor": {
          "ref": "ea8e76b9-24f8-486c-8e81-430b75088d40",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "64dcb96c-de6e-407c-b792-39a70b8ca2f5"
        },
        "item": {
          "id": "382b7b10-a423-49ca-97ef-700124b24b8c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "818b8bc2-1408-4dc4-be97-02eb50d7e031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8f9d43-70cc-4403-8538-450027006690",
        "cursor": {
          "ref": "524cb17e-f03d-4e02-8bac-ad1f8baeaa6a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9631abea-0505-43d6-959b-f9a1a1e6f7ef"
        },
        "item": {
          "id": "2f8f9d43-70cc-4403-8538-450027006690",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d7f17ce3-1a4e-4313-9826-3bfaaaff980a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f65a93c-12e4-442e-9825-770d22cae86f",
        "cursor": {
          "ref": "0198388d-0bb3-4d18-bcdf-0fa01b7d76cc",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ccfa2f80-fc78-4311-b392-0a0279309c45"
        },
        "item": {
          "id": "8f65a93c-12e4-442e-9825-770d22cae86f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0b2bbfca-2d3e-4788-86a0-aaa0146b759c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7e4d7a-d561-4fde-b561-8952c5720834",
        "cursor": {
          "ref": "1dcf21b3-5011-4528-85b8-39b526a88f69",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2427553b-9e1f-4677-bc37-18f045d8dde0"
        },
        "item": {
          "id": "5c7e4d7a-d561-4fde-b561-8952c5720834",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6b516325-a3ee-4df9-b377-569475854d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d9c31a-bd3d-4b02-9115-c741d6f2469b",
        "cursor": {
          "ref": "a94ae7ae-6feb-4b85-a665-93e9f0a2dd17",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "89fa2f77-211d-4ef2-95d7-98a77e9ecafc"
        },
        "item": {
          "id": "b1d9c31a-bd3d-4b02-9115-c741d6f2469b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "490660bf-549b-48bb-9914-7815bced2dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec6eda-1bc6-47b1-9a32-fd8818045de9",
        "cursor": {
          "ref": "94393063-7a31-476b-925b-4a64e9116da9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "40b55e19-2e72-4e0c-95b8-0cba24e4620a"
        },
        "item": {
          "id": "62ec6eda-1bc6-47b1-9a32-fd8818045de9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8bd40324-ab2e-4e44-8c33-a84e6c11e3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30b17f8-415a-44dc-a9e2-f8d393f0b508",
        "cursor": {
          "ref": "ee053cf5-8cc4-4e53-b066-b4282fff6865",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b280f0d9-850f-43e2-a326-de6e77dc0b40"
        },
        "item": {
          "id": "f30b17f8-415a-44dc-a9e2-f8d393f0b508",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ca19202d-fa61-44a6-8c9a-5f23bea2fd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b9efc1-5a3c-48c6-8c26-b1ab95656479",
        "cursor": {
          "ref": "96e80286-8bc4-4a5f-85cd-c13fef01187b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "01718030-e3bf-456b-b9d9-c3e4e983b1de"
        },
        "item": {
          "id": "01b9efc1-5a3c-48c6-8c26-b1ab95656479",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f386ec02-600e-4d56-a7e3-d4f0d5ef8124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd17434-d793-455e-95af-049b72a77527",
        "cursor": {
          "ref": "7c5f5e4a-e1d8-40c1-a89a-f76a17f13b49",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b1b3fc10-0acb-4b00-a731-d13bd4039c93"
        },
        "item": {
          "id": "dfd17434-d793-455e-95af-049b72a77527",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8183feca-ceb0-4d5a-8966-48bdc1ec92c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439c1661-51b6-4a70-bf85-27fa5096de7a",
        "cursor": {
          "ref": "a0bb2857-ac79-427f-bd7c-66b307e33ac8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "64af2ce4-c2b5-486b-a856-b1059fb4c793"
        },
        "item": {
          "id": "439c1661-51b6-4a70-bf85-27fa5096de7a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7bf90034-2f29-4e13-b256-f2799fbdd915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec9267c-217b-4a33-b163-d6f6dd8343bb",
        "cursor": {
          "ref": "b9b63f4d-cdb2-434e-a401-1e534c9e4436",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f5229be8-2ee0-495f-9895-05ef8a51d5f8"
        },
        "item": {
          "id": "7ec9267c-217b-4a33-b163-d6f6dd8343bb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3b1d244a-aba5-4602-8487-236c0315f0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da22ca17-bb42-4699-8209-a6714dfaabba",
        "cursor": {
          "ref": "b2b6f41f-7063-4272-ae44-3443fa5d087c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8971d51b-7864-44e4-b26b-64e2c48b41a5"
        },
        "item": {
          "id": "da22ca17-bb42-4699-8209-a6714dfaabba",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bae741da-3cb0-452b-a67a-a944cd6bb131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ee4e1d-bc5d-46e4-93e1-e943769b8feb",
        "cursor": {
          "ref": "301bfb61-aa2d-4357-998a-cb35af87d412",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "371d67ff-0a18-4e15-be31-57fdacacfc11"
        },
        "item": {
          "id": "22ee4e1d-bc5d-46e4-93e1-e943769b8feb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c00cc2c7-5c58-48f1-a089-ab8f5d50eb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7c356b-b2ba-42f0-8be5-c29df8859454",
        "cursor": {
          "ref": "52082450-80df-4619-9492-c3004bfa7132",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0cf5ca4a-6793-4f30-9206-beaa32a6ad1f"
        },
        "item": {
          "id": "ff7c356b-b2ba-42f0-8be5-c29df8859454",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1c0c3927-af61-46d3-9de6-1e9c80b84964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60259395-7d64-4a0a-9807-bd64481384ff",
        "cursor": {
          "ref": "c817da39-18df-4943-b2c8-715f61f6d307",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e855c401-85b5-4e99-981a-1fe0e63262c5"
        },
        "item": {
          "id": "60259395-7d64-4a0a-9807-bd64481384ff",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "52c6dfec-202d-40d0-9759-ee0f1af37130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa53d919-0ada-447e-bb54-a1d43b044ce7",
        "cursor": {
          "ref": "bd13c191-bc92-4f1f-b886-7cba2f3d0d52",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "da2df67f-1799-4df6-9c47-672b918cd6f7"
        },
        "item": {
          "id": "fa53d919-0ada-447e-bb54-a1d43b044ce7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d45c665d-6412-4f5b-bab6-af6276c039e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185d2197-5fec-4729-b0df-f9dc75bc10d7",
        "cursor": {
          "ref": "32bd28b8-afd6-44ec-8461-41e84d814cf4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b47473b7-5e6b-4fec-b93e-db15d8a50656"
        },
        "item": {
          "id": "185d2197-5fec-4729-b0df-f9dc75bc10d7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "74401cfb-dc8f-41ac-b049-994f8968c2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a688dc-03e3-44b8-bb3c-4eba8a9ffba3",
        "cursor": {
          "ref": "3245186d-66ff-4a03-b29e-235c69275719",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ffdfbaad-63b7-41a3-beef-4de5cf3de301"
        },
        "item": {
          "id": "18a688dc-03e3-44b8-bb3c-4eba8a9ffba3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "97396522-48ce-4ef1-81fb-22763fdbaf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe79b851-59fb-4dd3-a922-5b051bb2f73a",
        "cursor": {
          "ref": "2ed054b2-3da3-4d8d-9c38-a33193820a6b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0c691798-9151-425d-bf9b-5fb8cbc6d294"
        },
        "item": {
          "id": "fe79b851-59fb-4dd3-a922-5b051bb2f73a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8f9fc31c-f12a-40b3-b63f-1266a245f276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4d086f-f690-4c76-a598-4d4dcff94b1d",
        "cursor": {
          "ref": "55c06819-a1ed-406b-8e42-a4217fad709e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "43b0e912-fcef-4929-8637-c19c645371ab"
        },
        "item": {
          "id": "3b4d086f-f690-4c76-a598-4d4dcff94b1d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7571bf2e-698e-4840-ad11-22aef9daaf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81e5d57-f1dc-4c0e-bb2b-f176511b2554",
        "cursor": {
          "ref": "ce9a53b8-eb8e-434c-a801-281d3c0a5a2f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "542e47d9-ab46-431c-bddb-c4eb19b4d42a"
        },
        "item": {
          "id": "e81e5d57-f1dc-4c0e-bb2b-f176511b2554",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e4a0d684-c370-4446-8795-69276fe7293a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff42a86-a918-40c7-baf9-5cf931a66f16",
        "cursor": {
          "ref": "4af664b1-9669-4d09-a69d-8766c70c0dbe",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1fae24cd-7055-4008-9a95-04cb50ea5a3c"
        },
        "item": {
          "id": "bff42a86-a918-40c7-baf9-5cf931a66f16",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "03e2f937-081d-4314-bded-19aae3464f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25946aa-dbf9-4007-9a7e-124a3ccb3da1",
        "cursor": {
          "ref": "cedd1366-1817-42cd-b228-114bcc02534c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "92eadecf-135a-4921-b395-ee0347ab065f"
        },
        "item": {
          "id": "f25946aa-dbf9-4007-9a7e-124a3ccb3da1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f9d9c877-a83d-4a39-868d-1ffe521d34a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47998a5f-ff09-48e9-9a02-fcbeccd55974",
        "cursor": {
          "ref": "6c75cc88-1cfb-4459-891b-c7b6d0d777a2",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "21bc6607-0b25-4bfb-953b-6ef9445371f7"
        },
        "item": {
          "id": "47998a5f-ff09-48e9-9a02-fcbeccd55974",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "54c85b7d-20a5-4129-bcf4-612b9065b84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c58ac6-5229-4452-a577-4fcc13b66929",
        "cursor": {
          "ref": "c244cb5d-3864-484e-b565-d72f8bd1a2ab",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c3586dc1-3e36-4c09-966c-bba6a89526df"
        },
        "item": {
          "id": "b5c58ac6-5229-4452-a577-4fcc13b66929",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5fcc8b78-5566-4b5c-b3e7-2b5ab3aa4d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1445fd-04f9-4460-b19e-9bad8d7b2c98",
        "cursor": {
          "ref": "3db61a6f-7114-41a8-8833-4f00f0149139",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e55c4866-2af4-489e-95fd-fae402d67438"
        },
        "item": {
          "id": "ef1445fd-04f9-4460-b19e-9bad8d7b2c98",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b4fec13c-9f72-49da-9981-a16b0660a953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd6c6e9-9e20-4de1-bed2-a12d811b3603",
        "cursor": {
          "ref": "875648cc-206c-4dcf-947d-399e7a06fdf8",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7526a25e-9841-4307-857c-b560d4a20460"
        },
        "item": {
          "id": "1cd6c6e9-9e20-4de1-bed2-a12d811b3603",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "26d7f870-174f-48d6-9cbe-9f090ea64e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a29308e-175b-41b7-9bfb-19cc9ac7a1ce",
        "cursor": {
          "ref": "c38575ac-1ebe-4c7a-944b-b0ca04e50ac5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "042dbc49-b426-42ff-ad51-b6af8e2669c5"
        },
        "item": {
          "id": "2a29308e-175b-41b7-9bfb-19cc9ac7a1ce",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f8c1e656-993c-43fd-acdd-e82ff7b571b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9492b04-4887-4407-b1bc-b8ca44335465",
        "cursor": {
          "ref": "b2510f6f-0236-4c88-8bfd-ef6356704493",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7e776a05-5950-4058-bbfd-69e24ed7fc5c"
        },
        "item": {
          "id": "b9492b04-4887-4407-b1bc-b8ca44335465",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "600cb09c-85a9-4527-822f-10db0d31f2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9879892a-191a-4e39-9c1a-ea2d161fa7b7",
        "cursor": {
          "ref": "125f572c-555b-431d-b1c8-3993c3051039",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3cdadf8f-d17d-469e-9945-afe30096d1ec"
        },
        "item": {
          "id": "9879892a-191a-4e39-9c1a-ea2d161fa7b7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5e536bba-945c-4f9b-a558-85c6b371b457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74bfd39-22b8-4662-9c5a-4b571f7df7aa",
        "cursor": {
          "ref": "60bc531d-62a3-443f-84ff-843ce9382f83",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "54dcd952-6369-44e8-ba02-3a321bf424aa"
        },
        "item": {
          "id": "e74bfd39-22b8-4662-9c5a-4b571f7df7aa",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d97dff67-575b-4dce-a08e-8c8b3a4bdbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77039eb4-cb9d-47b1-93e3-c31d823d7934",
        "cursor": {
          "ref": "89fcc2f2-e7c3-4c35-b446-3c3e54f6e00b",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b346044a-6ae7-418b-836d-cf118720631d"
        },
        "item": {
          "id": "77039eb4-cb9d-47b1-93e3-c31d823d7934",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "01785711-8756-46c6-bd2d-da3c1006fe76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528afe32-d3e4-4dcf-8aff-d8208da0bcea",
        "cursor": {
          "ref": "7ae3af3b-7afd-463e-adfd-365308c02f27",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cef91d70-794a-4823-9109-f0369b80dc72"
        },
        "item": {
          "id": "528afe32-d3e4-4dcf-8aff-d8208da0bcea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "54a64652-9a3d-4b93-8f91-7d922850b167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5061a2f1-d890-45bd-be37-f028e71d7669",
        "cursor": {
          "ref": "30b03f9a-ecc4-41e2-920a-dcfcf6db66e8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2a8fd8df-40be-473b-8e45-e56259f14498"
        },
        "item": {
          "id": "5061a2f1-d890-45bd-be37-f028e71d7669",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d9425bf7-3719-4976-802e-a00f7098d822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd877d02-19df-4c76-ad32-7717f16d8842",
        "cursor": {
          "ref": "7377cab7-6440-4a48-a140-5c0b6d9eca16",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ce1003f4-5f03-4df8-8163-6a66a92bd0ca"
        },
        "item": {
          "id": "bd877d02-19df-4c76-ad32-7717f16d8842",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "96cd6ca6-11ef-4b58-bbb9-0fe70a83c0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54f79fc-5c80-4123-8838-5dd63485a370",
        "cursor": {
          "ref": "e00dfccd-c552-432e-8e91-e1bd5bddf9b3",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8683911f-3bec-4fdc-8f54-470d0b2a0787"
        },
        "item": {
          "id": "b54f79fc-5c80-4123-8838-5dd63485a370",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "57985012-13b8-4b42-ad32-7d7e54c6a014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6636e1-098c-424f-a0b1-86651a0e4113",
        "cursor": {
          "ref": "6582bc3d-85df-47a6-a34a-eaab6843eb54",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b7bcbe37-197e-4fec-ad0f-078c2aa18e5a"
        },
        "item": {
          "id": "6a6636e1-098c-424f-a0b1-86651a0e4113",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "265de993-29e5-4242-8d37-b7e8f3d264c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f15709-43a2-4bf8-acab-20f04e787bfb",
        "cursor": {
          "ref": "2068990d-b93d-4bf6-8ef6-63677f46844c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "105a6f55-b399-4191-b9c1-6f589ce1578f"
        },
        "item": {
          "id": "88f15709-43a2-4bf8-acab-20f04e787bfb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d15e3155-8486-4b7a-8405-c62e213eefa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "17c13d9a-1fc2-4a0d-b560-6f0d54ea5f9e",
        "cursor": {
          "ref": "4636a0e0-cc25-4196-932e-80450302cec4",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1a84978f-e70d-4b02-bb67-b65c42c2585b"
        },
        "item": {
          "id": "17c13d9a-1fc2-4a0d-b560-6f0d54ea5f9e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "298466a7-ca0d-4451-8282-d259d43bdaf6",
          "status": "Created",
          "code": 201,
          "responseTime": 14491,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "88764330-2d33-4781-aaef-c30608cee9f2",
        "cursor": {
          "ref": "fdcb99c0-6520-4dbf-ac95-f4afc420de4f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9aac7589-1b01-4f11-928c-9e3f77e53924"
        },
        "item": {
          "id": "88764330-2d33-4781-aaef-c30608cee9f2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d274b820-f615-4bc3-aa84-f6c0151bfaaf",
          "status": "Created",
          "code": 201,
          "responseTime": 13155,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8f16dc-b4b2-4303-a25b-f1ea14a30b9a",
        "cursor": {
          "ref": "ee8dbc9e-cf85-4b87-9553-f579f8b8a0f5",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d7351843-a7dd-48d1-b117-0d57c9f142d1"
        },
        "item": {
          "id": "ae8f16dc-b4b2-4303-a25b-f1ea14a30b9a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c4c84f8a-a651-4a77-b61b-b2a02390fa35",
          "status": "Created",
          "code": 201,
          "responseTime": 13547,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f35a28-4616-4151-bfb2-767f6b42f55a",
        "cursor": {
          "ref": "2b5545d7-3821-433c-a3a7-477f1c41200e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "76e0d522-d12e-4f79-9ee4-39a3762c8272"
        },
        "item": {
          "id": "53f35a28-4616-4151-bfb2-767f6b42f55a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3d102d0f-76e2-4ce6-949e-73a498a2f3f4",
          "status": "Created",
          "code": 201,
          "responseTime": 13739,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc0995e-9c99-4dbd-a417-a60a5515d7de",
        "cursor": {
          "ref": "b9633e82-31a1-4ae4-bfef-e23be9f99205",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "83559749-a8d9-4b7f-a451-55604b0d767e"
        },
        "item": {
          "id": "7cc0995e-9c99-4dbd-a417-a60a5515d7de",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d3586a78-830f-4026-94cb-0d1818371df6",
          "status": "Created",
          "code": 201,
          "responseTime": 13699,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-14T00:44:03Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-14T00:44:03Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "24d452fe-0352-4511-936c-202f4e76e6a0",
        "cursor": {
          "ref": "0f23d8b5-568f-4a11-84d3-730f6a1de508",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9766ebf7-32d9-4b9c-b7e7-c4fd3ec8e66c"
        },
        "item": {
          "id": "24d452fe-0352-4511-936c-202f4e76e6a0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b1c7b472-522b-4726-baac-4e1a08c0f01d",
          "status": "Created",
          "code": 201,
          "responseTime": 13751,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6c8246-424d-4b54-9e52-c42202ab90f9",
        "cursor": {
          "ref": "1cc1b64c-f22c-4744-8316-2398dde9b062",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b5fbd342-51fb-4c57-8b37-a01c632fdf39"
        },
        "item": {
          "id": "4e6c8246-424d-4b54-9e52-c42202ab90f9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "12d79091-3e60-43a0-88c8-6569d28b07e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63fb81a-ea8a-4f3c-a1c4-aff109dcca1a",
        "cursor": {
          "ref": "4d7ba179-bb09-44d1-9fd9-dc5edcfea83d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b9057683-de44-431d-ba95-fb46f44b5871"
        },
        "item": {
          "id": "e63fb81a-ea8a-4f3c-a1c4-aff109dcca1a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2cd91c29-26c8-4af8-8041-d3c60640c42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63865831-6cfe-45b9-a88a-5652f132b78a",
        "cursor": {
          "ref": "4feccdaf-a575-4219-9fee-229f3544c8bd",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d6374069-d2cc-469a-8956-82880bf08f1c"
        },
        "item": {
          "id": "63865831-6cfe-45b9-a88a-5652f132b78a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ff827234-dbb6-4bf0-a623-2d691ff5bbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa779ca5-edd1-4844-8b74-85253722029b",
        "cursor": {
          "ref": "49ae8e3e-b969-49d7-afb3-36a10e72fc93",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ac960b3d-a509-4a95-8acc-002c3f4e44d7"
        },
        "item": {
          "id": "aa779ca5-edd1-4844-8b74-85253722029b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3c9dfbee-34ec-490c-9a6c-e86be05d65bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3013208b-a2ec-4e1a-a880-6fb110f0420f",
        "cursor": {
          "ref": "f57b20d4-cdef-4d24-9008-72e5c3539156",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d0d29fe7-7ed6-4ce4-bb64-78a61d33c87f"
        },
        "item": {
          "id": "3013208b-a2ec-4e1a-a880-6fb110f0420f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b445e486-8d8e-4a52-8f6a-839a7a83c84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e223c8-abc2-4e64-89b0-3bc61e6e108c",
        "cursor": {
          "ref": "51210bf9-5e38-4be3-bb61-c2fbe1a2dbfc",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "59500b5b-4ce0-49fd-8c14-33699952d550"
        },
        "item": {
          "id": "25e223c8-abc2-4e64-89b0-3bc61e6e108c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a21ded0a-1110-4ea9-8ed4-2c1a65e41f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75836cc1-2bc2-47da-8a8f-002f118ccf17",
        "cursor": {
          "ref": "6e6ddfdf-7eb3-4d1c-95cc-433192ce8e91",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4e557c3b-87c9-47a1-9e3d-a22b1f1cc973"
        },
        "item": {
          "id": "75836cc1-2bc2-47da-8a8f-002f118ccf17",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "48c1d034-4608-4e8e-9844-593396555351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00692379-8511-4e9f-b712-d8f0daf7fe49",
        "cursor": {
          "ref": "66c7f97b-740a-4bef-b11b-b66cf9968f39",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4eaa2528-1d82-4c8e-8ae2-1a16fac96b86"
        },
        "item": {
          "id": "00692379-8511-4e9f-b712-d8f0daf7fe49",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "95f34cb5-e2b3-486a-a950-a95101dda482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56a4e26-9548-498d-bc33-55fd36e73757",
        "cursor": {
          "ref": "f8bdca18-73ec-4793-bffc-ca921049d4b1",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "85550d26-c506-4c4f-96bb-9f186d52ca62"
        },
        "item": {
          "id": "f56a4e26-9548-498d-bc33-55fd36e73757",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c94f0b83-f842-41ca-b6b8-2332f89c5450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d04b77-adf2-4e27-84b0-1a5472afa393",
        "cursor": {
          "ref": "b046e22c-5e80-4159-987d-fa29968ef95c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2027ad75-96f2-4eca-88d3-e86394c7f7ef"
        },
        "item": {
          "id": "c6d04b77-adf2-4e27-84b0-1a5472afa393",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4ad2199c-e364-4d4d-8ca2-4e4e04a2019b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f058ae6d-a1c9-422b-845c-d93a60d7b031",
        "cursor": {
          "ref": "acef1032-2549-4863-bb7c-11a1f975792e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "31166ec5-9408-4023-8e88-db7341f2330e"
        },
        "item": {
          "id": "f058ae6d-a1c9-422b-845c-d93a60d7b031",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "114dc88d-c64c-4997-be6e-08a0a12fde24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb36b5a2-c00b-43ac-87f7-3e1002289097",
        "cursor": {
          "ref": "46fe1e37-9808-48a3-ba1f-24c2ccfd4022",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d6a5ff95-8820-4f99-858a-cdd88abd8f49"
        },
        "item": {
          "id": "fb36b5a2-c00b-43ac-87f7-3e1002289097",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5bc94181-d5bc-419e-88df-f2878931376d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bed287-6df8-4270-a60d-5126c94cc608",
        "cursor": {
          "ref": "54995204-3d97-4a58-b13a-195aca3842f4",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0a9d0f03-e798-451c-b4d9-85c1bc79294e"
        },
        "item": {
          "id": "74bed287-6df8-4270-a60d-5126c94cc608",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b48b7053-ab06-4e8d-ae9f-85335f9bd53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d1a916-2b2f-4bc3-bcdd-a04b1e5afb25",
        "cursor": {
          "ref": "f77dae85-84e5-48f1-aef0-f00d7c357028",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "881d7ecb-a492-404e-a0c9-33ccb0cf3a28"
        },
        "item": {
          "id": "f4d1a916-2b2f-4bc3-bcdd-a04b1e5afb25",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "36505f23-44ed-4b1a-b3fa-b819113ec3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70db02da-32b4-444f-a7c3-86f3f22b8ea6",
        "cursor": {
          "ref": "16df76c2-114f-4fb0-8e61-b5fcd82934d1",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "aabcfd58-fcef-4981-b047-cad3bf745eb3"
        },
        "item": {
          "id": "70db02da-32b4-444f-a7c3-86f3f22b8ea6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ebdd6841-d3b8-4416-a9e3-238e8a624c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015b1514-ccc0-4906-9d7f-9620815fd588",
        "cursor": {
          "ref": "8baa0e2b-4a42-4b3a-a7e1-69fdb025f9ac",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "57fa64df-3e37-425a-a9d9-f00e4813dbb7"
        },
        "item": {
          "id": "015b1514-ccc0-4906-9d7f-9620815fd588",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1c785aa4-724c-4641-bd54-ab818f351295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b654dbc2-07e5-46ae-8a96-39d70374c875",
        "cursor": {
          "ref": "e009aadd-faf5-4b36-a651-3b4ca1461d3a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e8646b47-0a9d-459a-956c-848b639a9a84"
        },
        "item": {
          "id": "b654dbc2-07e5-46ae-8a96-39d70374c875",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b9b5db1c-7dc2-4f05-a944-45868a2abd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70468ba3-cf84-4e77-b808-6bd09b1cca58",
        "cursor": {
          "ref": "0595744f-89ed-4ddc-a1b1-d2701ff098f4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f7f25503-5e63-47c7-8e49-ef6ba7f62b75"
        },
        "item": {
          "id": "70468ba3-cf84-4e77-b808-6bd09b1cca58",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "21bcbe0f-4ffd-4f4d-b9c5-62f3528b8b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53fff7c-c1dc-46c6-aa40-ef1f7f2c5e33",
        "cursor": {
          "ref": "b41c87ba-74e2-43cb-aea5-f5a31f59a682",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1b72b775-a783-44bc-9955-082eaa3418b4"
        },
        "item": {
          "id": "e53fff7c-c1dc-46c6-aa40-ef1f7f2c5e33",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "103cb672-f391-40b3-90b1-bba9a3c4c5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea82d5f-9740-41db-8b3e-4f438a576f7f",
        "cursor": {
          "ref": "f54488a1-5381-47fa-83df-0b96d8059d7b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c680aac8-a34c-47a4-a247-6b9ca8e2ca70"
        },
        "item": {
          "id": "5ea82d5f-9740-41db-8b3e-4f438a576f7f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eb0fde3d-c330-4a39-b2b5-52c53ecce06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062ad215-4edf-4726-a596-4d12fe19d03d",
        "cursor": {
          "ref": "d6badb05-83e0-4dcf-9485-a01d7e83c10d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3818cdf0-1ada-4786-97d3-f57f3277a92a"
        },
        "item": {
          "id": "062ad215-4edf-4726-a596-4d12fe19d03d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a4c8c4b7-23b4-4bd5-bf5a-a1caa097d3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87dd675-c786-4c3f-b650-b7828cbdd382",
        "cursor": {
          "ref": "04de56e6-79c6-4652-b950-e7c02f2a48a5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f6b81412-c226-4753-83eb-21195d886d4d"
        },
        "item": {
          "id": "f87dd675-c786-4c3f-b650-b7828cbdd382",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dffe0cb4-e16d-4297-bca0-9c7687a951b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda970a6-3d4c-4ed4-8a39-c7db62db2447",
        "cursor": {
          "ref": "bcb1d97d-0552-4de7-91cf-29c3e5ff381f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b29364bb-4cdf-429d-b061-3071f1e67ac5"
        },
        "item": {
          "id": "bda970a6-3d4c-4ed4-8a39-c7db62db2447",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6773c7fa-5a2f-424a-be5c-1ad6f181ad57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e2e6e3-0760-4554-aee2-71d52ad3a9dd",
        "cursor": {
          "ref": "337a4b61-69bc-413e-99b8-ca9c62a12578",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1f67bf4c-9f2b-4779-8e44-b8eccde86ef8"
        },
        "item": {
          "id": "c5e2e6e3-0760-4554-aee2-71d52ad3a9dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4b482c02-c0ed-4942-aa1a-4944b97697ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7220e22-2c05-448e-a83d-383b86a0b79f",
        "cursor": {
          "ref": "a17162c3-e587-43cc-b42a-31d1f0205c82",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "15811db9-0946-4ce3-9adb-e0af2186d380"
        },
        "item": {
          "id": "a7220e22-2c05-448e-a83d-383b86a0b79f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "41de62f8-504e-4368-973c-881a26316869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24a9a81-53ea-410c-ab42-79003710dbc5",
        "cursor": {
          "ref": "03e51986-a3b3-4eb7-861d-d1e0213923eb",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "54bdf0fc-98f1-4ad5-922a-63c48d7810b4"
        },
        "item": {
          "id": "e24a9a81-53ea-410c-ab42-79003710dbc5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5583b6fe-46ad-4894-b158-a56b3042282e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8547b276-2e0a-4894-844b-34a2b3f37307",
        "cursor": {
          "ref": "b74cf920-0d96-4429-832b-000fae473305",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "44e1cb7d-7b87-4d9b-a7da-2eb4f31d6ea8"
        },
        "item": {
          "id": "8547b276-2e0a-4894-844b-34a2b3f37307",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bb4b39ad-ba8f-4e5d-80b6-4567dc7bf237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d699e76-4b1c-49b7-ac91-240204dca51b",
        "cursor": {
          "ref": "624cd18f-c1ba-46e4-81e9-662792a70c25",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9222917a-fa7c-4052-9fb4-42b1181a129e"
        },
        "item": {
          "id": "3d699e76-4b1c-49b7-ac91-240204dca51b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e39ea603-4f49-469a-9922-013d896d7c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e736e442-55c8-4915-be18-d70d4d2d2ba7",
        "cursor": {
          "ref": "28b6ce7b-ac58-48c4-9abe-9a18581b3b3e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "67f3193c-c14d-484c-a708-02855d9c400d"
        },
        "item": {
          "id": "e736e442-55c8-4915-be18-d70d4d2d2ba7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9fda83a7-1ddd-42b2-9c9d-b664815f6d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad081dd-a2bc-4d50-97b8-9354e5dd56e7",
        "cursor": {
          "ref": "149728f3-6f81-4c93-ae87-542e4f46badc",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c6ff86f2-14ae-41c4-894b-e67706c23570"
        },
        "item": {
          "id": "dad081dd-a2bc-4d50-97b8-9354e5dd56e7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ec3b6a4b-0ef7-4885-bfa5-e01e447b7538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5482c12-a7d9-4039-b529-025c9bcadf4b",
        "cursor": {
          "ref": "43da25af-134c-4901-988c-113fb79e2751",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "10d5e5dc-6a8c-4d21-8ea6-76789b0fac8b"
        },
        "item": {
          "id": "e5482c12-a7d9-4039-b529-025c9bcadf4b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "506b85d2-84d9-498d-ad44-b54d94d359ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a68270f-431e-40b8-942c-f081dbe26e3c",
        "cursor": {
          "ref": "86e6284f-34b8-44db-8700-16452fb44136",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d2fbf3fc-233f-4daf-8a62-173fb791ccd0"
        },
        "item": {
          "id": "6a68270f-431e-40b8-942c-f081dbe26e3c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "58f408a0-714f-47d5-8355-ca6f73d40525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdad2fba-6993-45bf-bc9e-a7a0dede3f60",
        "cursor": {
          "ref": "4babd56d-de77-4b24-966b-2143193e72b6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f5ddd42a-2820-4dd9-87fd-5ef8e09c9153"
        },
        "item": {
          "id": "fdad2fba-6993-45bf-bc9e-a7a0dede3f60",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b7dd7fda-4953-4fdd-9a22-cb1b7c2e6143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b726d83-5bca-46ef-bf5b-7d04a351da72",
        "cursor": {
          "ref": "06d92dc1-0ae8-44ef-9bbb-f74e6df6f68a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "be3d0e08-9d0b-47a1-b6b3-1ae876db5f1a"
        },
        "item": {
          "id": "4b726d83-5bca-46ef-bf5b-7d04a351da72",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dbbc4e5c-b65b-44fd-b824-b4521fb63c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2b9248-f7a8-4b14-94e7-20237b88e9e4",
        "cursor": {
          "ref": "9eafbe74-8310-4d68-96a3-3ee027d7ae70",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c18e6986-8f7c-44aa-8991-375c9e9eedbe"
        },
        "item": {
          "id": "ea2b9248-f7a8-4b14-94e7-20237b88e9e4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "be45ddf1-4d4c-4f04-bfc3-c21106b5b2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703d38da-12c9-45f1-bfc0-bc63f94c93e7",
        "cursor": {
          "ref": "33304144-9793-482f-bd06-1b23c4a02258",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "daffccce-371a-41d3-9bff-0f9a3038339f"
        },
        "item": {
          "id": "703d38da-12c9-45f1-bfc0-bc63f94c93e7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "782b8bb6-9aa1-4b58-abc3-5f88acd7d749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933edd4e-407c-4ba0-bbef-ad7d25bea79c",
        "cursor": {
          "ref": "0ec8b882-bb1c-4a6b-9528-dd2a24882d17",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e9ace1f6-2552-41d8-8c4e-c0e7fb0aed01"
        },
        "item": {
          "id": "933edd4e-407c-4ba0-bbef-ad7d25bea79c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9984aacc-5eac-4a08-ab5d-ad80c48d1fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1110299d-0be3-4239-b801-f992e3351153",
        "cursor": {
          "ref": "4626d740-12be-4606-8b49-f23c8383fb78",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8f6e0443-7ac0-4f4d-9bf8-50214cdab331"
        },
        "item": {
          "id": "1110299d-0be3-4239-b801-f992e3351153",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "afea885f-f5c8-4c14-bcd0-0da4a75a2927",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a604ff7a-281b-46a5-86cb-b49200d6fd6a",
        "cursor": {
          "ref": "e808f511-230d-4491-96c9-323a7f2d944f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6120922e-f2e6-4a84-94a8-9c457fa618db"
        },
        "item": {
          "id": "a604ff7a-281b-46a5-86cb-b49200d6fd6a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5fa332a8-e5d9-4584-b63f-07222f965baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aa45ef-afac-4d2d-b682-c5c1f1d2155d",
        "cursor": {
          "ref": "37a6216b-d921-46b1-99de-013b4516801b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1f1ada75-3b26-4d3d-a923-ccc181094da8"
        },
        "item": {
          "id": "28aa45ef-afac-4d2d-b682-c5c1f1d2155d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2e5ff537-fd9e-430d-839f-52a7840d07a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4478c9-e0e8-4673-a8d5-45f5ab9095ce",
        "cursor": {
          "ref": "442a25a0-83f7-47a8-8f60-3d370f3716ff",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "00d228b2-68c8-4676-b075-32e750875228"
        },
        "item": {
          "id": "0a4478c9-e0e8-4673-a8d5-45f5ab9095ce",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d51c6a23-cf42-4ef3-9b49-d4344ca46d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06fac46-98f1-464d-8368-b32e50ce5fac",
        "cursor": {
          "ref": "82b95a94-2e59-4810-916c-107faabc7c15",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e3eb8aaa-3ae9-4f0c-8671-38269f0ceb43"
        },
        "item": {
          "id": "c06fac46-98f1-464d-8368-b32e50ce5fac",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "23b663c8-04ab-4f93-95b4-da6bc6370c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58ccc86-6cdb-44fb-be46-82c1bcb1ef2e",
        "cursor": {
          "ref": "e3b8d98b-b5ab-4a97-9e71-957f9341deca",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "753fd345-7121-4ed1-a0fd-48a74f457ee0"
        },
        "item": {
          "id": "a58ccc86-6cdb-44fb-be46-82c1bcb1ef2e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "48cca857-db5a-4f5f-8233-ec46ecb62f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2050d54f-3532-4227-888f-3811c984f9d6",
        "cursor": {
          "ref": "f2a8e78e-3eae-42e3-acc6-a59333743b2b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "deb23cae-26d4-4509-84ec-56759e4ac04c"
        },
        "item": {
          "id": "2050d54f-3532-4227-888f-3811c984f9d6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3437b040-7b7c-471d-a4fe-3bfa412a3836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fa2dc9-983a-4dae-a5d3-847b829b4bf5",
        "cursor": {
          "ref": "40ccda8c-4475-47fa-8e41-0d67f6c52ec7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "747fd60e-52dc-4d0d-8598-48791a5d150b"
        },
        "item": {
          "id": "07fa2dc9-983a-4dae-a5d3-847b829b4bf5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "824160d6-0642-475b-837c-2661bd1ef358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cc7299-c191-4ecc-9339-562fc5ceccbf",
        "cursor": {
          "ref": "679c0cb3-a570-4a50-8152-c880790dc824",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "42dbbc94-9f72-4b0a-89fe-da8502301669"
        },
        "item": {
          "id": "38cc7299-c191-4ecc-9339-562fc5ceccbf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4b22bfd9-8f7c-429b-bda9-a5882d0123fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d4cb38-04e2-455b-bdbd-6382e14ac0d5",
        "cursor": {
          "ref": "96ee0c92-e0cc-4212-9308-3f29f18be067",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e80f117e-1c26-4ac6-9120-fe49eb8922d4"
        },
        "item": {
          "id": "71d4cb38-04e2-455b-bdbd-6382e14ac0d5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7e11d9d4-2489-4dc0-9933-5ec2c1b7eec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa08fa63-0f48-4236-8bba-68de109fe686",
        "cursor": {
          "ref": "321312cc-d64e-4f7f-896a-7902d6b08be6",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ba4d319a-a23f-4f12-bb07-0096e4aaa1e5"
        },
        "item": {
          "id": "fa08fa63-0f48-4236-8bba-68de109fe686",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ac6b8f90-65eb-4c4e-b370-8456b0b0a59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4498e210-2b8a-4c1b-848d-405b98c2f459",
        "cursor": {
          "ref": "0ee020a3-8cd8-4638-909d-931dcb296f9a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3f958da9-d00a-4cfe-8539-2bd4b9258452"
        },
        "item": {
          "id": "4498e210-2b8a-4c1b-848d-405b98c2f459",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ddfdae78-0c53-4d75-8e19-68ce177d6bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ed58f6-f890-47fc-b831-b819405899ea",
        "cursor": {
          "ref": "d7fcb856-05f5-4989-b4f0-3d4a1c76f0e8",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7aa29b11-71f5-483e-ae01-cdaf42a3dbb2"
        },
        "item": {
          "id": "19ed58f6-f890-47fc-b831-b819405899ea",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2b580025-09c5-4998-b265-ee0089fe2329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941e3077-ea57-41c0-a44e-9c17941f90ed",
        "cursor": {
          "ref": "63e86e14-3dfc-4600-a503-031a43d437eb",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4ed90c0b-822b-4bc1-967d-48b5eb906009"
        },
        "item": {
          "id": "941e3077-ea57-41c0-a44e-9c17941f90ed",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8b42ee21-a57b-40d6-8326-5f8cb38973f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da86ae00-fb0f-463d-bd59-c8f038a82aa2",
        "cursor": {
          "ref": "b413e6b0-0cee-4c07-8dba-3866029c0b1f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8d7b3867-6451-42d1-845c-e13e094ed257"
        },
        "item": {
          "id": "da86ae00-fb0f-463d-bd59-c8f038a82aa2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f061d1b1-0f1e-4b2f-9487-7615e31a8666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd43a65-095e-40bc-87c6-a1d7d8bcd5e3",
        "cursor": {
          "ref": "e9405e93-15df-462c-9dd5-e26e1b8a027e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a27f8869-b7d1-4de4-a9d7-3743797aa058"
        },
        "item": {
          "id": "3fd43a65-095e-40bc-87c6-a1d7d8bcd5e3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "51665407-4e69-414f-936f-7de0ed5f5f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6192016b-d6c1-4b89-bd91-d3a24ddadbb0",
        "cursor": {
          "ref": "6844fedd-b6a4-4a78-af17-59798c9a597e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "14bdd07e-f603-4b98-b481-07f132ad9ad4"
        },
        "item": {
          "id": "6192016b-d6c1-4b89-bd91-d3a24ddadbb0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c1a47b54-e37d-4ca6-87b3-bd3cdaa866e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3cb1a6-41bc-4df4-88aa-8d021ecdc002",
        "cursor": {
          "ref": "8e14ecbd-7c2c-470d-a2c6-c7281e086937",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "405df605-6450-44fc-bfb0-f4dfa8c65d6e"
        },
        "item": {
          "id": "3e3cb1a6-41bc-4df4-88aa-8d021ecdc002",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e478e0a1-8d51-46b4-bdec-15360cad5758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d3de6f-573b-46f7-8cdb-3b23a98b3d97",
        "cursor": {
          "ref": "6faeb7c5-9054-4348-b181-f877a7be4f03",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9f4c8326-f99f-48e9-95af-955cd40202da"
        },
        "item": {
          "id": "19d3de6f-573b-46f7-8cdb-3b23a98b3d97",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cf46caae-0e61-4aed-ae78-0bccf8207597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e0cc67-ddc0-4d64-abc1-ec3d6f890534",
        "cursor": {
          "ref": "deb6682f-f35d-4a77-96a8-acc86e688399",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d06227ca-dd48-4ccb-95a0-5f1a37d8b3be"
        },
        "item": {
          "id": "96e0cc67-ddc0-4d64-abc1-ec3d6f890534",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e3382760-ec78-41f9-af37-697a486067be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105c3a2a-873d-40a5-b7d2-02805c22eeeb",
        "cursor": {
          "ref": "b0b24bff-31a6-47a4-abd1-3fd1b2ca33e8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "61650175-481a-4ea1-afdc-cdc865c9c7ea"
        },
        "item": {
          "id": "105c3a2a-873d-40a5-b7d2-02805c22eeeb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "152f785f-047f-421b-85aa-6a1c5dddb666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532f3932-febd-4d99-97d8-8c6a65b7139a",
        "cursor": {
          "ref": "a46ddb88-6c63-4862-8465-ec7bff40521c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c1ef6910-52e4-4d64-806f-423c2d64d17c"
        },
        "item": {
          "id": "532f3932-febd-4d99-97d8-8c6a65b7139a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7e221cc2-fbbc-47f1-9462-092c79a5fe8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9565f773-ed2b-47f6-8fc0-84456a8d38d0",
        "cursor": {
          "ref": "296163b9-1e69-446d-8c8e-3795d1a06781",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0a91dc68-ad85-4858-a6cd-c7bde5f85e23"
        },
        "item": {
          "id": "9565f773-ed2b-47f6-8fc0-84456a8d38d0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e856bab3-cbfd-4004-bc3d-9d7ed13aab7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f05485b-a1c9-4a2c-8550-d4262c8be07a",
        "cursor": {
          "ref": "1d068d61-20b6-4784-b243-e438afedf9d8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d38420f7-91ca-4bd6-9637-63eb32d6184b"
        },
        "item": {
          "id": "2f05485b-a1c9-4a2c-8550-d4262c8be07a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "424a8495-7351-4a8c-97c2-f9a68179929a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7bac51-abe0-4861-910e-afef4c5bc22d",
        "cursor": {
          "ref": "e04f6495-30dc-4127-b7b5-7707125de581",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9430cdf8-24aa-417f-8b06-bfbd1a513ec6"
        },
        "item": {
          "id": "8f7bac51-abe0-4861-910e-afef4c5bc22d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "740368fb-4fdd-473b-bd7c-986a50e2fdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1accb83-9263-416a-b843-c13b94785a63",
        "cursor": {
          "ref": "8ebf4e0b-25b5-4702-a0e1-681cc9a6555c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f2390c2f-7b51-473c-82ec-86aec33c7c92"
        },
        "item": {
          "id": "a1accb83-9263-416a-b843-c13b94785a63",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7bb449f3-2b4f-43af-8b86-0a629bf013ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0161a9c-8f4c-4644-bf8a-1d1b74989e64",
        "cursor": {
          "ref": "7b1fde53-14cd-4f13-9747-26159fc6d5ef",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0ecbd80d-80da-4bf0-a5ba-77d752b50b36"
        },
        "item": {
          "id": "f0161a9c-8f4c-4644-bf8a-1d1b74989e64",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cfe8f1c1-629b-441c-96ac-ef9f8ac306cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34daed1-2aef-421e-9590-67e6265113cf",
        "cursor": {
          "ref": "a3d0d995-7f48-4ec4-9595-8c3c3d0f103b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "06164094-a886-4f82-895b-8494f313807f"
        },
        "item": {
          "id": "c34daed1-2aef-421e-9590-67e6265113cf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "846fa217-2353-4a2b-a4bf-1d589612ddb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d582fae1-b422-4e38-ba94-81d2485d9225",
        "cursor": {
          "ref": "eb735d9b-ae95-49cb-aca0-c9e472f5f988",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "000e7aac-b9d8-4195-852b-183044142882"
        },
        "item": {
          "id": "d582fae1-b422-4e38-ba94-81d2485d9225",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bbb17bf2-e9f9-45ca-9960-e8eb271f94cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55660ed8-78c9-44f9-926d-2485d67c4a89",
        "cursor": {
          "ref": "befad9cc-d84b-4f35-a3bc-ef9ead3bcc0e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dc69c098-e2fe-436d-952a-f9dff3075434"
        },
        "item": {
          "id": "55660ed8-78c9-44f9-926d-2485d67c4a89",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "86554546-b4bf-4b04-a193-1654d2de52c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba96958-6a9b-495a-977d-1847426f185d",
        "cursor": {
          "ref": "3be4b25d-225b-4be3-9924-e89a515c3ab2",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3b5c2d11-b41a-441f-aadd-b2978cd42cde"
        },
        "item": {
          "id": "2ba96958-6a9b-495a-977d-1847426f185d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1edb580b-e0fe-4eb7-86e8-e176969ba45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f2db70-a747-473e-a5cb-d0c9b3ba1bf4",
        "cursor": {
          "ref": "92cb2997-e447-4814-b29d-8e9c5ff11487",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3f634aff-e9a8-4a23-9f2c-378729ade494"
        },
        "item": {
          "id": "52f2db70-a747-473e-a5cb-d0c9b3ba1bf4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9cc44ebc-13d8-42c9-93c7-2dbe2b408d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8642d3-057b-4658-8aae-2c5116056340",
        "cursor": {
          "ref": "ba75af4d-f92a-44dc-ada0-a78caab220fc",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b0c24eac-850e-4f6e-a1b4-a565a3d7fe80"
        },
        "item": {
          "id": "9d8642d3-057b-4658-8aae-2c5116056340",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4430f57e-7487-4abf-962c-4ec5439bde97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3409eec2-a23c-47e7-9ec5-13f79c4b501a",
        "cursor": {
          "ref": "3c836795-f832-4e49-9f95-821d13bf1be3",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ffb21e27-8597-417c-a929-eaa2e11c306b"
        },
        "item": {
          "id": "3409eec2-a23c-47e7-9ec5-13f79c4b501a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7997f829-f373-4f0e-a4e6-b1d084b29f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd06ae33-b180-465a-8392-d265e56af439",
        "cursor": {
          "ref": "d4274092-15fd-416c-82f9-57a94119e8a1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9c6f2f1f-9714-4e8e-bf61-f37322056a82"
        },
        "item": {
          "id": "bd06ae33-b180-465a-8392-d265e56af439",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "016e9f6e-790f-4c0d-8229-b159731be288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e6d035-60a6-433e-afd5-5649d0dfd43c",
        "cursor": {
          "ref": "073604b5-a6b8-4dab-9a63-f13a565c6ce0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7c9d19b1-1b65-4896-bd28-40b35de033be"
        },
        "item": {
          "id": "55e6d035-60a6-433e-afd5-5649d0dfd43c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ae14cda6-d1ed-4f70-891f-59a7bc9f0b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f82b6b0-c72b-441c-88b3-b37ee0856821",
        "cursor": {
          "ref": "dae85c71-81d1-44c4-a326-56c75bb9a555",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "406752de-5e9d-49e5-9cef-d7a30e0438ec"
        },
        "item": {
          "id": "3f82b6b0-c72b-441c-88b3-b37ee0856821",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4d9620fc-0923-4495-9613-d93f17dd6459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a8c46d-485d-4241-b188-ff0350f83acf",
        "cursor": {
          "ref": "814272de-ba12-4264-9d7b-95adc281c442",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2ec08e7f-f1e1-4d72-8df2-d8cc26d2e82a"
        },
        "item": {
          "id": "24a8c46d-485d-4241-b188-ff0350f83acf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "10e7238e-ed25-44d8-80a6-494210dd81a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302051e2-995f-4774-a50b-acb9ca966ebb",
        "cursor": {
          "ref": "523b8361-da50-4960-8181-2b54723a867c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "27a0899c-f4f3-4849-b5ef-d3d273a712ca"
        },
        "item": {
          "id": "302051e2-995f-4774-a50b-acb9ca966ebb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1a3047a7-9833-4194-b851-0d4e3fbf3019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f62593-b68b-47ce-ae82-243fccbc9f63",
        "cursor": {
          "ref": "563d5af4-ea0f-43c8-a0c5-345c01d25b7e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b362fa52-950a-4e02-905d-0fadb03e848a"
        },
        "item": {
          "id": "d4f62593-b68b-47ce-ae82-243fccbc9f63",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fe100b83-1f6a-4b17-b416-7d0462482411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd15db8c-d872-4249-a287-43628c76e263",
        "cursor": {
          "ref": "9bb52b77-5362-4296-afe5-12731123d3ca",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "23328282-1d5e-496f-b250-44fbeb3d7a6f"
        },
        "item": {
          "id": "cd15db8c-d872-4249-a287-43628c76e263",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d8cd72ec-ff5a-4d03-ac42-b2c02d06b2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdfc9dd-1ff6-4c3e-911d-a10176f9cb21",
        "cursor": {
          "ref": "2e2197eb-4eb0-4aea-8646-f70a6a672a72",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "eb71be05-2e71-4645-a757-912a0b8b3b34"
        },
        "item": {
          "id": "ebdfc9dd-1ff6-4c3e-911d-a10176f9cb21",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "013394e4-8357-4490-8243-1d74294dc48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a1c7ef-791a-4889-b0d2-c85e4fd187e6",
        "cursor": {
          "ref": "844341e5-6ac6-452f-a67a-8b06fe318851",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "84e36ad8-95b5-4600-9ef0-c481efc7e22b"
        },
        "item": {
          "id": "a0a1c7ef-791a-4889-b0d2-c85e4fd187e6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "19df29b7-b6c1-46e9-9482-cfd199f9054f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096bfd23-159e-41b3-8348-babc5db20c48",
        "cursor": {
          "ref": "a41488e2-0e5d-438c-935d-84bf155e9951",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e32e35dd-af73-4774-ab8a-a2d55b49734e"
        },
        "item": {
          "id": "096bfd23-159e-41b3-8348-babc5db20c48",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6ced4723-29e4-40f6-ab38-e428fd2acfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429071c9-ca5c-4683-aa4c-9fc1d7a0e890",
        "cursor": {
          "ref": "03ecd12a-72b9-4e68-a24a-e725cb055ea1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d60f785c-8d5c-48b0-840f-0ea0f60bafa9"
        },
        "item": {
          "id": "429071c9-ca5c-4683-aa4c-9fc1d7a0e890",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9e513422-bc20-4903-8d31-e6d5abc4a99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524aed2a-2762-45a4-b080-14a4a82badfe",
        "cursor": {
          "ref": "2f49e09e-64d4-4689-be15-13d5b84788ba",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "703372ed-12d8-4989-b24f-c3865cda8f6b"
        },
        "item": {
          "id": "524aed2a-2762-45a4-b080-14a4a82badfe",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0467ed79-8789-4f68-8897-3d951b32e138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6aa52a2-b301-446e-a5bc-b4b64de72ca5",
        "cursor": {
          "ref": "04ea99fe-d6e1-4e06-a231-c3324b981383",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ca978b46-6123-4ba1-992c-8de82c92e4ea"
        },
        "item": {
          "id": "d6aa52a2-b301-446e-a5bc-b4b64de72ca5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d0ef7c99-f37e-45b1-b514-c0a351ae256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b764dbb-959e-4e00-ad16-c1fdd85b75dd",
        "cursor": {
          "ref": "b118ae54-4059-4437-8c7b-ab484fe13d9d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fb1f409d-91bd-40c1-a61b-2fc00b09e88e"
        },
        "item": {
          "id": "6b764dbb-959e-4e00-ad16-c1fdd85b75dd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "256f9b85-30fd-471c-9125-cfa152790c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f19c964-cfcb-4fd4-9d68-95356f4af696",
        "cursor": {
          "ref": "baad5054-231a-4668-b552-aa33e4ec6abc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0e493ae9-c793-4125-a19a-265ebc02731e"
        },
        "item": {
          "id": "9f19c964-cfcb-4fd4-9d68-95356f4af696",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "18b4212c-f2c0-427b-b16c-5dad6b6730e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ca6b89-17d4-49b9-8663-4f2dc0d866f6",
        "cursor": {
          "ref": "99dbd896-2d22-4531-836d-19afbc669e17",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "64b932ab-9304-454c-ace3-8f67c2def25d"
        },
        "item": {
          "id": "55ca6b89-17d4-49b9-8663-4f2dc0d866f6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9a7a90b9-d167-48bf-8514-09b52a234346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5db72f-9090-4d94-a342-f40d5de8e69a",
        "cursor": {
          "ref": "af4227c7-8a10-44ca-80d2-e52911727ee0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "048b0eb3-52c5-4ba6-99c4-1eff981a73c2"
        },
        "item": {
          "id": "3a5db72f-9090-4d94-a342-f40d5de8e69a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "69f4232a-9345-4888-83cb-0b2e009512bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5342ea-2b98-4852-8d51-9d047f66e33b",
        "cursor": {
          "ref": "587e7bfa-4122-431b-bc48-f1e1214eb114",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7bae66e0-3d95-4333-bcdc-a518a6690f41"
        },
        "item": {
          "id": "ef5342ea-2b98-4852-8d51-9d047f66e33b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ff97fff4-95bb-4cc8-adb9-1c4abff68129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff72e49-f3a4-4f5b-a0e7-35b86e7871b3",
        "cursor": {
          "ref": "43d8aedf-4ba8-48f7-a154-fa0864097a92",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8a675795-b71f-4391-b7ac-06970e1d8877"
        },
        "item": {
          "id": "6ff72e49-f3a4-4f5b-a0e7-35b86e7871b3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ff792d8b-effb-4d86-b202-da571683f7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0ca29f-d155-495e-955c-b48922066c5b",
        "cursor": {
          "ref": "7ba05358-5c09-4e1e-a730-1c8f21edf7d1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "65dc435d-af82-4647-af37-a67113e9a49d"
        },
        "item": {
          "id": "fa0ca29f-d155-495e-955c-b48922066c5b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ff48b223-393c-476a-9f41-b582208fff39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a378e3b3-d9a5-4441-8f8d-7775b71403a0",
        "cursor": {
          "ref": "0035a0d2-51d5-4277-8446-1b034462501c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8ae2959a-8506-49f5-85da-c6224dbbbf68"
        },
        "item": {
          "id": "a378e3b3-d9a5-4441-8f8d-7775b71403a0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a5f55d4a-5ec5-445f-8db5-8c6d57565536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8241c4-275d-4d54-a67b-7e6842f811d3",
        "cursor": {
          "ref": "698e3e80-6bb6-438a-9959-349f7ed9f607",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "95a7348c-78c6-463b-acf5-21a017b7cac5"
        },
        "item": {
          "id": "3e8241c4-275d-4d54-a67b-7e6842f811d3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0f651ca4-8a8d-4266-98b1-f976fcabfff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4600f2-2a33-4778-bbbf-0f46bb3c435a",
        "cursor": {
          "ref": "6a6fdf81-5f80-4eb4-90d5-31b2942d1c56",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c167acb4-b69e-42a2-81d8-f6735e19debb"
        },
        "item": {
          "id": "ce4600f2-2a33-4778-bbbf-0f46bb3c435a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "041664da-7878-4e5f-9781-d20aaff9c724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea87006-cac2-4c95-be63-a660e73b3ea1",
        "cursor": {
          "ref": "5825ada1-a59e-4370-a6ee-759ce95da806",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5a7ae819-09c5-4480-b6bf-6838d492f00c"
        },
        "item": {
          "id": "cea87006-cac2-4c95-be63-a660e73b3ea1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "233923a6-c40f-41c4-be07-d42a9c39fe04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce3018a-2e03-4196-8b3f-1f531af910d0",
        "cursor": {
          "ref": "0074bf99-0376-4b59-8f47-8fd619b8fc81",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "52bca63c-dfc3-4acc-b7b9-8cf3a4759773"
        },
        "item": {
          "id": "dce3018a-2e03-4196-8b3f-1f531af910d0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9cc1120f-26c0-4463-b64a-ca89218f1d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c22ce9e-855b-4021-ba11-2b1ea5b62e15",
        "cursor": {
          "ref": "f9f15f87-edd0-4b13-92e2-59ed2c5198a0",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b2cebd35-07e6-42ab-b74e-3cce83cfc4b2"
        },
        "item": {
          "id": "1c22ce9e-855b-4021-ba11-2b1ea5b62e15",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0f34634a-2185-4b9c-b668-b56608e531ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dac1ce-3d86-4cb0-9bd9-7509f694d745",
        "cursor": {
          "ref": "3719ed82-7a09-49ff-b9d5-6a91ff057dfe",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "20a6dab6-2c50-41ff-8360-023ed1f8c021"
        },
        "item": {
          "id": "00dac1ce-3d86-4cb0-9bd9-7509f694d745",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2247dd25-7033-486d-b489-e53fca74cfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7a013e-9996-4e5e-95f6-318df5855bb5",
        "cursor": {
          "ref": "84c74a52-289b-4289-88ba-47f2578bc4d2",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0fe8942a-5bdd-4b9f-b538-b74864ddf281"
        },
        "item": {
          "id": "0b7a013e-9996-4e5e-95f6-318df5855bb5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "091a91ac-435c-4cb3-a56a-d837adeead0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c8defb-9a58-49fc-b83c-a9f9060f91c9",
        "cursor": {
          "ref": "72ab0882-59c6-44be-ac9c-3a7b561b156d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a2b38d26-39c7-4286-83c7-ece5a2eab81d"
        },
        "item": {
          "id": "b6c8defb-9a58-49fc-b83c-a9f9060f91c9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dbdca64d-f4a6-4b29-99a8-97ab65de8960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef23f8c-28b5-4882-9628-016341cda7c0",
        "cursor": {
          "ref": "8087c1ea-010f-4ba6-8acc-44d4fea3de55",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e6d0f775-9eaf-46b9-b0d6-eef2f5d218f7"
        },
        "item": {
          "id": "5ef23f8c-28b5-4882-9628-016341cda7c0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3660c74b-f1dd-4a97-b29b-ebcdb4c1ad36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc877c9-8f23-4b85-a170-a642421cb50b",
        "cursor": {
          "ref": "2e388446-8797-4ee3-81f2-ea7c5312e29e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5c93e263-d8e0-4376-a984-9d10186ecb54"
        },
        "item": {
          "id": "afc877c9-8f23-4b85-a170-a642421cb50b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8999672a-03b5-429a-a20d-df5add7a0be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a97032f-e894-4aa8-b38a-5994bcc17429",
        "cursor": {
          "ref": "3b768ff9-ee1e-45bf-b78e-6accb44a6eae",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "495788d9-30df-4972-9268-3fe5fb48b25b"
        },
        "item": {
          "id": "5a97032f-e894-4aa8-b38a-5994bcc17429",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7568ddae-e9a0-4c7d-be68-bbf2ba7a71f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef341ab5-dc66-462a-813e-fdfb19f245d3",
        "cursor": {
          "ref": "42b7a00a-7057-4bf2-8a3a-2e8bc3d79c54",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "11bf7c3b-0d2d-426d-bf2e-510d6df64891"
        },
        "item": {
          "id": "ef341ab5-dc66-462a-813e-fdfb19f245d3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ad624b01-f426-4e37-b8a3-0fbe789dc0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033e39e2-2d2f-47c0-84a0-71db8384a01f",
        "cursor": {
          "ref": "6571c08d-2e16-4576-8122-4fd265500ef1",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7e9126e1-f487-45d1-86d7-163deebc8ea5"
        },
        "item": {
          "id": "033e39e2-2d2f-47c0-84a0-71db8384a01f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d9209704-96be-49a3-8fac-09440cb44b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b3b284-8def-49ed-9f38-e941b1a96255",
        "cursor": {
          "ref": "5b08afa8-891a-47d5-832a-d97b53d3158f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "75e36748-18d9-4679-aa2b-8bf231597c21"
        },
        "item": {
          "id": "10b3b284-8def-49ed-9f38-e941b1a96255",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c68c0bb2-9925-4147-92bb-61047f5e455f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ed206c-5aea-4377-b8fe-2c48d5c23a75",
        "cursor": {
          "ref": "613d8c4d-685b-494e-a592-184c9cf22d6a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b5b33a5f-ee26-45d9-9120-2a0887feece9"
        },
        "item": {
          "id": "42ed206c-5aea-4377-b8fe-2c48d5c23a75",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f1008446-fb2c-42bd-b531-912d54d82230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0d2448-6fca-4b3b-865d-af15d377897a",
        "cursor": {
          "ref": "ccf666a7-1fd6-433f-9058-5951f213c167",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8d69225c-e20f-4a00-b3d6-09709d09dd89"
        },
        "item": {
          "id": "fd0d2448-6fca-4b3b-865d-af15d377897a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "964bb70a-9181-45ca-9bf9-e76f31a14701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb22c763-81f7-405c-b266-35c67c7887f3",
        "cursor": {
          "ref": "84ed3f02-14cf-4166-bee5-5b721f88d347",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3c903075-0ff0-4133-ba1c-71810652ced3"
        },
        "item": {
          "id": "fb22c763-81f7-405c-b266-35c67c7887f3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bf3b3da9-cc80-4597-8e0f-737ab68a256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f610aec9-41b3-4041-8f21-96cd4c1b63ba",
        "cursor": {
          "ref": "51b05c65-8843-487b-a049-4a3d6825d24b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4fb8632f-a169-4373-8456-d360d1b95464"
        },
        "item": {
          "id": "f610aec9-41b3-4041-8f21-96cd4c1b63ba",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e56cd463-9f48-433f-a19e-31b8152d1b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787194ed-9d1c-43ae-900e-c16ce3555f06",
        "cursor": {
          "ref": "69eee002-315f-4546-a23a-a3b5327af54a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "62dd953d-8f7d-40cf-8eb4-55918df90593"
        },
        "item": {
          "id": "787194ed-9d1c-43ae-900e-c16ce3555f06",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b0919319-9140-4558-a025-0bd99c1dd3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe96904d-8f62-492c-a21d-1c0b186a40c8",
        "cursor": {
          "ref": "88e3edc3-f2a3-4f10-87fc-f7fd7b25945f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b1bc2334-2d3b-426c-8939-03d30d573ee1"
        },
        "item": {
          "id": "fe96904d-8f62-492c-a21d-1c0b186a40c8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b87c57f7-7ed4-464e-84f4-521cc4da1171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb2f26b-a0a7-4b51-b7db-d1569c8bd70a",
        "cursor": {
          "ref": "b9623051-3cd0-4921-83e4-f0580a2b98ae",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2e6f900c-caf4-420b-9c0c-8894b26125f3"
        },
        "item": {
          "id": "2eb2f26b-a0a7-4b51-b7db-d1569c8bd70a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1f34f166-d778-4332-b4cc-d202eb9950a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c2eb99-9d67-4312-b1ee-f5c001e066fc",
        "cursor": {
          "ref": "8d417d2b-0aea-47cb-a162-2818a77f3f62",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4ed354ba-0a7b-4a8a-bb45-baede9984179"
        },
        "item": {
          "id": "85c2eb99-9d67-4312-b1ee-f5c001e066fc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2623047b-1acb-4471-84f2-104a6efe2055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5b3f37-9ee4-444f-b970-a51d65cbcb13",
        "cursor": {
          "ref": "b779cf40-8570-4067-9f57-e17c3bad6c71",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fa64f2a0-9c7e-4976-ad84-8574ecea413d"
        },
        "item": {
          "id": "5f5b3f37-9ee4-444f-b970-a51d65cbcb13",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a58ff0ec-dbf9-4abb-a4f9-bb1e327fa0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3144632-a8a0-40c5-9e76-b3c6daf0b4aa",
        "cursor": {
          "ref": "e83941f6-a0da-4c14-9c35-51e546a8509e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1cdde9f1-dab6-4d15-b810-941ccf4c243c"
        },
        "item": {
          "id": "e3144632-a8a0-40c5-9e76-b3c6daf0b4aa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1f136dc9-3e5a-4f8d-92da-d2f69b3e73ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b7b59e-6d41-44a9-adac-0a56ea7c6dae",
        "cursor": {
          "ref": "e9a4f702-6d62-4cb0-a963-a59d2f361240",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "955f2fca-26ce-4495-8e93-eaacca14ec15"
        },
        "item": {
          "id": "89b7b59e-6d41-44a9-adac-0a56ea7c6dae",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0f5ed598-a660-4279-98ab-b69da53905b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5813bb-b9bf-4944-ba05-d3f5f1e6dd5d",
        "cursor": {
          "ref": "d6ec742a-a4b0-44be-b8fd-d533b1e00e96",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c4da33c5-8fbf-45b4-bbf1-15c11d3a8762"
        },
        "item": {
          "id": "3e5813bb-b9bf-4944-ba05-d3f5f1e6dd5d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "29074a08-3dd8-4a37-86cb-813351584f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa077bc-ceb3-443b-919f-dce53cf5af5c",
        "cursor": {
          "ref": "3c6b3253-0668-4cf5-b4a6-d348b7fceb2d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7ffec05d-2026-4767-aa49-1aca8154fa0d"
        },
        "item": {
          "id": "4aa077bc-ceb3-443b-919f-dce53cf5af5c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "83017663-e9a7-40a0-b18d-09b69c1e2204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b649d26-7a0b-4bee-8309-c36fe4f1c7eb",
        "cursor": {
          "ref": "a71c0689-8771-435c-a367-aeea1f0b506f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "43376723-ffd9-4c98-a2a6-4bca7fbcb211"
        },
        "item": {
          "id": "9b649d26-7a0b-4bee-8309-c36fe4f1c7eb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "31d5cec6-40ec-4ccb-b3c4-a816c169bdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637e3d85-a840-407c-b6f5-3ecd9d5bae9f",
        "cursor": {
          "ref": "3bbd960e-97b1-4436-96c6-f5c0c7bf86be",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f55a9266-7399-4209-bcdf-278deb3bfc34"
        },
        "item": {
          "id": "637e3d85-a840-407c-b6f5-3ecd9d5bae9f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "31c5c67e-1a18-443d-9562-abd82e193923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450a4af2-07cd-43d6-8f49-e1c4b4f0c988",
        "cursor": {
          "ref": "4750666c-0ed9-4ac3-a31b-73c451b6bec6",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e7456dba-4c41-4a31-b50c-14d68c8ae39e"
        },
        "item": {
          "id": "450a4af2-07cd-43d6-8f49-e1c4b4f0c988",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6a2243fc-f917-47f5-b4ea-b474c7089be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8f439f-ccba-49df-b3b4-4c64309f8cf1",
        "cursor": {
          "ref": "33f0bdee-434b-4ded-971d-b80ada3e8716",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ad3d1e2a-bc9f-482c-9cad-75eb7e6945ea"
        },
        "item": {
          "id": "bb8f439f-ccba-49df-b3b4-4c64309f8cf1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b401641f-2405-465e-b5e1-203faa0708fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dc0ea9-39db-4c8e-b568-2523cb71107e",
        "cursor": {
          "ref": "bcc80877-b518-42e8-b6b8-32ae688d4a2f",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d84cf683-9a1e-4bcc-8ce1-490ddfa22f75"
        },
        "item": {
          "id": "07dc0ea9-39db-4c8e-b568-2523cb71107e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3efa4890-3255-45e2-b443-9299544cfc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82d2cc6-8f74-4e5e-9d1f-7abf199ef4d4",
        "cursor": {
          "ref": "8d1abbee-64af-4798-8e1d-eabcb16ab14f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1c7e0dd3-bbb8-44b2-b5e0-7763946e1598"
        },
        "item": {
          "id": "e82d2cc6-8f74-4e5e-9d1f-7abf199ef4d4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5c04977a-a8cf-48a2-a967-ba98d75c74ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc75d43e-0873-48be-9016-f5ef7bdfad4d",
        "cursor": {
          "ref": "2b89223c-088b-4abf-b216-fc4bfb3d99f5",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a226977a-0a81-4577-b0da-6c266711a2bc"
        },
        "item": {
          "id": "bc75d43e-0873-48be-9016-f5ef7bdfad4d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "71f59979-ac27-4770-a82b-9add218c65ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fc5641-0931-4be5-9582-38594a87d1cd",
        "cursor": {
          "ref": "8f60c8dd-77ab-4780-a76b-0e1ca1ea04a9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "910ee001-b64a-4c6c-ae24-6fb59dcd5fe2"
        },
        "item": {
          "id": "c5fc5641-0931-4be5-9582-38594a87d1cd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "eb3821cb-0ae7-453b-acbc-3415fc22bfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cf1642-1f0a-49e8-bb56-4fa7476dee50",
        "cursor": {
          "ref": "f52beb2b-6701-42a6-bb12-a28bd54a4796",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fdfa184b-3963-434e-8297-b48da72cce96"
        },
        "item": {
          "id": "36cf1642-1f0a-49e8-bb56-4fa7476dee50",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5e70c591-5048-4fce-90c3-b5c51d68a18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d99cff8-1b6d-4a36-9f1f-bee7126e543f",
        "cursor": {
          "ref": "17e3d1b8-687e-45d6-88e9-0aafd29f4ec9",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0bb4646e-de71-42df-8d35-641e7ea0835c"
        },
        "item": {
          "id": "1d99cff8-1b6d-4a36-9f1f-bee7126e543f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "be51a15f-d335-4fb4-b29d-34ce423ea996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31596e4d-1345-47af-b669-3c10ef2e5cb7",
        "cursor": {
          "ref": "0175ded8-72ba-4f8f-9466-65148290f8ce",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7ddeca31-b46b-45e6-9fcb-a1bc44095aea"
        },
        "item": {
          "id": "31596e4d-1345-47af-b669-3c10ef2e5cb7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4130bf62-9455-4418-ad39-489cd8fa65b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8adb34a-c94d-4488-9fb3-d23d983be7a9",
        "cursor": {
          "ref": "2f800086-6f5d-413e-a579-6e0e477ec4c7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dbce719f-e67c-4d65-9a85-49436e52b884"
        },
        "item": {
          "id": "c8adb34a-c94d-4488-9fb3-d23d983be7a9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ea1ecfae-5299-412b-9667-f6ab8d37605f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767ff593-efa5-48a9-8052-63ffa9c48f38",
        "cursor": {
          "ref": "63643a7b-8eb5-4a88-9394-2edca94ac4b4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0dbbc601-cf87-41d8-b659-04b0a0e9358a"
        },
        "item": {
          "id": "767ff593-efa5-48a9-8052-63ffa9c48f38",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3672013b-3ff5-4fe5-9ab4-a527532b2f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a82332-6524-492d-9b10-19cf2b565f0b",
        "cursor": {
          "ref": "abb131e7-b64a-4106-a394-58db68e01005",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "83398e49-d910-416f-bff3-10646dd775cc"
        },
        "item": {
          "id": "f1a82332-6524-492d-9b10-19cf2b565f0b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "89d2f310-19a1-4585-b9f3-1ff2b72b6486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e86656-0c16-401c-a0de-a0855ae46abe",
        "cursor": {
          "ref": "31a7a794-d7ca-4964-a50c-236b7bb93b8b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b80ae2f8-cfc9-4686-b057-0e9bb62be6d5"
        },
        "item": {
          "id": "e2e86656-0c16-401c-a0de-a0855ae46abe",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "95ecb8d8-274f-417f-990e-5b15eabdcab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6ac891-4676-44c9-8075-eec6a3ce297a",
        "cursor": {
          "ref": "2fe7ac85-8694-4776-87ca-ade80bba4b24",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f772bd7f-a012-4318-8687-21449c0db874"
        },
        "item": {
          "id": "3f6ac891-4676-44c9-8075-eec6a3ce297a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a1de80fb-ad3b-46fe-91a6-5e17c8cfd7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f9195e-d8a7-4820-9571-218018cee52a",
        "cursor": {
          "ref": "5c82b3cb-3876-499f-9ac1-1e7a86945839",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e719d3a2-0130-4fe2-8e67-4e66e2768cd3"
        },
        "item": {
          "id": "00f9195e-d8a7-4820-9571-218018cee52a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ea2dde46-5073-4837-987b-637675ee5338",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52934617-75ed-480c-8f72-ad23d74a65f0",
        "cursor": {
          "ref": "deea15e3-3034-49b8-a8ee-061acfac46ca",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c9594374-2886-49a5-918a-094092f55895"
        },
        "item": {
          "id": "52934617-75ed-480c-8f72-ad23d74a65f0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "06bdb388-491d-458c-b8e9-862e40ceb195",
          "status": "OK",
          "code": 200,
          "responseTime": 2492,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dbf606-6c48-492a-9309-8d47505a485f",
        "cursor": {
          "ref": "f2a9cb96-a4e7-4dc5-b9fc-69f039007339",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3bdbf04f-ab57-4314-af7b-e8ae9547be03"
        },
        "item": {
          "id": "32dbf606-6c48-492a-9309-8d47505a485f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3972c3c7-a2db-4e62-bec7-cc75c09b41f7",
          "status": "OK",
          "code": 200,
          "responseTime": 3777,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4428cb2e-9dfd-40db-9f93-5791fc200f3c",
        "cursor": {
          "ref": "4ec223d5-8b17-41fc-a763-db253f31f056",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1025b66b-af39-40d3-ac56-b4290b75e04d"
        },
        "item": {
          "id": "4428cb2e-9dfd-40db-9f93-5791fc200f3c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7dcdc915-5e26-4d0f-9762-f953e5fe34ff",
          "status": "OK",
          "code": 200,
          "responseTime": 3248,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c8f3fd-0ede-45d0-a387-512629ee7a76",
        "cursor": {
          "ref": "74491019-de23-42c0-85fa-09ce4b12e4b3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d9c22e1-99f1-4173-a68f-5b86ab92c7c8"
        },
        "item": {
          "id": "66c8f3fd-0ede-45d0-a387-512629ee7a76",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "17fd1167-d7d7-4276-9645-b167759b36b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c8f3fd-0ede-45d0-a387-512629ee7a76",
        "cursor": {
          "ref": "74491019-de23-42c0-85fa-09ce4b12e4b3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d9c22e1-99f1-4173-a68f-5b86ab92c7c8"
        },
        "item": {
          "id": "66c8f3fd-0ede-45d0-a387-512629ee7a76",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "17fd1167-d7d7-4276-9645-b167759b36b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7533ab64-b755-4f8b-bdc1-df3a065f2c00",
        "cursor": {
          "ref": "97361ab9-79ba-4581-bf8b-a7414fbbef8e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0a14e3b5-7e49-4c92-bce5-277a8af5771a"
        },
        "item": {
          "id": "7533ab64-b755-4f8b-bdc1-df3a065f2c00",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f40800e9-709f-425b-a5bc-c37d1ee2456a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a26c72-5441-42e9-bf40-99bd7cde2324",
        "cursor": {
          "ref": "b923c340-04b2-4ce5-abcb-9ca535beb761",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6c748c50-cdf3-4f67-a446-4c6a3bf673ed"
        },
        "item": {
          "id": "d4a26c72-5441-42e9-bf40-99bd7cde2324",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b44e7e55-6647-4d7c-a417-24080b9e9f11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}