{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0c7eb9a2-31f9-44bf-aa07-7bfcd029303e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fef31c1a-0824-46df-8a9e-695aa7fdef5a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79155a18-3611-4287-9012-d6ff6765c66b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "49c9d2a9-bc80-4bae-b8a7-f2704a2c566a"
                }
              }
            ]
          },
          {
            "id": "db3aec52-8df3-48e8-8632-9564c9a9ac73",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1693ea06-e8f0-4e5f-a5e4-58d4e9aa4527",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d3d73fb2-2304-4e70-8a1e-aa3bd9551e1e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1846b6ea-eeed-498a-bb43-47500b78709c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "464c1c9b-b20c-44cf-b214-39fda117dbc4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "be15c5b6-4191-4afc-b920-a24baf06987f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3127056-3089-4072-bd77-758c69928852",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b03545d-f64a-4c18-83d4-04cebf1ce57d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a219f906-6b61-4098-a160-aa4f86be2109",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44e948e4-89ea-47b6-9d49-44b29721ade9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "096c22ea-7cc0-43db-bb57-619c86206bf4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab6c67a2-3c13-4c5e-942a-e1d6091381cd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ed58c1e-6041-440b-8d92-b1bdabc7cb5e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "61dd92a1-ed53-40dd-8735-5d305f94c21b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91779a8d-f6f8-4946-acd7-573a5176221f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2af79c1-71dc-4b5b-8d61-eab3de0d4d10"
            }
          }
        ]
      },
      {
        "id": "3e345709-116e-4b08-ab6d-f89ed4a0ecc7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5abfdaf8-627c-4bf4-b2d5-d98ce07728e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88dafd1c-37c5-4376-bbbc-96c83b7725e5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7ef9dfa-929f-4139-95c7-19fd474bd10c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9096b891-340e-49ea-982c-631ba89028ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "318942e8-9014-4409-98b1-0b7b49962d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3822f7-6579-431d-b63e-40210b5f538b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25acb8f-6fb4-4493-a516-8ee8c0f57991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39dd3d23-02c9-4b04-96b8-adb068ce246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2973c285-5f24-43df-b83c-0c88480184c5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa6aba4-ea4b-4e5b-9f20-bfc67d48dd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8e74c89-5977-4d77-958a-e79266614fef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb8f8fd4-60a6-4f10-95ef-180a92f1cd7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ced91cb6-e32b-4782-a2ad-17544ef079a8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c385190-9b62-4ca9-8060-8a1bd6619ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "569f8eb8-8aaf-4a63-b86a-7715c18dacb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a51a8b5-207f-4c25-82c7-0900b467098a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f22e58d-ce38-45dd-a4e3-b0d3927f4cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ea54f7-2e76-4cad-a05b-572f1bc37952",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef468be-2094-4a90-91b1-f46dd194dc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0e4c2fb-c30c-4c13-8f84-e825b91a1b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20056d4-4a52-4d14-9742-973f2a47e3f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fd9555de-8ca3-46dd-b324-4199281effcc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7c92c3ec-b09d-41f8-adfc-9eed3d67cb7a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "645c13cf-b14f-469e-8bf4-ec685d6a78b4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c60bdb1-43fc-409b-89af-30d671e6e864",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "05000ba2-95f1-4403-91b8-6d2da35b83ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ceac8a5b-89fc-4c1e-89f9-21d3efbc7f90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "cb7c4a94-05a8-433d-95b9-51ee9e2fc12a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf9b488e-02d5-40f9-8da6-fc63e23c8a27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0f3c9cd-0854-43d1-8b28-2f78fe2149e1"
            }
          }
        ]
      },
      {
        "id": "2b3fa068-c22e-4ef0-bf6c-4f9113bedf9c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d93d8f7e-608a-48d1-a293-d6e69693a3f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c177689-80cf-4651-aa76-4f7a03381686",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ba36c535-4121-4fbd-a4d1-0b710593614c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864b0735-face-447d-a09a-583f8604215e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691ce87a-57e3-4bf7-b9bc-ce5a3f280779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e62236-b604-44cf-a6ef-e5365bb3694d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f644510-a80f-4847-b8b7-ca13e7f463d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823d11db-5f7b-4b06-9a39-424c3252b694",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b270c826-4a4d-4feb-a78f-850d1e40cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f1d3fd-76c6-4253-8e8e-7857a1b4c2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419db669-80ef-4153-95fe-da18983baae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "121a602a-92f0-4970-844e-812ebcbc82b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356c9789-036c-4d59-b452-8dce1de0fece",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e45791-6ab6-417b-a44c-e7a89e71d319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c212a09-0072-415b-846b-14b8508bd931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d59c857-e8a2-4b2b-8d44-9b3af8babb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fd82e21-8921-48d4-b4e2-98e6117cba6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5824579d-a00f-4c50-9d6b-bfcf747c5475",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481e1502-742f-4e14-a121-546a6a2a91a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9416577-761c-42a2-ae40-5b8fc405100f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e891800-852e-4904-a54e-23432a17d98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80d87448-d480-4595-aa09-238601cce237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e3c008-4e0f-4603-8cd8-d955bc9ad38c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca2b5f4-58d0-40d5-a524-07f1def7640f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7e9b07-6f09-4e96-bf0b-d48d4773a4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c1dde8-6952-4299-85bd-5cc65a7db162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee4c716b-083b-40c7-bfdf-342643947691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4844ad-2179-4508-be79-ca7518a546ed",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53b7a63-ceb7-4df1-a56e-7934a7204963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae88fdb-0f0a-4e14-bd99-d7c3963df3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f657c3a4-6d2a-4938-9801-1f12062c94df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "540cff46-5b0a-48f1-8231-6c220c52880f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff81b01-6558-4137-a39f-3cc13739040c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ce4245-13d4-4252-8cdd-c10aa3d348ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec428182-00ab-4d77-b4ac-7c85896fd104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d2a4ea-d36f-493e-ad95-9e53c4c4b618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f52565ea-b14c-4ae7-a344-97d430532469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935ff0ef-a0c7-4705-b01a-b2f97bd993ea",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2702efd-04ae-471e-a735-925a2fce470d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc7f052-90db-4e33-9542-1c7584ff4a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cbfdd2-d8fd-4d5f-9934-af0d6f689ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dd4d939-ae83-499c-8ce3-7b2e70b59988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2998926c-5351-4ee0-9fad-688f9d022a83",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423eb567-8e29-49ee-ade5-c877f31043f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147ba20b-881c-475a-898b-474d26401e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e19e81-8e31-425a-bf3b-f058f3829a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "566fb96a-d6b5-4afd-9af2-e1868cf842d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37295b66-e5a8-44c2-9c50-2fb0ec353e4c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeed331d-8d81-4584-a6e6-28eddea6ea13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a989f583-73bd-490c-bb2d-4f22641cb634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db561711-d69f-49e1-9388-24c6463f29a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dc1eff3-64a6-406f-8f0b-1db625fdea1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb200126-4649-48be-8655-b95b6246483f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61305a08-dcf1-4523-afcd-691032261e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548f0e13-53b7-4000-92a6-531bee72f6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caca0c52-7a32-40bb-bfce-13ae97454538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "607ba607-5dbd-4622-b404-f1c6ff35494a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f5baea-b8fe-4b82-8491-5dd87557fcb2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb7398b-48aa-4f31-bc2c-8853987c1cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa70997-6895-44ad-963e-fe3fb5ab84da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f7b012-b0c4-4608-9e72-89ae756f5f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19457399-e3d8-4a58-93e2-b6b20af9b239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c1fdb0-1bac-4faf-bbcc-4b64bb3711ee",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb00cdde-8ffc-4c1a-a261-292b2ea8a724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9357ba8-644e-4c7c-b3f3-1d8f08e7ce99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4261d23-c671-4653-8340-5bc2f513f39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fe9bbca-964c-41fe-9b6a-70878e7247d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc946c37-58be-4d83-95f9-839ff8e888bf",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe225d88-0e7c-465b-b8b2-81cc4b12150a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e9a616-8969-4401-b016-c9a536c53d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba28ceec-8888-43e1-961d-c4853c774f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "174109a4-d2fe-4496-9ec5-444bec6ccdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad67b5d-ec3c-49fb-ac82-886eae4f28be",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b247f0-0dcf-40bd-8d8d-c0d87d895dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac87d588-4bdc-4d81-b092-a3b83dd8e00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e747f3-32c8-4d94-9b16-a703e4f11d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03ac7c54-ad61-45b5-a44d-9146ec287051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd9001d-58c8-40f5-8cb8-5348edebd3cf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7beb1dc-4e76-48fe-9c47-b56c7411e57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9bdd73-c6f0-47f9-a7d8-6e325ae3724f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e8806a-5d2b-43c1-bea6-5c55fab4f142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0036e3b-52b8-43fc-8a26-df40284e2d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca79d71-ebd1-4ffc-8051-d5b82533b636",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55da302-3bd5-429d-bf20-42ba6d91c1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e5bc05-f84a-4385-8127-1886e3a3df8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f04f8b-b8de-4976-855a-d39534228195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb166903-0abc-4829-b8eb-1445866151bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5d1226-0088-46a5-9987-ba059cb90f0b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db18d3e-37f2-4513-828a-6677971c2d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8487bd6b-0dbe-4320-a65f-c5c0a1bd6791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af47c0d-ccc3-416c-baf2-2c385aafe559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0ca697-bcde-461a-93c7-47587ae60d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a2d594-7d78-409a-a446-ef1529c30ce0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be6c922-c887-409e-be64-08ac1bd6d179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5280ac9-3f1d-41b1-9277-e9beda439e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b1564d-0815-4a02-8ebd-4e4e72290e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6c4ad7-d0c2-41aa-aeb8-ec75d074d1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97d6bae-0aff-49fc-af1c-f9eb3e3d8f67",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0900b4-6b28-4447-be2e-b96640ee09c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d488b1-5942-42ff-a2e7-ff836c66e8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4160c45c-dc00-43d7-81a1-8b1c59d3d65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9777b71-ed9a-4c0b-b43d-22ea3521da2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2a01d5-4559-4e44-b45b-03b3da8ad285",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335003ae-4499-456f-8203-1e53fcabb069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed5757c-5ef1-4280-b14b-7b1793e8519d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec3436a-d4a5-4d2f-b177-caa9389c5c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6240f8a-3bd3-4c99-a8d0-74b34b1d0db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153244ab-4db9-41fe-83c0-bcf37e35fd78",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240cb8bb-6cd9-4972-b89a-86c1111801bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc294d15-34b6-43c6-a060-1ab69e026a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6893bc61-e212-49f6-a721-dae1f3e6f31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8600aee9-a47e-4774-a7cb-da5e6020d018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02348a44-0e75-4ef4-a506-734631e6dbde",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a857f922-4831-400d-aca0-e31193ddd5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67234f62-2deb-4ff7-ae84-a15de7391ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e2d1a8-28d0-4ced-a24e-8578484969c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54448f92-0537-4626-95ab-1c215e822c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80a1027-79f3-4e52-b92f-9b8010367098",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a71e649-bca3-4e29-9745-f9d37f57e49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0e702b-540a-47b0-8413-dabee925e3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec5c0c9-748d-4738-af30-3f315197acc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b108804-6332-4e0a-8e7c-45b7bace9bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541ab1e3-2e51-4459-bf17-3c0f9b70de42",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297faada-8524-400a-87c1-8421114214e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd88736-7361-49df-a619-de3a67eedfaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3a8e24-f777-4fdf-ab7e-b0943036bfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2345668c-a319-455e-acda-d1560b2fdb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4806b978-59f2-418b-ab0d-a0da97ea7925",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29133d54-b653-4205-9054-f08b62f267e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23125057-f1f8-44b3-91f2-e47f77f21fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fb87c2-89bd-4850-885f-ed36a7b589a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f1f081-60d3-424d-9166-befbc52e5feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8608e0a-2eaa-4a45-be9d-ab2fee01bc38",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fd8abd-fa2a-4dee-81bd-2983b2328502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710e10b7-a581-4b57-a41e-7f00faa07c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad68998-7d85-4cf5-b24b-842ee008a478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abb0988a-7c8c-4487-9523-540b4a5cad91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb214acd-f442-4b3e-a292-6004186ea312",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3774c450-6755-49b3-950f-f533e182f900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7864b4-b938-4ea5-9292-dddfd4875ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdccff2a-d163-4a68-910d-a4ba8eb7d067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6386d2a8-f0da-4b4e-92cb-2271b422b2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617b0470-043b-40df-b806-60345effb299",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997f3aba-b200-4f23-842b-b44cd651758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71370c9c-0ad2-453f-9466-d11a4fc7a164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af83e9aa-3b03-4814-88a0-85763ae7be63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe2adb2-e651-48df-939b-76d8bdf35104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cb39e5-d1c1-47b6-8833-bb5e54525525",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adf61c0-5d9f-43a9-bb82-c86ca192c5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92505005-a718-4933-ad98-ae5e740e0e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e354d5d5-48b0-47c0-b58e-a0baae80a8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d98a523-680a-4806-bc60-615a5d2fd7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f78085-0d98-4f45-b60e-0f9f08b041fe",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769600e6-c619-41b9-abe5-8069e36f9006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea93f2e0-7b5f-4a4d-9e7d-a80b4f7538f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b40212a-4ee1-4c63-a563-a368e2b4192c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1de294fb-5aa9-4cdf-bcd8-a98bddfd3024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7c4cec-7f50-4b7c-aa04-63c84333eb7e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa57e4fe-8920-4bb3-92d3-398e5b5c5b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afc81d7-d8ed-4935-8881-2c24b6867eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906c57c9-6e69-4d73-b48b-e9c2e5e9bdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "525fcf0a-cd27-4a77-b1cc-ed4ddc2a5fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f1c0aa-d8a8-4c6f-8c33-3c90459fedc7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966ccd6f-0645-4062-8a9a-2c36ee7dfef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d043e2ea-4abf-4868-bf94-b8945255a752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee5d812-1e7e-4f6b-920f-336b49b7bf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "443e18b0-35e3-4ed3-820a-37c79c67cfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4af7487-f2ce-4dfe-81cd-d44f135f8423",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc31a40-06ca-43ff-9b3c-82f5afc291e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75510bfe-8e65-42e5-ab24-ae65273577b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed478fb-7547-427f-a19c-fcb99f689511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5638990e-3a72-4b1a-b38d-7efa36f4203d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6892019b-ee07-4fca-b52f-223fb5eeb43e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5be324-1d03-4c92-8428-8dfc0bcdf988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a81357-af4b-4c14-88d8-28f27710cc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0156f8a-7e1a-4135-aa55-04a1100657b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "420f61a8-dbe4-410c-87d8-80d0b9375efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e225423-b602-427c-8019-a4a2a121baec",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d803e3-8c69-403c-b5ee-e2590812c4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d63107cb-e4ef-4727-aabf-5da746878911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba17459-357f-4b57-be44-5cd39cadd8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c975b3c-c823-4325-aeef-ef1999e2f895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d243a56c-5ff0-4300-af62-8ea648bca71e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47f25d1-4a96-4cac-b275-8648c865bf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2961bd8e-a1bf-4f53-9002-0ff9ec45315d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca8d949-70af-432a-912a-0ad61c257707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e14912-f088-4d2a-9d85-400fbd29ab09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ed0ee0-ff46-4a45-9fd0-e6ea01c44f2d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28ca5d4-876d-4ebe-a82e-a0416cd968d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5703c480-b99f-4696-ab82-381a3f460f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e09c792-7ad8-42f3-b50a-41844f637fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4a7ed9-5639-4f40-935e-e0cd74823bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3453ebbb-2ca4-4ccd-aac3-b09128040ee0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50400f39-5e4d-48fd-9f15-19bd1ff6e8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f8e8d2-74c9-4e9d-9231-ddefd11ab947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39866e0-2eb4-4df5-a42a-94d3aefdd7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2e6576-3af7-4b95-bd7f-21a556c146f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2165b0-d486-4240-9c2b-66d99d590d1a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61badf28-5136-4854-8489-c92c7982765b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9d55a7-f03a-4249-8b2f-f02c736899d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a467c8-54b3-44f4-9403-1606bc62ac22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "756f257e-0323-41f3-b0ce-887312ba9967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3fbc69-45df-46a0-83d7-662fdf515ba5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549c5d5e-7640-48f9-a20b-9b6bd4f485b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657082e1-ca05-4561-a80e-922405e2b2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df972464-8c73-4729-84b8-f43682860f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15fbbf82-e82a-4a33-b55b-3948faf91a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2b0e30-c725-4350-98b4-5853914a33e8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3219f674-4fc5-4a84-96e2-64ddb7316aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c95158-1d5c-45fc-82d4-919d84388dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815abfb5-0d05-411c-be12-95b7e240b171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "80c19680-79b6-45e3-94e9-48781d3d08f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2856e914-8645-4d80-b4f7-4e050fafa455",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de1677f-31d5-4eec-8866-2e1ab1cf8791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be38db59-224f-4b46-9aca-82daf936cd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424a4ec7-b016-4da1-b4fb-153c0f743bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d5d160-1d79-4c97-be6c-3ed9a5862d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63098cdf-66f5-49e8-9081-1fbc557cfffe",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2456b0-7ca1-499e-9dcd-0274f6800102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e974e39-93ae-41dd-a50c-b4f137dc241b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84920a7-e53c-4f22-8011-17d79742a13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbbf7d8-1edf-4be4-bb5e-8d08cbe407e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e1d860-3a01-4395-b093-35cd32ef7e27",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a477aa-05f8-474d-a971-911a4d6bd1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce645a3e-776b-499c-b8fa-465ee5e43b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957cc7af-23f1-44ab-b04c-34e8172e68ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7959c0f5-5072-4e5a-86cc-d1222c299d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea96c8e-902f-4be9-8d66-b8837658d3d8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e443ab1-7000-4060-ae28-dd569670aa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601c8c2d-be3b-447f-862b-8bff8e5ce050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b51d7f-8b9c-405b-a7ba-784dff5e8e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f379af1f-68e6-4404-80ab-820cd70af477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ef159b-2318-4ce8-af04-f943fc93c343",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c8bcf9-984b-4aad-89d8-2f3b9465aced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a23c979-f497-45f3-98e3-635e04db666a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a144098-4d13-437c-ab59-613f648e83e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1f5601-d07c-4f11-b226-adb2343ef4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c2d4a2-83e2-4dec-ac57-0ca5b08db707",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d86eb96-e680-42f4-ada3-b0ab436b33cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcffa15c-7121-48be-9418-ae4ee2c07795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6df8dd9-2556-4bb3-a254-cf4c555788ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e446e4-f320-477d-8ff4-6e46cce114df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1653042-68a0-46cd-adf5-18173025783c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92740d67-e437-4c18-8523-33f0d8b3796d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac99963-71dd-4686-ac46-f0c68707431f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c824be35-3ec1-4f1d-9a22-b0cb08e52178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a285fcd-f880-489d-a626-cce8f1c45935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39810197-ac6a-47a0-a59a-5d71092ef8db",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706fe190-c645-4f53-91d6-518d03b9bd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a275f7-7283-4387-927e-8a443633afe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509faa5d-9fa7-44a1-8620-212c57dd417a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6abc572-3200-4a86-9de2-b4c2a724c96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f495481b-f3c3-4752-bf98-eba90cb98ae4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e38ddac-769d-47bd-9302-54da588ab74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee819ca3-08ef-4cdc-afd0-b099e577e25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1358794-03bd-4c66-983f-7f87254d8f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "802159f7-b1fa-426b-893b-60676a21ada6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9cbede-7d79-48a5-9abb-2a051005f770",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa98cfc-b1bb-4da3-aefd-24399ab8b65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e88362-e38a-4b66-b234-13c2f5edc7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412771cb-9f43-4582-8b81-7328c70e68a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7434b56-77be-4a46-9125-e06d14cac235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e2750a-9f57-4ce1-a2fe-f03a53ae60cf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b939eb4-3ec0-4151-89a5-f8019b2fd9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab1cdd5-4c75-4c0d-a705-dd18c1f462df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9582e9-8a4a-4ded-b2ec-92e6c9450e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "390ac76d-2451-4ecd-82d3-39191b412099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb5261d-482a-499e-87a0-157c586ae0a4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a039399-e7f3-46f9-81d3-3763ffb89b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2dab71f-2dd0-4c3c-999a-e684ff820675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d90403-8dc2-414e-a334-c8e531cd3820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15d58584-b581-47c2-9467-48faa80c6f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088afa46-5f0d-4c97-90dd-e92bfe64499a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4506d90-524e-40ae-a928-582e1eaae31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3a95a2-2b46-4413-8b48-521398dd0f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3214d12a-47f3-4cf9-bb62-50d27e28e459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dafd624-0e21-41f6-b171-aa7c901b8ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbb75e8-4979-4598-8c95-04f92cf2ce8a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf20b9f-c80e-452b-b9b5-feaf431c4885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e4fc56-c581-414c-b03a-8ca9c0fe41df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a9a731-2188-4946-abe3-7d82ae7c2638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1b48222e-2ecf-4b21-b681-59fd95eb2671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fadebb0-a41a-4cfb-ae1f-558e1da33399",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b7ab83-c759-4124-b8d0-284e646a2c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6e7268-a0e1-45a5-a156-0bd43c6af2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d399c123-e158-4ac0-bea0-509a7e84d14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "45d90d78-da9a-4d15-a5f5-05e50d7cce93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357728b1-a336-4853-82c7-a117e6088443",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f955384-fd69-436f-97c4-8c7da99e0da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bedd980-6c58-43ed-9f1a-c2e8f1de78ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d48898-694a-411d-aa3e-8eb781d5cac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c378d4a5-3520-467c-80b3-7448a0b3d86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a881ffdc-5e71-4c87-a7f9-2b63b2a58cf0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88894f1-baac-46a1-9ef2-cf769cd862ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac1d584-b96b-41a7-b2f5-d21c03f42c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2585c6e0-853f-4c49-8749-921e065e51ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8edffa3-43fd-4169-8f21-0a226be4d48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d96c26-3970-4b88-921a-277663a64edb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d05fa91-4f14-4d13-9e13-c2248dfd60c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25f3773-9e27-4e2a-a279-848ae66db8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba1a34e-7a1c-46ae-9a7c-45954bd31c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05ddfc19-008a-4512-a336-a784bead6adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19264ee5-7511-4a15-a624-a7181cdafa93",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e512b614-831a-463e-8955-1b65067cd7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996d8d23-09d7-48fd-9bd5-af9a3eb05b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70b6857-5a85-4f4d-a9f0-dd4cef11fac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dacf1fc-8ba2-46fe-b76e-b573c1df70dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a03358e-b6ad-4241-9dbf-95be52c1bc65",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19185625-c086-4760-9055-99c2bffe21b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dc50c2-33d7-4c76-9286-3152ebddea1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d871a480-3894-4fb5-a2c6-03bf81f2ec62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "67ec0507-12ad-4dd2-a885-2e53fd2600ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed7e059-8d93-4208-b9fa-fd528620809c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470e6506-1b25-4ceb-80b7-d94d0b24838e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ade85e6-065c-4251-8047-bbb889748961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a982bf5f-3326-4860-8f56-d7b785ef2b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaca03e5-535b-4015-a97f-8261ceaf45fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235b1085-9ac0-4881-97e0-494a3e13aa01",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f0517c-0b7b-4ca8-a40e-2b1e8220d051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cf5b6c-53b4-4e7b-a2a7-fa57d21c1d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81335674-2ad6-4ad0-a326-b33daf2072c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4316c0aa-9bfe-404d-b23c-71f0bfd7be3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b247861-81da-411c-a1ec-d2a90f500c34",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20eb1a9a-e805-4a8e-9317-6e0e3cd181d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6957e8-4fba-4a9f-b382-df9b317ef4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0a7202-a1b1-443b-863a-607aa257fc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71da8ef6-ccd6-4a97-a4ac-fbcca40bb381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cd32d2-2ed1-4bd5-a5cc-6efd98915675",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0843c4-a894-4070-800d-64e8a2767ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cae29f-e855-497f-bf1e-bc7fae71a537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01db607-5680-4e62-8b51-c51bee2e7cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11cba6f6-2540-448c-8812-0776af945c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bb9074-c60b-403a-a55d-90f17b0882ec",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7f9cc9-dfc4-4021-b7e2-625d491210db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11d06a2-efdc-4ae8-955e-550c8e1e3df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eefb302-1828-45f6-bd4b-eb4fa6829231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3980c603-e476-4461-8d32-103affadd710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa0d043-fe34-41d6-9433-63b9276f831e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1377c790-a92f-48fd-8759-bdd8952e28fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eccc940-3c95-4cae-a8fc-d8042ee6d477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a373ea6d-11a5-46d0-b23d-4b49e53c6998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c42a239f-ecea-4915-8942-9535a10519e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aeb17a-295c-46ca-818b-46f67123a0d9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce4bc46-970c-4204-93f4-49baf70558a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f846c6c-95a1-4d4e-b927-c482cc592d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b923536-c654-4dbd-a98a-d81e322900cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cb1d54-cd33-4d8f-b57a-65f0dcea5e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0b25da-bf53-445b-826e-713b178410b6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f642aa5a-c1b3-4411-b586-ee88bdda0082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a9cdf9-e28a-4970-92cd-944fcf92942f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8a52b0-43cc-44ac-94c1-77ef981a1c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba07159-0f2c-4905-b969-bcfe00022306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b8d999-53d1-4990-85df-7f84d0b89830",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f191ca-c117-4dcc-807d-fb9b9dd82ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd038a8-ecb0-4b2c-a460-7e3b6c623464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cef0b04-5fe0-4cba-8b08-3b7e6e01f3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bb25a3-3369-497c-bcd7-0d8802ef922f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24f5c0b-5b49-4c59-b353-05b934dd1173",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0161b179-6c34-4231-a1d4-04325df91c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5471bc7c-efe7-47eb-a14d-930fd82b24ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6b7d62-abce-46eb-9dc2-f182891ba1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6c875c-fe8e-4977-abd5-bf8e391dd710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64e9458-68a8-40a7-afcd-777b05ec4b15",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e109512-57d9-4d8c-9450-f706dd3c8cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df41b97f-116b-4922-8870-efe58fc61b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa297019-863b-4439-ab44-5a4acf09efe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49f03d98-7ff9-40d5-8176-2758b8695a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27f9ced-e55b-413b-bd7c-0c9b820a7718",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d432d2da-8ea9-4441-b257-6ec57ebc420a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b13d95-babd-4520-8421-12d8ede192b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adddf07-923d-44a8-b16e-7c0bce01f4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e678fc1-390e-43a5-a958-d1238461ed6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8170303c-c5dc-4edc-bfd6-0c2ec2509314",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20f85ad-c72d-42d0-868c-7800fae6634b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f916379a-82b5-4651-a75b-f8694b75752a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b32a95e-ada6-4958-90fd-2ca768c782de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef5a1df-0e28-4cd1-90bd-68334f3fa7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ce77aa-1367-4bc4-b38f-05be6dd88ec4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87857b5b-aa47-4fe6-96ef-9401dd63fb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66f9d0c-92ee-4d38-8ffe-a6c973ab5bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e2c819-11e5-4736-bd7e-5708ca371ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5eadbb-66a3-48a5-b753-ed9917308c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022c3a43-909c-442d-b5b4-1d76efaed718",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c20a03c-0727-406b-818d-0f0ca5261c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caedb77f-f03a-4e3e-8c26-ff8ccd4a55ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c62ae8e-8ebb-4bb1-bb5e-3946853cace8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1aa47a-7297-4566-acee-7bbf2468cdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4e0e84-b6f6-4dab-9ebe-cba514a52ccc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8fbe5d-92e9-4f39-8c61-f673d1f8508d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85ccff3-55b0-4631-9bdc-cce5d7012082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320ee8e6-0777-4360-abc9-210023b502c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf42dac-24ee-45c2-8791-4c28fa0bfcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729fa1e7-2292-46ba-a4fb-44ffa04b2a77",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7169bfac-97b6-486f-8d70-55fb8eea0489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2607f20d-3c4a-4c4b-8511-0b5954f405e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6a8dec-6f18-44ea-beae-bb43e6185c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00ee115f-95c6-4272-a75e-041f3c02a0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14b1adb-a93c-4735-bed1-5ebe788c7189",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508fd214-ff9a-43a1-94a4-2179043d05f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe9db77-6046-481b-8fca-7a4bdcd5dccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c26a15-3af4-4e7f-8898-4176a5037bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c37d17db-97cb-48fb-b59e-96779955462d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638faad5-7e3c-480c-af7c-585b2e88c5b1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af585504-cd2b-40b3-aab6-175d033de0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca6f11b-8d44-431a-9e80-1ab4945bbce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af353350-7c30-4c2e-9cb9-bc5fa6dba16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8bf6dc-2dcc-4468-9aa6-983cde9702ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f089cf-d26e-4980-8b13-1df3bd8b7f77",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a39f30e-db42-40b6-87c7-9bd56a779ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4905f9c-21c2-4ef8-b152-4f4aa4d471cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d251935e-b564-4a74-865d-a126303d1586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f58f7076-448b-49e9-9346-710899ab9c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469c7679-5a28-45d0-83fd-98c46beec9e4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e776ba09-66c8-4371-9baa-ca20e84e10f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4225c2f7-ed02-43d6-8bcc-f6aa39afc58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446184c0-749b-4ef3-bb66-065115584d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1488262-3d92-4a1b-8494-b19fefd593d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65af1d0d-b2fe-409d-a42e-6fe5069e79ad",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569343c6-542c-404e-8f97-e8911ecf25a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63576bb-0683-4ccb-8606-4ac64c94c05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971e1591-9e11-473a-b7b9-856e5abbc545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20b3b013-7a97-427b-aebb-db45a42df562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c34e88-2594-4949-8891-68b6ddceb552",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521f7a38-2ba4-41b5-ba04-7f63af525fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4682c5-46a5-464c-98b4-4401f48319c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe98284f-8ed5-4571-8d74-7dd3b6f427f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0395e710-36c1-4032-957d-da721363c029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324bd6b0-d8cd-43ac-a7e3-647917035b87",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c16f33f-91bb-4cd3-883c-1b13751c3b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d04a73-098c-472a-911e-04532e94b9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fe72ed-04ea-4f81-ac57-22fef536be4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ea1108-bf98-40ea-9810-d9a7652dcc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84b9172-7af2-41e6-99cc-b851bbce5e39",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbd801c-cbde-45a6-8b37-8afc38a9b80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48dc43b-76c8-4ab7-866c-140e17857c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe2d61d-6cb0-4545-9732-45bf8d20e3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "366f91c2-b198-409f-8327-65cacdb58861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102b09b3-f64d-4d67-8535-be0477fdd601",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce92e72-0348-4752-a5af-b2ad60681c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc42d5c-b58a-4e95-a4a9-4efffba7d7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499f3e80-1da3-4fa7-bc4d-9a7c09e77f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8b4018-ee06-42a0-989b-c2b8cd6fd461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b015f63a-a371-4cec-829e-7e59c7e3a6a5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d241d99c-d5b8-42e4-81b4-683f55a440b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2daf44fe-abc5-4d32-ac67-042c202207b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54d71e7-9a41-4c18-a26d-1793b230d2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d815e218-e1ed-4258-a3b1-de3977af9ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd1b782-8b47-4403-bad0-8402ce201384",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b46ab6-1d77-4bda-bd83-ddc8f204300d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7bbb30-7cc3-43eb-a593-5f5f30dbbed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3560292c-1ad5-4d1d-9946-1ad913e6105c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0f454b-c0e6-4084-8a46-870dd916d143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e90f543-27b5-48bc-babe-748f18f310a6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8189bf3f-0d9a-4982-afb1-04decb8d0a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65af624f-17aa-4f7f-9678-c00f6ffd4bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c249b29-fc92-4f05-879d-e78acaf53c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "285629df-184c-4174-ab4b-3f7bd7877f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df8fe71-9dc0-44cc-a412-3a6169c05829",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47199f92-4ccf-49f8-a579-811581cb2af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "867e5973-49f6-450e-ac03-826be467af6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1707af28-afa6-4e27-b45e-64c4288b4eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f00ea405-650f-46cb-a666-3e96e124feae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a9bf497-e3e4-4be4-8008-776fe5d10ed0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "478606ee-1394-4d3a-8d3b-26b6003b765a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb947da-1d3b-428b-a178-51b3115acc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fad83431-02c8-4138-9963-5efba95e2d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df27dbd9-10da-4505-9be0-439f14b1069a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "9929f194-13d9-4eb9-a643-2bc6f0dfd13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8761f9a6-3b1e-4442-a63d-9e126844b030",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47c278b-a9b5-4741-9c7e-17c43ccc4c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f14a0a7-9fd9-4887-b92a-f24f43e90a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a6f41e-dbfd-4e93-a9e3-43a14c038319",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "4258b072-e6cb-48b8-9249-c920d99aaa6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13739c9f-1e17-45a1-a8ed-8c08d2277060",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6946bda6-2682-4fb5-8f7a-d09a62437778"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c9b24c8-d2fb-4aa3-be6c-39e1ffd130ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "270cda11-4de2-4223-b09d-17dda68a4a5d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f962a0f-4881-48d4-895e-8f1298dbb46b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b258fe5a-6a0c-4348-9793-dc3bf779910c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96822c17-6ac1-4504-ac30-d822e11ba136",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "748adb44-ae09-42d2-9048-3a065be0506f"
                }
              }
            ]
          },
          {
            "id": "c2dc00e9-1b3f-4982-9ae4-82baa8a920f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1155c09-03d4-457b-992c-5b336fd026e0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee9e8cc8-44d5-460d-9524-94c2bb7521f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1faa1014-275a-4107-b565-8768fe334aef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "625d33af-3220-45d7-a11e-96fde3efb9fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5828f39-2abe-452d-bc69-681d6e1f54df"
                    }
                  }
                ]
              },
              {
                "id": "3dc106a5-6188-4e71-ac40-65f1aae8b4eb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e249ff7-f0fb-4279-822b-a753211ff2a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76c2b2d4-6fb7-4faa-becd-ee19dcd48752"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "261614af-da13-4419-91c0-142e02a925ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d43c7f10-ae30-4555-b923-73ee52a85e35"
                    }
                  }
                ]
              },
              {
                "id": "8d2c4c72-ec1e-4553-87d2-08199f2a8437",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db4eb58f-9c19-43e9-b927-80a0d2b0e250",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a49981b4-5e22-4165-bc82-adbc0a1e4758"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "750e5b16-5d86-4317-a962-7398e5e4087a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a9eb058e-79a9-4a48-9aab-60264daf8404"
                    }
                  }
                ]
              },
              {
                "id": "77f2fa09-843b-48b6-8c9c-4b427ed81638",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fd51f80-ddce-42e3-b887-a94590d6a003",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1186648c-0eb9-4c87-a1b3-cdfafb0a6763"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d8a0c7a-9aa9-4dcf-9782-c984345f60ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "311de7d9-970c-4778-9069-00b14547abcb"
                    }
                  }
                ]
              },
              {
                "id": "33f4612a-165d-4ba9-9d48-ed2f14353127",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e6b9d28-9a9d-4c6b-90d9-3e10f3a4b430",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cafd1687-04f6-4034-9b6c-ee8f46ed81a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51e36d16-d31e-46a4-b069-38486ad82e32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16fd8298-64c4-4ea8-9069-54eab302a6df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d55ece8-b247-48cf-bfca-4da7a7b766c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bc25ea0-7573-483c-b1c4-e59e51c28c7d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "de18778b-3f24-42bf-9e78-1182f069570e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f78f3790-22f2-4e33-a38c-1fc8dd09c7df"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24882b9d-897c-4884-84c6-6956b6b71090",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "557ad1d7-5ab8-4286-a438-eab380e2993e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da6186a0-aa8e-4c64-935e-4e720f847cfe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "945a2196-cd2c-47b2-9e00-08d7cc97257a"
            }
          }
        ]
      },
      {
        "id": "c85a66a1-f3fb-4198-8050-150b3fba2aea",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "53ce3754-533b-4f03-b86a-d1dc06ba7644",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bb5c901-1349-4aa9-9d68-cea2ba3a3631",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2e853b6c-5f0d-4f67-9a42-576106880abe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ea79d9-f78f-4320-a81e-28085305fc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51b3c2b-e674-4f43-8053-f39859cceda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5bc03d-6d31-43e4-a6a6-32e30f6dce09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3353111c-d40a-4463-a8e2-e3995ac1c8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cf5ab0-7f35-4b97-8a9c-faf78bb8742f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214fce9a-e328-41de-99ba-9bc9a20a562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f682c92-b690-455d-a052-2e2d0174806d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b827a9cf-efe0-428f-97b9-910cba0eb0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eeed723-2134-4001-bbfb-4c00dcc503c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cb9bca-0c63-406f-91f6-7e8d95882dff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e89b1f-e301-4559-a580-0aec49063f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bdd7c9b-0b01-4a6b-af5c-83092aeab07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf86756-5798-4249-8e7f-5fcafb16260b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a43e817-2faf-4237-97b5-c99a341e7480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fc6dda-f8b4-479d-ac39-77231c6ba010",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9036a17-9a2a-4938-99dd-3985f0d31776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04cf3740-1632-48cd-983b-1f1c19ea996d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10e253e-05c2-471e-9bde-2056e0bcb50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4a952b-5d52-43c9-9cbe-6baa58488870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd16f4d2-0e2a-44b3-9c8c-b2da52183e06",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d435f356-6fc1-4b8f-a060-ddaf2cff2579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffa5540-57c3-4c2a-afda-71b4393ddbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ac5dc3-76e4-4600-9ebe-4a5fc346ae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77970d19-4da7-4a74-a7a9-44e5f61bca36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ce4483-3dde-4931-8d7c-80d6eb627a8c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd22cbd-7e21-4d92-a38e-9faa7959e1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872a3704-14dc-4f6e-acbb-a8cc6ee464c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb41653-6be8-4c5b-9687-5b6c2e9cd5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4784b411-e6e5-4974-a42a-649813346d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26292298-ff5d-496c-950c-f7d41aeeea20",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f3fcc7-cf91-455a-9b9e-8417b0a75b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab15664d-afba-49e8-9883-59cf81cf3c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4315593-59d2-4e9e-a24b-3b79c16efc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2dd2459-af1c-4a14-be2f-a527dac6d845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d4959d-df89-4ca7-8b71-149971abe61c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f70bba-f12f-4288-a01f-f5d203258dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b189c658-0646-4bd7-8304-3323a88a51db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9421e4-0c21-433a-8434-5c58994548ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d5ffa3-2edf-4f58-a823-e580fb1e2434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85da0c4d-1b35-4890-bb52-4506d2d1e9d1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d087b67-d7b5-4c98-a708-92db9f398f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cd9637-3400-487a-bf3a-62e15550c81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055eb298-a120-4d29-b6a1-cac6969d523d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9255e5d-a1c6-4b2c-8217-91706ee70d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d800fd55-74b6-4635-bb91-e07eca3f3c27",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5c1ccd-28a0-488a-8349-c274018c281e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50e293b-611a-43b1-bcf3-9a6b88d3df9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c99d6d-62c5-43a1-9a12-8c269687e23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65eddafa-7731-4700-abad-08bdd96541c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6cb775-f90b-43bc-8ede-5471a765776c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3ac4d5-309b-4037-933e-a567b68ba488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a326c60b-c696-4f75-89e4-85268986e0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2f96ac-f5a3-4fe7-9db6-deefa3b78b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "938bb37d-2011-497d-a4f4-5d314d131106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58d76d2-1d1e-4dfb-8ee5-1b92d3a81f49",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e6fe64-b52e-460d-bc69-6166c461af0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194c35a6-0bf2-40cd-8357-10b9efc7e4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ffbfe9-079f-495e-89a8-bae6dacd1f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b43a750-d1eb-4976-8dbc-070dcf67eb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33fb02d-f73d-4605-9a1a-2d10d818bcb0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e70d06-537b-4607-b46f-10fdb206e207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8748be6-ce74-46d3-97c7-4477f3053ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2109e0c5-c9fa-49d9-98fc-7822a832ec59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c47026-f314-43a7-83b8-5b4df78c8a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1602f08a-9473-4fb4-a3ca-ac7cef1963d1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1774f4-c71f-4bdc-8a9c-58acac4a539f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e26499-03c4-4caf-8546-45d1b3c6a9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa58174c-1ca8-4680-bf44-ae96840b98ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8865eb24-fe27-4350-9d15-9dc93a17ccff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0854302b-98eb-4d78-88e6-5a53da29c612",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2e4671-7a49-49e4-85cc-86c18d22c48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9212c6-db77-4e62-ab15-df3fb2cefd73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0719692-f822-4c58-b3c8-84b8737d0088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdf6047-57c0-443c-84fa-17b09d00c556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952a1af3-cbbf-4def-84bf-f15802bf6971",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc91f14e-c3ee-4e49-91e7-5cc6c8abcdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff0855a-a561-4547-947d-05bfdd8f5f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc520c87-1ed1-43b5-989a-1fd9ee9e7737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a392ec3b-b245-4afc-b579-273b3411fe0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd291098-e841-465a-91fa-def54ceee11d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c90175c-cece-4c8c-8758-ceeda01ee1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6bee12-d702-4bb2-9d37-32bb97f66632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3c7ae9-7605-4127-a4cd-960c19b7059a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b1b745-d8af-4d26-abaa-449808766b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6791c4c3-7726-4019-8045-9b4afed65171",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bc62b3-75cb-4e01-b2aa-5e4672fdb916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9b520f-1d5a-499a-9e6e-bc419e62a728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63febb2f-674e-4150-b82a-069d263877cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b66b693d-c68a-46d6-830f-a66ddd132bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae69c5a-b013-40c8-86ef-46d22e1986b6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a82ebf-71ae-41bb-b1fb-5802c50b6b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557766b1-db73-47c5-b5ec-3b90c78dba38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394803c1-0b3d-4c24-8e95-5dd271ee5617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43b6412f-6aeb-4eaf-9506-2322d551e354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea05698-ee08-44c1-a38d-46291b0021bf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f8ff03-6703-4273-97db-2321567659ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa30ef6-076f-4483-b6f6-01d4398ae373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e683e3-ba54-4066-af71-a6d56cf26011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ff7091-e966-45ff-a71c-46c10f4c254e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51a62f0-f39e-4442-827a-88238f1bc3c1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c596151e-3a54-4f50-909d-412a1de53862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b21a4e7-74b8-4364-ab6a-fa837b3ee4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b192a76c-74a0-478a-b797-2fe7d931006e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8e045b-790e-483d-8dba-fc2f7bcee449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ae3f12-558d-4b7d-b08e-e848cb86ee22",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94d21c7-c0a1-4747-973a-a93ca4c6423c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f633fed4-14f8-4dba-a554-66df7f4e6d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26183a3a-3fb0-419a-abf8-96e2bcd24d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7487d22f-bd1d-480a-b045-0a07015d0416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e460bc01-5328-4486-8382-49a0a6cc6ff4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a836c717-572f-4931-af8d-c4d43cab6c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ece26a-2aab-4a42-8e6c-0a369de78aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3c91de-c4b5-44d1-882e-382c1594e0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "414a6f10-94fa-49a9-b220-da1026f04cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371dc889-62dd-46b3-a0c2-92af467f3f47",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f068c7-2415-434b-8a7c-83adeef93534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d24adcd-9492-41b2-b8fa-57a186fb93b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e09570-fab3-4ae1-8cdc-56fd9cc1c6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62085dd6-8ecc-4a20-933e-9aa23a0a0c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dd7c03-918c-492d-b817-f235576586eb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4830d27-528a-4675-b426-221a7e2025d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3f57d7-b40c-4279-a5d5-df8d24ccc4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff92709f-11b7-466d-bdb9-2ce9f381f57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d53b5eba-a89d-4ed4-a966-380f8a9754c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7a7014-a070-4234-b558-432459ad88a3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fee7344-e229-4959-8031-e2a595c6a9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5d1e59-3211-4978-bd30-53f7bb4c362d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada0626d-8c2e-45f3-839e-dbc7d4887181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d802d3-ed66-4d1b-b568-f0396b2b05f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed2a560-e659-4628-ac79-2ab45a26a62d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faa9c70-4d35-4f82-a2e5-823d276e08ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbf3e95-34a9-445d-8cb7-cdeb5c87408a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38627cb-03a9-4fa4-9bbc-a720758f598c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f96ea4f1-0ab1-4a13-99a8-5f33611675d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09d8869-cefd-41ac-bd3e-bf7837184e33",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1e6ae7-54ee-4b29-8f16-a9b2576bb0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcac9924-935c-44c6-887c-4ea7dbee4227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d981abb9-b80a-4c19-a1d5-52ba90aa5724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2432d17-37e3-4200-90f0-add0a8a68af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e5226d-152d-4d6d-b80a-a4f88a901020",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782e958f-e23f-4e9e-b5b2-06327fb954e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6340dd2-ec45-439f-8668-ed6fc7d48140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120aafd8-d998-4f93-bc10-8f690f5346cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "803972a6-4225-41ef-8366-a6a5742a78bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8ac548-3843-48a2-b1a4-aefb500de1ca",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee94ee7-ec24-4302-910d-7c1d1dc8471a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3440bbb3-547e-43a4-bb7e-ea8d2b406e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46972111-68d9-4200-b87e-0e2d1e3ca1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe5acbf-f47f-4990-902b-0ab59c40ba43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bd2d26-7339-4810-9634-6c36997bbc26",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f40707e-029e-4f81-b81e-87ac37a023d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb334f69-a6ae-4817-bc6e-814f85828f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f259e61-debf-4acc-a2bb-bf94a18260af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84261aae-73be-4268-9b0d-d1343dae1459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a95741-ab40-4613-803f-baf6bb162295",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59216c9f-fa38-4e66-86e3-32f38d36abb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c970ad9d-c114-4a75-a71b-f1676edebaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9e2464-8635-4382-90ac-f7fe94a38463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a97b0a38-0860-4ee3-8287-cfa47a627270"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ed4502b-81ba-469b-9e52-4b13f1a5420b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe8973b3-89b4-4306-a5de-c65bd49bbd7c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459b38a1-99e0-4be9-8ea9-36a37237a94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3768b73e-d856-4f74-a130-2e6448eaca2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3d5647-f5c0-4b9b-bd9f-9299f3a9bef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f85f7190-223e-43ac-bbb9-15e2f56ff188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5579cf18-93ee-4856-a11a-2097dee84986",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c373709b-8cc5-4c83-a302-c4703b0b9dfb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "e25093bc-d463-461a-bca0-6aaabab536fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cced13cf-128f-4e03-8006-b90877c26349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e447ab0-1464-4a84-8082-4afb952dbfde"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed5f58ca-e3c1-4b83-b418-fd72736193b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c749a15f-3ae8-4bbc-a976-f7204c656116"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94b15fbb-56a7-4a1d-9475-f63d5e25ab29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b877148-5606-48cf-a45d-de415efbf9a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd06aab9-8404-42a6-8115-4cbd304f4972",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "10576cfe-8e98-4be8-9cf7-59a5e99e060f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc67d622-df9d-4667-be4e-76ec5a121454",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "722ea963-2027-4275-9813-4b09ebb1098b"
            }
          }
        ]
      },
      {
        "id": "52d72b1c-3374-4eee-90f3-95539a0e2f82",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "596ce09f-6083-4b0d-927f-a16bf00c95ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4c42a3a-da18-4c8a-b021-42cf41bf6e91",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23f4dcf6-7fd8-4bc8-8409-bcffc36f547a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973b7dc2-276e-4b09-963e-ed85d18eed7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06242fe-b840-4957-8516-834be0769ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d2ee95-2ade-48ff-9a58-f725c93e0eed",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c411eaa8-933d-41ee-b18e-22ad25a584ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7f741f-e1cb-44f5-a1ed-b75ef8e72dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e9a1d4-5f7b-4139-88d5-7b03608a2cc1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a785bff-7826-4fe7-a782-e5723dd4e0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de09e10-10fc-474d-bc32-e664a1c0dd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4390c0c4-c684-4b6d-892b-70d3b7e84de8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad81f940-bb56-4209-bf85-be47bf8041fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c746117-3e60-4fac-9807-c9485e60ea37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47c5e1c-976a-4e51-9b59-e84bcb5b75e4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d66d5f-53ca-4cf2-b265-5adbacd9105a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be87b25-1590-4f32-8b4b-80aa9f3d18bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90417f38-e556-41e2-b21a-6d0087073eb3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46f2f3c-c103-4eea-8606-760a5d7498a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156837c7-2922-4362-9795-b5c2f935681f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80c6845-7a77-434f-8ca7-b9ff476096dc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ce8f91-c7a2-423d-b64a-0304325748e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7ac5ed-04bf-4939-ae95-c67f336a5b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7633d3b0-f072-459c-832c-5ed8048c10c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd7b641-cc06-49da-a2e6-49d4e9e432e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed01db3b-58e8-42b8-baff-233994e9fb6f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e46f5c-7125-4d1f-8c63-b97d0b56c9ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4973753b-8e71-4102-9038-d054c4155424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59608314-29ac-4b4c-a0af-b6b820bdd3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe1b818-8c91-4e57-abee-483bb2825824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5063bc-08a9-44e0-aa69-da07af3c7cb4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748f626d-b8f6-40d7-a64d-4c2766c343ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b05f6e6-c41e-4da6-80cc-cb7ae69cf903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6252d1c-32b5-4c26-a482-152b04754155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6327e978-3e0e-4919-bf04-4a52fc7d018d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb08b1ed-587d-4d5f-b3d7-76620b4247ac",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fcf19d-766f-42b2-bf42-41034cde7b77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54bf63b-3d65-4262-9756-c05125dfb10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4007a8d-19e7-48d0-8106-928b08a6e5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa2c0a3-24e5-4489-8d08-9f24e79ec07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f250987f-e20b-442f-9fb9-36cc34c54254",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff4262d-79b1-4283-985b-c45db5ea2ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07f967e-2e67-4bcd-9727-c4d4a952f96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084f919b-5e2d-4ebb-b233-47f77a8c0306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f280bc-d637-4b84-b70a-881a0dff1a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b5d0fe-471a-4f5f-9961-3fd223614928",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f14267-bddd-4004-b675-ffdcc3408682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d30f6cf-489d-46c8-942d-b0a04c6e3f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4da2d0-f07c-4b25-85a9-34eedc8308c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b64148b-cfd8-4827-bc2b-70b1ffa5cf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5593e52f-c7cc-488d-b486-b263d0bd5ce6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1aee3f8-15d5-4a2f-8ff9-cd8f00389f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21ad3598-6e8f-4313-8384-77e9c380636e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5175d36-ef90-49a5-a533-fccc2e42d97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d13361-880f-4fd3-b408-4fa97e438ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed8b845-e4ee-45b2-86f8-1d14a57315f9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f356b7c-316e-4668-b1e2-36e8c563aedc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e42ccc-01f5-44c3-8700-b9a31d2e9499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b291504c-ba44-419a-b27c-53c72504aa07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14541406-4cc1-4b0d-8f92-988aebd9bea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c4d95f-6cbc-4b82-9142-8518c648a34d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1921b26-8654-47ec-b0a3-06ef23c39665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c59df3b-98cb-430a-b901-4e26707e15e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8081161-20cc-4d3a-b667-8b7c525cee94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63bc2fe2-8c8f-4036-bd6b-ff7c076d86a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45567fb-3a7d-49ae-bc9f-875be8a35b78",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dea99f5-d0cb-439c-b377-96f2db5d43fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd5a4ef0-5e23-4e77-be0a-18a5875f6581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08a479d-6d0a-4806-869a-8d72ce0fc156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281eb6ea-edb0-4297-8e01-603ff71d569f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a1122e-9089-49b3-b919-5c92640201ec",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d092e4-b68b-492b-a5f0-509ee20148e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecaf073b-3107-4655-8699-97b5dfc13f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c258c8d-25dc-40ee-b902-a8576f10dd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc56aee0-6e58-4cea-8898-22b91aab5682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0965d90e-022b-449b-9863-eeed91455dfb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ca5924-2c7e-45d3-b979-576e5de53db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd51ad89-0812-4126-8025-58e41d8ddbad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fa749a-5f3b-4cb2-906d-e7d0483e40ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb1259d-9ac0-41ca-a391-ad8f380f89f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1f28d9-4810-46c4-b65d-db35ad0a4eba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d612a3a-d1c2-4a66-9bd5-a099e0f15dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fb7685-550b-48d7-bfa2-9d5d4df52825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7424382c-b403-4f2d-9d3c-4fbfd3e6f644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0359cf74-11b4-4ecd-a972-6dc5bd81ae83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8046de96-ff2e-46cb-ba21-4e906f6f54ca",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ddea09-ab76-4217-b1e3-64491c65c6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fde5d4b-5a7d-4047-a7a2-a7e6899a0e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986a76fa-d6b5-4f03-bba1-bf2476a0c01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de61403-49f2-4624-8128-41cc1c9c6dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3be2c6-9e4f-4ec6-8a51-136b99ae43f8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d649fb2a-10ae-4329-8ce3-0a0319e0eef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ccc15d-4d36-49cc-9667-cc4f28b0172f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89951249-fc89-4e3e-87b5-2de559a062eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de50acc1-03b4-4bdf-baa9-3f81cab62fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ac02a2-2fd8-4d34-9f9b-82e90241aa67",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f4846b-1a44-461c-a912-76ea17bd439d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d53f63-5071-4d46-91dc-71bbec7d3170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be837c00-e9ed-4bfb-891c-e0c9874b0c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f794d2-036f-447a-a1b3-3fb00057049f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419e4831-3d9b-4804-8a5b-0aad2462fc65",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3eec2e-f347-4a4f-93d7-da37765207fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc566c0-56ab-4bd8-8b20-17388b18c170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4125afd0-1ccf-4ce3-9458-68c7efc6e3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4552d3bc-b1af-4fad-9ee1-4e8957b1485e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf10594-0847-4969-a522-19fb6a8bf391",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5f14dd-03c5-4998-93b8-ce80b687590d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a7dfa0-332a-418d-9677-c447bd03188d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e694dca-0fd1-4b9f-9c64-d93babd95793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5714d62-075a-4f08-acd3-af0727f76510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3cd693-974e-4b76-89b5-ce06b7702234",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3b109f-8f62-4dfe-9157-1ede52bde08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb321bc-9a53-4871-b388-000aad92a137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d0ed04-5222-4e94-8e5d-b84d579e50e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397dc85a-6853-4041-9680-36f63ce4bbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f018c2-fc5a-4069-a925-65b28f8be266",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86f4612-d381-4425-a2bd-3c20aa112c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "115c2dee-911c-40d3-9720-521dc150d986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09881ff-3ad7-4d04-9750-681861deb4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2008d5c8-c2b7-4427-af43-b4e04151b1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f003464-6482-4786-b20c-94ddc3e7fb0c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7dcf45-bc41-4159-8436-0d160eab2b40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80d8c5bf-1aa2-47df-ac65-124e59fba119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a98da1-3868-4975-9529-1a5df27c3e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc5d0b9-a5d1-4bbd-be90-072f848372a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfd0432-6020-4a70-9970-88f925e6786f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4e2a5b-6484-4ea0-b6a2-dcb8ae0f2fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d741aee-3a54-4a9b-93bb-43429c7a8fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b336c792-8835-4f27-957b-3322e7848c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a844e60-5af9-4ac5-a325-097845cadb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dea70b3-eaae-49fc-aa9b-b91abed7a541",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea19a0d-96ea-4fbd-bf59-db30c5ab0296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b277d90-e7d1-4bd0-8e88-95280acfd3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca6a85f-c8ec-4dd9-a954-0ab2af879a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6042fc-dcaf-4dc3-816a-c186d125d4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e00a28a-c2f2-4d13-a755-5f48005396b1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e11e87-eb1e-4054-8624-aa67f950eabd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c329cdc-84e8-4998-a543-93adc9eaeda9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298794b2-7db8-4d97-96fa-c0710af3ceaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2421ea-2105-4fa5-8745-89cf7660f1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e915a1b-8925-4326-adf6-61d17925e882",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922b8881-812a-4b9a-9f45-0d13ab6a34a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07427f20-293f-4a65-afa7-e98d54da865e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6234e634-b769-4dfd-ba62-df056d8a9b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de07b942-8f52-453b-ba65-bcb45d8b78fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e9215c-9d60-4e91-96b2-61811214092c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bb7daa-6d4a-4450-877d-26b870c4eaa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1fc5f24-5c2c-4192-a3cb-7d5118becc44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5b03cf-1d21-4526-8324-0037eb3135cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ff40c5-fad4-4c3c-9136-8335ad28ad96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549de755-d355-4244-adeb-f1a6e49962b6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3963af-4a0c-4056-85d4-d5841c606735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe305ce1-c495-467e-acc8-93329d9ec931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4954cbb2-e481-4ac5-b8e9-2e8719c641ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ef8b21-788e-4128-a979-c288e36dc795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0bd86f-8e25-4622-9253-9996be24372a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6fb776-91fc-4ede-be63-edc4812b793e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9254f563-3f55-49a8-acf1-85305d2b7df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1bb729-34e7-4eed-987d-064c298e353a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0795d3-0b5f-4956-9d6d-21ac9ab69b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce8dabe-ba65-4d51-b6fe-5941193681a8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab93b3b-9a8f-411e-a8b7-efad9552d9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229416dc-d26f-4cbb-979a-c37efce82f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad71d3e-149f-4285-a666-40f9aea7bf0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bdb913-3574-4251-a623-97786d6f8220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d1cf99-3b2e-4c9a-8138-846a7cd26305",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fd9e8a-cb7c-4bca-8b99-18a67eb85e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a29a4b0-1579-4ecf-b9da-d31cdced89c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342bdce0-49a8-4e21-a23f-97870dd9883f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59bf40b-4cc0-48e3-a314-2171cc998e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573ab264-26fb-40c5-b6fd-5fc18369e360",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b991bfc-c599-4105-aac5-c3e75a36cf75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa833b45-5096-4b3d-a568-e784c604b501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971a6626-96d7-45dc-976d-aee158a05cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbd3a56-abe8-4f57-8496-0e2c8a650512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdfee79-a04a-4753-9a3e-85a4a24954d6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729c831f-3184-4260-be93-6e8b282468bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d353dc-d10c-418c-a083-233be2caa8d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc26e3f7-fb0a-4ced-a274-854ea386907a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8761fbc-0401-49d1-932e-398e31bdbbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ecdd1d-d6f3-4966-9f62-61fe48de1c2b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d76f8e-2f3a-4817-9836-f8f4725c5811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c7667b-12ac-481f-bbd5-3534036afbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddfa733-377b-4a6f-8080-24c5b9991270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f090d1b3-3ddf-4339-8f38-bb580681630c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24afd5b4-cf07-4891-8428-bf3505ca63e0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083c3188-3ce5-45f8-94ea-569f168d0f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64914f42-2c0c-4109-b5d5-11c0945afd01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eba57fa-be1e-433e-8091-b14876b1d8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e938e942-1569-4abf-8e9e-56c1de79829f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5385f7-d71a-49c2-83be-b930cc5c6f14",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6221685-dee8-4c80-abc2-e9ff3e2d1863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f109c86b-7f27-4aef-a2e8-23f9e24b15d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c621c55-26cf-45f4-a418-c7d8706e73b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ed32b7-b553-45e0-8971-e342d6b372e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb4ec4a-45e5-47b8-9267-f7351ca67a31",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf8d062-efae-4574-ae89-1df344d80cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ad10e0-3508-42b8-bd4e-eade04d46343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6de48a-679f-4c30-ad37-bcee628b5b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d059098-b954-4e03-91ca-0fc8a8333b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a6875f-5d86-48f8-9f6f-6ea059540d2f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8abc4e5-9cf7-4d2e-934c-820486588f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aab29ca-6e0c-417c-b200-77f644f8efde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961df12e-1831-4fc0-be7e-9ae51613abbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8db579-2760-4892-8ed7-7fcc693d1a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9978bc-7bbc-4338-ae64-f42e540f2ee9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56349996-f20b-4f78-9156-a5a3f5526f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f796ec09-4a92-481f-bb60-ac62a5a81e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20cdbea-c665-40cc-a9b2-3c49267d5a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19f76ae-bfe3-4142-831b-0974514b9e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b118b2-9e58-420d-95d7-d7b4fc852df9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23123b1-f741-4eb1-a319-fa74c7a00abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b3be7a-2d7f-4a61-87f0-1067b6cb770f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9be50a-1e33-45fd-9ae6-6adafb64b5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82139600-dad3-41c7-8372-2850bfb787ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0d4f6e-e37c-4ce7-98b9-9bc36ebc94ce",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4795fdc0-ebe2-4cc1-b22f-ff125bbe8dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8612592e-e821-4592-a5a3-5a8d03444984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb63716-0b85-4759-9e46-a5dc2234f333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c56735d-677f-489c-a99c-fdc4f99fede1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6b3fe5-3924-411f-96bd-ac4031664f4a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d104b245-5ce5-4458-a4a0-6bfe9ec4e41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09292199-f2be-4be0-bd0a-c9b2b073465c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20644aff-dc5d-4d11-af04-a584249d63b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f1c5c0-e3d4-4e82-9a58-23ca8c0c4023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2477ab-ada5-4117-a366-0f07c3fd7921",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7102091-2de7-4aa0-b822-65262614f61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f32b80-c019-4b30-9598-9a74fc76bf07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411b646c-550b-43a6-9a57-ef4a8a56fca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074b819a-c92b-4001-aa01-84f846043a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf086012-a4d2-4b56-bd3d-1f63ed3020a0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7d7741-73d7-4da1-a532-a43ab8b1c339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf928a6f-ced7-4336-9452-c757b608721d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee5666f-753b-4adc-bfcf-0c6082c80f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45309190-a33c-4825-b1c7-3831a394e3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042a8867-c6c5-4a4a-9b07-5d06d06663eb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f9f56e-c319-4f38-a8c0-f733bc387360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15d6ff2-618f-40a5-ab80-ffe75b3d74b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faee7a07-a5fe-4bad-826d-5294af580207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26c1d37-9abf-45ea-9a50-cfca8d1c1cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977bbffb-8648-4d8b-8fe7-be41c5beeeb0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67c4c33-6305-484d-829f-ac66f6aa51fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0800aa1a-28ec-4f04-b7a0-bbb6bc5e9a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151b72ae-1ef5-4c27-a06b-0a2f5584c80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49d67e9-0698-46eb-8304-e793edd9348d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40b5ce6-36e8-4ed4-99f8-48727cd2fb1a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0339fcf3-459a-46b3-981a-500177713207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a077ff9-a951-4668-8653-bd4ccc712b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87655430-9571-4eeb-92bf-a9c4be6e893e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aaf7a94-e8b2-473e-9061-7ec8e0000b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d1ca50-91e6-406f-bd1a-e51c1438cb74",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eda7776-4ba9-4c89-b1e6-fb6b789a4935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f113702f-46bf-47ca-b685-6416366b0436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd0de8c-3112-4669-a560-617777f43038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b18369-5c15-4aeb-8185-5d1f129d4906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0587439-b359-4b01-817d-37af1f774657",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96620c4a-5e1d-439c-a9ef-84adeb5e8810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68288569-ca74-4ade-ac92-970bca2b8243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd13b0b-9098-4588-a8ee-32586a640ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a4314e-8247-4a32-93ff-31cfbcbe27b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54ce9c3-f2cd-4928-997d-8cd8eb9e667e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72363864-2bc9-4011-9fa4-902a08b42b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22be394-2d4d-4418-891f-9c45b8da6e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c82b3bf-0f14-4b40-83a8-699a383f3c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfa7e46-b83d-42a5-8576-9b77ce6b4662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b63dc4-77b7-46da-a434-3053eb67b454",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf836788-7ee6-419e-9d10-df5ac68dd2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8a4664-b28f-47dd-b1a4-0f443008e4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46a734c-3076-4a9d-b98c-36082d745b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b36971-bb65-48b7-aead-45e8728f7b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92e0fdd-6a18-42fc-a2aa-dd7acba0398b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b040c887-88c7-4c79-813d-7b3f79a0b752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1586719-bb14-48a2-a3b2-8dce59083aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dad392-3519-43af-a3fa-0fa0c8098457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd9aab3-34ab-4879-9294-28de6aabbe8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bc695d-19a2-4259-8ec1-d4ab6395ea8d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21378bec-2fa5-48c1-baa7-34107105fcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a7bb37-b7f7-4573-9f33-9425d17b3f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93a0e2d-7c76-4824-b933-dd29ede38533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6adbf1-1e46-4a90-b68e-618abefb362a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdbc09a-6698-4a0d-9cdd-a1147c656fff",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59b3007-4900-4b31-b763-30633b366950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f86a2ee-556d-4d1b-a0dd-fc2707665d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8f393f-effc-4620-8931-e26a88545d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe90757-3c6b-4d39-8c44-9623608266e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad794696-7f5f-4fa1-81d4-803fd5c6e029",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5fc2d3-d89e-4a86-be0c-1100277b377e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592f6f52-bd82-4eb5-a3ee-a7fad8f9c6a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8174f45d-e0c2-442a-9bf7-646780e7f314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c3fa1e-a125-45d9-ba55-09f0709b161b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc9b097-fe61-4d05-8c23-a105c662ea51",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cc03e9-bfa3-4ac1-8a3b-9e18c5a98bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460208a8-11fa-4c35-a675-e507cb99cf0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb498bf6-bd78-4ffa-b821-53a94f3c770c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6c4788-210d-41f9-8d2f-aafbc721d626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654c333a-02f1-43f7-b1d0-687db4e2f16a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0237e05f-ffe5-4273-93e3-e14d2220c6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c407e8-27d6-4f59-838b-28cecb776cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1f8337-e36f-4fdf-b071-a94f059aee04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b56c9f-7c51-452b-992d-3c53c7f332b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca252d9-e2aa-4a60-be43-a831fdb85713",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3875117d-9e41-4471-b2e5-d2b9d30c172f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03df9648-2b13-43d2-b49f-9d76f8f3cc53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8cc4ca-225a-49fc-b183-c6575989f376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d229b6d4-a76c-4a7c-b0b8-39d5e394b9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f65e9a-b29d-40f6-93f5-5cbf566f7c28",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada256da-702b-432a-ae6e-dbb1f148bcf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6731e7b9-dfc4-4552-8326-e35df0b4a4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570be015-5d2d-435b-954c-4b61407e3e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf9e511-b6b0-491f-8b82-19521932962d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a73e99-3aa9-4713-91f2-0d50657a6476",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1b539d-7b81-496b-b0d6-ec7a613993cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d79c5c-338b-4e2b-ab22-8dd045a2909e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f698805-6b90-4708-9327-8facd17ca7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d326cda-3b4c-45ef-91d6-b04a7b248487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f22216-ef29-4fb6-9c63-97c45f0239d9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec96a394-8b8a-4c1a-befa-97d06785ef57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24ac10ce-85a9-4d89-bffe-6a094eb76eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5ffd88-8faf-4ce3-bff8-f7d1d86c995e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d981030-b8ea-4f21-959d-1c22b99eeb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e508b2-0265-4b8d-9c46-be67eca0cd20",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c19146-0f37-4c0c-b826-113fb4b91a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e8d642-b71b-4317-ab31-45b430fc0114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef8858a-b8e1-47d1-b998-d9631037fd7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a747093-c0db-44f9-b1c6-8bb9d69803c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f721fd86-f6c3-4a64-b70a-ac7ce879f9c3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab54df1-590e-4391-8312-2392af706f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d383f1a-c09b-4de1-bc6e-7c2d6e430872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0337bd9d-3093-43b7-ad65-f255de21368d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9433725e-0354-4939-8fb1-935fd238d31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860c7861-edcd-4980-8cbb-b5cd6987a9d7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348d2500-483b-4e8b-a7ff-1e84036a1a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9dcb514-88db-4d0a-b067-30e5cbf93011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9556db-0b58-49a1-a097-8bb5065150dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40dc525-e6dc-4c94-94ed-5847cec928e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9343d6be-6790-4f32-b455-c10cf5adbc53",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe359b1-1027-46ff-a16a-243aa143e748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e70440-a5aa-4966-902a-2de924d756ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31d38f6-3741-4926-bf3c-9fa09f3a40f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946c57ab-2966-45b9-a946-960eb92c20d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f67913e-0ff9-4c80-81ca-57c51e84fd80",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32530d69-eb93-4950-90ed-762e565bbd84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44860f72-93dc-4e63-adca-9013523da8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de2a833-bd45-4f8f-8296-f237cbf79e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853fe6d0-24ac-4dfc-823f-946003e6a3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ea23dd-987d-4cc8-9258-554f5d223221",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b194995-e549-4010-b7b0-b77982cea7ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb230ffb-4895-4df3-8a55-ea15a41ed1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa18877-408d-4dab-b0d7-5ba746240460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f007060-102e-408b-9a67-9c98c385f7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb888792-1688-4280-a331-0bb38efcf0b9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d720e7c-b9ba-4142-b1e2-93042095bf71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7389bfe0-cae2-4d5d-8982-81a227bb5b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5731537c-e5d0-4336-a0c7-9186fdf56d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351b93fb-d9b3-41c8-aefe-5d5791cc88ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504d5583-9c87-40d6-b19e-5c353f538cf3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53098a4f-26d9-499a-8232-ee7e0e91e696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e88930c4-35a7-48c1-9e6d-2f51f08bd7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09fffcb-dbe9-4f35-a1a6-a548bc821c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5f63d6-6ec8-46f1-8ac4-be5c030a0ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e1cc9a-9793-4c24-a703-8929c00548cc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89eed5f-6f65-4530-9b77-c4abd5592c67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "748c69ba-fe14-44db-ab77-058d6b3e1e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278c3c2a-6b99-4212-a320-7e08733f48ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb9f8c6-2d0e-4bc6-b8bb-007208fa425c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a96b5f-e55d-49cf-96de-044860cf2f0e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3b67ba-1e99-4123-8d4f-ff826c84c6a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f841913-3458-4b45-8dab-c95585939085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41542df6-76ed-4795-9a67-504a9a3115e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5242737d-5554-4438-9426-29f0ff60e4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7348e73d-4b50-43c1-a10b-b8e45f061bf8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d29245-28b4-4a7e-af79-686b37f6d10a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e334738-9438-4b89-84f8-8d0f829abf05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2346d6aa-a8dc-407d-979f-d82209cb8143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce199111-febd-4693-b54b-555fc8f1a629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfd4c02-2ce5-4b20-9e0c-bbb4f9906203",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b33e29e-f90b-45e3-a106-f1e11fe57ff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6764b0b3-b7dc-4370-aa6e-7317364996ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76aeece-fb5d-4e9b-aedf-a60867cbef2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85117c72-0d0d-4dc0-b2b2-5ff3b2779f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06cd28a-0f4e-4c0f-8b98-bc218081560e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7673cf7d-de9d-4acc-aaa6-2f8d81d9ea90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2accb13-bdfc-4e57-8e1c-5d6638add209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc76a320-ed33-448b-b975-6f96bf404dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88932d4-4dbe-4a3d-93a8-90c9844440b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50525c68-8b09-4251-afac-7fc02975312b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b60a0ee-dddc-48a9-afc9-e4206465871a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e3dfec-4a30-4c46-afec-646913e80105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0540fcd2-274d-40b6-91dd-d2407ac61f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7124049f-0ab8-4bdf-b0d7-560bef0587db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c227c3e0-6cf7-4cf3-96c4-b47ac0b29ed8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36cde74-daad-425b-a5fe-1156d9a5bb06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a40e30b6-ab9a-4d36-adaf-9261417d7142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321b0d43-0fa1-4ff2-848f-45bbf97d051e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbab75b-6a49-4834-9b6d-9eb32ff9a39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b40b3e-1b2b-4d21-88fe-da038398bd32",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96d0406-ead8-4dec-a356-12c68522ddb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b0969b9-8029-401c-9dc8-d64a8fb60d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f7e687-23a1-4218-9e9d-f3ae6ac0d17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b0d32e-d288-4400-9a72-a3bce1646104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5677840f-013f-4b6c-9847-af31c7168b50",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac4b8da-eaf9-4c93-ae68-822f59beae5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a464751-09d6-445a-b61b-fd3be2345347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195c3d46-ef1c-4802-9f2a-426030452032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3256fb-e276-4d77-b677-4a169d794cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db1e2e3-8755-4217-a3d9-649653161869",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba72ef7-7362-4c3a-b907-690d1506dc05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75baa97e-0aee-42ec-866f-7e976309c2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6bf021-183b-49f2-8da0-aeb017550804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4d7e50-9bb1-4311-ab1d-b24f5f6b6bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5e24f3-14f2-4369-ac54-3415f5a493c4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb1c389-b032-402c-8089-d30c46cfa581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d49905-ff48-4567-8804-5f28398662e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e518e90-717e-4d0d-a457-eb48eb83dfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6ecbbd-5a6f-4008-9214-896bc975b6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ebbf7d-ad8a-47e7-a234-9dd6f210683d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bfc60f-a33b-4b5f-8e86-8985ab64fd43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de2861d-2984-418b-af31-8a8d9ea50e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1b9fd9-f6d1-45fc-b474-4267fee0a832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06d2747-8318-4503-ad64-8464b78914fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cafd07-8bed-4684-9e67-7e46bcdcde03",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6669cb12-24fc-4a0d-a8f4-4770c750b76e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32bdce7-b536-4284-8a55-4b1db4d0a548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c10bdac-ba9a-452a-8b92-0393b4b6ce82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8becd083-4661-49ac-8e26-4d640cd53cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6920b360-1800-4c07-a0d4-a37892466032",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85763bd4-1aa2-4bbf-9301-7ddc69e14c82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2268f3a-ceea-4008-946c-75a9417478d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b86800-9690-4405-9f59-f4c2d892f970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f8d0cf-1809-46d0-b250-330f0e3d7ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76326cd3-cff3-4c1a-82f6-d0f8124db67e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db566b1e-7db3-4581-a215-3bac4dbe011b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "423c1f11-5c70-4dc5-aa5f-d737f3cdae3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda7e438-a468-4a9e-93bb-73bb9f1ae627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357b8ade-477e-47f5-8298-11369bf191ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51983ba6-edf7-4b24-9309-0f2c4bc396cd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd916fc-43de-4d7b-be28-d8cbb989a996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96558fd5-be68-4472-93f0-f605e15d1ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0300d7-308a-47eb-94bd-1528522d8364",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132e0e4f-5788-4620-81bc-aa05347f2d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d9edde-66a8-46a9-b15b-e4cf806a53e9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1af3b31-07b7-4cc6-a424-c5602a9d835c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd95b12-83f1-4674-91f8-aa0b925af6ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923598f3-00d0-48b3-9ad6-f5d1cdb6a27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f5c916-3d6f-4e2a-b100-72509bd3ad55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b60752-117c-4f22-a374-723691582ba7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7a367d-f624-4f33-bb95-1537abc900ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4346d8e1-1ffd-4ea2-aa09-c7cbd74ec2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1765fde-f6c9-449b-a428-c87a7cc0b71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3fa7f8d-03ac-4c00-b169-15e5346abea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0062518c-1f7c-4e05-bfa7-a3290ef0a8dc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1933dc8-cd08-4c3e-b6a8-90f1ff101ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11d41fc5-f237-40ad-acc1-196cb964d89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2338d132-0a87-4139-b2c2-633dceb153b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832df408-cc48-4958-990f-53f9803c002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76828692-97bb-4301-90bc-ee1fabe1c814",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e7c306-62c1-4f21-9c8d-f5126fd657e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa59426a-a26f-46fa-9733-1074f445f98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5e080e-8aca-4566-9ede-6f2fff6b4473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384bc0d2-a85b-4066-832c-ed217fb9199d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72b13b7-9053-48c3-8d89-d432c0e9370d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ba9057-f93f-4676-a12c-91f0c6ba38a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73e370da-aa77-4a70-954e-b660981d5b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd26a043-c085-4f04-934b-07a7fdb48e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4629b94e-453b-4533-83f5-cbf5d5e6cfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fefd8b7-698c-4660-9f0f-0a4228490808",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dffbb70-07cd-4822-ae7b-08341dc1eb39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3386ea00-cd28-41e4-b718-ee64eb911875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0fd8d8-9833-4ff3-ad69-30c3c3749a3c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a33d09c-12f3-4946-b5fe-19a29319c825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bcbaa1-0b55-41da-941c-e2852fd283cc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ddb514-dea9-43db-b813-e000a18a3f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5eaec35-8319-4977-86dc-1825fffca547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98605dbe-060d-40eb-a342-7162b96811fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632a8b41-0562-41ca-b401-2448c037e256"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a52c1187-27d9-49c7-ab77-55cf70c738e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e58171df-9e4a-4e04-8463-2d9da2746c94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66ccc66a-7a77-407e-b8d7-b2029387e366",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f923407-bc66-4546-b9c5-24214479826c"
                    }
                  }
                ]
              },
              {
                "id": "233d1e94-c1f8-4c82-904d-010cac12059e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "263fb683-30fc-47a7-b336-fdf3c64af1e8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123d8ec8-5cdb-4bdd-bc29-a26fce87a997",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9e381bbb-b886-4e75-83a9-fe31dd738fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5e7dc9-504d-43f4-8091-8ec871a98912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d6ee5d4-43ee-4b12-8010-697ccc8368fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caa42f6-1cc9-4b6d-8af0-75f26eb497b4",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e050ff8e-746b-4f38-bb2b-500a08fd1429",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a904ecde-ca9b-431c-b356-0ff20cc7e2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a213962d-e840-41d6-a2fe-fb8cd62e90fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db020eb9-5299-4d42-a0f9-49d4082fe0bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c2c1412-f961-457a-8cb8-915a4f3a646e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3769110-6247-44b8-9115-bf794068d260"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b114f742-d74d-4016-90db-45d8b4043e95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08dc610c-d3bf-45cf-ba73-cbc9a2a8abd9"
                    }
                  }
                ]
              },
              {
                "id": "855a75bf-3bd1-40b2-9487-4c57c5497ae2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c40252ef-8011-44bd-8cd1-02e19616de78",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafb4d61-4108-4a87-bc04-0ecc307241f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a34f0601-ac8b-4102-a553-c4a32ea4e226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d03d70-6d38-4f06-b711-97a340328077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9294056c-9bdc-464a-87a2-0196f2ee39b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e4c94203-6d8d-4fe5-bad0-dc022fab8cbf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "afbd3ff8-9e84-4ee4-b4cb-4b89e1e83781",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f9386c7-cfd3-437d-9c1f-a6ddd2c39831",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6f75ca04-14a5-4f36-bba0-ec03552a0d5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf3b7282-fbc7-4420-a038-140ba73aaa3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7a95d49-3e4b-4aae-b25c-911d52e19410"
                    }
                  }
                ]
              },
              {
                "id": "835fe767-03e7-42b8-afa7-21acf95b2d12",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac84e316-493e-458f-aacb-86b412c0e69a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac8a56f0-2ac9-443d-aaeb-dc851386c253"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "634e3bad-ea2c-4a87-b7ab-63cc4a5c98fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a6a9f0d-c18b-476d-88f8-9f78231c32c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8ee93c4-8be2-453f-a790-74cea8f35797",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2ce46e8e-bc3e-4a97-85e5-b75dba0b59a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c67569d-ecd5-4455-b5ed-144131979505",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01730e36-494d-42aa-ae67-455468a8feda"
            }
          }
        ]
      },
      {
        "id": "d50aeee9-2530-49c6-8468-073a3d67177c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "36976878-7b90-401d-8172-598a9f7793c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a1c390b-1d8e-46b7-a4aa-3802c0a68024",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d12424b5-3a7a-4517-b89e-af1dd1097ec3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f86d50a-ca8f-4296-a7c9-104c3e37eaef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a6ddee15-a927-446a-9164-58b622b42a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa1da6c-4e56-4281-b5d8-d79cf4f7bc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c8dafd9-275d-4953-ada7-9c8455e7cbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce169c3-5ebf-4653-af3d-be110386d22d",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bee606-bac7-4e81-be32-ac5d07013a4e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0d6f73d4-628e-42fc-a309-12b37ef7df1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47285a5-a13b-40e0-959b-68df80aacb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e917a4f-dd0c-40c0-81d2-022004abfee3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66e607cc-44b2-43bb-8ed1-35e8ee99dcfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65eeaea0-6472-4d3b-890f-06587653c2c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2451dbd4-8c61-44d2-9b78-358f8589be50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fadd7ab6-1d23-4320-af59-5f5b6c856810"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02f6bd14-d681-4db2-b280-1a06f268a80b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cc83b830-6a03-4759-840a-b9b2e56aec7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81958111-1872-4903-9fa6-c903002c8a5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9fb9978-dea4-49cf-ab9f-6e2c6b271b72"
            }
          }
        ]
      },
      {
        "id": "d49d217c-bf40-49b8-9c63-a0287d3784f6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1cb24d68-35d5-4ca5-b769-b81ae72e19d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a851d8dd-d742-45f3-8ca1-786d02caec4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7381076e-a8f0-447d-8688-500a7c81b0b7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a819e4-323b-40df-84ca-a8d9ac75e702",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "00376b98-638e-4379-a011-383052fa8a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6912fbee-1740-4a81-9c0c-37ba659fd2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e8b9f28-1fde-4474-8ec2-0803fc1ab175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5e46e9-0c77-4750-a409-0d274f235f00",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac603a3-8917-4810-b8df-63ae4113125a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "92db7d10-9af7-48c8-b39e-f195a0c0de49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ea0c04-46ba-4fc5-a533-8e458b12890c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1be9bce-f6b6-427f-9846-ebad912c8d38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8bc1245-38b2-40fc-a550-06150594a53b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46b2e9d3-ef0f-44d9-b053-f1e8b3f5e031"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0c48afa-ade7-426b-8fc2-4c95cd77859d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b977031-2012-4cde-9658-2f4e11ec5e41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb88d743-f756-494a-86b5-29cc919bffb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ea1aa53b-c85b-4e99-ba65-b73c78eabfe1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdbaa2f9-07d5-4b8e-8aa0-a776641ce012",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "641a6fe5-0bda-4036-9ab8-9d1f5b9a4e01"
            }
          }
        ]
      },
      {
        "id": "9ecdcba8-9be5-4c53-9c0a-8a0f49faa07e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3dca6f33-759c-4996-b88f-e3437d10134d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e887ec2b-52bc-48f0-8bb1-7fe9c3830cf0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ba003e2-cfee-48df-a8bd-4858c01c3c8b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825c8023-8631-4583-9345-d5ed01cbcceb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "17c679ea-ec69-45b7-b540-6f816d94638a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7b00f3-8369-4e0b-afde-afe19a2ab2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fff9ffd6-fd92-41e8-8781-2f297e18c506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9213cbfa-d1ea-4a7e-aef4-d37c42879f0d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97ef474-dbf1-44d5-9be1-8633f365399b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e27149c9-59df-4b7e-ad3a-f20a0e297896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9a2aaa-3cf0-449b-80e5-a5ce78b17fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f42200a-0c2e-4fb1-a372-8bac55c43c11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "037ab451-1501-4f79-b903-28c522246585",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae6be790-de79-4793-b5e2-a0186ef05f70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24e6073f-9ce9-4fff-b5aa-f4d191385de3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "584861aa-66b6-4a4c-ac8d-445d4a99a84d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f8d4782-a2b6-4767-8fec-f9cc403eadf5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f1ad9468-f542-4ddb-9781-3f6d2ffa0ec7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3c1bd6e-ee8d-4215-bf45-a9098dcf2dcc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b18d5ed-3e59-49e4-97ca-5893dfd058ab"
            }
          }
        ]
      },
      {
        "id": "6be3fe39-7779-4bad-ad4d-2f99762d11e4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fa2a148-369e-49b7-8b93-70d0b709c998",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c0eb692-efd9-465d-a436-2aa608d5cb2b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4c5a57af-fd82-4ebd-931c-7a6eeffcc38c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "638373e5-8d90-4622-862e-2e4c494cb279",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04f8c69e-b94c-4bf3-bf2e-eb251707a6a5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 22
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 665.088803088803,
      "responseMin": 6,
      "responseMax": 4803,
      "responseSd": 652.3398365762139,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676940178689,
      "completed": 1676940361605
    },
    "executions": [
      {
        "id": "fef31c1a-0824-46df-8a9e-695aa7fdef5a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b67735d3-bb4b-4ae3-8dcb-c31a28c63454",
          "httpRequestId": "1d7e3770-756e-4a4b-bec2-5b2c69195b4c"
        },
        "item": {
          "id": "fef31c1a-0824-46df-8a9e-695aa7fdef5a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "84698938-81e4-40ab-9368-2dea618d6d7f",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "db3aec52-8df3-48e8-8632-9564c9a9ac73",
        "cursor": {
          "ref": "3c311896-58a5-4a6f-9d7b-650e5a5ca210",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0408ab54-07d2-4e99-90b5-4d5fa0bdc014"
        },
        "item": {
          "id": "db3aec52-8df3-48e8-8632-9564c9a9ac73",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "74f81211-b0ca-45d7-8c02-e1df8e41e9c6",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "be15c5b6-4191-4afc-b920-a24baf06987f",
        "cursor": {
          "ref": "22735fad-871b-414d-9ce9-57e20feb040d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a7ad3ec7-dc89-41d9-b7b3-e0dbb6a23e34"
        },
        "item": {
          "id": "be15c5b6-4191-4afc-b920-a24baf06987f",
          "name": "did_json"
        },
        "response": {
          "id": "a1e5f883-a45d-45c9-b247-6e4ecc952574",
          "status": "OK",
          "code": 200,
          "responseTime": 1009,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ef9dfa-929f-4139-95c7-19fd474bd10c",
        "cursor": {
          "ref": "411a589d-96c6-42ef-8d4a-f4033448967d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "25138eca-a7f5-47ee-88cb-a35c1f6193fe"
        },
        "item": {
          "id": "c7ef9dfa-929f-4139-95c7-19fd474bd10c",
          "name": "did:invalid"
        },
        "response": {
          "id": "55fcbc6f-e70d-4b0b-9510-115c1327ce8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ef9dfa-929f-4139-95c7-19fd474bd10c",
        "cursor": {
          "ref": "411a589d-96c6-42ef-8d4a-f4033448967d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "25138eca-a7f5-47ee-88cb-a35c1f6193fe"
        },
        "item": {
          "id": "c7ef9dfa-929f-4139-95c7-19fd474bd10c",
          "name": "did:invalid"
        },
        "response": {
          "id": "55fcbc6f-e70d-4b0b-9510-115c1327ce8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3822f7-6579-431d-b63e-40210b5f538b",
        "cursor": {
          "ref": "d2682598-9e1a-4745-a058-acf260633d94",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b414bce8-ca2a-4c1e-b86b-a6e619e291b8"
        },
        "item": {
          "id": "3a3822f7-6579-431d-b63e-40210b5f538b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "56a0e503-0e52-48f8-866b-a4e463c8f3af",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1282,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2973c285-5f24-43df-b83c-0c88480184c5",
        "cursor": {
          "ref": "08c2e697-22b2-43aa-9aad-154b3a9b85d4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "09e95055-ada0-4138-a735-82ffef8a417c"
        },
        "item": {
          "id": "2973c285-5f24-43df-b83c-0c88480184c5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4a2d85ac-e51d-4963-aeea-097f460d51c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1131,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced91cb6-e32b-4782-a2ad-17544ef079a8",
        "cursor": {
          "ref": "a24c21ef-cb3d-4a2b-aaeb-65ba6c68bddd",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f97e3d50-fe4c-463f-9a34-fc881196859e"
        },
        "item": {
          "id": "ced91cb6-e32b-4782-a2ad-17544ef079a8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c57721f6-ae80-4ea1-8f9c-6d746ca83636",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 138,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ea54f7-2e76-4cad-a05b-572f1bc37952",
        "cursor": {
          "ref": "68b5cef7-fad8-4c7c-9e9b-cf38ae96e3a1",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e7e88551-9f0a-44ec-aa44-45eea887e81a"
        },
        "item": {
          "id": "07ea54f7-2e76-4cad-a05b-572f1bc37952",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c1ec02f0-1af8-4f6b-9cf7-d26ad0284fcd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 636,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ea54f7-2e76-4cad-a05b-572f1bc37952",
        "cursor": {
          "ref": "68b5cef7-fad8-4c7c-9e9b-cf38ae96e3a1",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e7e88551-9f0a-44ec-aa44-45eea887e81a"
        },
        "item": {
          "id": "07ea54f7-2e76-4cad-a05b-572f1bc37952",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c1ec02f0-1af8-4f6b-9cf7-d26ad0284fcd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 636,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645c13cf-b14f-469e-8bf4-ec685d6a78b4",
        "cursor": {
          "ref": "30640e50-c341-408a-b3cb-90d7ec06848c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6ce2226e-16db-4759-a12f-56a9a97d6c26"
        },
        "item": {
          "id": "645c13cf-b14f-469e-8bf4-ec685d6a78b4",
          "name": "identifiers"
        },
        "response": {
          "id": "dcd4eb7e-0fc8-42a0-95bd-36542dfc151e",
          "status": "OK",
          "code": 200,
          "responseTime": 1433,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba36c535-4121-4fbd-a4d1-0b710593614c",
        "cursor": {
          "ref": "6a4fd45b-661c-4d4c-b175-0c017c66727b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4f7f09f8-1708-4fe2-af14-a5afd5e54b84"
        },
        "item": {
          "id": "ba36c535-4121-4fbd-a4d1-0b710593614c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50523449-588d-4b15-ba03-8fd4262a9b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba36c535-4121-4fbd-a4d1-0b710593614c",
        "cursor": {
          "ref": "6a4fd45b-661c-4d4c-b175-0c017c66727b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4f7f09f8-1708-4fe2-af14-a5afd5e54b84"
        },
        "item": {
          "id": "ba36c535-4121-4fbd-a4d1-0b710593614c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50523449-588d-4b15-ba03-8fd4262a9b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823d11db-5f7b-4b06-9a39-424c3252b694",
        "cursor": {
          "ref": "bbe3598a-629f-4684-9bb7-ce1c1676d3b2",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c36a0992-07f4-4312-9b0b-d0b34c261ff7"
        },
        "item": {
          "id": "823d11db-5f7b-4b06-9a39-424c3252b694",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fe98aa60-5149-45ef-bf38-a8771a66665f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356c9789-036c-4d59-b452-8dce1de0fece",
        "cursor": {
          "ref": "6bd336ed-7da7-493d-87d0-de09402768a7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a161edb6-9502-4313-8904-b04b3dd7b93a"
        },
        "item": {
          "id": "356c9789-036c-4d59-b452-8dce1de0fece",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6a57cce4-2bfe-4ea3-bb71-967995179153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5824579d-a00f-4c50-9d6b-bfcf747c5475",
        "cursor": {
          "ref": "4061da4b-c8aa-48b4-b08e-610d917323fd",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f18afd01-91e8-4450-8e2e-bdf246558b8f"
        },
        "item": {
          "id": "5824579d-a00f-4c50-9d6b-bfcf747c5475",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "36314dc4-113e-45dd-b56a-94ea58dd59e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e3c008-4e0f-4603-8cd8-d955bc9ad38c",
        "cursor": {
          "ref": "8b603677-66da-4f18-8908-ee0d6e6f2805",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9ca0c1f4-091e-4dc5-8686-7a1580a3c4ad"
        },
        "item": {
          "id": "f3e3c008-4e0f-4603-8cd8-d955bc9ad38c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "13669e64-65fd-40b9-85bf-080f3bd7a4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4844ad-2179-4508-be79-ca7518a546ed",
        "cursor": {
          "ref": "0d876d5c-896b-47d0-ad79-c04bd37c08f8",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "56355531-15b2-482c-b6f3-691a1dda5739"
        },
        "item": {
          "id": "8d4844ad-2179-4508-be79-ca7518a546ed",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1c13effe-5a33-4e4f-8778-f1ee443efd51",
          "status": "Created",
          "code": 201,
          "responseTime": 2940,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "id": "4ff81b01-6558-4137-a39f-3cc13739040c",
        "cursor": {
          "ref": "ea566f5c-ced0-4e85-80dd-d5a394ef31fd",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8e91b955-6efc-4885-a9b9-4c069aff1249"
        },
        "item": {
          "id": "4ff81b01-6558-4137-a39f-3cc13739040c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ebba9992-1162-41a2-913c-afc2dc469cf9",
          "status": "Created",
          "code": 201,
          "responseTime": 2959,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "935ff0ef-a0c7-4705-b01a-b2f97bd993ea",
        "cursor": {
          "ref": "75d6b7c3-bd44-45ce-b45c-9d0d83fd6e33",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c3aaa531-98a8-4f46-a8d0-e7770ea3549e"
        },
        "item": {
          "id": "935ff0ef-a0c7-4705-b01a-b2f97bd993ea",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b931148c-723d-489a-b6cb-80b81c565ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2998926c-5351-4ee0-9fad-688f9d022a83",
        "cursor": {
          "ref": "0b0681b4-d578-4dd1-9552-836450dfea91",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6ccfc50f-09fe-469a-b85d-eca3fed0f4ad"
        },
        "item": {
          "id": "2998926c-5351-4ee0-9fad-688f9d022a83",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "45c56c7a-3d34-49ae-87b2-d7d212e2a3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37295b66-e5a8-44c2-9c50-2fb0ec353e4c",
        "cursor": {
          "ref": "88bda0e3-c7df-425e-b91c-f5c46fc368b7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3db28a47-4c4d-4340-beff-ab4162e3f2d6"
        },
        "item": {
          "id": "37295b66-e5a8-44c2-9c50-2fb0ec353e4c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ea8f5bf6-f7c5-4cc3-9791-cf5d1016a8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb200126-4649-48be-8655-b95b6246483f",
        "cursor": {
          "ref": "37a3da75-a328-47c2-b5d3-d45feb6aa3b4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "838efadf-c008-475b-8c04-13f7178cedf0"
        },
        "item": {
          "id": "eb200126-4649-48be-8655-b95b6246483f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "38fbbe45-8022-46ed-b582-211a478d1424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f5baea-b8fe-4b82-8491-5dd87557fcb2",
        "cursor": {
          "ref": "a0b05b48-1359-4afd-90c0-b16de6d46f4f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "df1673cc-e224-4c0a-b6c2-6a20872d045c"
        },
        "item": {
          "id": "b5f5baea-b8fe-4b82-8491-5dd87557fcb2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "78079f29-c2b3-424e-aaa6-0e7b495a1510",
          "status": "Created",
          "code": 201,
          "responseTime": 2691,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "id": "15c1fdb0-1bac-4faf-bbcc-4b64bb3711ee",
        "cursor": {
          "ref": "1ad77454-f267-4d74-9216-9b2c1e5bd958",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b7932b0b-7b52-4667-bac7-88582f6cf321"
        },
        "item": {
          "id": "15c1fdb0-1bac-4faf-bbcc-4b64bb3711ee",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ad72e73a-b6c1-4773-9d94-7e2b1a3ebb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc946c37-58be-4d83-95f9-839ff8e888bf",
        "cursor": {
          "ref": "ec90e8e0-a3fa-4007-a945-d5313e537cb1",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c810b9c7-b8d7-42d7-bd70-7587ca70f416"
        },
        "item": {
          "id": "cc946c37-58be-4d83-95f9-839ff8e888bf",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ffb86a13-746e-49d5-8318-cf83cb97aae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad67b5d-ec3c-49fb-ac82-886eae4f28be",
        "cursor": {
          "ref": "6d0c4607-66eb-4aa9-8088-2602d4b92214",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3145df4c-1f60-4495-ad2c-50f2c9fc3b79"
        },
        "item": {
          "id": "4ad67b5d-ec3c-49fb-ac82-886eae4f28be",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d1d3bf92-b1d9-4a57-9888-490173d6f85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd9001d-58c8-40f5-8cb8-5348edebd3cf",
        "cursor": {
          "ref": "52e71769-2a1a-4ab5-9583-6c476b236f6a",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1fb78d93-cd4e-4304-8bd9-66e548c34802"
        },
        "item": {
          "id": "9fd9001d-58c8-40f5-8cb8-5348edebd3cf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1df2523e-ef67-4100-a05f-3d06729fe0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca79d71-ebd1-4ffc-8051-d5b82533b636",
        "cursor": {
          "ref": "7d66bf98-12dc-4697-b89c-0be91e322d54",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "571013be-da1d-4cbf-9f95-bf7273e32533"
        },
        "item": {
          "id": "0ca79d71-ebd1-4ffc-8051-d5b82533b636",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ad82c15e-cadf-40c9-81d6-9c3bd4793f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5d1226-0088-46a5-9987-ba059cb90f0b",
        "cursor": {
          "ref": "512bb8c3-7958-4693-bb1b-71c0ea351731",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c3966e8c-1664-4c80-b4c6-0983116b0793"
        },
        "item": {
          "id": "9a5d1226-0088-46a5-9987-ba059cb90f0b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9ad8ea5d-f324-4c35-92a8-3da3100c1fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a2d594-7d78-409a-a446-ef1529c30ce0",
        "cursor": {
          "ref": "e5bfba52-f22b-4d80-9faa-6a4a571fbed2",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7b43654a-b7cb-487f-b26a-9921091382bf"
        },
        "item": {
          "id": "01a2d594-7d78-409a-a446-ef1529c30ce0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "679fafd2-4ecc-4104-ae89-6ea82d467c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97d6bae-0aff-49fc-af1c-f9eb3e3d8f67",
        "cursor": {
          "ref": "9a80399d-be41-4275-9e0d-ac68c8083c31",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4c053429-44eb-4dcb-aabf-5be74bf2d0e5"
        },
        "item": {
          "id": "f97d6bae-0aff-49fc-af1c-f9eb3e3d8f67",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7b35cd74-a7f7-4628-834a-c731c0035923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2a01d5-4559-4e44-b45b-03b3da8ad285",
        "cursor": {
          "ref": "785cf618-c73b-4e8e-92ed-9624302bec58",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3a33fbf4-d0cb-4379-8b3a-07e513d01123"
        },
        "item": {
          "id": "cc2a01d5-4559-4e44-b45b-03b3da8ad285",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f33f3bd3-104a-4726-a248-4763725cfb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153244ab-4db9-41fe-83c0-bcf37e35fd78",
        "cursor": {
          "ref": "fcbd6071-e656-42c4-b6ec-371206a7965e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5aa804c4-209d-46c2-95a2-18fe70787852"
        },
        "item": {
          "id": "153244ab-4db9-41fe-83c0-bcf37e35fd78",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "eff0dca9-c98d-4ad5-bd5f-af086836b134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02348a44-0e75-4ef4-a506-734631e6dbde",
        "cursor": {
          "ref": "64923347-98f2-4e84-8f3f-9a68993315fc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "06c3de93-b531-4627-91a2-6c39b954bb42"
        },
        "item": {
          "id": "02348a44-0e75-4ef4-a506-734631e6dbde",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "456f4fc7-76b9-4d5b-b324-ecce2cfa6af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80a1027-79f3-4e52-b92f-9b8010367098",
        "cursor": {
          "ref": "f09d660b-ccfc-48bb-82bf-c517c674d085",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e85d88e0-4ccc-4682-8ba4-d3391673443c"
        },
        "item": {
          "id": "f80a1027-79f3-4e52-b92f-9b8010367098",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1d4d64bd-885f-44d1-a772-0abc1204e1fc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1957,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:33)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:33)"
            }
          }
        ]
      },
      {
        "id": "541ab1e3-2e51-4459-bf17-3c0f9b70de42",
        "cursor": {
          "ref": "fb737122-ad4c-479c-aa60-ba742699f3d5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7668e494-3069-4385-94e6-33e7a1a15d3d"
        },
        "item": {
          "id": "541ab1e3-2e51-4459-bf17-3c0f9b70de42",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "63c5b83a-6612-4b23-b789-cbd0e11030a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4806b978-59f2-418b-ab0d-a0da97ea7925",
        "cursor": {
          "ref": "5e5f8c11-2a83-4a7d-9d10-cb9623b12e6f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "71941c8b-b088-4284-a74b-61ff550afc75"
        },
        "item": {
          "id": "4806b978-59f2-418b-ab0d-a0da97ea7925",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "10c48002-b831-4309-883a-241ec2e2b3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8608e0a-2eaa-4a45-be9d-ab2fee01bc38",
        "cursor": {
          "ref": "a437624e-5da2-4244-a0ef-51ee5a5508e2",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c0b84e75-d9a4-44fd-bf46-9eba3dbf64f5"
        },
        "item": {
          "id": "c8608e0a-2eaa-4a45-be9d-ab2fee01bc38",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "30c14517-d29d-4213-b716-e212ff8fe568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb214acd-f442-4b3e-a292-6004186ea312",
        "cursor": {
          "ref": "30916deb-bcb7-4d8d-9e3a-05fddeebafd0",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "79b88d8e-0d5c-47e4-b3db-ce7edd05e2dc"
        },
        "item": {
          "id": "bb214acd-f442-4b3e-a292-6004186ea312",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ec3483d3-73c8-4efe-82d5-a5c81b04eb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617b0470-043b-40df-b806-60345effb299",
        "cursor": {
          "ref": "1462b991-0b05-4c1e-b557-25dc55e390b4",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4fe66f7f-c84b-433a-9e27-ae83ab1e1003"
        },
        "item": {
          "id": "617b0470-043b-40df-b806-60345effb299",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e68712d6-1a79-454b-ac2d-0aac01263bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cb39e5-d1c1-47b6-8833-bb5e54525525",
        "cursor": {
          "ref": "b9ebf187-2baf-47ae-82b0-da17b0f77be7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "664aa1b0-a744-40f1-9816-54e114c203a5"
        },
        "item": {
          "id": "d1cb39e5-d1c1-47b6-8833-bb5e54525525",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "49f4211a-ff04-461e-b0cf-bbdf6a37dbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f78085-0d98-4f45-b60e-0f9f08b041fe",
        "cursor": {
          "ref": "b05a016e-1778-49fe-b2cd-0df9967e3668",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fefa0af5-4f43-487a-bc2b-4631a189111a"
        },
        "item": {
          "id": "a7f78085-0d98-4f45-b60e-0f9f08b041fe",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8019b8b5-076f-47ce-9827-b93219dbca11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7c4cec-7f50-4b7c-aa04-63c84333eb7e",
        "cursor": {
          "ref": "8ff763c8-c6bc-4185-b2e0-f67f9a0c7821",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1bf47cf8-0695-4b7e-8343-b25d5778efbe"
        },
        "item": {
          "id": "2e7c4cec-7f50-4b7c-aa04-63c84333eb7e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8211fbfc-0643-4d73-bdda-6e5c5f33661d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1099,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f1c0aa-d8a8-4c6f-8c33-3c90459fedc7",
        "cursor": {
          "ref": "79926646-a1a9-4811-a783-69cb86ffc9ae",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8cfc12f8-816d-4443-bcfb-7bcb10059517"
        },
        "item": {
          "id": "69f1c0aa-d8a8-4c6f-8c33-3c90459fedc7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e9c0f3e2-969c-46c9-817e-fc48bffe11ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1020,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4af7487-f2ce-4dfe-81cd-d44f135f8423",
        "cursor": {
          "ref": "440ea62e-92dd-4687-bfd1-47eab66a84fc",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "057566c3-b987-4499-bf52-afa7d4cbc0c4"
        },
        "item": {
          "id": "b4af7487-f2ce-4dfe-81cd-d44f135f8423",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "908c3eef-df93-4005-8899-c6b679e131f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6892019b-ee07-4fca-b52f-223fb5eeb43e",
        "cursor": {
          "ref": "ec1e3aac-ac81-4095-ad22-5441dc0322f3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2b570780-410d-4ca8-85f4-12998362ff3a"
        },
        "item": {
          "id": "6892019b-ee07-4fca-b52f-223fb5eeb43e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6e25d1b2-de49-45e2-ad2b-94e01511083d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e225423-b602-427c-8019-a4a2a121baec",
        "cursor": {
          "ref": "2ebf1826-3322-4a35-81bc-ea8cf1a45e8e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "52593a87-3e5a-447a-a48f-c6eddc361f0b"
        },
        "item": {
          "id": "8e225423-b602-427c-8019-a4a2a121baec",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b4cec9de-9d1e-40df-a16a-0ab5075c5336",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 654,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d243a56c-5ff0-4300-af62-8ea648bca71e",
        "cursor": {
          "ref": "1cb030ab-c91b-4ef7-b08a-1155bc5a88af",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "343712e7-2c2c-4fbf-a51b-d9403a3cf946"
        },
        "item": {
          "id": "d243a56c-5ff0-4300-af62-8ea648bca71e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f64e56df-ff6d-4136-bc5c-8e59eef6f695",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 580,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "c8ed0ee0-ff46-4a45-9fd0-e6ea01c44f2d",
        "cursor": {
          "ref": "d604d518-1ebf-4ff7-ac05-1f8c4fb8a133",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "103b3590-1ca2-489c-94b7-ad90a2a63ad0"
        },
        "item": {
          "id": "c8ed0ee0-ff46-4a45-9fd0-e6ea01c44f2d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0a4108d7-51ba-42cd-9cf2-589492e36ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3453ebbb-2ca4-4ccd-aac3-b09128040ee0",
        "cursor": {
          "ref": "1b319a36-2ba8-467f-8891-25519d9fa911",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6e88dcf7-8aa1-40a9-9ee9-8766f71b33fe"
        },
        "item": {
          "id": "3453ebbb-2ca4-4ccd-aac3-b09128040ee0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5a835152-6489-4791-9bff-e66f752bde8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2165b0-d486-4240-9c2b-66d99d590d1a",
        "cursor": {
          "ref": "506d5934-710f-4815-9273-9435673a6778",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "db1071e8-4e64-49c5-b6f2-4eafada93e68"
        },
        "item": {
          "id": "fe2165b0-d486-4240-9c2b-66d99d590d1a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e27c6cf6-b87a-4b2e-ab76-a708278bac23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3fbc69-45df-46a0-83d7-662fdf515ba5",
        "cursor": {
          "ref": "1c22d437-a757-47c1-9b05-bc6d51db63db",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "518625ec-7e66-48ff-ab4b-fd0724f718f0"
        },
        "item": {
          "id": "8d3fbc69-45df-46a0-83d7-662fdf515ba5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "73fdf1e4-865a-415e-b1fa-7d08304a93c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2b0e30-c725-4350-98b4-5853914a33e8",
        "cursor": {
          "ref": "6c1f5434-4652-4cc4-a19e-5ca71c20696c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5416b14c-095f-4759-93bd-d124c805bcfb"
        },
        "item": {
          "id": "7e2b0e30-c725-4350-98b4-5853914a33e8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "84091997-5ce0-4983-a160-02d9a4729423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2856e914-8645-4d80-b4f7-4e050fafa455",
        "cursor": {
          "ref": "a0db160f-ca4e-4ca3-84cc-fc62bfd09ac8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c44f0814-5227-46ec-b5d8-0d80cfb82b9f"
        },
        "item": {
          "id": "2856e914-8645-4d80-b4f7-4e050fafa455",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0426d9f1-3477-404c-8348-e8874b2d02dc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 657,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63098cdf-66f5-49e8-9081-1fbc557cfffe",
        "cursor": {
          "ref": "bf27cf9e-3b99-43d1-a7b5-0a23b6e27020",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2b913eef-4b4b-4fec-921e-3c346e60e711"
        },
        "item": {
          "id": "63098cdf-66f5-49e8-9081-1fbc557cfffe",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "245333c3-c96f-4bcf-9113-04c89bb472ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e1d860-3a01-4395-b093-35cd32ef7e27",
        "cursor": {
          "ref": "6b9ead5d-c611-4a5a-b859-3497c6ec45ef",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a7753125-50d2-4c02-b8ab-eaf3baaee57b"
        },
        "item": {
          "id": "77e1d860-3a01-4395-b093-35cd32ef7e27",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "39df26b8-cd6e-4263-898f-098697467d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea96c8e-902f-4be9-8d66-b8837658d3d8",
        "cursor": {
          "ref": "e280ef99-64e1-4250-96bc-558322428970",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b2d7c4dd-da40-4dcf-bb1c-6157aad57d76"
        },
        "item": {
          "id": "eea96c8e-902f-4be9-8d66-b8837658d3d8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1c6a71a6-b926-4519-bc6f-a531ad125da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ef159b-2318-4ce8-af04-f943fc93c343",
        "cursor": {
          "ref": "38cb0731-13e9-48d6-870d-03e072cd6ad8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7fa07537-61f7-48e1-9e32-c0273a04d8c0"
        },
        "item": {
          "id": "f1ef159b-2318-4ce8-af04-f943fc93c343",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "38432dad-ac1e-4850-b929-fda9197d08e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c2d4a2-83e2-4dec-ac57-0ca5b08db707",
        "cursor": {
          "ref": "46c1c62c-8b9f-47f3-a5ef-90a26e8b61f7",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "612ad0b0-f3b5-45ac-94c9-b0fec47f7f2d"
        },
        "item": {
          "id": "e1c2d4a2-83e2-4dec-ac57-0ca5b08db707",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "65e65aa8-e73a-403f-a611-d8038d834ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1653042-68a0-46cd-adf5-18173025783c",
        "cursor": {
          "ref": "20d55982-daa6-4819-b4c8-afafdaed2e62",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cb325f48-ef9d-4176-8635-70cb1ea85202"
        },
        "item": {
          "id": "f1653042-68a0-46cd-adf5-18173025783c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a67f1020-61d4-496c-86e9-2f6035dcbe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39810197-ac6a-47a0-a59a-5d71092ef8db",
        "cursor": {
          "ref": "d549415c-8ada-4841-969b-2c7bdc45b0a1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cae976b1-35d0-4db9-84a4-9c45175e1fd1"
        },
        "item": {
          "id": "39810197-ac6a-47a0-a59a-5d71092ef8db",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2f1cba3f-bf1d-4c97-a473-f5a0917f4282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f495481b-f3c3-4752-bf98-eba90cb98ae4",
        "cursor": {
          "ref": "63923352-5101-41d7-8ada-024f3fe4a8a2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "325b5163-9e2a-427b-8d6d-277d8efe5edb"
        },
        "item": {
          "id": "f495481b-f3c3-4752-bf98-eba90cb98ae4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "29fb2234-6d1e-47d4-8906-0e78dcd3b306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9cbede-7d79-48a5-9abb-2a051005f770",
        "cursor": {
          "ref": "ddcd70e4-e779-4afa-8e76-d55018a0c905",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "24b047a9-30c1-41b9-93ac-8baadb0e24a5"
        },
        "item": {
          "id": "7e9cbede-7d79-48a5-9abb-2a051005f770",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4779ca23-dba7-4be2-94ad-6026d4561015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e2750a-9f57-4ce1-a2fe-f03a53ae60cf",
        "cursor": {
          "ref": "a5a5681b-01b6-4460-b374-3e50c14383cc",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "54fe4991-7800-492f-a15b-3a5a84891c9b"
        },
        "item": {
          "id": "44e2750a-9f57-4ce1-a2fe-f03a53ae60cf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d632e53e-ed46-4d2c-a1b4-397f5076a996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb5261d-482a-499e-87a0-157c586ae0a4",
        "cursor": {
          "ref": "a8f2ab34-cc81-45dc-9ef2-8cc6999ee702",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d8d2e940-402b-4898-8b87-7ca9a6bffd0a"
        },
        "item": {
          "id": "8fb5261d-482a-499e-87a0-157c586ae0a4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "38595e24-640d-4420-9de6-c26e6c254ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 971,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088afa46-5f0d-4c97-90dd-e92bfe64499a",
        "cursor": {
          "ref": "150aa7a0-d8f0-486e-801b-ad672720d5f0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2de997d0-d7cb-49d5-82b3-43601e7c179c"
        },
        "item": {
          "id": "088afa46-5f0d-4c97-90dd-e92bfe64499a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f32684f3-aa59-4f21-9cf0-9d7a134b29f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbb75e8-4979-4598-8c95-04f92cf2ce8a",
        "cursor": {
          "ref": "e7c0754b-0dbe-4f0e-9d38-2216adcb2a3a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "df3cf217-687c-4e0f-881f-ea3f8349686d"
        },
        "item": {
          "id": "2bbb75e8-4979-4598-8c95-04f92cf2ce8a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8d627e96-6f01-44da-b046-c2e37001a0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fadebb0-a41a-4cfb-ae1f-558e1da33399",
        "cursor": {
          "ref": "2e60ec87-f57c-4b30-ac4a-d2d626276182",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fde2103d-7e0a-45f3-b120-6f8b9b70a04f"
        },
        "item": {
          "id": "6fadebb0-a41a-4cfb-ae1f-558e1da33399",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b8ac95b1-56cf-4e5f-a158-ac9c5c2af804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357728b1-a336-4853-82c7-a117e6088443",
        "cursor": {
          "ref": "28a3e2c3-c14b-4e5c-b824-aed4e1ef1939",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3f524a6a-b681-4460-afb9-c1e6191203a7"
        },
        "item": {
          "id": "357728b1-a336-4853-82c7-a117e6088443",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "48e8b71e-2069-417f-8dd9-fd2f2b6be3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a881ffdc-5e71-4c87-a7f9-2b63b2a58cf0",
        "cursor": {
          "ref": "52f9c98a-2cf4-422a-969a-c271073b783b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "274809f3-a86c-4d65-a8ba-f7581c30e504"
        },
        "item": {
          "id": "a881ffdc-5e71-4c87-a7f9-2b63b2a58cf0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "64a6124e-0161-4903-b8fa-442747fc1fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d96c26-3970-4b88-921a-277663a64edb",
        "cursor": {
          "ref": "3a22e5dc-7acf-44db-82cb-e95d560d5a0c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b22ad3cd-bf7c-4562-b02a-32e70b5efe5d"
        },
        "item": {
          "id": "f9d96c26-3970-4b88-921a-277663a64edb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "330d9522-5f90-48cb-a05a-34579b1dbf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19264ee5-7511-4a15-a624-a7181cdafa93",
        "cursor": {
          "ref": "a55f15c4-80ae-40c9-af04-b47b829aad7d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "37169111-cebc-4da3-8d8d-28bf866322ce"
        },
        "item": {
          "id": "19264ee5-7511-4a15-a624-a7181cdafa93",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3d44b516-d8f4-4093-84b0-4e028b88000c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a03358e-b6ad-4241-9dbf-95be52c1bc65",
        "cursor": {
          "ref": "d9e2f2bd-c252-4e6a-a654-2d8bb2ec38a1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c2ce0837-b3b1-4723-9fcc-5174d5c78a18"
        },
        "item": {
          "id": "6a03358e-b6ad-4241-9dbf-95be52c1bc65",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "aeda5806-9934-4112-98ef-50b355abce28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed7e059-8d93-4208-b9fa-fd528620809c",
        "cursor": {
          "ref": "e9085088-da66-4570-8001-9d55f567b136",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "113547f4-620c-493a-9aaa-bacf48f190b3"
        },
        "item": {
          "id": "6ed7e059-8d93-4208-b9fa-fd528620809c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "598f83a1-0077-43ac-b2ea-5a6059a0e634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235b1085-9ac0-4881-97e0-494a3e13aa01",
        "cursor": {
          "ref": "dbb1d0b6-6923-465d-a182-293082763595",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "261c6ca3-6099-432c-97f8-48e8ed1280dd"
        },
        "item": {
          "id": "235b1085-9ac0-4881-97e0-494a3e13aa01",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f37deb92-452f-4db3-95ab-5dde0932f436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b247861-81da-411c-a1ec-d2a90f500c34",
        "cursor": {
          "ref": "f6f04c7c-75a4-4771-8f11-54a3d688fcd1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1e9b3b7e-d36a-4fb8-bf80-ad0d9796216d"
        },
        "item": {
          "id": "0b247861-81da-411c-a1ec-d2a90f500c34",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "341c0b40-d189-4adc-bca4-54bea532731c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cd32d2-2ed1-4bd5-a5cc-6efd98915675",
        "cursor": {
          "ref": "d5461ccb-ef93-4c85-92ba-82b7d299d428",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "07203201-c404-458f-a3ce-6bac3ee02af0"
        },
        "item": {
          "id": "62cd32d2-2ed1-4bd5-a5cc-6efd98915675",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9e1d2346-100d-4730-8637-a962879274bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bb9074-c60b-403a-a55d-90f17b0882ec",
        "cursor": {
          "ref": "4168617b-696a-4452-84f0-4678834de540",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f5f6d08f-c55e-448d-a10c-87a19f699d3c"
        },
        "item": {
          "id": "e4bb9074-c60b-403a-a55d-90f17b0882ec",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f9d954a1-2c60-4bdd-9376-2cdac6c404a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa0d043-fe34-41d6-9433-63b9276f831e",
        "cursor": {
          "ref": "8f89f558-2591-4d7a-b969-5a0df7322b83",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "41d6f2e6-0860-4a2b-bc97-aa7a8cd74721"
        },
        "item": {
          "id": "baa0d043-fe34-41d6-9433-63b9276f831e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "61682a85-a882-44a1-808b-66dc75098ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aeb17a-295c-46ca-818b-46f67123a0d9",
        "cursor": {
          "ref": "3eb13ed4-9110-44df-8e35-facf8a81aea3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "df235398-b26f-430d-b22a-4f25c2797a39"
        },
        "item": {
          "id": "57aeb17a-295c-46ca-818b-46f67123a0d9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "35c35d04-f03a-42be-b384-e47da5b312c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0b25da-bf53-445b-826e-713b178410b6",
        "cursor": {
          "ref": "34789181-978a-455c-8a11-4475ce20505d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b3801a0d-4f74-4f38-9ef7-fa2296672bcf"
        },
        "item": {
          "id": "8e0b25da-bf53-445b-826e-713b178410b6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b4397704-bc97-4229-8feb-e1c52c42ac88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b8d999-53d1-4990-85df-7f84d0b89830",
        "cursor": {
          "ref": "dfe4f950-67c0-4336-a728-f6aa69fc54aa",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9c76d887-22fe-4772-a61d-f369f4c62d69"
        },
        "item": {
          "id": "82b8d999-53d1-4990-85df-7f84d0b89830",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "19f5b350-82c5-4543-a841-fe36a26f0b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24f5c0b-5b49-4c59-b353-05b934dd1173",
        "cursor": {
          "ref": "f71fc67b-83fe-4962-aa8b-b67c9dbe4d6e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d045a67a-d4cc-4476-b279-68d9c1c5e0bf"
        },
        "item": {
          "id": "b24f5c0b-5b49-4c59-b353-05b934dd1173",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "76ffe2ef-a842-43bb-9a76-718b1020dc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64e9458-68a8-40a7-afcd-777b05ec4b15",
        "cursor": {
          "ref": "dbe3d3c3-1124-4bd0-9d9c-3c0f7104573a",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cf6a1154-03da-4e26-ac3c-a742fb2a8afa"
        },
        "item": {
          "id": "f64e9458-68a8-40a7-afcd-777b05ec4b15",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6b6a1f12-2046-4312-82d7-7393d88d12a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27f9ced-e55b-413b-bd7c-0c9b820a7718",
        "cursor": {
          "ref": "400ca25d-4a0c-4340-89e9-cceb92969b09",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a45879c9-5df7-40a5-9b4b-450fa03dcf54"
        },
        "item": {
          "id": "d27f9ced-e55b-413b-bd7c-0c9b820a7718",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a4c84e72-45fb-441b-b83b-619dacb0c0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8170303c-c5dc-4edc-bfd6-0c2ec2509314",
        "cursor": {
          "ref": "bc5c7cf9-5371-4a9f-acc9-314c62eb826f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2501d376-1061-49a5-b560-48aea4d08a2e"
        },
        "item": {
          "id": "8170303c-c5dc-4edc-bfd6-0c2ec2509314",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "56ea065f-5a4b-4d98-bb3f-9bd58e6fc93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ce77aa-1367-4bc4-b38f-05be6dd88ec4",
        "cursor": {
          "ref": "7bbddf77-b398-4336-a8b3-d5afaf7bee90",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "371e1285-5667-4078-b9e8-1991642c7998"
        },
        "item": {
          "id": "d2ce77aa-1367-4bc4-b38f-05be6dd88ec4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "83d36b48-93f1-45e7-b3b8-2c72aa6703eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022c3a43-909c-442d-b5b4-1d76efaed718",
        "cursor": {
          "ref": "42884161-fbbb-4b09-86a5-1a102d1e700d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dcd8949a-add3-41f1-9e49-a7ac10db3898"
        },
        "item": {
          "id": "022c3a43-909c-442d-b5b4-1d76efaed718",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dc8f0618-5e58-4545-b78a-8fc0222b7864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4e0e84-b6f6-4dab-9ebe-cba514a52ccc",
        "cursor": {
          "ref": "1f9de807-df8d-4c8b-8405-8061cac44e6f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7c880ac2-fa3b-4240-b81e-075b48a49e05"
        },
        "item": {
          "id": "1b4e0e84-b6f6-4dab-9ebe-cba514a52ccc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0d34b7d6-c59e-4473-a23f-430324aef012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729fa1e7-2292-46ba-a4fb-44ffa04b2a77",
        "cursor": {
          "ref": "512032fe-0111-40af-94ad-2cd74c72b473",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "daf6dee9-576d-4182-a5a0-2bca3080026a"
        },
        "item": {
          "id": "729fa1e7-2292-46ba-a4fb-44ffa04b2a77",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4410d97e-5653-48ee-b473-99e6a1b76922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 887,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14b1adb-a93c-4735-bed1-5ebe788c7189",
        "cursor": {
          "ref": "f444dd9f-a2c0-457b-b627-3c56d77da5bc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0912e7ba-4b6d-4d82-a112-24a89b680af8"
        },
        "item": {
          "id": "f14b1adb-a93c-4735-bed1-5ebe788c7189",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d0dcc2da-3e99-4c82-a6a7-ede18fe58e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638faad5-7e3c-480c-af7c-585b2e88c5b1",
        "cursor": {
          "ref": "31425e0c-4e0c-4427-a4f4-f945a3e56bef",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2f46f332-ed46-4046-a80c-b7df9848c5a0"
        },
        "item": {
          "id": "638faad5-7e3c-480c-af7c-585b2e88c5b1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3b800eeb-f26d-4acf-baa9-0ef362ddc6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f089cf-d26e-4980-8b13-1df3bd8b7f77",
        "cursor": {
          "ref": "1351b1b0-c40c-47ba-953e-88be7bdc0ca1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ac28a983-aca8-4e23-809e-8ac8540ed81a"
        },
        "item": {
          "id": "34f089cf-d26e-4980-8b13-1df3bd8b7f77",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "83697cac-4658-40da-9315-b530be9a66b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1152,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469c7679-5a28-45d0-83fd-98c46beec9e4",
        "cursor": {
          "ref": "42b7ee1a-3b28-4185-8078-a48414bc1568",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0edbcf90-e69d-42cb-a4e9-f8bce0d89485"
        },
        "item": {
          "id": "469c7679-5a28-45d0-83fd-98c46beec9e4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d998c6c5-8720-4771-8f8b-62e1c34c6ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1313,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65af1d0d-b2fe-409d-a42e-6fe5069e79ad",
        "cursor": {
          "ref": "57d40db2-566a-4f32-b159-ec539995e1af",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a6e39d6e-4d10-4453-a3d9-60daacdc0d9e"
        },
        "item": {
          "id": "65af1d0d-b2fe-409d-a42e-6fe5069e79ad",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4cab7a8d-e28d-441d-8c99-d633913f5a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 894,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c34e88-2594-4949-8891-68b6ddceb552",
        "cursor": {
          "ref": "21251c5f-bbb8-4909-be5b-40c8537d338d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d4b63567-70c9-494b-bbfc-8bac5616c1cc"
        },
        "item": {
          "id": "03c34e88-2594-4949-8891-68b6ddceb552",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6378a186-e513-495a-a83c-ba3ad488e60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324bd6b0-d8cd-43ac-a7e3-647917035b87",
        "cursor": {
          "ref": "63aefe75-d81d-4840-9530-f1f7d01b369e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1e5ecdea-4a3d-427a-9aec-8860093304e7"
        },
        "item": {
          "id": "324bd6b0-d8cd-43ac-a7e3-647917035b87",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "52e204f2-a81b-4840-820b-c821bbe288cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84b9172-7af2-41e6-99cc-b851bbce5e39",
        "cursor": {
          "ref": "bca91aba-c012-4613-9580-45a02058447f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e10c4d06-511e-480d-94bc-ed6c53b63d50"
        },
        "item": {
          "id": "c84b9172-7af2-41e6-99cc-b851bbce5e39",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fe958ced-7544-485a-a63c-4831cb788576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102b09b3-f64d-4d67-8535-be0477fdd601",
        "cursor": {
          "ref": "8828dc57-cb06-4c37-b394-94704106bb4b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "314b6060-99a8-4bea-84b7-a6ea62be1c29"
        },
        "item": {
          "id": "102b09b3-f64d-4d67-8535-be0477fdd601",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9b608322-efa9-43ed-b9a8-c28bc5acf504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b015f63a-a371-4cec-829e-7e59c7e3a6a5",
        "cursor": {
          "ref": "cf02ed8f-ad78-45f8-90f2-a9a0ad009d57",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fdf43d64-cdb7-4edf-bcea-4c299d99d073"
        },
        "item": {
          "id": "b015f63a-a371-4cec-829e-7e59c7e3a6a5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "59c5533e-41f5-42ee-ad48-eed9f08328f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd1b782-8b47-4403-bad0-8402ce201384",
        "cursor": {
          "ref": "152c129f-78f2-4bdd-962a-18e0e0dc22cb",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d8505e98-d101-4ce7-a579-3950aed529a6"
        },
        "item": {
          "id": "3bd1b782-8b47-4403-bad0-8402ce201384",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "06dbffcb-17d6-4c48-ad3e-4a503bec84c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e90f543-27b5-48bc-babe-748f18f310a6",
        "cursor": {
          "ref": "063bd7e1-edea-4221-8ae8-25fb39790921",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4da5c761-343f-4776-8371-4b9d534a5bc3"
        },
        "item": {
          "id": "8e90f543-27b5-48bc-babe-748f18f310a6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3e7aa40e-6f03-4ce4-ab29-695429c40790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df8fe71-9dc0-44cc-a412-3a6169c05829",
        "cursor": {
          "ref": "31562953-e13e-45ee-9c0d-a97676d5d9bb",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "de6345b5-571a-43a7-a09c-ffcf87ae20fc"
        },
        "item": {
          "id": "0df8fe71-9dc0-44cc-a412-3a6169c05829",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "362ab489-1cbd-4ff2-a1ff-ff81ae23d355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478606ee-1394-4d3a-8d3b-26b6003b765a",
        "cursor": {
          "ref": "a7957d06-a918-4717-9ac1-9c3739d47fbc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c0dea898-9672-42c9-b887-4d6bb8d1e9b9"
        },
        "item": {
          "id": "478606ee-1394-4d3a-8d3b-26b6003b765a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "85012a4e-bb3d-42ef-90fc-87d6c8d6f89c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8761f9a6-3b1e-4442-a63d-9e126844b030",
        "cursor": {
          "ref": "ba1f4b18-e671-444d-9f02-602c8c05734d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "028d9ac9-191c-4a30-8cc1-e2920cf8cfdc"
        },
        "item": {
          "id": "8761f9a6-3b1e-4442-a63d-9e126844b030",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "a656d5b3-5729-4197-8b72-9f0299e87b2f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 552,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1155c09-03d4-457b-992c-5b336fd026e0",
        "cursor": {
          "ref": "419d0dc0-82d9-4580-a112-aaf3f8db318c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "35cdfe53-7e11-4bb2-9b21-812b90456080"
        },
        "item": {
          "id": "a1155c09-03d4-457b-992c-5b336fd026e0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "857cf75d-fc13-4fae-ae63-6a2e932262fb",
          "status": "Created",
          "code": 201,
          "responseTime": 4446,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc106a5-6188-4e71-ac40-65f1aae8b4eb",
        "cursor": {
          "ref": "fc7c1631-e515-4861-9d83-4610a31a44c1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "18f427cc-a586-4c15-96f7-bbac69226b2a"
        },
        "item": {
          "id": "3dc106a5-6188-4e71-ac40-65f1aae8b4eb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "830f867e-b115-4d7f-b2b7-cc87a870362d",
          "status": "Created",
          "code": 201,
          "responseTime": 4106,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2c4c72-ec1e-4553-87d2-08199f2a8437",
        "cursor": {
          "ref": "93fed182-0c66-4fe4-aa3c-55d398572b2c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "670d4405-ac9f-4d27-802b-438e313e623e"
        },
        "item": {
          "id": "8d2c4c72-ec1e-4553-87d2-08199f2a8437",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9fdc1a22-73f7-4620-8a9e-42a1e2ee863e",
          "status": "Created",
          "code": 201,
          "responseTime": 4752,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f2fa09-843b-48b6-8c9c-4b427ed81638",
        "cursor": {
          "ref": "f0f9849a-461d-4193-a980-8421d301b258",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ec74be7c-11fa-4195-9689-1b3c854284be"
        },
        "item": {
          "id": "77f2fa09-843b-48b6-8c9c-4b427ed81638",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3646b2b2-34a7-4ccc-ae42-551315b52cb6",
          "status": "Created",
          "code": 201,
          "responseTime": 4066,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f4612a-165d-4ba9-9d48-ed2f14353127",
        "cursor": {
          "ref": "aa4b8438-dfe1-404d-a8da-1ea367564a75",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4b22756a-38cd-4bf0-8a99-6d02d1a6e36c"
        },
        "item": {
          "id": "33f4612a-165d-4ba9-9d48-ed2f14353127",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e2630ef6-2eb1-45aa-8522-fb6d99939c37",
          "status": "Created",
          "code": 201,
          "responseTime": 4803,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e853b6c-5f0d-4f67-9a42-576106880abe",
        "cursor": {
          "ref": "694aa499-b023-46ed-b332-cee89ab6e3a1",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4863863b-b312-4da4-92c0-b14887ff4906"
        },
        "item": {
          "id": "2e853b6c-5f0d-4f67-9a42-576106880abe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f39d39c2-d096-488b-a87c-9cad2d3368fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e853b6c-5f0d-4f67-9a42-576106880abe",
        "cursor": {
          "ref": "694aa499-b023-46ed-b332-cee89ab6e3a1",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4863863b-b312-4da4-92c0-b14887ff4906"
        },
        "item": {
          "id": "2e853b6c-5f0d-4f67-9a42-576106880abe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f39d39c2-d096-488b-a87c-9cad2d3368fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cf5ab0-7f35-4b97-8a9c-faf78bb8742f",
        "cursor": {
          "ref": "6637c955-3267-4abe-8b5c-0c7d38960b5f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bd357095-7d9b-4dfe-8fab-74f2ba525281"
        },
        "item": {
          "id": "24cf5ab0-7f35-4b97-8a9c-faf78bb8742f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "928971aa-9c3c-47c7-8e1a-947c445bf135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cb9bca-0c63-406f-91f6-7e8d95882dff",
        "cursor": {
          "ref": "604e3326-5427-468f-a0c5-72eb1cdf86c0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e0993afd-ab0c-4c7a-b912-8fe2ad00b450"
        },
        "item": {
          "id": "70cb9bca-0c63-406f-91f6-7e8d95882dff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "305d9d42-7543-4fe3-8c29-228733aabc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fc6dda-f8b4-479d-ac39-77231c6ba010",
        "cursor": {
          "ref": "b2e69fe7-a8c9-4adf-8956-da096e349bf5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "90abb780-b274-47d7-a2f7-cdf229399f8d"
        },
        "item": {
          "id": "e9fc6dda-f8b4-479d-ac39-77231c6ba010",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d1a660e8-329a-411a-b4f5-bde91d5f8e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd16f4d2-0e2a-44b3-9c8c-b2da52183e06",
        "cursor": {
          "ref": "eb76bc85-c4ce-4b3c-b380-8cb70370571f",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "49627389-e6fa-4c38-9fc6-d444cd30d01e"
        },
        "item": {
          "id": "cd16f4d2-0e2a-44b3-9c8c-b2da52183e06",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5633b693-a1c5-4ead-a246-9cdd9d792091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ce4483-3dde-4931-8d7c-80d6eb627a8c",
        "cursor": {
          "ref": "39253b0c-bbcb-41a1-87e5-e0d10c950eca",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f51d5dcf-52be-44b8-99bd-0fa88d77645e"
        },
        "item": {
          "id": "c6ce4483-3dde-4931-8d7c-80d6eb627a8c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0315acd1-f7e1-4ca0-83ee-b540a59261cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26292298-ff5d-496c-950c-f7d41aeeea20",
        "cursor": {
          "ref": "295a1749-186f-4132-8408-167cedfd4194",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "24744a24-a0dc-4a59-98f7-56d70d809b23"
        },
        "item": {
          "id": "26292298-ff5d-496c-950c-f7d41aeeea20",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "664b0587-17b8-4246-b8cd-a991fc6dfe03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d4959d-df89-4ca7-8b71-149971abe61c",
        "cursor": {
          "ref": "4247514f-97d5-4144-a8b0-6b0a5c4e9d1a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "38aa0985-31bf-435d-a596-bbd724ebaf78"
        },
        "item": {
          "id": "02d4959d-df89-4ca7-8b71-149971abe61c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "77194090-8ecf-490d-85d6-54ac848e96bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85da0c4d-1b35-4890-bb52-4506d2d1e9d1",
        "cursor": {
          "ref": "dba1dd9e-78e1-475b-84c4-de57f921021d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "13657717-b761-481c-ad1b-31a5abf4e81a"
        },
        "item": {
          "id": "85da0c4d-1b35-4890-bb52-4506d2d1e9d1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "430f8a45-b72a-47e1-b6ee-d22b6a391a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d800fd55-74b6-4635-bb91-e07eca3f3c27",
        "cursor": {
          "ref": "7b084ff3-ea11-4804-a630-a4bd689c1357",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fa405dc5-6301-45bc-85fc-d8a73b944f6d"
        },
        "item": {
          "id": "d800fd55-74b6-4635-bb91-e07eca3f3c27",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8bbcb90f-5bf4-4021-9812-793f515ac7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6cb775-f90b-43bc-8ede-5471a765776c",
        "cursor": {
          "ref": "9a611417-f10e-4144-9a4e-b9e9c65addd9",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f6ef6ea0-8f28-46f4-92ac-f9418d6326f1"
        },
        "item": {
          "id": "cc6cb775-f90b-43bc-8ede-5471a765776c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "921d3312-fa42-46b8-b6fb-0087355b90b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58d76d2-1d1e-4dfb-8ee5-1b92d3a81f49",
        "cursor": {
          "ref": "24f3da30-eae0-4451-8080-6557e420c369",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9566e0ae-64a9-44cb-a571-24bce93edcbd"
        },
        "item": {
          "id": "b58d76d2-1d1e-4dfb-8ee5-1b92d3a81f49",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "991984c8-0fea-475c-a321-2e840e667aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33fb02d-f73d-4605-9a1a-2d10d818bcb0",
        "cursor": {
          "ref": "c6c6fa1e-6d44-4fd5-9ea9-619c25b63c6f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "56d123db-d397-44dc-afe8-7c225809a384"
        },
        "item": {
          "id": "b33fb02d-f73d-4605-9a1a-2d10d818bcb0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e28f9554-6f57-4edf-91eb-23a1b762b20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1602f08a-9473-4fb4-a3ca-ac7cef1963d1",
        "cursor": {
          "ref": "5388411e-9757-4949-ac5d-9c619ac42348",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0eb31dc8-c015-41e6-8f86-afc94ed549ed"
        },
        "item": {
          "id": "1602f08a-9473-4fb4-a3ca-ac7cef1963d1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d14e6c21-676c-404a-9d5b-bdbee45eee51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0854302b-98eb-4d78-88e6-5a53da29c612",
        "cursor": {
          "ref": "4549d8c7-1e19-4e85-94ec-a437ea9e7600",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cdc6cad4-5f8b-4242-a252-9e104627351b"
        },
        "item": {
          "id": "0854302b-98eb-4d78-88e6-5a53da29c612",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "343c4a1e-758b-420b-b371-f348b54cea1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952a1af3-cbbf-4def-84bf-f15802bf6971",
        "cursor": {
          "ref": "f146ac97-56a9-4f65-890b-4da8c96dacba",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "75e5a351-8f96-4d6f-b267-350d1cb221fe"
        },
        "item": {
          "id": "952a1af3-cbbf-4def-84bf-f15802bf6971",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e2fe7985-7e65-4d25-bad7-fa6477f99577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd291098-e841-465a-91fa-def54ceee11d",
        "cursor": {
          "ref": "cadba8eb-af0d-4e35-b380-cc92266ef62d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d245904a-2f73-432f-b3b9-12cc6e3e1532"
        },
        "item": {
          "id": "fd291098-e841-465a-91fa-def54ceee11d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "68b98ad5-6704-4bc1-b4bb-e648d0778d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6791c4c3-7726-4019-8045-9b4afed65171",
        "cursor": {
          "ref": "91a04a0c-e1b0-4f34-ab22-0f6ae8484e98",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e91c763b-d64a-46f9-bbd8-adf4a0ba7573"
        },
        "item": {
          "id": "6791c4c3-7726-4019-8045-9b4afed65171",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "863e4106-9a1b-41ae-8a00-e29f7c97f1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae69c5a-b013-40c8-86ef-46d22e1986b6",
        "cursor": {
          "ref": "5837c4be-41e9-43c2-b728-4eb7e227748f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "246a3cb5-8d44-4886-8cdc-4dab5a53ec54"
        },
        "item": {
          "id": "bae69c5a-b013-40c8-86ef-46d22e1986b6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "925850b9-fc34-4252-a442-69205a532749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea05698-ee08-44c1-a38d-46291b0021bf",
        "cursor": {
          "ref": "8ad36ef0-c700-46bf-8f78-627d3a9d7f29",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9fec5a29-fc8f-4fe6-a2f8-7e57725e6f9b"
        },
        "item": {
          "id": "6ea05698-ee08-44c1-a38d-46291b0021bf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0dbfbba5-3160-4d7d-b92f-6d8da30190b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51a62f0-f39e-4442-827a-88238f1bc3c1",
        "cursor": {
          "ref": "96d77471-6e02-40b5-9dce-7d8125859182",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5ff96749-68c2-40a1-921d-dc2ce5681029"
        },
        "item": {
          "id": "c51a62f0-f39e-4442-827a-88238f1bc3c1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7b33c4e7-69a2-44a2-9ce0-c1cf0bfc45d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ae3f12-558d-4b7d-b08e-e848cb86ee22",
        "cursor": {
          "ref": "ada37b0f-548c-4084-bb3d-1f64a1dfe743",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2fc67b4b-d912-4f34-b974-5dd01cf7f83d"
        },
        "item": {
          "id": "f9ae3f12-558d-4b7d-b08e-e848cb86ee22",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "822b1e10-ccc1-42f8-863b-3a124a832a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e460bc01-5328-4486-8382-49a0a6cc6ff4",
        "cursor": {
          "ref": "ed7d7e18-20dd-4aff-9c80-dbcbdbdbaed3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "70526b65-2fee-4a6a-a3c6-d9a593eb47d0"
        },
        "item": {
          "id": "e460bc01-5328-4486-8382-49a0a6cc6ff4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "149d577d-a31a-4cb0-9405-eb320199dec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371dc889-62dd-46b3-a0c2-92af467f3f47",
        "cursor": {
          "ref": "c0eec6ad-5513-4f5d-a39e-1549e4acdd3a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "476112d9-cfe9-4b7e-a58e-be3a30472e59"
        },
        "item": {
          "id": "371dc889-62dd-46b3-a0c2-92af467f3f47",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7173abe2-306d-4746-83a4-1e643f2bafb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dd7c03-918c-492d-b817-f235576586eb",
        "cursor": {
          "ref": "6e45d7a1-6372-413b-8fcd-ee681587c59a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "96493d8d-6501-4b10-b73b-ac74058828e8"
        },
        "item": {
          "id": "d5dd7c03-918c-492d-b817-f235576586eb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "99e9ce22-f3c3-4249-82a2-fa3e8bd787cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7a7014-a070-4234-b558-432459ad88a3",
        "cursor": {
          "ref": "b45b25de-b9dd-491e-834c-90ba2a5d797b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bdc9ea1c-37c8-4bd2-b5e6-cbe417c7f3dd"
        },
        "item": {
          "id": "9c7a7014-a070-4234-b558-432459ad88a3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "905dd759-ee71-4416-ba0b-b98a57020085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed2a560-e659-4628-ac79-2ab45a26a62d",
        "cursor": {
          "ref": "197546e6-7c7e-43e0-be79-300280e90ac7",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "931febab-4b62-4dae-a870-1aeacf080b13"
        },
        "item": {
          "id": "aed2a560-e659-4628-ac79-2ab45a26a62d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a210f3c4-2915-4a10-95d8-ed717ceb5de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09d8869-cefd-41ac-bd3e-bf7837184e33",
        "cursor": {
          "ref": "46ae8657-fe76-49d0-9807-82a096d2c572",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3e988fad-4ca5-4de9-acb7-a593cf72e871"
        },
        "item": {
          "id": "f09d8869-cefd-41ac-bd3e-bf7837184e33",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3ede28a4-027e-424a-a546-7d686fe0a07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e5226d-152d-4d6d-b80a-a4f88a901020",
        "cursor": {
          "ref": "1b8d8b9a-095f-423f-8aa8-7f31b2d6850c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9e791f20-4532-4fc4-a3db-7a0a1f0b99fa"
        },
        "item": {
          "id": "65e5226d-152d-4d6d-b80a-a4f88a901020",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "59147040-e096-4d6f-a526-5b1cae6cadc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8ac548-3843-48a2-b1a4-aefb500de1ca",
        "cursor": {
          "ref": "4362424a-f667-4fce-a95a-33ef851276a5",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "15513e89-8a58-42ca-9f4e-d84a92f21f1b"
        },
        "item": {
          "id": "6f8ac548-3843-48a2-b1a4-aefb500de1ca",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "af829249-e91f-4fee-ac05-09c6f4862b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bd2d26-7339-4810-9634-6c36997bbc26",
        "cursor": {
          "ref": "e1e89518-ea9d-4abd-b07d-1741a7fc469f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "eda64f3f-dca3-41d9-83a1-b18890513377"
        },
        "item": {
          "id": "03bd2d26-7339-4810-9634-6c36997bbc26",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c30c08ff-3715-4667-b1f4-9aa34f1ecfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a95741-ab40-4613-803f-baf6bb162295",
        "cursor": {
          "ref": "afdcb283-34c9-4f7d-b072-8ca0bf675da5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9833d5f7-8649-4c18-bea2-18e0495ce440"
        },
        "item": {
          "id": "74a95741-ab40-4613-803f-baf6bb162295",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "aaba51f4-4e50-4f95-88dd-2edb08a94d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1355,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8973b3-89b4-4306-a5de-c65bd49bbd7c",
        "cursor": {
          "ref": "e1be5857-dd52-4687-9b79-9bd7f06d88d6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a9d4ebb5-a44b-4c08-a12e-08c7116d831d"
        },
        "item": {
          "id": "fe8973b3-89b4-4306-a5de-c65bd49bbd7c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a45cbb1f-c8a8-48f3-8ff2-8d6faccfc871",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5579cf18-93ee-4856-a11a-2097dee84986",
        "cursor": {
          "ref": "24677aa6-afcf-414e-be94-820fafad6eaf",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b90f9ad3-bf97-4e15-8e96-dc712cd04655"
        },
        "item": {
          "id": "5579cf18-93ee-4856-a11a-2097dee84986",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0c577597-d116-40c3-b9da-96ca7304138b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1362,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f4dcf6-7fd8-4bc8-8409-bcffc36f547a",
        "cursor": {
          "ref": "99c8f0e4-0e60-4b4c-93fd-09a3b30b15c0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e0c1493d-7b08-43af-87fd-517dea577b5b"
        },
        "item": {
          "id": "23f4dcf6-7fd8-4bc8-8409-bcffc36f547a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e76e9f37-8470-4924-8cc3-857750a61490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1365,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f4dcf6-7fd8-4bc8-8409-bcffc36f547a",
        "cursor": {
          "ref": "99c8f0e4-0e60-4b4c-93fd-09a3b30b15c0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e0c1493d-7b08-43af-87fd-517dea577b5b"
        },
        "item": {
          "id": "23f4dcf6-7fd8-4bc8-8409-bcffc36f547a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e76e9f37-8470-4924-8cc3-857750a61490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1365,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d2ee95-2ade-48ff-9a58-f725c93e0eed",
        "cursor": {
          "ref": "8f1bdbca-1c8a-4c96-93f1-b6442afcacc1",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "43ef175e-0884-46b2-afe8-bac07a73d400"
        },
        "item": {
          "id": "c7d2ee95-2ade-48ff-9a58-f725c93e0eed",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7c4c99fd-e7ea-4c1e-8b3c-7bd34d18d222",
          "status": "OK",
          "code": 200,
          "responseTime": 1394,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "39e9a1d4-5f7b-4139-88d5-7b03608a2cc1",
        "cursor": {
          "ref": "8f93b6f0-a7c4-455c-8d76-01f1cd67cc92",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b226feb8-2a3c-4893-aaac-7c159f6cd744"
        },
        "item": {
          "id": "39e9a1d4-5f7b-4139-88d5-7b03608a2cc1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c3833533-d4e1-4dde-83d7-5303a3b3fe47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1075,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4390c0c4-c684-4b6d-892b-70d3b7e84de8",
        "cursor": {
          "ref": "b4ac82f4-74c3-43a8-8df4-3e62205ca6ab",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d9a53d79-79a9-484d-88a8-7c6719a1a02f"
        },
        "item": {
          "id": "4390c0c4-c684-4b6d-892b-70d3b7e84de8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8e368188-c160-4720-99b5-638f435e3711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1344,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47c5e1c-976a-4e51-9b59-e84bcb5b75e4",
        "cursor": {
          "ref": "5e37db8c-0f60-4c59-9436-3efa47aafc12",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ee0a42d1-3bbd-4139-a0d6-cff5a03ac529"
        },
        "item": {
          "id": "f47c5e1c-976a-4e51-9b59-e84bcb5b75e4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7a0e4eca-569e-444d-9d01-223538305baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90417f38-e556-41e2-b21a-6d0087073eb3",
        "cursor": {
          "ref": "d15a94d4-6670-41ac-b0de-a6662d921cd1",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0a3f71a0-12e5-4604-b557-4b07d8d40ba6"
        },
        "item": {
          "id": "90417f38-e556-41e2-b21a-6d0087073eb3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8efa14eb-9237-4164-90eb-d8a2a6369d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80c6845-7a77-434f-8ca7-b9ff476096dc",
        "cursor": {
          "ref": "08121401-1c09-40e4-b78e-570f8c6ca077",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "58683a11-28c9-4eed-b4c1-175820bf4f4a"
        },
        "item": {
          "id": "e80c6845-7a77-434f-8ca7-b9ff476096dc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "21b8ca50-4b0b-4a27-83ea-7cc4dd366673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed01db3b-58e8-42b8-baff-233994e9fb6f",
        "cursor": {
          "ref": "202482d3-ea00-49c5-bd29-cf319562b4ae",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1c1f4fba-8945-4ec4-8e1e-5fa6c6882310"
        },
        "item": {
          "id": "ed01db3b-58e8-42b8-baff-233994e9fb6f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9a2de002-85b0-43b2-92cb-910863254b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5063bc-08a9-44e0-aa69-da07af3c7cb4",
        "cursor": {
          "ref": "08046700-ff87-4402-9c5f-fcee5577ec22",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5c3e1d35-6017-4faa-b3d0-e9a470b8f339"
        },
        "item": {
          "id": "6a5063bc-08a9-44e0-aa69-da07af3c7cb4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "578e7c16-4d23-4741-bb06-9781ebc006dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb08b1ed-587d-4d5f-b3d7-76620b4247ac",
        "cursor": {
          "ref": "aa022574-8461-41a1-b955-6ae5cb708efd",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "92758d9c-4478-4f08-b462-4ef343a372a3"
        },
        "item": {
          "id": "bb08b1ed-587d-4d5f-b3d7-76620b4247ac",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9d3deee7-7705-40b7-9ca1-11d44ff5e1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f250987f-e20b-442f-9fb9-36cc34c54254",
        "cursor": {
          "ref": "2c5c5d89-4123-4fb9-af44-cd57cd8df222",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5a2a2c04-e07d-4f4f-b926-89e39344b7a8"
        },
        "item": {
          "id": "f250987f-e20b-442f-9fb9-36cc34c54254",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b64a3d7f-a53f-4059-b29d-a3cc802447da",
          "status": "OK",
          "code": 200,
          "responseTime": 383,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "f9b5d0fe-471a-4f5f-9961-3fd223614928",
        "cursor": {
          "ref": "5fdf570f-08fb-4c04-8847-18f986a4231c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "78ca192f-f88c-4405-a991-b1497625f5c9"
        },
        "item": {
          "id": "f9b5d0fe-471a-4f5f-9961-3fd223614928",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "407c054e-d8e8-4bcc-9b81-9dfe7df3aecc",
          "status": "OK",
          "code": 200,
          "responseTime": 423,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "5593e52f-c7cc-488d-b486-b263d0bd5ce6",
        "cursor": {
          "ref": "a87ec72e-31e5-41f3-b851-625dd0da2c74",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "baea897a-b68c-4e93-8ec8-0f9cd62809e9"
        },
        "item": {
          "id": "5593e52f-c7cc-488d-b486-b263d0bd5ce6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "30e085e6-b419-4fdf-82be-52f4afaa09f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed8b845-e4ee-45b2-86f8-1d14a57315f9",
        "cursor": {
          "ref": "ef375df8-bcf1-4b1b-a7ce-63388ae99972",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b40f49e8-691a-4c15-ab78-caf7390b1270"
        },
        "item": {
          "id": "fed8b845-e4ee-45b2-86f8-1d14a57315f9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f9b42bee-4e68-4720-95b4-3dfdc38a0024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c4d95f-6cbc-4b82-9142-8518c648a34d",
        "cursor": {
          "ref": "6678c30d-9c03-4947-9424-da1a9e72df8a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c824ee54-9182-4abb-bdbf-4f1413dae240"
        },
        "item": {
          "id": "65c4d95f-6cbc-4b82-9142-8518c648a34d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e38e03f0-8cb7-42a0-9726-38883222cc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45567fb-3a7d-49ae-bc9f-875be8a35b78",
        "cursor": {
          "ref": "ef41668f-1307-4a2c-aedf-91abef18a467",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "63f27d15-d54c-475a-8398-f44a72e11c3f"
        },
        "item": {
          "id": "b45567fb-3a7d-49ae-bc9f-875be8a35b78",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7f2edd6c-4f98-4b07-a436-b6be1a36edc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a1122e-9089-49b3-b919-5c92640201ec",
        "cursor": {
          "ref": "56b7da4f-b1f5-4df8-baf8-5f308fee7a63",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b54a5a5a-d515-4d73-b9b0-bbd512704166"
        },
        "item": {
          "id": "e2a1122e-9089-49b3-b919-5c92640201ec",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "69425baa-7d17-4e6e-90d2-30fd5594370d",
          "status": "OK",
          "code": 200,
          "responseTime": 376,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:159)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:159)"
            }
          }
        ]
      },
      {
        "id": "0965d90e-022b-449b-9863-eeed91455dfb",
        "cursor": {
          "ref": "0a633a45-bf4e-4539-826d-0601fc00fcff",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5ec30e54-fc49-41d4-977e-bed82e5b0265"
        },
        "item": {
          "id": "0965d90e-022b-449b-9863-eeed91455dfb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "451aea3b-a447-4142-9c80-5de35ccb48c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1f28d9-4810-46c4-b65d-db35ad0a4eba",
        "cursor": {
          "ref": "b21de646-261b-44e7-95cd-8b287837024e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "707f21b3-bdc4-4cf1-8362-7fa4b2628821"
        },
        "item": {
          "id": "8a1f28d9-4810-46c4-b65d-db35ad0a4eba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0252a376-a280-4e92-853a-31224a6e9e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 962,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8046de96-ff2e-46cb-ba21-4e906f6f54ca",
        "cursor": {
          "ref": "ddda3988-9727-4cc2-b35a-9bb091f3a5e2",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8afb1387-4a0b-4670-ad3e-4cc7ff6e4038"
        },
        "item": {
          "id": "8046de96-ff2e-46cb-ba21-4e906f6f54ca",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e20f095b-3caf-4a69-9c57-12960801a5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1498,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3be2c6-9e4f-4ec6-8a51-136b99ae43f8",
        "cursor": {
          "ref": "2524a4ec-7edd-4f40-94e7-b9d1cb7b42fd",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "80dde230-3805-439e-b2c0-d1c7ad50b8c1"
        },
        "item": {
          "id": "4f3be2c6-9e4f-4ec6-8a51-136b99ae43f8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "aa2c1be5-48d4-4d81-adb3-e8b4a9b9d5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ac02a2-2fd8-4d34-9f9b-82e90241aa67",
        "cursor": {
          "ref": "70891110-552a-4023-896d-0ff50157bb56",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "96eced88-0bcc-4dd1-bd48-775c6444e5fd"
        },
        "item": {
          "id": "59ac02a2-2fd8-4d34-9f9b-82e90241aa67",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "99089cae-9835-473f-91fc-b360635cd760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419e4831-3d9b-4804-8a5b-0aad2462fc65",
        "cursor": {
          "ref": "39432279-1a86-4543-bf98-2887ec9cadce",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3dd416d6-0d22-4864-af4f-f887b3f302e1"
        },
        "item": {
          "id": "419e4831-3d9b-4804-8a5b-0aad2462fc65",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "67f5514c-f9b0-4ae2-97e4-5c1e57d06a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf10594-0847-4969-a522-19fb6a8bf391",
        "cursor": {
          "ref": "72106dce-a7a1-4bca-ad22-2c3101342fd9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "da593c85-b7b8-443d-90f6-bc4699711300"
        },
        "item": {
          "id": "bbf10594-0847-4969-a522-19fb6a8bf391",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d50408dd-3868-4469-8f57-563004a30410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3cd693-974e-4b76-89b5-ce06b7702234",
        "cursor": {
          "ref": "c89575ac-d253-4cba-8356-648c2ed0e7af",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9a16d689-afbc-4e13-9aca-5a8ce1f29a9e"
        },
        "item": {
          "id": "6b3cd693-974e-4b76-89b5-ce06b7702234",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "63f615cb-7d5d-4268-a939-509bc1a11c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f018c2-fc5a-4069-a925-65b28f8be266",
        "cursor": {
          "ref": "9e7b0283-b0d5-4e72-ad74-acdfe43fc78b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "347171cf-a4f4-4d34-9ec1-23ec49b08249"
        },
        "item": {
          "id": "10f018c2-fc5a-4069-a925-65b28f8be266",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4cada3a9-8643-441f-85a4-8fa6b898fb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f003464-6482-4786-b20c-94ddc3e7fb0c",
        "cursor": {
          "ref": "a2bbc2ff-a729-4a71-9d3b-4edc5d641a8c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8186ccc9-d51b-44df-a217-50c887203855"
        },
        "item": {
          "id": "3f003464-6482-4786-b20c-94ddc3e7fb0c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a5eafb59-8d9b-466d-83c2-138faa4e2925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfd0432-6020-4a70-9970-88f925e6786f",
        "cursor": {
          "ref": "ecbe372e-1dc4-4f65-bdbf-54b27c17c085",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0276297e-127c-498b-9386-95d64ee0365d"
        },
        "item": {
          "id": "1dfd0432-6020-4a70-9970-88f925e6786f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7eb3c2c7-195a-4e90-b770-0522d6c3db1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dea70b3-eaae-49fc-aa9b-b91abed7a541",
        "cursor": {
          "ref": "4eb0d0d0-af5b-4c29-9518-6bf6da1fd6f0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8b6b18cc-08ab-4888-b9a0-e94a6f0327ac"
        },
        "item": {
          "id": "8dea70b3-eaae-49fc-aa9b-b91abed7a541",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7934b883-b17c-4fdd-ae69-aa98787d59b2",
          "status": "OK",
          "code": 200,
          "responseTime": 621,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:171)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:171)"
            }
          }
        ]
      },
      {
        "id": "1e00a28a-c2f2-4d13-a755-5f48005396b1",
        "cursor": {
          "ref": "0ba8c9ab-ec25-4f26-bb37-1c7655b6bc3e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "aec3bc89-4e38-4702-a613-f3ba8b964536"
        },
        "item": {
          "id": "1e00a28a-c2f2-4d13-a755-5f48005396b1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "65f7cfc8-f07e-4fbc-8ca3-c8c5859f01f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e915a1b-8925-4326-adf6-61d17925e882",
        "cursor": {
          "ref": "926541c1-09f4-4487-a2ac-fd52be009f74",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9b50646e-3390-4726-a927-713533514d1a"
        },
        "item": {
          "id": "9e915a1b-8925-4326-adf6-61d17925e882",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "65a4eec2-2d5c-448b-aab8-27d411984ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e9215c-9d60-4e91-96b2-61811214092c",
        "cursor": {
          "ref": "08ad7528-c219-4922-94ec-2b17fc5adc1b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0dd230bb-3e9c-4e85-a868-5d41aa146b63"
        },
        "item": {
          "id": "a0e9215c-9d60-4e91-96b2-61811214092c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a80d7627-5ec7-4bf8-b8ee-fcb649642c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549de755-d355-4244-adeb-f1a6e49962b6",
        "cursor": {
          "ref": "266176eb-98fe-4db9-bcae-6266576603f4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5c53dc6a-2db6-46d9-af73-7d4466ff97b9"
        },
        "item": {
          "id": "549de755-d355-4244-adeb-f1a6e49962b6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fd6d3d9d-e365-4ef0-9c13-dfd425b0d376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0bd86f-8e25-4622-9253-9996be24372a",
        "cursor": {
          "ref": "09a39291-b644-424b-9d1f-d26934f9609e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fcf47c70-f9d0-4abe-a2fb-57308a2091c8"
        },
        "item": {
          "id": "fb0bd86f-8e25-4622-9253-9996be24372a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fc8a2203-57a3-4470-8c3c-1e4043f26469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce8dabe-ba65-4d51-b6fe-5941193681a8",
        "cursor": {
          "ref": "9f28bb6b-2912-4da5-a612-f0b0e82bda2a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "877499c7-9135-4fd7-badd-a63d17fcd20d"
        },
        "item": {
          "id": "2ce8dabe-ba65-4d51-b6fe-5941193681a8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a0384a83-38d1-4e0f-a92e-2e932490d5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d1cf99-3b2e-4c9a-8138-846a7cd26305",
        "cursor": {
          "ref": "128964aa-a4a1-44fa-9582-c6163b5ba7b4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a1b3cfb1-e367-4e36-924e-10c8ddf31ac0"
        },
        "item": {
          "id": "f7d1cf99-3b2e-4c9a-8138-846a7cd26305",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b1972f3a-4c97-465f-a782-7f99be9e82c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573ab264-26fb-40c5-b6fd-5fc18369e360",
        "cursor": {
          "ref": "5f1d0b37-2f0b-41aa-88af-07cfb11488c9",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6c193890-4430-4c60-b1b5-5254d3fe1c15"
        },
        "item": {
          "id": "573ab264-26fb-40c5-b6fd-5fc18369e360",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8bbf6e64-c7b0-4f16-b878-61d0d5b66a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdfee79-a04a-4753-9a3e-85a4a24954d6",
        "cursor": {
          "ref": "ab8c441d-040a-477e-a26f-b3a75a05f2f0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f3fd5443-a887-477c-973b-39d04b486752"
        },
        "item": {
          "id": "7bdfee79-a04a-4753-9a3e-85a4a24954d6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4a00fc5b-8626-4ea5-8dc7-2e46e019a944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ecdd1d-d6f3-4966-9f62-61fe48de1c2b",
        "cursor": {
          "ref": "65d0c1e8-7561-4999-afa9-119f6801bf3b",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "87af2a42-2138-4149-b7f6-b2dd9bf4688a"
        },
        "item": {
          "id": "97ecdd1d-d6f3-4966-9f62-61fe48de1c2b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b46ab7fb-a6b9-42b8-b773-df9717e4a8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24afd5b4-cf07-4891-8428-bf3505ca63e0",
        "cursor": {
          "ref": "cae61b66-e495-4ea2-b123-5d0b4191efbb",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ac019bd9-6be3-491b-8704-76bcb31ea97a"
        },
        "item": {
          "id": "24afd5b4-cf07-4891-8428-bf3505ca63e0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5057a499-c5fa-4047-948d-c394c5a92c9b",
          "status": "OK",
          "code": 200,
          "responseTime": 375,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:182)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:182)"
            }
          }
        ]
      },
      {
        "id": "0e5385f7-d71a-49c2-83be-b930cc5c6f14",
        "cursor": {
          "ref": "da90915a-7030-4708-bb10-8597b7826d40",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "08022eed-12d8-4634-8f1f-3b636f8bf64f"
        },
        "item": {
          "id": "0e5385f7-d71a-49c2-83be-b930cc5c6f14",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9a46d9c0-6746-4176-ae63-7473b09efc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb4ec4a-45e5-47b8-9267-f7351ca67a31",
        "cursor": {
          "ref": "0f11bddb-dde9-4199-8d3e-4e6fbab4f4da",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d1fc2d1b-6b26-4559-8007-9a2cef63a80c"
        },
        "item": {
          "id": "adb4ec4a-45e5-47b8-9267-f7351ca67a31",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "839ef7a2-13a9-40d4-80b1-551742362af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a6875f-5d86-48f8-9f6f-6ea059540d2f",
        "cursor": {
          "ref": "95101b75-7420-4003-9f91-d03dec3d118d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cfdfb079-3714-411a-913d-964cf157409d"
        },
        "item": {
          "id": "36a6875f-5d86-48f8-9f6f-6ea059540d2f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7b5d5cf8-1dcd-4436-8631-addf1156e420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9978bc-7bbc-4338-ae64-f42e540f2ee9",
        "cursor": {
          "ref": "f3114a95-d88a-4411-a57a-551c6d548982",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f310d725-ebdf-4874-8e24-7403157a573d"
        },
        "item": {
          "id": "2f9978bc-7bbc-4338-ae64-f42e540f2ee9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6a3d0426-41fc-414e-b32c-db085bfa3842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b118b2-9e58-420d-95d7-d7b4fc852df9",
        "cursor": {
          "ref": "72bdd04f-166d-44eb-8a5b-7837d265c109",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "64bddc84-cf95-45c4-ace3-0965319ef5ef"
        },
        "item": {
          "id": "93b118b2-9e58-420d-95d7-d7b4fc852df9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6939180b-cfc5-4a7b-b950-7bd3d3fbd2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0d4f6e-e37c-4ce7-98b9-9bc36ebc94ce",
        "cursor": {
          "ref": "f52bf4f0-e78f-49f0-a221-59bf7cc1c26a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7696347f-266a-43ae-9258-fdde781e7a5c"
        },
        "item": {
          "id": "3f0d4f6e-e37c-4ce7-98b9-9bc36ebc94ce",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3a207bdd-e9fa-444f-ba0e-d95f70190b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6b3fe5-3924-411f-96bd-ac4031664f4a",
        "cursor": {
          "ref": "2e5faed0-59e4-4c68-9938-13231fdb6fa9",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6cdb5e8b-1f06-4bb6-8826-4be075bc83c1"
        },
        "item": {
          "id": "5c6b3fe5-3924-411f-96bd-ac4031664f4a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "26e947ac-c466-4365-86ac-7cd85c20ead0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2477ab-ada5-4117-a366-0f07c3fd7921",
        "cursor": {
          "ref": "683f8c45-86e1-4fd2-8628-de91ae3f50af",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c54ca31d-4bb5-41c9-8e5c-70b3ddbe866b"
        },
        "item": {
          "id": "0c2477ab-ada5-4117-a366-0f07c3fd7921",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0eb69c22-d5e1-4b58-bad3-0fd372449f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf086012-a4d2-4b56-bd3d-1f63ed3020a0",
        "cursor": {
          "ref": "d035def7-6cc8-49ec-9196-b2dbe40aa90a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e602ab81-27c5-45d2-bb57-12d232e20b1c"
        },
        "item": {
          "id": "bf086012-a4d2-4b56-bd3d-1f63ed3020a0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9b1b6264-d1aa-45df-bd8f-a561812d98d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042a8867-c6c5-4a4a-9b07-5d06d06663eb",
        "cursor": {
          "ref": "f0856344-c9eb-413e-98a3-02e391e3cbf2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "addf6356-920e-4b79-b5b8-837eec772d54"
        },
        "item": {
          "id": "042a8867-c6c5-4a4a-9b07-5d06d06663eb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "afdfe590-c597-4904-94c6-e0325d457969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977bbffb-8648-4d8b-8fe7-be41c5beeeb0",
        "cursor": {
          "ref": "58c21d1e-9515-4add-9f50-8bd87a7a7007",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4ae013af-9a8e-4c08-a2c7-ab19e3672b07"
        },
        "item": {
          "id": "977bbffb-8648-4d8b-8fe7-be41c5beeeb0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f3ce69fb-476c-43fe-a144-a9ce4b43c7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40b5ce6-36e8-4ed4-99f8-48727cd2fb1a",
        "cursor": {
          "ref": "1a7906e3-94c3-4669-aef6-baac9c97f16a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9466cc04-0677-4bec-b9c0-57791f4a8b69"
        },
        "item": {
          "id": "f40b5ce6-36e8-4ed4-99f8-48727cd2fb1a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "53fdcf6d-4171-4d55-b2ee-6f499689fbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d1ca50-91e6-406f-bd1a-e51c1438cb74",
        "cursor": {
          "ref": "a86e0178-1b31-4b30-97a6-d88ea047be52",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "87400429-9da2-488e-a78e-53c2965c5029"
        },
        "item": {
          "id": "f6d1ca50-91e6-406f-bd1a-e51c1438cb74",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f629e756-cb8a-4b89-a204-4b5c7f80e65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0587439-b359-4b01-817d-37af1f774657",
        "cursor": {
          "ref": "e4254ca6-cd6e-4820-843d-1fe10339ed47",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "34fa7b03-7afa-477d-8697-3ced2365de63"
        },
        "item": {
          "id": "a0587439-b359-4b01-817d-37af1f774657",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "852ed72b-873f-4ec9-a18f-35cd8536d257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54ce9c3-f2cd-4928-997d-8cd8eb9e667e",
        "cursor": {
          "ref": "b7487b29-c091-4de5-9a15-e0aa9bb5a146",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c80104c3-0ba9-42da-ad3d-a31539f05b64"
        },
        "item": {
          "id": "d54ce9c3-f2cd-4928-997d-8cd8eb9e667e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "73556fd2-9614-4d05-b1ef-f911826278d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b63dc4-77b7-46da-a434-3053eb67b454",
        "cursor": {
          "ref": "7dfc5ae9-2883-4740-aaf3-78cf6032de44",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "573078f4-bde7-4565-a430-65469afa751d"
        },
        "item": {
          "id": "e5b63dc4-77b7-46da-a434-3053eb67b454",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e34f0dd6-2d9b-43cb-a5e5-52507e1dce7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92e0fdd-6a18-42fc-a2aa-dd7acba0398b",
        "cursor": {
          "ref": "9250f140-ba54-4a10-aa62-8ade3311b8a0",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "34082e12-290c-4124-b7a9-ac2c489af0de"
        },
        "item": {
          "id": "e92e0fdd-6a18-42fc-a2aa-dd7acba0398b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9c973159-75ad-48ef-b419-8fa4c4176894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bc695d-19a2-4259-8ec1-d4ab6395ea8d",
        "cursor": {
          "ref": "a84358c1-c1e3-453d-89e2-4f7e6d8c62c1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "26d56d23-b870-45fc-af23-b3b62c21df9c"
        },
        "item": {
          "id": "e2bc695d-19a2-4259-8ec1-d4ab6395ea8d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "606af5c5-1ec1-4793-880e-6cd219d2666e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdbc09a-6698-4a0d-9cdd-a1147c656fff",
        "cursor": {
          "ref": "79373ab7-515a-40ed-96f7-898ca52e389c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "244115f2-ecc8-4eb8-ba95-b65d947d4b2e"
        },
        "item": {
          "id": "ffdbc09a-6698-4a0d-9cdd-a1147c656fff",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "da9e5829-5a15-4110-b5fe-3e9df71217c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad794696-7f5f-4fa1-81d4-803fd5c6e029",
        "cursor": {
          "ref": "f6d791a9-fa72-490b-9799-22f29c5958ba",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4647d663-19c8-4da7-ba99-5fee447b98ce"
        },
        "item": {
          "id": "ad794696-7f5f-4fa1-81d4-803fd5c6e029",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "323363b4-0bda-44cc-a50b-d2fcb24513a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc9b097-fe61-4d05-8c23-a105c662ea51",
        "cursor": {
          "ref": "7c5a3635-9bf6-4dc4-9b3a-2692ee8d6f41",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "215c67cd-441a-439c-90c6-fd0ac617e22e"
        },
        "item": {
          "id": "2fc9b097-fe61-4d05-8c23-a105c662ea51",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "24a0c91f-0a1f-48a5-ad61-9686fcebf41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654c333a-02f1-43f7-b1d0-687db4e2f16a",
        "cursor": {
          "ref": "847e92a7-45bb-47ea-9283-f88fbff90f54",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "75680267-422e-44b2-93a2-25fa68d4b5ed"
        },
        "item": {
          "id": "654c333a-02f1-43f7-b1d0-687db4e2f16a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a451fd01-d64d-4656-bd0b-514197692170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca252d9-e2aa-4a60-be43-a831fdb85713",
        "cursor": {
          "ref": "9484e19e-7c2b-4580-9451-2997c4c25c25",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9cd9a424-16ec-4bad-b41c-19ab209b725c"
        },
        "item": {
          "id": "bca252d9-e2aa-4a60-be43-a831fdb85713",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b07c443a-bda8-45de-a665-63c0a211049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f65e9a-b29d-40f6-93f5-5cbf566f7c28",
        "cursor": {
          "ref": "4da1c22c-1b0e-4efd-8cc6-8198f1b2791c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6f363804-3711-4d75-8488-f6677e2357bd"
        },
        "item": {
          "id": "d4f65e9a-b29d-40f6-93f5-5cbf566f7c28",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bb77c6c9-a47b-422c-bdef-9251be60bedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a73e99-3aa9-4713-91f2-0d50657a6476",
        "cursor": {
          "ref": "61f1e75a-1166-4518-a234-0d8a73491643",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f49475f9-57a1-40ec-b935-71ac178ff4d4"
        },
        "item": {
          "id": "c9a73e99-3aa9-4713-91f2-0d50657a6476",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "828ce90c-fed0-485d-8ec2-0f0a08058415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f22216-ef29-4fb6-9c63-97c45f0239d9",
        "cursor": {
          "ref": "ddbc501b-dcfe-4759-b009-10e98bf35250",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "18436c8c-7c58-4c72-8fed-3987643caaa7"
        },
        "item": {
          "id": "20f22216-ef29-4fb6-9c63-97c45f0239d9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0ddd2ec7-861d-4a8f-9cac-a5a971566e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e508b2-0265-4b8d-9c46-be67eca0cd20",
        "cursor": {
          "ref": "0fef86a3-2afb-45ec-ba80-2402fb21d1eb",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5fe204df-fdfc-42cf-8cfc-a1d213d8e2f2"
        },
        "item": {
          "id": "b1e508b2-0265-4b8d-9c46-be67eca0cd20",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5a979408-bfe3-4db9-8195-03b4505cac63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f721fd86-f6c3-4a64-b70a-ac7ce879f9c3",
        "cursor": {
          "ref": "e7f7784c-22e1-4f2c-89c6-19394ddfa5d2",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "50467832-dd87-4010-b0ff-5bfe6569a40b"
        },
        "item": {
          "id": "f721fd86-f6c3-4a64-b70a-ac7ce879f9c3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dd4df232-0918-407a-be22-6bf51e9de90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860c7861-edcd-4980-8cbb-b5cd6987a9d7",
        "cursor": {
          "ref": "09630400-9443-4266-bf26-8ba2b4ff9ab5",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2bfd60bc-837c-43bf-8d5b-3867648354d8"
        },
        "item": {
          "id": "860c7861-edcd-4980-8cbb-b5cd6987a9d7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8cb7f49b-72e9-493d-9734-cf910031a4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9343d6be-6790-4f32-b455-c10cf5adbc53",
        "cursor": {
          "ref": "0cf57610-ab32-4097-931f-96a811a02983",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d39335e6-fb63-4e55-9256-af78cbb02f47"
        },
        "item": {
          "id": "9343d6be-6790-4f32-b455-c10cf5adbc53",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "95130cb8-e740-406a-a5cc-a1bd89ebb580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f67913e-0ff9-4c80-81ca-57c51e84fd80",
        "cursor": {
          "ref": "000a8d4e-111b-44d1-8058-3259f5c42993",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "55c2c58d-8d66-4c20-bb17-0144764e9e1a"
        },
        "item": {
          "id": "7f67913e-0ff9-4c80-81ca-57c51e84fd80",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "80aaaa24-c848-4c50-99ec-9111f2540dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ea23dd-987d-4cc8-9258-554f5d223221",
        "cursor": {
          "ref": "74139124-784a-4f04-af83-825c8d68b906",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "326c4a71-dac5-46d3-b536-72cf6a45baec"
        },
        "item": {
          "id": "76ea23dd-987d-4cc8-9258-554f5d223221",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a6164ef7-d334-43ba-b8bd-88fad90c7f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb888792-1688-4280-a331-0bb38efcf0b9",
        "cursor": {
          "ref": "231230ce-825d-4ee4-9488-6fd182700cc6",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6a0dcd08-b7d5-478f-bd4d-c72379df87b9"
        },
        "item": {
          "id": "fb888792-1688-4280-a331-0bb38efcf0b9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a570d37d-d67f-4adf-aad1-c988dc8442ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504d5583-9c87-40d6-b19e-5c353f538cf3",
        "cursor": {
          "ref": "9a98eb3c-d834-42be-840c-0eb2c9185f08",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e7e55bfd-6229-4520-b087-960103ea1d85"
        },
        "item": {
          "id": "504d5583-9c87-40d6-b19e-5c353f538cf3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bdf46eb6-0780-4cf3-a3a2-c4abca682546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e1cc9a-9793-4c24-a703-8929c00548cc",
        "cursor": {
          "ref": "1dad044e-b5e4-4a3f-ba08-aca8f14c4424",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5761846d-cd9e-4553-a561-154f7391d34e"
        },
        "item": {
          "id": "c8e1cc9a-9793-4c24-a703-8929c00548cc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5aa4d4d3-00d2-4a69-945a-82b5ec360341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a96b5f-e55d-49cf-96de-044860cf2f0e",
        "cursor": {
          "ref": "d1983cc9-731f-41ef-8b50-336f1a62d5f6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e019c1da-eb85-4dc1-b495-3761eb6fa92d"
        },
        "item": {
          "id": "06a96b5f-e55d-49cf-96de-044860cf2f0e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "11305f40-63cf-46c9-bf9d-b49d32990068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7348e73d-4b50-43c1-a10b-b8e45f061bf8",
        "cursor": {
          "ref": "522d5c67-8652-4425-b1a0-fa2d2096e2a0",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c4082878-b125-45cf-acdc-f4487497581f"
        },
        "item": {
          "id": "7348e73d-4b50-43c1-a10b-b8e45f061bf8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "db54a7af-1f22-42f8-88e4-c6bcc9487723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfd4c02-2ce5-4b20-9e0c-bbb4f9906203",
        "cursor": {
          "ref": "f20ffde0-39f9-4d94-8f81-937874e2d407",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2833eae5-88ca-4691-9a5b-c20f38c63fe1"
        },
        "item": {
          "id": "9dfd4c02-2ce5-4b20-9e0c-bbb4f9906203",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "702ba073-5f08-4859-b6c2-86f85f2c7546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06cd28a-0f4e-4c0f-8b98-bc218081560e",
        "cursor": {
          "ref": "a5e10f5c-4c7a-40b0-8dc6-ae6e35358244",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9e7c672a-23be-4ba3-baf6-c51a48c13242"
        },
        "item": {
          "id": "f06cd28a-0f4e-4c0f-8b98-bc218081560e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "188d1a79-0bf0-4cf9-a67a-8fce20c9b78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50525c68-8b09-4251-afac-7fc02975312b",
        "cursor": {
          "ref": "962f07ae-369b-4332-9ed7-b655f34c41bd",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0775c6fc-2e60-4255-b240-d367098131fd"
        },
        "item": {
          "id": "50525c68-8b09-4251-afac-7fc02975312b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e1bc209b-05d9-4f76-8e15-d68ab85c95ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c227c3e0-6cf7-4cf3-96c4-b47ac0b29ed8",
        "cursor": {
          "ref": "95597bfb-7321-4e2b-8a71-aa63d3db6f63",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5f2dfd7a-ddc6-4e3a-ad59-0e305ad0b090"
        },
        "item": {
          "id": "c227c3e0-6cf7-4cf3-96c4-b47ac0b29ed8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6aab639f-f5f0-4aa9-a911-9f17e12af8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b40b3e-1b2b-4d21-88fe-da038398bd32",
        "cursor": {
          "ref": "cc3b1b96-9a1d-4cb9-9bfc-9e5f99ccd368",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "73c3c538-0cd2-48cc-9df1-da157df90db4"
        },
        "item": {
          "id": "d0b40b3e-1b2b-4d21-88fe-da038398bd32",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8fa7b2cd-1230-4fb9-8553-9e2e2116dfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5677840f-013f-4b6c-9847-af31c7168b50",
        "cursor": {
          "ref": "7fce570b-f028-4d54-94a1-e040f39618d7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "91dcbadb-2baf-4b8d-81ab-83501add43c4"
        },
        "item": {
          "id": "5677840f-013f-4b6c-9847-af31c7168b50",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "11c7c67b-d9fd-4850-9f69-14903215858e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db1e2e3-8755-4217-a3d9-649653161869",
        "cursor": {
          "ref": "e39655ae-f5f2-462d-90c6-4051b556e4d7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "00cca8f5-bec4-40b4-9bb0-b61c8b432bea"
        },
        "item": {
          "id": "9db1e2e3-8755-4217-a3d9-649653161869",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "51b9632c-b912-4e6e-916e-e7d028c75f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5e24f3-14f2-4369-ac54-3415f5a493c4",
        "cursor": {
          "ref": "1d8027b7-ebe8-4e49-bbe5-92231d2659e4",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4349a4e9-9351-4870-a752-76e85a55e778"
        },
        "item": {
          "id": "8b5e24f3-14f2-4369-ac54-3415f5a493c4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "64476529-74af-45de-9d6b-d7564ce5c2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ebbf7d-ad8a-47e7-a234-9dd6f210683d",
        "cursor": {
          "ref": "8ce24ba8-391c-4011-a5e6-4172be55ba7c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "67400bd7-1882-4142-af8d-399e4255bd4b"
        },
        "item": {
          "id": "87ebbf7d-ad8a-47e7-a234-9dd6f210683d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cd79e860-9768-4522-86a4-2babcf0793bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cafd07-8bed-4684-9e67-7e46bcdcde03",
        "cursor": {
          "ref": "7c29edce-8bb6-4e83-968d-0de226cca4da",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d1b78793-480f-455e-b757-6ff06b130391"
        },
        "item": {
          "id": "32cafd07-8bed-4684-9e67-7e46bcdcde03",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6e26b669-359f-437e-ab98-b6c4bf260c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6920b360-1800-4c07-a0d4-a37892466032",
        "cursor": {
          "ref": "81496319-0a28-45c8-aad6-fdca92a9c65f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9fe4156f-2fe6-4115-88b7-069c9b402c11"
        },
        "item": {
          "id": "6920b360-1800-4c07-a0d4-a37892466032",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7971800a-51cd-4c77-ac13-56d4ff3dd993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76326cd3-cff3-4c1a-82f6-d0f8124db67e",
        "cursor": {
          "ref": "5d3cb22f-b765-4bcd-bb78-a67db28b4cdc",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "17e4e88b-8861-47f3-8549-8032a59e290c"
        },
        "item": {
          "id": "76326cd3-cff3-4c1a-82f6-d0f8124db67e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "51f9807e-d216-48e2-ac24-82b4875cbac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51983ba6-edf7-4b24-9309-0f2c4bc396cd",
        "cursor": {
          "ref": "1b97f01e-d334-4107-a8a1-8f2ec41e7f9c",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1d34a439-3493-4e6a-82ff-cd9dc751bbcf"
        },
        "item": {
          "id": "51983ba6-edf7-4b24-9309-0f2c4bc396cd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "37123401-0b92-4700-b413-23af9f3f4ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d9edde-66a8-46a9-b15b-e4cf806a53e9",
        "cursor": {
          "ref": "f1c5934b-af96-41cf-9db3-661bd9fd6da4",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f36f3415-963d-4268-b04f-f468d19d4e1b"
        },
        "item": {
          "id": "74d9edde-66a8-46a9-b15b-e4cf806a53e9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c230b052-0f8f-4fa2-893a-8f98007d0a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b60752-117c-4f22-a374-723691582ba7",
        "cursor": {
          "ref": "145f0521-a544-4d0f-8968-395e6334948c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cfef2291-f8cb-41a6-897f-4271feca5e85"
        },
        "item": {
          "id": "44b60752-117c-4f22-a374-723691582ba7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6deefd86-792a-40d8-98cb-5c8535dd5fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0062518c-1f7c-4e05-bfa7-a3290ef0a8dc",
        "cursor": {
          "ref": "b6c121bf-63e2-40c6-900c-cde69ba409ef",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b056d7e0-c214-4087-9529-a0cd6bdcce1c"
        },
        "item": {
          "id": "0062518c-1f7c-4e05-bfa7-a3290ef0a8dc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c4a4cc80-0199-440f-afda-4d10a1a25b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76828692-97bb-4301-90bc-ee1fabe1c814",
        "cursor": {
          "ref": "4a12fa83-4c9c-4d10-babc-f894452f0c6e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3e478f97-8627-4a01-bc5e-5a6d7e3e6a75"
        },
        "item": {
          "id": "76828692-97bb-4301-90bc-ee1fabe1c814",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2f19a9f6-76ff-49c9-b612-e852ab10b551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72b13b7-9053-48c3-8d89-d432c0e9370d",
        "cursor": {
          "ref": "cd080d8f-48bd-48a5-b29d-b039170a1678",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d2eeb210-30ff-449c-ad62-fa770ec975cc"
        },
        "item": {
          "id": "d72b13b7-9053-48c3-8d89-d432c0e9370d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f1c054ab-475d-4e85-a159-d5b29c5c8221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fefd8b7-698c-4660-9f0f-0a4228490808",
        "cursor": {
          "ref": "42980823-19e1-4455-be78-f183422ee18b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3ae2491d-c729-4484-9199-8a2dcf703e86"
        },
        "item": {
          "id": "1fefd8b7-698c-4660-9f0f-0a4228490808",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "be26411c-0cf1-44e4-ac39-ccbd68a4a75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bcbaa1-0b55-41da-941c-e2852fd283cc",
        "cursor": {
          "ref": "4173a0a1-6619-42f8-a208-5574ad8536ee",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dc26a9b9-4326-4696-8b7b-5824cd781e27"
        },
        "item": {
          "id": "64bcbaa1-0b55-41da-941c-e2852fd283cc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6ffbb6a0-b02a-4ba0-b490-f1e6253cbcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263fb683-30fc-47a7-b336-fdf3c64af1e8",
        "cursor": {
          "ref": "e67ebdfc-22ae-47bf-b8b9-6f5ea79a278f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "129034c4-5d73-4fba-b9ee-52f58da39726"
        },
        "item": {
          "id": "263fb683-30fc-47a7-b336-fdf3c64af1e8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f6372f30-b819-42a4-9313-45213cf75c0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caa42f6-1cc9-4b6d-8af0-75f26eb497b4",
        "cursor": {
          "ref": "c37a613d-c919-43f8-9d6c-517e0f0892e3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "655cce30-50fc-4f49-934b-c84e29af4cb5"
        },
        "item": {
          "id": "8caa42f6-1cc9-4b6d-8af0-75f26eb497b4",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "2e3aa1a9-737e-437c-8689-72450741791f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 346,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40252ef-8011-44bd-8cd1-02e19616de78",
        "cursor": {
          "ref": "200508e4-0d8d-462a-ad5c-2ff965d2b9e4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "05749414-21f3-47bd-81e1-8ad870bdcc49"
        },
        "item": {
          "id": "c40252ef-8011-44bd-8cd1-02e19616de78",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d89e8b32-09d7-43b1-8ae7-0a0ab9315566",
          "status": "OK",
          "code": 200,
          "responseTime": 390,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbd3ff8-9e84-4ee4-b4cb-4b89e1e83781",
        "cursor": {
          "ref": "ea3bbede-3923-4ef1-9617-3c8520eef3fe",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "74fb843a-0894-4577-b5f0-7fe0798fdb94"
        },
        "item": {
          "id": "afbd3ff8-9e84-4ee4-b4cb-4b89e1e83781",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3e2fd65e-4318-45ad-9b11-7120cb050b0b",
          "status": "OK",
          "code": 200,
          "responseTime": 1878,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "835fe767-03e7-42b8-afa7-21acf95b2d12",
        "cursor": {
          "ref": "056b88ad-d3e3-4f8f-836f-fe03b6bfdf8d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b52b8fef-8d50-43de-bcff-6e58e930d506"
        },
        "item": {
          "id": "835fe767-03e7-42b8-afa7-21acf95b2d12",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5e0a1abd-19d8-4dfb-b5a4-8def9806fee4",
          "status": "OK",
          "code": 200,
          "responseTime": 1843,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12424b5-3a7a-4517-b89e-af1dd1097ec3",
        "cursor": {
          "ref": "ea01190a-4473-41b7-bc90-75c3ae1da793",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "beb1a5e6-b539-4136-9c9c-588591e67eba"
        },
        "item": {
          "id": "d12424b5-3a7a-4517-b89e-af1dd1097ec3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89f22ec4-05e9-461a-9982-3882975681d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12424b5-3a7a-4517-b89e-af1dd1097ec3",
        "cursor": {
          "ref": "ea01190a-4473-41b7-bc90-75c3ae1da793",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "beb1a5e6-b539-4136-9c9c-588591e67eba"
        },
        "item": {
          "id": "d12424b5-3a7a-4517-b89e-af1dd1097ec3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89f22ec4-05e9-461a-9982-3882975681d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12424b5-3a7a-4517-b89e-af1dd1097ec3",
        "cursor": {
          "ref": "ea01190a-4473-41b7-bc90-75c3ae1da793",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "beb1a5e6-b539-4136-9c9c-588591e67eba"
        },
        "item": {
          "id": "d12424b5-3a7a-4517-b89e-af1dd1097ec3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89f22ec4-05e9-461a-9982-3882975681d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce169c3-5ebf-4653-af3d-be110386d22d",
        "cursor": {
          "ref": "9902f45c-601b-4cd6-8f52-2a965dd140e6",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bd76cc33-7a10-4266-ab31-6a1c7a698d5b"
        },
        "item": {
          "id": "2ce169c3-5ebf-4653-af3d-be110386d22d",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "502a8b45-5827-47e8-bd2f-fd0d03aed9f4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 369,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7381076e-a8f0-447d-8688-500a7c81b0b7",
        "cursor": {
          "ref": "550b0bc9-2e0c-4f6e-be26-26b6b8c182aa",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5c02d1f3-9f2a-4be9-919b-38f379e63253"
        },
        "item": {
          "id": "7381076e-a8f0-447d-8688-500a7c81b0b7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a43c1cab-37b0-4cbc-9434-ee02df458a0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7381076e-a8f0-447d-8688-500a7c81b0b7",
        "cursor": {
          "ref": "550b0bc9-2e0c-4f6e-be26-26b6b8c182aa",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5c02d1f3-9f2a-4be9-919b-38f379e63253"
        },
        "item": {
          "id": "7381076e-a8f0-447d-8688-500a7c81b0b7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a43c1cab-37b0-4cbc-9434-ee02df458a0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5e46e9-0c77-4750-a409-0d274f235f00",
        "cursor": {
          "ref": "af55fcfd-4d9a-433d-b117-68b32b2fd889",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1a529ba5-dc0b-4609-b254-0f17ebbb4075"
        },
        "item": {
          "id": "ea5e46e9-0c77-4750-a409-0d274f235f00",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c0656c40-b515-4273-baa0-62baaad93fd4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 599,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba003e2-cfee-48df-a8bd-4858c01c3c8b",
        "cursor": {
          "ref": "64e1d740-fd60-482b-9dc2-bc95b64f282b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0aaebf86-8cdc-4dae-9e89-3efde0407322"
        },
        "item": {
          "id": "3ba003e2-cfee-48df-a8bd-4858c01c3c8b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "73e9662f-bb93-4c47-9bef-d5034b228341",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba003e2-cfee-48df-a8bd-4858c01c3c8b",
        "cursor": {
          "ref": "64e1d740-fd60-482b-9dc2-bc95b64f282b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0aaebf86-8cdc-4dae-9e89-3efde0407322"
        },
        "item": {
          "id": "3ba003e2-cfee-48df-a8bd-4858c01c3c8b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "73e9662f-bb93-4c47-9bef-d5034b228341",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9213cbfa-d1ea-4a7e-aef4-d37c42879f0d",
        "cursor": {
          "ref": "3616e28b-a86b-439f-bc55-be44609b1b9e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ee4971a3-11f3-4003-813d-dab01b9efeb7"
        },
        "item": {
          "id": "9213cbfa-d1ea-4a7e-aef4-d37c42879f0d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8bb99bf9-c99c-41b2-8025-b08854276922",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 522,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}