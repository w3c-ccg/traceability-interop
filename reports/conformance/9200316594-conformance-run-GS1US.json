{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a1c6aec1-c984-408b-9668-e1294af08456",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c2a4b21e-39d4-410c-ae16-4d98b4ee7952",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b19d18fe-1f33-487a-84b3-4bf130d31c6e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "671485ae-4cfc-4ad9-8a18-3d223a078ed6"
                }
              }
            ]
          },
          {
            "id": "d473c93b-0b73-4d5d-984b-aae65734a859",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81da4ba6-3986-4ce0-bbc4-7b3b05fa825b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6964fa5e-ec2b-43f9-acc2-ab1fea3e6eb7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2bc15247-06c0-4857-ad56-3f2a591a3236",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d00c2b47-0425-4a3f-9755-2d93edd19888",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd76d451-9946-4fbf-86f9-0bdfec02d780",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c59a90bc-14e5-4ed0-b523-24d96afe8465",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f5f474c-7cb6-4022-92bd-90b1b9b86ac5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9510adfa-55b3-4d91-92bb-c4e6fc60efb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d111fe76-f797-4a1a-b924-ed0ac373a859"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc168585-ed04-4543-8430-399bc30b7202",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af70adc6-8769-4833-8ab7-1960b4c5e164"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49e3c71d-c5b6-4963-a39c-0bb9996e3dd5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4a7224a9-6d94-49fe-9c95-9c465e6a312c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "848082d5-2aeb-4767-972f-946b33b5d371",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2160d33d-b498-48a7-be96-3b7382609e62"
            }
          }
        ]
      },
      {
        "id": "bbeca8d9-c757-4c81-b562-2553a9c5aebb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bcb4ef0f-3322-43d7-8aca-e9cf03721cf8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0da76b92-da54-407e-b5f0-335a544ca1c5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b77ac8e2-8964-4542-8420-fab5dcc9962d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a673e2-cfe9-4129-8298-2824c747ab0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54a6026f-aec0-476c-bfe9-c7cc771c8198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad94362-7c11-416a-b6e3-780e4dfd6443",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c37efc-9489-4ad1-ab19-1e398e3d8836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91d059d1-58b0-4f02-bdb1-379ea343a553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7894ef2-388f-41dd-8317-d3cfb942c16e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2233eb7-4691-4a73-8bee-f0bc4b138df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6f5d92e-d39b-4282-a455-65dc06d310eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ec08a74-5e1e-4f29-b0f1-31057a93eb68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5e68fcb-f5e6-43ed-88a3-f6691eb39dcc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aad7902-2876-4917-9af9-4bebece572f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44ed1ce0-90cc-418d-9854-d7ae4716d98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1850262c-ce78-4b88-af95-9be7cbf73ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165a337e-b533-41a2-a501-63de5f5cc3be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f92e1a5-8862-4410-bed6-86cc4d1aee57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3704e6c-1538-45c5-b2e6-04a4347ab720",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd409fee-c729-4a7a-b869-5fb0d722149c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "374c244b-73bd-4e36-b309-75d2c81ad16a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b29791b-9344-4520-b495-3f53aef1b35b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0e030f7f-2c1c-4fb7-ac65-bffd69278dbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cd24b39-5053-4d3c-bad0-d1f50d75908f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "586d6299-a9e8-463a-b37e-35fe1301e6f9"
            }
          }
        ]
      },
      {
        "id": "657c754f-b00e-44a7-ac58-1eac9298ce48",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "54f2877d-1a38-48a4-9de0-38c17ea7fe41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b762cc0a-b18a-405b-aae8-fcbd73d4f4b2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b5f75b25-d462-44cf-9b69-11bdc8c242d2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb539414-9e4b-42ee-addf-ad0976a8e07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f1ed11-c6ac-4568-8494-ce1a58e9b53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4bc503-ebfb-4535-976a-ae4c33af78b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef4d6e1e-2ae8-4413-8a77-634936972129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d170688a-7f92-4668-8802-50c162210236",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dc3665-10ca-4a08-b97a-bcae42287122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9218fcb2-269b-4c16-8a93-c69ea47c5c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5a19c2-20dd-40c5-bdfe-5caa93ffc9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c572bb07-0164-4490-a692-f230033499da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047edb27-750c-4e1f-9fe3-a3dc43065080",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191980ed-f600-45c3-a493-33ccf45bfccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbf642c-6062-4ff7-a5dc-3f3d30ae87dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877f0502-b5ab-432c-9b65-73fd6a209691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6a9be81-ea4d-4776-a45b-28082cfebe7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9258e7e0-7b70-4044-89a8-db03a3cbb2ae",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a0ce40-e0d4-4668-883c-cd90f84b59ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a2b04d-fec7-4686-b484-d8ee82195ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97db769c-204c-4b7f-b1af-9dac4b9d596a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2a5ea7e-adf1-456a-a3a6-6a2421abce2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a687f4-ddb3-487c-b934-d397dfd8839f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2bc49f-1f5b-4629-95b8-d2d2e140a2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c399e2b4-9810-4fa4-b951-81aa1c45ce16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06f0029-ea5d-4f86-878f-73a2f17f4922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b23cca57-b744-4f94-b631-f5e4b0640894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b89505e-2254-4c82-8bd9-a16d07f4660c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190500c7-802e-4eb7-8e5b-502e622c84c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ac1031-2093-4a75-8050-b14d2fa1d464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c480a29f-e3f4-402f-83c8-338b3f300d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1cda05c-280c-4f26-8c9f-8dc6e8d64993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88bf523-8f9d-47bd-b574-fb9c8ed3f7c7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a273cc3-b92d-4b56-bce6-b0465699f3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4999fb8-cb57-4f40-9fd8-ff1b11db7d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab321593-d650-41db-b5af-fe64612f85ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb277368-de8b-420a-8e3a-39e04e504e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f661b3-8049-47cf-a39a-6dbad4eece96",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a4b14a-fc36-4e60-91c6-62b057d223f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddf4d08-2432-4539-a2b3-ce28cf1ce6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3516970f-2671-412b-ad00-9b8d0f9f85c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1128874-8db0-4fa2-bc43-c52b490bd9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978c2426-68ea-4ca0-933c-785adf5c0d1f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a084bb95-8b17-43ae-9a57-bfc4f1fc2e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adba524-d305-4687-b6be-581a192d5a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c46208-6201-4bee-bddd-83cd0af8baf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e736ab0e-4731-4d6e-8403-d9a4d312f7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a481e01-e7f1-4785-9156-eaa5c10e1228",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c255d7f7-998d-4e61-9542-ab0e5c82c998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c75b76-22cd-4194-bfe5-22f7fd0aebbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a9aba6-0700-4f94-9b92-24d847298b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71f46419-ef34-4738-850a-54fa84835790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dddd62-be46-41f2-88dc-b84ab5adc063",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d88563-fc38-496e-afee-30e167df3bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997772da-5036-4c85-97f0-3a0a1764cbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1ec16c-3ca4-4c19-975f-c7509b6ce000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccbfe1ff-1f8b-4315-af05-38f0f0e87353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350f4421-2e04-4509-9f3b-77223e41b83a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417d8405-98b9-4635-97aa-0fd1eeace4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cf4ba0-9c52-4386-bb27-74ef280f611a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e063b8-2841-4b3e-9b59-67340f124d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f3378fa-a1d9-41bc-a738-6d1878fef045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b568666-920b-4518-939c-f56372932147",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1d767a-5d76-4097-be4d-122d017b53f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47bff87-6f7a-4afe-879e-3a4777b5940a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c3e0c1-5adb-4c8c-991d-f8ab07cee751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "509f6bb8-7d2b-4cbb-a220-eecabdd095f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3eadc2-7a8e-4194-8694-9297f93ddeec",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b889f447-23af-402e-b4ea-9764a4eb2e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be881fb-de01-4059-b2c9-09a781ddf507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8701ae12-f8b2-4cc6-825f-b914a3f7263c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17fe7edd-7a7a-416d-816e-f003fb42ded1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579179f6-24a5-4caf-b236-1cca29deda74",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af3d027-2a35-4444-ab83-d5bdbeeb56bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfdd6a3-1f6e-4b64-a9e2-eb015ff863b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad47690-923d-4f5b-a601-1023b0288e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f452e37-e93a-42cc-b1d6-cb55824b6f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f2fd25-263e-4df9-a384-b760d9155f7d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827de668-ec09-43d7-8113-6cec763b5c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ff1961-7afa-4dba-8e99-305bedadcedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43db6019-afd5-4095-bba5-ffe16f99e8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9067cf03-6f95-4f1e-8f76-896315fc5c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bfd017-8523-4b31-aeb5-c87a30d8d81e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf8cc75-3bdb-45f9-88b5-c5055d89cc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1cb4334-5dd1-4a77-ad07-125143757c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4c0606-e733-4ae7-bb4e-dac00f9fbbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2c83570-06da-478e-99db-b39c1ee10138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dd3924-a753-401b-b223-6d92b43c806d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309406f1-9f58-49ec-9ee7-01337fea75ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5561f8-f6bd-4e1d-9fc5-d0f1adad10c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff1461b-1a65-4f31-a306-fd01e3f0d808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee7561c-85a0-4d03-97bc-2140c8066e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856b71fa-d779-4d42-9ecf-780db7766847",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4d4fd6-92dd-4a4b-98cb-aa46f4405dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424d6e23-eb46-4223-8862-4dd451214c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ac975f-8f0d-42f0-bf1d-8a897ace113f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d746a4-4c60-46fd-96a8-59b11829ebd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d080d14e-ec29-456e-bb2d-c99edb685f74",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e07c1f-3cbb-44f2-8ac8-266a70574e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2b68d7-eb37-4782-aec5-dd1e99165625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f6225c-c6df-41f9-a5d7-4f7ef175e282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e59da57-689f-40b0-ade9-1a555b8ade82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8435f146-49f3-45d0-b5dc-e679c649a4eb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7763cfbb-e45a-445f-a8b4-c8dd42877faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d8f428-93ae-47d4-8936-0e511a8e53d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8164813e-4664-41a4-88c8-a5c726e5175b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de48ebff-71f5-4abe-8906-3af77da46b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b237ed7-b5d8-4a64-9998-d57be237265c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8685ecd1-2e70-42ab-9e89-d35435e77c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29182761-5376-48ee-84da-e29a67da004c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d480713-7939-4148-9de7-fcee2add0046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8085945d-d646-4383-af4a-fd85e3a6c3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21245691-abd6-44a5-b2e0-d535db95a4fc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a84ffc-fa93-4d14-a3d4-e6cdc98f2736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a15497f-f7cd-4b0b-a039-5f6182304680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30b58d4-d2e3-49b7-8d5b-88a68e9f5f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f595e8a4-925e-4acd-a3a3-11b4bb894475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5838c9f4-0ab5-42c6-9e71-6f25155360a0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e51405-dae0-44f4-b25d-24421434d76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c2a023-673d-4b78-979c-399d31863893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b66200-b7f8-4695-8760-5dc807d21e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "70a1d02d-6920-47b6-80e9-0d1b9897cfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057b88f8-9c5a-4631-8062-98f3cbbce9cb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b895ad-c6e5-4267-aae6-3122a564e9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ecd3bb-5792-4728-8944-f2e0b6563c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1824de25-a661-4534-8075-596b3904033c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "666ab1e5-f384-47f4-9a47-ffea7a93ffd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe87a355-3489-4c49-a322-2828def090a2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89f446c-eba2-46ae-80b4-830c2de8a728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e60bd80-744c-4a9c-904a-418e282ac21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6575918a-15a7-4fb3-a32c-ed9e511513fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "125a3b7d-6c36-48c1-b897-118b2b7a1e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b8a8da-3f00-403b-b3ad-1e3e79a33c5a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c70d3b-b112-4955-bbab-d3c624287b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e251cd-a424-41fe-9fdb-6ae72cf289f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83ea20c-d23e-408d-8070-39b8fcb2952f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "010417f9-413f-44d0-be17-f611e0dfdfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a33a60b-259b-4cd6-a5d3-c2efc0363f90",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6591ed6-0481-4eb8-88e8-a54e539cff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b1af6a-ecdb-47c4-8049-97f33acc23bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d62c0e-6767-42f6-a8a5-c0b71a3b655a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "152ae1b3-d8a6-4636-9e84-f171b8a59514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffda6dc-4807-4d40-8cd5-c4db9fa138b0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b303e1f8-c6da-4735-ac46-9bd9a0a0e334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704f6c99-52b1-4ed1-949b-b3009acd8d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179eb201-d0d0-46ea-8d7d-33bc67fc2273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b639abe8-dab1-4b33-a7bc-27fbd92651e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531a6b30-55b2-45be-b40a-c9c8a2745cd1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160b1855-d6a1-4ab7-aa41-e92626ac6043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fb576d-2c8b-4c8e-897a-cfe242d74a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebb332f-15bb-4797-ac45-55260b4cc6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "114f6cda-386f-4013-a776-d06e1b2f0e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a419a7-83de-4430-8596-cef53e62d4c7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824e09f8-e6ca-469e-a9a6-e1970c3cc05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d300f1-792f-4f51-b572-16bc949d3733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf6de2f-d2f8-4119-b581-bd4f63c788ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15e187b-e5f8-4915-9bc1-bb4e9f81489d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d214788-111d-4c46-a57e-bbc7e4ea54b1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aeba01-2df5-4ab8-b8b8-56d98b5cb5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d9321d-c628-4db1-b5d6-23701a0553de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f014a871-7a68-42cd-b403-43678ee6f3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2471f5-46a4-42e8-8a63-1245ab414029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfaf18c0-cbb2-427e-bf0b-7297c3fc4795",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882db586-5006-4d02-9b3b-59f6b010c813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe84222-88b9-4607-887b-b2bc2a357a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5065a0c9-cf5c-4193-bd64-ccb8cbfa030c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c3e22f-c81d-4847-9763-72301e69dd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84915b9-54ab-4cab-8164-1ba7efddf4ee",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e071e5d1-ceb5-404f-be0f-95d423a0d63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf5cbfd-24ea-4a73-8392-64aeedb59da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81300b5a-fd75-43aa-9afe-76a24fa45da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb92e3e3-b156-4aa0-bbaf-8ba2940eecc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089bcd77-801c-49cc-bb13-6acee536d6de",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8069729d-41aa-4e71-9db2-aa7677c8ba7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9119f912-6f06-49b1-acdc-e570dbf37872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8d3ec2-a591-4bc0-aadd-baa5d9d13cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "20a5f827-bee4-421c-9500-a6ddadeee41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e9aa22-21aa-4fd7-922b-d6801b29eb8d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3642c851-5096-412a-bff0-8767f689f156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "309b67d9-cd8f-4c83-90d3-86e79697709c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ebc737-29b6-401e-b7eb-232d2858e1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bad18db7-a233-46d2-b238-77a692c27efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67eeef36-890b-4eed-9e20-b95ba45cc835",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30ae1d3-8477-4c32-a96f-c88cee12b3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723eb216-83ea-4a9c-956e-72bf8eeb28ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80292d72-7b86-451e-8062-9000a77fab6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdce543-f82c-4f1e-8fb8-28cc0862512a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934b3d29-7d49-48f2-b601-19925c06a17c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ec4eeb-dbff-4373-ae36-729746bcb832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b5be95-22aa-4def-b96a-424dc5e178ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a990def9-84cf-4ce0-ae50-78102cb30891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5696a5d6-9de9-4f36-9fb7-3405afd6cc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69368d8-1cea-43e0-ba45-50c97dd00629",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476c8495-9933-4afe-95af-a998205f5360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1358010c-de93-47ad-ba6a-932907ce9c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d795af6a-49b8-4abd-98ad-4ce952dd701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95003535-0962-4722-b6e5-ede4f109e94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b08f86-e774-400f-a620-571d913a5d28",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eea6479-605e-4e55-91d5-e743ee876240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34f46df-50a1-4d15-a443-382327985070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0166a01d-9286-4ce0-8beb-e61e057604ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f557b9-7768-4889-b888-73a94d2f6e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8086dd3d-633a-4117-9932-e1a446748137",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4afd52-8923-45db-b712-2c01f2b85be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c435a4-472b-4a4d-90e4-0557a47d992f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db58e59-08c1-4a8b-bfa6-73b158a6d3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b885dd7b-de47-4cde-9ebe-b9e5d9ebdcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9977a561-04a8-4865-9bff-58f00d37619f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39ffc9d-20ef-4944-90b7-5f219d04c0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0942cb9c-bf01-4524-8ccd-f2504e20cb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a6c072-125a-4dc9-838d-dabad8aad74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6743043e-d7e1-4d73-9e2a-4a29ef1bd92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd737e8-78ce-4934-ad5c-2012237e1b30",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bed759e-b977-412c-aa86-64145aaa41c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b392025e-aef3-4d7d-9bfc-bd3a09400728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa813b1f-806c-4e6a-989c-c47302cbe991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dce12e6c-c557-4aff-9e60-b23999b1e2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94624886-5603-45bf-abe6-4a5ee237592c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86a3941-df6d-4802-9ad8-6c171df62cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb3c088-8676-4ec9-bbfb-82ab57c307d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720d23c2-38f5-4a17-b77c-9521877f125d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d08195c-3279-4646-86ea-0f0d2bbad8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88150d46-2307-496d-9c32-48d085d6c2a7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d74038-db1e-47fc-9a4a-802188587514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d50ac78-a0b3-4273-be1c-2accbd204971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92776e48-f174-4dc2-8953-788dad93df62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdc674f-3903-44bb-bd8a-182e1eb69867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d58aa0-2a69-4a63-ba26-f411f01ebde8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b22424-5fa5-4aaf-9de3-b471a52df445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8e7ba9-8114-4c8e-be8b-2ccd2db440f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a74049-9e45-49aa-944e-3b97ac9ce659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6991e00c-3cfc-4646-909b-2e70fb7a4b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e197cca-1ea5-4141-a27c-044760446592",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae84b5b7-8637-473c-8ded-51851c2d8b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f613ac-0568-42f4-a7e4-e43265e6109b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f56740-8cf6-4d4b-8ee6-831937ec3585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d22d01e2-57b2-4b4b-a1dc-de84f5370c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab08496-4ef8-43fc-acaa-22f4f16d2cd9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7414be46-0737-4cfa-b474-21aaaa0ec379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6943ed-f74c-4565-ac26-30a2e59a0d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d980b56-0d38-4d77-aab2-02c8d476f600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddca54be-3c02-4ef7-a335-91884692a10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21243d0e-b3c5-4db5-ab5e-eea788ef8a32",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf5c63a-db8d-4116-8532-befd75582bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354d9451-2a7e-4d2e-a2d7-ad2261cfb9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46eec9c-b10f-4411-bb71-6fa01dce03ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb571284-8ed8-40b4-b9ba-72ffe22e29a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f17af7-d74d-4724-a5a0-1cc83fd7ba09",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b172cb-5130-4b23-9f1d-61cb4865a474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf74bde-bab8-45cc-ac4a-71a424d46d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9014eaba-e482-431f-9a22-c9c82899f013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee78f5c-67c1-4508-a663-c5bd8be01af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1112379b-aa87-4ccb-9fc4-698209d7a9d4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc66390-0c91-4576-a67a-a7cb4e8dae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0e3e57-3438-462a-a4a3-c6ae47d984a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649bf0ab-3c75-437a-8a56-cc9d0bf3c89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "644b4fdd-5272-4e2c-8e78-0559d64d68b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372e11e3-9dae-4d33-b3bc-9c362e7d875c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaf6ab2-a6c2-4cbd-96c7-1177746b6111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6eb187a-e7bd-4cab-af88-fc9d530acd2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f4726e-5c46-4b90-be1e-765963f0db16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa871e70-1aec-4b16-a31d-d2cfe5a7a4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7660155b-f7d3-4e64-89e5-ccf82316efb1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c254021a-0c9c-4803-bf46-cb7994e86c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23415cdd-415f-40fe-824a-a5d6d6300d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a581a2a1-9c68-4d01-b63e-43d9b681d719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1508f695-93da-49d7-a948-8940be383d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f073ccc6-f479-4c7b-b233-1d71c1777a1f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9688e84-e444-4652-8956-42fed6cc19fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7638d03e-4602-430b-ac3a-40ea676c9998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca055dd-4b0f-4451-9c89-714af5a87143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f73a580-f63a-4de8-9fc6-0eca330cbc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db969d87-e956-4d03-8956-da129450a808",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7154118b-0c1f-40c0-83cc-0e1ae72de3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474c02d5-4594-44ab-905f-c44bf9cd8426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f2b789-7061-40d2-b564-35116d2d8b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50d4b1a7-e6d0-4685-9c5a-f59806ac15d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a17224-a178-4218-aa08-d1e6fddb0d64",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1de076-dea2-4250-9e4f-c92dc7549f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95431188-8dbb-4bd1-a258-339a35412da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e17e28-5cd5-438a-9140-b2c08fc54e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b2544d97-56d6-4a18-b56e-832574b60d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e83214-1f42-4a27-a39f-2dea4a5e6506",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1fab7a-2a9c-4770-beff-0b609422eaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825e95eb-ea67-4f7e-9034-1c526b399f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df358bf7-2438-4d45-9f95-463db506d02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5415f15-fa0f-43c8-9c04-6e5326fb6611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41224f2-b601-41e1-be11-9830c31391c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd6daec-df3e-4b68-beb2-86537f945d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ddac87-c8df-4b68-85fa-48524c1e7b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4a012e-4580-4dd4-8560-4f8de7b046da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e46e89a9-7487-4d70-86d6-7ff3fa9c1449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790b033b-61d0-453c-94b9-886aed311bb1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c63a0df-9f21-4eef-9187-94dd0a9b899a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12cd44d8-5480-47ae-a4cb-c717fa118ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c917837f-85a4-4761-8722-3b88190a2f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9588f815-5915-4aa1-878a-b3e56c0a21b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc95ff78-dd4a-4212-b38a-3b54bae1d0a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b8a112-587e-4d0d-9c1b-bc92636be9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d0d35e-eb70-49fc-9b1e-afffe197f17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b53fbd-c12b-48fc-98cc-08d4eec3788a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04ad2c48-114d-44d9-b10e-c43c4f96fe37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcb948e-8409-43bc-ba6c-d9fe67167343",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18eb3959-55a5-41ca-9450-89db82db53f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22a5596-6060-438a-a884-5df95eca8a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b48abe-8f25-4395-9f1a-09bbffc78dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5642efc5-a09a-4e8d-916e-be30797a945e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f89661-3dec-496c-ac93-d5377178fca5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e56c6b1-1e36-49db-8db7-85cbd4a133e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496a4d52-c3d3-4bbb-bc38-ae4c926ae570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e48580-b8a3-4155-8b45-63a81176500e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f02cae9d-02c8-47a9-a5c9-8eaee4449d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9185697-a632-40df-8415-351d357debae",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d98d85-0a6b-43e4-a84d-2d664a190866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d67899-03bb-4aba-a2df-7b789ecf70ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328cd899-fae6-4d11-9045-6600aa5f05ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0fcf0a-60e2-479e-a02e-a5c4b9dbe772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44d23c2-e5cc-479b-bf03-b049af8770eb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5460b05b-2823-4d4c-b34b-b96486cf572d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983a2e84-1d1b-4501-83e9-c97de63ca7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baec5ade-1bcb-4b3d-9196-6d68a5faa0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1caf4a74-71a3-4481-82f8-2d4072aaf6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b216571-19cb-47b6-97e2-c1ec1c9f6a93",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2905c2aa-074f-42d8-9472-c1c2f8f6891c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe70db5-52ac-4e63-a944-043de65bc381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa466cc-4525-453e-902b-f39587c1ac12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "622851b0-2a57-486b-acfd-147530d22c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b27d805-4393-412a-aefe-3e410b6c2069",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7704d96-5d87-4197-bf42-79a6ccbe5405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd23123-0c7e-4ba4-ba69-74c36ed6201a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0877734c-4bbb-496d-95fc-f86164542f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03dd8114-d3f6-4fc8-8feb-1ea4f8df25c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948af2cf-034b-4bd8-aac6-5a4b532bef58",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f81564a-e0ea-4202-a2c7-dba847011f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6fa45b-fbe4-4f86-98fa-57a00edcde28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a62f5-43ec-436c-8469-cc9453a97d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8364c1a9-4a12-4a80-8f5f-5b0eb41684a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e649db08-ae02-4165-9904-d3f0c8685dad",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02de3891-39f6-47a7-8dc3-4b2b1519dec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b15507-198c-4de8-8cac-34e67dd4055a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2865452c-4229-40dc-aca4-2d9780475044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "49f683e0-7f4c-4d98-af57-eddb986d3bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98da7ccd-1c06-40a1-b274-b2f97f14687d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff5499f-d00d-4e28-af04-b496cab649b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc71dffc-cb7d-43f0-8b09-96fe8b9bbc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79d77b7-3fa9-43c6-90cf-92c6c4713931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddfbd31-2230-4a88-a1f5-512b776e1bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e05035-b626-461b-b47d-bd216e44a952",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184599d3-2a93-425a-af58-c799451aba0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f91508-80c3-48d4-87f8-52ad08d911eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b81ad80-3f85-40ad-bef5-584083725775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2f6093-c8bd-4e4a-9ad6-eafbed8073ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e067f24-a97d-4582-b190-d0c866399e34",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95008e4d-bfc6-4947-ba6d-6f5a1ad9a7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda65708-babe-472a-9113-54efe9b27cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2532cefa-823c-459d-988f-207784cb4a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92a4444c-2983-4299-adfa-6d07299ca1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8913d65c-04bb-44ee-ad38-e8eae9eb2d61",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ba5213-d8ea-4551-80c7-c950bd3c3239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d3c669-fbba-4e7f-b381-e43539e7fa6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92fcff8-984b-4445-9bea-e1fa4b5cab35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87efe0e4-529d-4736-a4d5-27845a1579c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa153c3-8fbc-4fd4-b960-19bb581b9642",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec42ba3-ebb1-4c90-9e63-6e5ca8be3885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3415b622-62a2-436e-8d57-74df0aeb1974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96535cd9-7a14-4927-9cb4-a8c5b45e9f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "096f2210-0a8b-4009-a9dc-b3d538ab5be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9451a4e1-6aed-4ff0-b9eb-f600efb5f14d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbebb9b-8cce-42df-a7e9-a7f6062df531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b0393e-cbc9-4d1e-9f10-4cfba6ac7ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3946056-663b-4f5e-9e67-a014e22ff659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3df8ba38-5718-4273-9ea6-ee834b7e284a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de268e8d-1509-42b0-82de-91c364b88165",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f485cb7-a17c-4720-86ce-ba2edac9c3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b288f3f7-1808-4252-99ce-e37a6a9a07c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c36135b-215f-4929-8ce4-de2a02016248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bcb0ea2-38b6-4323-b131-02358c302e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de29c9ea-e8aa-491c-bc28-94913d4719b7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acb65b8-38c2-414f-a1aa-ba964dd8613f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ec0ce1-d1fe-43b1-8a8d-7926b91e9a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55f11b3-eecb-4fd8-a5b8-12cf86999f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15bb1176-6f44-4feb-aabf-2a918b089ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de53e4ee-cac4-4c50-963f-32af7f7f1bef",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced01cc3-3d1d-4a14-ac31-2cc2f91dc4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae41197a-74a3-473b-a9b7-abfa41577ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dde93b-0480-4b58-915b-f0d86b611751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b23a08b3-7154-448b-858e-aee185bcfa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1233a5f1-f46a-4d7b-9e9e-893e8324aa6e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd4e5ce-1384-4977-923c-71760814989a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1ea45e-1a12-4d08-9e35-4472bd95557b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6d1d95-afc3-4083-a3ac-5d6802122448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddb6cb4-72b8-46e7-a21d-1788463217a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4905aa-ab2a-4ce7-bb67-ce2c9b46eede",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71ededf-3e69-4672-b305-780e7da7d10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc344b0-fb50-427c-b703-cde7473c8a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb5ef81-875c-4312-ae91-dae481b68bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe3235a-f360-4e1e-b306-ef2133d65c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67c2f9b-8092-4038-ac3e-249fca0dd1df",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2dcb5e-0a38-46ec-9e4c-fb283b440a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8555f93-8cf8-4506-bbd8-c84e25de5f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafcdbfa-22db-4831-bfbc-f4856e96ada2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec90c56-547a-4e46-a1a8-1e433d31b1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a2169d-308d-490a-b614-7f86523ed516",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34b88e3-fae9-4f3b-882e-d52ef914bfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31024527-05aa-4bae-b6ee-cadc6e267f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2195d803-15f8-4da8-9d28-8a81c259e967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "737879e8-23fc-40dc-ac47-aa949c02c436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0bd32e-7903-4efb-b19f-b03032b8b383",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3af1fc0-c987-4d4a-9d09-e87bd91bb6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a657f8b6-b343-4c4b-acf0-a47b0d06f6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65621a2-e3c1-4c0c-9ade-8605f0492ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d16a3821-d174-4984-8070-82bb03004983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc77f17-36a4-4f9d-afa8-24e791b13db5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6965c334-5936-483e-9e9c-00229e7bf31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893ce35a-c817-4e83-9efd-b9949c90ff26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91af1453-6650-43c8-9c66-9b11901aae12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2acc06a8-4ee3-4e10-b93d-39d9f2908916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03fc19c-7c61-468e-a7ba-9d84c02df140",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8928cdb-6f00-498c-a298-df9d3cec934f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d94e3c-ea84-404c-b952-94e0df78e0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b298ecf-3025-499c-9cb9-86a950ab2a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e3bb42-435c-4e85-8291-eb9206c1e128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9964c572-7177-4942-8dc4-fdf9f0f5d1c5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3828d5-4a22-4d82-a6a6-70b352cbd12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1aa2134-4930-4a1a-b0ca-8cfd941a501a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd61963-dc65-4f98-a872-04056b718789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd19ba9e-5c89-47ac-bfe8-032f4b103f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1531d880-f131-423c-8146-8b5e90b47d72",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2df8c3-47e7-4f87-ad59-4d1dc2f6cbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7842b768-edb9-4cff-84a1-f2697526b862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321ab6b9-08fb-4e7d-a9ef-1c332687cd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "330e4d4f-86bd-4507-a51a-a8c2ca558071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39620248-a421-4bbb-bce5-0c7ec9ee7626",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b993ebaa-c337-489b-a2a5-d687dce99659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa599ac-6bf3-4ddf-babe-af2880622520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b70fde8-ee60-4004-a61f-453e641f7373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "184ab98a-f100-4423-8825-966938dbc015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c022acfc-7cfd-4aa4-a571-da2fc0308712",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedea3d0-577a-4d73-943e-c94a3c66f989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fccca43a-6a79-47d6-a660-91dd1f0c3516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24925de6-d39c-4a30-9cf0-9d3fb6575528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf278cb2-e71f-46ab-aafd-79f88acf70fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8343d8b-dbf6-404f-9c42-3a4b25db6de5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15745e6f-64d3-4c07-90ef-d98c28464409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f4bcfa-82ea-4db0-9dff-82aa2a2817f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208d2c42-4e97-4a5c-be6b-08b2349405df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6d88fe-12f6-49d9-bddc-ffdd3ab14d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e7910f-3982-405b-89fc-28b320aa77f0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65327b36-ebc1-4f1e-9d73-06d789178d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147a9a14-dca4-4977-a3d0-9bc72484d526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2ea2f8-7f86-4307-befe-2a87761c7bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2d5521-f5e9-4f4e-94f2-a2c29c31d42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1dd5b7-bf27-4bf7-975d-899ba2158c4e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcec95e2-5120-4a75-9e21-15c2b3217d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebed7d4-ed01-4e19-a3e1-63c508a2a56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b357b2dc-02ce-4c05-9300-c7b551b34208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e74fe60b-6d4a-4c1f-ac88-a1a5181670e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce47f460-d0d4-4ee7-9220-1a3e1460f955",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc2ab73-f70f-48d6-a93e-04d7a80c5688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0bf7e564-4102-4964-838c-1267186a290f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae6d9c8-14a6-4bad-a944-b41f64025c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4e248e-6f85-482e-ab78-2841d871f1b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e0e78e6b-730a-4af7-944f-cf079a971860",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3ae20d0-1263-431f-8f24-7260d7a140fc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1658e5e-1877-4fea-adff-59bf85e0887a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05e2cc2b-9698-4fa8-9084-b10d65d2a240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3583dfa-99d5-4ac6-8af8-850918efbd91",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "106fcf57-b62a-47bd-a1ba-257a99c0ff88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ff30791-0990-4e93-9aad-a1cc8d0153ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f9753a9-36db-404d-beec-8d69dcdf816f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0707c1a2-e96c-4d29-8e36-4e93c1b83a92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9a1517e-acd5-470d-91c0-663c2db40a9a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "42469371-0c5a-4032-9de0-bef4596674f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4af6e594-d9a4-425c-81be-2907f1b56134"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f702de45-ba7a-484e-bc84-fc84e9dc3736",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7120ad9-0cca-48de-9bc3-a0b0cafa58e7"
                }
              }
            ]
          },
          {
            "id": "56438356-d2d9-49ad-8e88-e09abc6308f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "593bbd06-ff68-4803-a6df-850305a333c8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "77d9b058-c01e-460b-9014-1c1848ec7e7a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229a96e4-1794-49c7-9118-3fd5148d0251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e4ce5fcd-eed5-4db7-b0b4-33a5e2680e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc054eeb-9b9e-4241-9331-9cd00a0f2da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52da3534-c8c1-4dc6-b7ce-cc28d3550839"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce8354df-bab6-4165-a178-228c6944a8af",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d23a087c-e857-4ce6-a2e4-663b0b4982c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adb2ce82-19c1-404e-a61d-64390421e61c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c64413a3-d679-4e44-a8d0-6f218cc7d27c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1db59b91-ecad-4907-affa-dc4605ff03cb"
                    }
                  }
                ]
              },
              {
                "id": "b9c186ea-4271-456b-a6b8-56e9285d6870",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80063dcc-bfe3-493b-9d4c-466e47e58135",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d640c6d1-37e4-4885-8fbb-122b8fb18355"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dfacc3e-6fe4-49e8-89c7-868c81213fa6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "847c7da0-fe2a-4e13-ac67-d50d29819922"
                    }
                  }
                ]
              },
              {
                "id": "078c83f1-3d57-44cb-a59c-0426076b40ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "581a459b-39d7-42fe-ab3d-b4d4839cf7d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1b801a8-3941-4f46-9707-cbe485f1e38f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc7d4a73-0f92-4587-952c-b7f07739f785",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "97017242-3f31-4130-bdc3-d287a7a42dab"
                    }
                  }
                ]
              },
              {
                "id": "d657b2cb-e27e-4461-aeb4-6b30043c945c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eee9cdd9-d4d9-4d07-ad51-3076e1613bc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6e5e81c-edd1-4700-a5bc-a775c73c277e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce7aa245-5f3a-4299-b163-3f6421de54db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f0fb2c6f-0eaf-46e2-8877-589b56df9d9c"
                    }
                  }
                ]
              },
              {
                "id": "bd551901-b3df-4f84-9191-239c1c68e71a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a368d1f-3946-4f45-8bfb-e65bd41d8773",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2492ea0-c1e0-4e16-bf60-c467f159e672"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03c876ee-adb1-4817-b229-e7992a70dd14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "84dde3cf-a36e-48d7-ab77-ba0a4edf4354"
                    }
                  }
                ]
              },
              {
                "id": "d7140e02-9307-4125-84ed-bde41b9e60e5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fd4420d-1d3f-4416-9d8e-8fd7b9035b84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a14525e-e3f4-4e7a-add6-cf264d873de2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88bc3c4c-d1e2-417e-91c8-212e5430bb64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53f1bb4f-3cb4-40d6-b083-e2c611182c12"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11d92834-4e04-4f3a-abda-f17631c48547",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00041a15-6e73-4ca2-becb-86ff9b69b905"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5df212bd-0e3c-4bbf-b623-5474db47224f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c1ceef8-96e0-49b4-b6cf-3750d61dbb08"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4839dbde-8a1a-48b0-9f77-3862c965aa14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7c43ee31-1f31-46f1-8c47-d31f6d757b6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e155f3c-803e-4850-a8b7-d2c8f57d5ee5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a40e57d7-b336-4511-b898-7be5a901d381"
            }
          }
        ]
      },
      {
        "id": "6329da9b-f00f-4d1c-8ffd-96cdf7d094cd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9dfe3c81-5b9b-420c-bda6-08ed1c1e8d7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10ecc99c-cc59-45ba-bcae-682b15233c5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "104f28ea-d950-47a9-bc0d-f369a072cb25",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51c366b-f933-475b-8a63-1d5e74420071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e818759d-29d1-4e08-97b6-2861a383b98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eb22f4-b532-40cc-bc78-7c6ec0361c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "89ee07d1-4a5b-45fc-a3c3-c2d855c62d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498a859e-3b94-4f8d-8e2e-0588a6446cdc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e10a9f4-d543-4df1-9dbb-58b4ee80a9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d3f98a-478c-4116-bf15-13a55c13a5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c209ef-ccfa-47cd-aaee-bffb5debf332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d30588-d907-4349-91e9-978097a90536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762a3ff0-a8e0-4b63-88c5-fb3ab079f7b3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5499ec1-6d68-45c5-99e3-8bab302ec978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91265127-9d45-4aa8-9c61-c86a975c1c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9cee62-d523-4308-b057-6259a8be7675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c58af55f-c9f9-4be9-8122-a95b171a35a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dba7a8f-67d2-48ac-bb6c-4369b675366a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82925b3-f9cb-4588-a25f-8ecf83a1913b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc66bc1-071f-4c7b-9e63-852f4a355760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91852dee-b952-4dde-a59c-43a479a6ae5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7634fd-3c43-49d1-836f-e63eb51af3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5815152e-51cb-447f-86b1-8e4fa6a31f2f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aced5b60-98d4-4f21-a225-f7f8f5e5aa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fa97e1-2ef0-4358-a399-bcb46a9e93d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16dc772-0fbd-4466-9387-06f22fa17c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "beba3921-e920-492e-bdfd-60d2afd4f823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f3cbef-97b6-4473-9b50-14ebd86d343c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1d1012-9101-408c-aa8c-dba9bdac6bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f21a11-4c7d-4372-8ff2-1a55eacf074a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8795b592-5aa6-423a-a092-317fa11b7b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ada007cc-8487-46b4-8351-5e4af632c8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe8be28-bd04-42d6-9afd-4a770e526fc2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3810e3-1125-427b-af54-b703132266b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161ed5ed-6ef3-496e-8523-a1dfb60e1af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42276020-9407-48bf-b440-73beae65cdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "238c2258-37e7-4a0a-be42-96f774a8d93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d8fd04-c8bd-4096-991d-05096d5dac64",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a86301-a6a3-4981-aeca-a7a7cd328b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3875549-28da-4500-8400-f980f4058ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57eeb36d-21d5-405d-b105-c8c6a8f7e545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2750b5-f243-412a-98d4-a35f0c3f5b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a153b04-96b1-46ed-ad83-09f1ca6f9a7a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd79220-e48f-4554-b808-d6391c72254a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d47e49e-c9b5-430f-9505-1b3ef1c7d32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7203775b-0540-4970-b29d-a08ae1364b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7e1ea5-3d17-4fc6-ab13-498285faf2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f81f6c-6cdb-4c57-b1c7-e9f57eb42760",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24559dc-d091-4136-abac-b096eee7ade6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff030c8-00cd-4b0b-b94f-0db4abb5d5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f17d89f-59cc-4c8c-b01c-6f7311491ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40bdd2da-7189-4d24-ba03-7ec729ed1bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24670bc8-7800-4858-93c4-808df63c5016",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd0b966-1d8e-4ab5-97b7-136ec1c0db0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0c4c73-398b-4853-9516-b4fdf2ddfd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357f0f0f-8be3-48d2-a5dc-3e04ede346f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6948cd-af56-4123-a4d9-1d52dc97085e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62bf1ab-ce7f-4524-80bc-14a62f0db27c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250bb3c0-0eb5-41a1-b40c-2e2615c2f887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88029038-c254-4e63-997e-aef8cb8e9ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04cf9c2-3506-40ef-b9d6-929eedf6f9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e8697e-2098-49af-89d5-9d5264bc3ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12900615-7789-4dbf-b11e-d2dfbe9d292f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1198a22a-61a8-4556-8960-8fda04c39035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409ed1d9-608f-4474-a30d-83e850f0c23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1504227-b35a-4e6c-9ccb-89a3d4cb18ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bab808e9-4c6e-44f1-910b-5803ebbbd668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121b6171-a326-4b60-9130-e09179ccf9ed",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fa9485-29c0-4394-9f33-6003e2209ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b304e9-dc80-4165-a64b-2167bcda6b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6679c27e-43a5-456c-be70-61745f143867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d61615f5-63d1-4203-8604-4ad58c745172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb2ea6a-c656-41c6-a78e-1ad0252a9f15",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b740bd-3736-4f6f-a629-e9309d706dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5f05df-4cda-402f-8dc4-eac481930cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0dedbd-af2a-41df-82b2-5d79ac0a0ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca32e7a-ad25-4285-9041-a8b37258a472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4a304d-9e5f-48fd-a820-875d75dfd1b2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e36075-c74e-40a4-925a-36f026ae033b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ee5d0f-cd1d-4439-bcbf-35cbe10f9fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d209e15-b807-4c1a-b4d8-fd34aa70c89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b7030d-23d8-43e3-bd42-279390ebf273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8c4b81-ed14-4748-8a2d-f6b8fa3e0f9a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5ec0d7-a376-4719-9fa8-979b6d6dc1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0daf509b-569d-4654-9c22-fac40636070f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2e7043-73da-4d20-95d0-884100ec3b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "220e585f-78d0-4a00-8d13-1668f81d04bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515612b3-e84b-413d-b58e-71142b2715e2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a1c5e4-1eda-4359-944b-a7b72ed36136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2200d482-0483-4190-a94a-86c51d5a55f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b9602d-0dc9-4f5b-b329-7d49d7087bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73811dc8-b31f-4d2f-9860-c1baaf72dbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807af4a8-777e-4fd6-88d6-fda9d6bfbcb9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003cc1f0-f72a-45b0-a6ed-287f76994635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fcc723-37e6-4e5f-8e9f-e12b99cf6af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763f6bc6-4193-4758-83a4-bc9d494feb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8896143c-f805-46f9-8c10-2f31e4760cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52a2ab5-f524-4d91-bfb4-d9aeb388e75b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d78dfe-55f4-477b-b2dc-f814d206e52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed0457d-7fc7-4ffc-bac1-3459eeb49b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efff8f5d-b8ec-44c9-b338-ad76708c860c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da302b74-7317-4f47-8526-a729ff4571cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c7449d-4953-4a1f-bd61-8c844e3571be",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7d1c92-2b5a-4a8e-956a-5bbe1ccb8328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd0cd0e-ed38-4b00-9c3e-7714350827b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77229cd-2e6f-4163-8cfb-51b1b26d70b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e07c1a-7929-4f87-ac48-155155bca622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ff4619-0de2-4b60-a20f-83d8f1eb7def",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b187c9-d308-4c57-bd44-b397aa2e59f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825705d3-ad02-44e6-9439-188136cb599b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c8e504-96b0-4108-8fcf-434bf2eb51d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c2a030-cc37-45fe-be01-28692167f079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c846855e-758e-4d16-9922-ea96d8eeaab6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1485290f-d6bb-4c78-b4fc-1bf1d6303760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90113b9-1642-4efd-b9bd-742cafcd22a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f735a6bf-08c2-43a7-89c7-2fcbff8008e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f75f9220-05d3-41e5-86a6-5bea00d7df18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7f223b-03fb-417a-989d-da43bf915c0f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d454e1d-5594-4bd0-aaca-1ba56d39ad57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3cbce4-bf42-49e6-9388-9aca9852c7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c042ef-8385-4533-8667-e45e69b52108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f590f4c0-b143-47ac-b6e7-d727296cfc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa23fe8-2943-49ab-bee5-96f4d1e5ae93",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce1cf71-6f56-45f2-ae51-8ca227bc928f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbc9ac4-74c6-4296-84fe-126bac9503a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de9063c-23ad-427c-9cac-24a3c262b109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de90dc65-4b6d-4b3a-a22c-72f6765fbae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212c4238-17e4-45c8-af81-1b3ad2cdc59f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb860e2-ae77-468f-89d0-12ca505773f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66807205-bce3-4d2e-8394-da06ab141a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5a9d36-1f20-4771-b798-f0d7b2a09a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4cca91-e7f2-4080-aba9-4e589753162d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d768fb6-2c6c-4c19-b34d-e23547ab08a2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2391fee1-ba4e-479a-907c-60477212a2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80efc6e-ee1d-4461-89a4-889f85796f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e471b0c2-97fe-4c1f-95f9-bd2b6e7579a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4250cc1-e632-4b1e-a034-75657fd0a20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17a24d6-81a6-43ce-a9af-e0180aa4dc09",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eed6e9-fbdd-4958-915b-27d37ae9b6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087c0d82-1c4b-42ae-b3f1-977df67de8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd672e0-57c4-45be-8120-30b0158689d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a04ff434-aa5f-4db3-ae1d-60b681eb5927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adced728-9f39-4452-bdd8-00bcbeea66f3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde625f8-a942-4a8b-a4ec-ac4cb84fe1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab405cf6-212b-40a5-8440-fd1ca8a68079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98464977-9f0c-445f-b563-41a4b885d026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d3a495-1663-4388-ab4f-f96123162f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c362c5-3a9c-4ce2-8595-ef98f106c7d8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7e6d1b-71e9-480d-987d-059ebc70f08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae232bf1-684b-4dfa-adb9-5f2b051b4fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794563f8-aef6-431c-97a5-65dd33fd5c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "238a0e36-233f-455b-ba37-9ae319588899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b46fc77-f87d-4872-8f05-9ab1f3016b63",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f419119-6586-4f69-9116-256302e40cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254a5a6d-be18-40fc-b60b-357f0dfebdd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9456a268-5f92-418c-b089-231c3f691ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08ab61ea-bd03-4be0-9513-71732a768c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8913359-8830-49f8-acb3-21c97c30bab0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f054da5-cac2-4ca9-a01a-69bf3d5c5e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0be11a-8ff1-43a4-ae09-86ae1ddfe0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d192d2e-1ff1-430e-90ca-5190d6e5316c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "833f3fe5-3775-4e1e-96e2-869e1fe0bb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f73775-cad7-4593-908a-971a6b3c8406",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbde663-1fb5-423a-bc80-6ec10f6e5e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d807511-61ed-4e4b-bf78-0a55bfe44626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17617afc-e10f-4187-93c2-0a99667e3bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7088ef7d-af1b-467d-86b6-d3ce577fe757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c965634-6fe3-4e20-8fe8-14a7966dda54",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707ac1bd-634a-45f0-8a81-142685c2fad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42d9725-f41d-4a43-86f8-224005310265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eb0cb0-74da-4e12-bd10-6c2d5ff7c13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5eff83-3320-4aa5-b416-5a9cf40f9531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399991bc-b583-4d56-872c-93cbf52bfed0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb063faf-b676-4815-92af-89a74b710a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6c94c9-53f0-43ad-9208-6e778b9bbffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c55437-7fdf-4c13-b8c8-9f63d2359124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf69021-da09-4162-87d7-904096e9e0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7838e874-2582-4bfe-93bb-71a84ba28b11",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b27a41-2ce6-4ed5-b7a7-c7406b251ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac75a866-c842-424d-a00e-c9c49034c862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffccb9c-2dd7-45ca-bf32-7e8b491ac4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98bc32ea-f3ca-485e-b4c2-ee9f5d8cd7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8823f4-0aec-4a08-aea1-932a024b3614",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c440eecc-4e58-4995-aa73-328df9942bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb124212-ffae-4712-b332-eb23be30c6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03deee0a-f26f-4a56-b5e8-e10517fce8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48392a98-f4f9-4bc3-9d7b-699cb6662dbe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e7d987ce-acc5-460f-b7d7-e2c51b765a98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "176a12cd-eea4-4e92-832e-f51a9ba0f6dd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd85d0ee-759b-4fee-8a99-3a32062988e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8339f5a6-9e09-44f3-b6ea-c2bbf0ccf78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c401afd-b6e5-426b-98a3-f2758f971467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79a48539-b191-41ce-81e0-5dbb1d8048c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5947e48-f0d7-440c-8e57-64ebe429d36a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2e63425-187d-4627-b0c0-aab360b5cba4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9defd3c6-06dd-41bf-9bbe-98b7b8e46922",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de923d5e-b8ca-4830-910c-3d0844f94750"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ca753d9-7a35-4ece-a46d-9b89d78e2a4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "885bb336-975b-4c10-8394-0dbece1df003"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "841cc28c-cc49-4cd6-a6e9-e4487a806008",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82e3dad8-b939-4525-9ed5-484471f33450"
            }
          }
        ]
      },
      {
        "id": "2fdfb6a6-97a2-4154-b9a1-b3737efdc039",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "31f21cb2-dc91-4a1f-a51c-06cd6c0bcc11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41bf7611-a2b8-479d-a795-7e059e8f0708",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "627c53f6-eee6-4d07-8a20-a22c63413699",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98386fbe-389d-4139-9b49-802b14d5dfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4673b2-9e7e-4329-b00c-d17425b5bb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5250bfc-6c58-4c28-acb2-5c973c6fc123",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcec7a4-3964-49bb-8672-95fab07d6337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d131710-b1f2-4a45-ba53-e0b7f954db31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5688b25b-9ab3-4b9c-b8ff-b8a85a400c67",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cdb05c-9dac-47d1-9b69-1b755d0c54a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c57a2f-0353-4538-aa82-468ec2fb00d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd11fa7d-e7d8-4573-8fca-6848e8d1aedc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a5f7e8-e59a-4fc5-bccc-1c53f0496a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9bdb9b3-15ed-48a6-b447-f438459994fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e10c80b-7dda-4df8-9a85-3b98c782879b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba15ccf-51d1-453f-a3c2-058e8a0076ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee4d76e-359d-465f-a30c-89266d9718f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f864b6-dbc7-4f12-837e-ff36860d760e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29b74f1-fc25-4eee-b4f5-f257d755d6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b449461c-d420-463c-bb43-879ec11ceb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e2514f-4dab-48c3-a512-b7ed2071226a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401382ee-8f9d-471e-a578-4e2ec1fdeee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1e99c3-d63b-4fa0-8c82-bd05b07c9cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17aa2d7a-58dc-4d6e-b49a-982bdbf59e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2837ed2e-76a9-401f-bbb0-c95a6f6a393f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4753972-9480-496d-9e68-eaefce89786c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b37525a-12ac-4f17-bae3-2605d471697c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f795da-a05c-49f3-9fc0-5b1d2a838296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74b43a0-ae8c-4265-a57b-2fd357bc4bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa8c483-bc40-498a-b58c-38b43571b649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33707862-7eab-4a1e-a7ca-bdb069be6ca3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da9328c-88cf-45b9-83fe-028d46bb06cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a2162e-57f4-4feb-b188-ca4b02ccccc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e388eca6-1e29-47ea-8d58-c0428633bba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c59804-d4c9-4cc2-8ae1-c04033795f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd2756b-7c95-4539-b6ec-056fe6f0d4d7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2157db-5a55-4c04-9a21-fb4b379900e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21982f5-4d4d-48a6-84ce-dbf4049a0858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98aebbdc-3af7-47f3-b660-8abf2fe2c0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1003a264-5244-48a2-9cc6-ee978d6c1ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f2a132-c251-41dd-b508-49c4001fdd81",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884ed9c6-2bfb-4541-b42f-438db606bec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52aef5a8-737a-4d6d-848a-b98d152a1659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d37407-ead2-4946-8471-79b62012eef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8532c8c0-cbb5-4783-8485-26709106500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e94434-0f3b-4fb0-872d-1aff4cb171fb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc77c60f-b36f-4156-8512-ef74e2529c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94b2749-d5f3-4415-8dbf-16b1a0117492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d5e743-fd0c-45f1-a0d1-a341fbaf6bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab69f2e-73fe-4b47-9bb7-558f3b7833be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d595e502-1b62-4452-8250-8a66976a8335",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3f705f-71c4-4498-8684-e0f17485f75c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0206945-4e7c-42c6-9671-5abda143817f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944c2635-bb45-4cd7-aee5-100e85e6fc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fa4e24-8669-4d2d-bce3-74e0d768d24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e300a952-a139-4a72-9880-50950c7ed1f8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8b05ab-c0af-43ff-8735-098ddd7b578e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96677e47-3e27-4c32-bd36-a1c0abdc9817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8729b0a-de07-4398-83aa-40115c13640e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25877b6c-b149-4526-b603-cf06d67e4e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d16635-ac28-4349-81d8-e29c273e2951",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d90efe-930d-4ed1-a840-55a552270a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba4c843e-1afd-4168-aabe-c2b5299f901c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014304c6-a899-428f-b439-a98fdf3d40de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfa93a7-0b30-4346-8525-8272fc55ee72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a63eff-bb3b-4523-8d4d-0a5844dbcf57",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda638ba-b409-4301-863a-ddbe43f61c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d555a8d4-cdf0-4f4c-a8ed-1080cf382408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2894e3-a6ed-4db6-a489-62e41ade55b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aafd5b51-0cc4-4a42-bd23-2ec072e95983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7b4e6f-30d5-4122-a850-dc1d1e2fba26",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34da472f-11d2-496d-b8b7-8015f32677a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac74946-e5cb-4f58-b2a5-fab6c953d481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f48310-3429-4c2a-a80b-8636fe37b8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12270799-c1f4-4c88-8b78-b3c4c2cdea9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a29d49-19d4-46db-988f-206fc7c7a27a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcccd4e9-1512-4e81-9849-e90085c4069b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c24800-2121-4cf6-9ef5-3a260659306a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7942553a-8dc8-4def-8401-85e760267f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ca10ed-178f-4465-b699-87af7398653d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf703d0c-5ec0-4541-b79e-c14fec4bb69b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ef826f-2eca-4cae-8b24-7da35ca67c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101e735f-f419-46bb-abdb-cad90f531415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdf99ae-02d8-4457-9179-da62eecec81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b2609b-2cd2-4aed-ad0c-5c3f5c02de3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5e7e3c-99fd-417a-8271-7d6c8966d09e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c5d382-1209-4a40-9ed0-74bdd589ab85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad766b1-95c0-47ca-8fc5-b1fec48ff516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbde7951-a472-4cde-80d8-da27e54d0501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245a782f-d006-498b-916f-2eb6de9e1c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dab84da-b05d-4fdb-921a-d1f46276810a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979a42c5-8b2b-44ba-b5d5-bf9085aacddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8f3cd1-a535-4418-9878-0920f2c8478f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cb76c7-da94-434c-9f96-39766be56833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda7c54e-b2d2-447c-9c94-0f78876f4085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e4bef3-e4c0-44ab-b8b5-aa9f9d13156a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba15a9d-0742-4d60-8ec2-f788ec7cd790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8d1a0a-6118-4693-b0ac-84d8a6588597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251ee597-1b97-47cb-9f3d-6ddbe680b88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fa92ea-11b9-4aa5-a19e-351e16047bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f52513-cc12-4767-874d-62a69ef63f62",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbb30ae-1dfb-446c-bd8f-d90d58bb3abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbeecac0-95e1-41e5-a23b-6fe8c06fd287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca07183-80f9-4a48-8c67-f24fc175a72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a9882e-ea9d-437c-aab1-d1eecf55cda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdabaf3-7f57-4e5c-b8c6-3a487142a264",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674eeb9f-30d3-4ea7-bd6a-0b5f27fe12a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c28f2c0f-a953-4a46-b54b-ac3513b3a39c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01b31db-48ec-4b47-86e6-8d494671d8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8487e441-f699-4ea5-a19f-f3ee6436a17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc5364b-31d9-42f5-8529-c5948a4d04ba",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7193058b-0c84-4306-a537-0ede2612323c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b376c04-5be9-4137-909a-1f19cd5285ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf04130-3d16-4554-b4a5-b9cd9fb37b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd82513-c76d-4413-9f32-1fe18ee12d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab83e5a0-bf7b-40cc-bf12-09b11ca67d42",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53aa0cf3-6496-4142-8fcc-aad714e4a1cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419e2bd6-0096-43f4-a37e-f24d3fe915cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b281149-3bbc-4bfd-be5e-3839e717a14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065eb20d-d317-4f59-a99c-abdefb571faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d5f9e9-9cee-42bd-b043-e02ca9ec3d73",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adb5063-b4dc-45e0-8df7-565bc9480bbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42541e17-1320-4757-acbe-bdb253dd6cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504851c9-adb4-4369-97a4-d5b53f682efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c254f38f-f76e-4ec7-9b7d-3553d9130ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db047e8-e421-4816-81a3-2eeb7156971e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9624947f-e951-491a-be1b-3d69ba626bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d863f4-aad5-434c-a249-07dabd10d8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e958781a-165f-4401-8d31-0a5604866630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5664d9ac-80f4-4a6d-9f37-319c616b46b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6769202a-d68e-4f4e-96e8-888d100e833e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3847fc6-ace3-47d5-9048-f50585d07770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12466dec-e44c-419e-bfb0-a1c9425a1dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e86acc8-e785-4435-a8bc-4f7efa3905ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce8d1f7-0017-4616-885d-e10227871ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afcc547-e184-41f2-bea0-4f3ca1e181e8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eda8a23-4875-4606-b011-e0e450f58a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdce948b-08e5-4ec5-b4fb-5b4d320f9828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bab98af-dc32-4fef-96fc-e6526b113776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbc10e9-f73e-4f8a-affd-0dd8a25fb7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ea8ebd-c868-4b8b-a7a8-5d3e130a716b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c11f409-dd59-4acd-b95a-d246033bd5a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d8cb7ee-5374-4fed-b8e7-9579b86e44c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92e9f57-3606-40e2-9ece-d46700b86630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f25084e-b03d-4c47-a2a6-e5ebb7bb7930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c249fcff-3ad3-48c8-ba8c-7acc1a0a44c8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3dce7a-7afb-4b3d-9ae5-7deb34929b24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "478ba3c0-7051-4040-b49e-918e31088a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3157aea1-4e82-49d6-bea8-c2d98f561467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517037dd-4d2f-4ba8-b012-c302721f346a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbe18a2-77bf-49c1-b3a9-10d182c404f4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53b0dee-afd1-43d5-88ad-03b247b949b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3842c548-1926-4584-8014-302189e4637d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d47ff1-645b-4df5-a586-d8251a7b9a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0415d8-586e-417f-a616-5918c406820f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7097f1c-1080-42f7-8022-5683df12dead",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e71091-ff50-44f5-8e14-ca6322645b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6d1e808-6411-490e-9250-77e731b0cdb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9648ce-d2fd-4666-a28e-41d686fbf632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1257f2b-fd5c-43aa-9fbc-4ef5c2150508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dc3428-d642-4490-967e-d3529db8bb7a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3017f44-bab3-4b2a-ab45-6be28d844144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cdda44-92cb-45e2-b53e-0701cb79619c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38ce182-7122-4fa8-a8c2-e235fc3a2b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e99f7e1-a91d-4d5d-874e-b4cc9bd6c133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881adfe4-83ef-4691-9536-2f8268512953",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac80349-2dc7-4867-b8df-9fa66dc02307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81e5cfc-df28-4cac-8940-217384d37380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7d8d8c-df03-4a37-9c12-5283915f2a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33123ee5-3920-47e0-a72c-c8b482688de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f707b99-383d-4e05-a6d2-2d07f447b162",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712e98e3-f296-4b55-b298-bb4baa6b737e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b70612-984d-4e57-a49f-64dee941767b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6517ee-4e91-4466-9996-6d9991d50c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161fd8b4-973d-4b3e-a6df-3aef287a403f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ab1cf5-0347-4b6c-abbd-9f4af5ebd3a9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c721442-ad03-4b4b-bf63-45e69aed531a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c008029e-2996-4589-b006-03a8e063808b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499f2213-ecca-4b85-acac-e2d2d46e5d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5644d5a1-2010-464e-b68e-2cf31e14decb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e2f30e-401f-40a1-a105-934c87bed9fa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db385ff-8d60-4763-be6b-4e4932053ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a497a78b-e96d-4147-a58d-8a42e85e56ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9854ed5-510f-47e7-9350-89f70403a32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82079147-1679-48e3-a700-37c0fca35c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20b8424-e5b5-461a-a0b0-ea9cc8ffa340",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb45477-8a07-4efd-98e9-37404860be8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1313c77e-bb61-45c5-8cce-a8fc5ce2c5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbf3bd6-8943-42f9-8b5f-4b84b871c686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9cc1e8-6675-4800-b92b-7b99977f4c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c36c684-4fbb-473c-9c5f-b226847ba0d2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a9dc45-8ae8-410e-b441-c5fc74ac8179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d61e1f6-c0ba-444c-a379-21eebf452c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e34d3b5-46ed-4430-a806-5dfa37242c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d571bb05-2a8f-4039-aced-34ca39521a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbc45da-97ca-47f3-a667-ea167a59ee05",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74af971d-a1a9-414b-ad1c-faf448782ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c1b2bb-78df-42f0-84d5-f904be5428dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbeab1a-9db1-4f69-8271-eec7ec37c608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8436feb7-cab1-4efe-8644-942c384e9add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8ee79e-a643-41a0-abd8-6180897f610f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afee617f-cdfe-47f7-bd7d-20c5ab7505b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db97c6a6-4b51-4513-85dd-3bd0e6b8e813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf69647-c6ec-4783-8e1b-4abc7311d43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9502e111-d846-4708-b04b-07f7db98a9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5098c6-0bb0-493a-b9c0-2538d875c482",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79df81b5-700d-4bcb-82fa-52fa9a0fef0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653ce1d9-6937-4ea7-b96e-86d3644f7e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc1db7a-98b4-4db7-9072-68802db13b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac204c45-f041-4ede-aeba-e019c29f84c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76adc197-1082-4fb2-86e9-70facd3e1663",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8877c5-9180-46db-af42-04a2d1bc73e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ea384f-d05b-46b5-856b-ce79972a8f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b928b1e-ad24-4be1-9b46-acf147295f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642dc3f5-5034-4d54-84a2-72ed951d03da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15a6831-2ad8-4b53-9e35-f5a2f37f4559",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4d2a59-959e-4e71-9a47-40b606770d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267bb1c5-baba-43b6-8cb9-a7e4139f4680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a104e5bf-b487-467a-811e-09d03f8d3e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2f3d0e-74b2-484c-a35d-9a3bf4d25956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7693ad38-648b-4b70-9840-a8e6450daf52",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d978ab17-1e38-426f-92b8-6736d837d6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4696c70-7964-4430-afb6-1f5256f0334a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360333ab-e10a-4165-b86e-294e82fb2762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d267a962-f551-4ec4-98a2-229cd3902a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0d2746-2cb8-41c3-8d92-322adc4170ed",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef497f2-b7fa-423b-ba0a-e29f71aa067e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435fc8d3-e540-4770-9ec1-88f2fbe87b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bd2524-e9cd-480c-bf43-c4d8501dfaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d3b8f5-6ac4-4b10-8945-7a003231ce23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd68573-4f3e-478c-b829-828a7af13eb9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0e1cf8-c44b-4b7c-af67-a3eed74ff299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3706c12d-1792-4e02-9776-3a7ec789734f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93874f4-b79a-4136-ac38-77c5b5ffe56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9b161f-cf62-4fee-9519-af05325c065a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28c4e25-9e00-4684-bc15-7106d79e9719",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c54905-8b77-4d10-ab70-123eb0367415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c937dc-5108-4574-a872-7b60d88bc816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61b1383-00e5-41e3-82a7-9c6827ae8e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7970b59-032a-45fc-8267-e0d36ecc6d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e7b02d-67dd-4533-bc51-7a8b56eea1f6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197e1e0c-5e63-443c-98b5-06f5493c1818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b76f29-f39a-45c4-ab48-d44025ec810b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79b2ae2-cad6-4df2-b3c1-5822b85635b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be54ba22-bb8f-4d0b-97ad-d3f72b15e011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14df9fd-132e-4c1c-b421-7b9344cb3bc6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9deeccf-a814-46fa-992e-ef6e1606b4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b868fd-c58e-48bd-a490-3efc4f6498ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8d240f-7979-484a-a41e-d196e4c49045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ca3292-c20e-474d-a2f9-ae999a3938b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86abba38-de6d-4fa1-a2db-71f76509a1c3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69ea387-76a2-4cb5-852a-dd763b09d606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f78367-6ab3-4293-981f-95a72dc2e973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3559a489-f761-41ef-8a83-6dc1f3d74cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a24ad5-4bbc-4877-a49d-74fefb0fdef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9bd8e3-354a-468d-a2fc-49b11a6831ac",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db5fe46-b37d-407a-9f7f-a41a1af35d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf525556-0cf1-4d5c-95a3-b1edbc0cd987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9c1127-47d8-48b3-b0cf-cee97fe7d9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b175eac-600f-46a0-b391-b8ec29450786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13de7c6d-2796-4b50-b8f4-bea5b16ac06b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b87b490-2acb-417f-83bd-158c8b0e86e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabf0a5b-97d4-4f07-be7c-5f81eaf9fbae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b80c96e-3c95-4fdb-8abc-2c8b7db3be1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa37eaa-15bf-4d29-880b-71f243b5c53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b18f411-2acd-411b-9abe-59c74d40cfa9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04f6749-9543-413e-9daa-bb288cf27f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c12b74f-d9ab-4284-ade1-ad50a4d252a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8460baf4-4dcd-415b-853a-c81f8969ab71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdc423c-8331-4393-9127-27b519491e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b78c1e-9a03-4b56-8fbe-3b81f926bb6d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cb8461-b185-405e-9720-8d6eb0e1d70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2eaac9-eafa-4010-ae56-35257b39fb35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07685eb4-7b8e-4b65-9dca-40d818c58fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7468e06-acd7-48e8-85e5-233b0a4669b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71004796-7944-48d0-b368-2c1a68830f4e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb14954d-9eaf-4af5-a4e3-aa5ecf77fdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba85708b-c3ad-44ba-9835-554bfd8c0624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e425ce0-ee69-4412-a49d-55bcfa440299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa98d9c-5896-482a-979f-6e092d914614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c6d7cd-70b8-43bb-a7ef-5ba3ae9e0356",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4afe79-c4ea-4f61-9920-0cde51c8d198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76609169-6099-450d-bf1c-3c08d9dce200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8f1cce-cae7-4d11-94d5-e62127468027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe17913-9607-4810-a2c7-94b8efb9b66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae7f334-3e97-4ffb-a61c-41c1421e9a0d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c92a2a-6752-4cdb-9068-05606516b7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057c4c06-967e-4a16-88b3-625a7b276d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8da042-60dd-4d94-9363-87f60e4106ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b86187c-6f91-4337-967c-109a905ecc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f91751-ed54-4d10-b78d-e9e0f9847bb0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40e516e-46e8-421f-b401-8e2ec33f3653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4294dc-f256-4cdc-8d8b-bdaa5259ad66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6941d19-59aa-4be9-818e-3b9c55742c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69592b6a-8dd2-463f-85be-88e37393e09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d144a5-73f2-42e5-b931-3ac43fd6e290",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d88d5e-a194-4856-9d13-38e01ba9f0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78cfa02-4f2b-4670-9bf9-6c7e5a998fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a956f4bf-1826-4e7e-a2f9-1226962a0699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dd29af-279e-4d83-ad21-80efa730b553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7f057c-534c-4ccd-b46a-657b64bff6b2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ed4aeb-b50d-4b44-9bb7-481bf9ed1358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7111f7-a76f-40de-8a04-de3f0a36bd88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988e1f60-5290-468b-ab49-80c22eceef19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01dd9bea-276b-4abc-b5c6-0d53216768d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372d47af-9a61-4bcf-a2f2-8817317e2578",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79085abb-20bc-41f9-ac1f-136ac1d65045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bf0675d-f21b-456c-972e-1a71c92d63b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850d6f72-8a9a-45b0-b117-ddcf5a4b4b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32eec98-5d21-4eee-a619-1f5af3f60571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc49a2ab-56b9-4e1c-b9fa-75cf75379cb1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4cc637-0fb3-4eb2-8f3e-1e899f07b221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "618a06b2-b6cf-4171-8e3e-f15db5a37fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887ec1d1-c67a-4405-ad36-13f9fe78bbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2e5a21-4c11-45cd-bbfb-901bd3765166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ce1d8e-c15f-4727-acdc-9899972022d8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6fe929-65a3-4e52-b5d6-9c8e7db2951e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2594f12-7721-4dac-b317-d0d9c1953104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664eb03a-57c6-4b22-bfce-c59024e2f959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110b4ab0-f407-4e82-b3fb-a01935503c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23819b5-60a9-41b3-af24-009bef58d073",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eae0181-3987-441a-b74f-ffff5c927099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "304b36b9-1e8e-44f2-a0a5-e75e90b7a441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85730971-cace-49a8-ac26-aeee2b7cf8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7231e409-76ec-4276-88d1-bbed29468179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a51234-4db2-4647-80a3-7ceabdec6381",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1487f854-cb2c-4349-a3fc-5b67821497ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a389500a-f6f2-448b-9131-8d343ad803d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46776ac8-416e-47fd-bdce-0efa468cb01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d713193f-7e08-4c3d-8323-d7a7f07e2971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4b1371-609c-4ada-8c4d-3397284f7717",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a518756-0654-42c0-8857-c83b0f328541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "455f3a27-4952-47d4-b3ae-b488abeb93c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4218be1-b152-4fdc-b4e7-5ed5c9434c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cead53-cc3b-46de-98a6-d635aa7b0402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8834f93a-40de-409c-93ca-ee9f7aaf0c1d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dee73f-0631-4773-9382-27cc0dc9148e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bb159a-5a7d-4875-8f87-92d8a3648559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b093f3-1db9-4c51-af13-ce012b71831d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797aa713-e15f-435b-81d6-eb7da0db7c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f28dce-0389-4245-8480-e3601051ff77",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2de23b-c5a8-4757-958a-7bec1943f264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96b6809-f136-44f6-a32b-3e29e2048aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f91b54-1a62-4c4f-8651-d891566f28aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13e20b8-377b-4048-b948-2022e5a1f5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba628f2-781a-4e30-a7dc-5728c347e046",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a390b952-2329-4f3b-bc4e-5af9d629cc33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ecd10a-d108-433c-9ebb-421e66e4f671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d347be0-a8ba-4cf2-8904-0fafad9d0379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b258d13-36d0-4c82-8a6d-ebbbecb3b808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8427d6-bcd9-478f-8a8a-a435aee81826",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec308b4f-2555-45dd-ac4a-c741b82f81ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "368e89a6-dc7a-419c-8d5b-15e3479be7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4736d6f-a672-43c3-aa9f-87b07678e86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83659860-6dda-4e22-a2e2-394e593042ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f9a31b-8875-4f07-a989-be2342f79417",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1529523a-802c-4a95-ba47-3cbffc41464a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3de6ef3-f297-4fef-b7b5-d1aee60790ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd72d6c7-7ba8-4e42-b2cf-60791df0f37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc965e7f-4b81-4d1d-bac5-e26278d3ade6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16f58ea-0974-4e83-a756-7b4f8f6712c4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23978f0a-4029-4c46-9614-6332644413e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d2e98e-5a4e-4cf9-bc82-01dd5db49cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93ca37e-7b32-4a88-a8a3-7a4d34330907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f083231-81a9-4fd0-a0e9-9ddd52b3aa86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f36bed-6ceb-4bc6-b3dd-b4a034a83614",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d898895-c8f8-4d11-9aeb-ad8e1b6f8e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fcca3fe-56a5-473c-848f-d892f27e2be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f753016-0ba8-41bc-a00b-e5048b1ddaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f781df9-3b9a-4384-be46-e46e843a99e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed1f75e-28a2-4e72-9e00-15ac43de271c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a6c8e0-f857-4a47-9281-b87a6f8d1014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4da044e-8a3f-459c-a3f8-f0f7a7eb5928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7ea49d-8a39-4a61-85bc-212440a1ea86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4fa45d-46a6-4047-aa79-22577b91fbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da170f99-f9a7-4483-a34f-725a01324836",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23f0ab7-ca43-43f8-b639-53c195dcb05d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b18377a-7e05-44b4-a27a-31d2783990b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ebe25d-9f44-4f93-b740-dc9ce7254c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62094f4b-feac-4fd3-9dc7-1efcba92b2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3a5af0-dfcd-416d-bebb-855baf142a74",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191242f5-03e0-4e63-b475-a117a258ed51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "356852cb-510e-401f-82c1-983b35de69b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e93666b-4c58-4a78-9867-7d3d514d43ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314b2b7f-da3c-476f-9d0b-f634a80f78f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cdc3ab-87f7-4d79-9d8c-73da54e1c759",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a58989-4a3e-4897-98cd-953f00e7b64e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e8bdda-9be0-4e8f-9dc2-48cf172abf10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4689eacb-b825-4425-ab5b-c61c1f871fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b46694-59eb-4af8-8427-f541638d2056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52d2582-fa04-4b0d-ab57-69d7f470434c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78c9b1e-9e8e-4248-b77d-0f3443533a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56265118-bcea-4fc6-81af-d5ee31cbbf99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa53c55-c35c-4969-8f11-bca582363a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd1310b-57c3-4feb-8db7-67f64deebc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102a6e32-bf88-4ddf-ab37-ed0c52e43d2b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ce8c72-686a-4159-b5c3-a0797ad470a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0346e014-a11f-453d-a711-dd245a1546b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345f7d90-087e-4ab4-b579-a4df21318977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fbad0d-aae3-4d18-9a2a-49250d7ffa3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136ca87f-7a29-4530-b27e-c3e5d7e69f3c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6118f3-93f5-4f4c-84aa-3dcf3ca4e019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b13b1bc7-1563-42d2-a7fe-4484edf3f520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b098d084-2a81-4efa-b586-32efc2bc0a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d5341a-8994-44f5-957d-ca04e10c4aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8997cfb-c26f-428a-b910-155307d500b7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bd7565-5b78-4a2c-8f8b-9461fb406ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da18b9a9-83ac-4190-8ebf-8e6b255eb55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6a3a84-53c4-4623-99ab-9507da22ecf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c01e22-57d4-496e-ace2-11d9927b2f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128e0cdf-0122-42d5-8543-00f2e26461c6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a1a4a1-f1be-45c8-b6d1-0fb9da0f061f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0732b82-d2ec-4ea9-826a-353b9e63aa38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ac614f-1fdf-4039-8c48-5f2ab2be9cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cfcdab-7233-47cd-8902-d4144b7f5f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a99fca-81ed-4b3f-9f53-45a2a3262d8f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94e84d9-6f98-4576-8d11-d1dcf4fd996a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "488c0cf6-b359-49d6-9a19-74b23aed8b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be18964-b7cd-4781-a39c-26ee55b929ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0893c5c-ee9a-4a77-832b-11499911f6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afef4ff5-ed62-4185-8b5a-ca14c163ba30",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33ecbb2-78af-48e8-b9c3-b33b97061985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90b22c96-b76c-40c1-a3b6-8c48a0bfa918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f819c3-29b9-40a3-98a8-c079fbe8ce0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ae539b-445b-4c30-9e40-645d592c64bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2f2552-baca-42aa-b274-c0ab06a31808",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5c03c1-f26c-4768-b39a-9bab4f138895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48e3409d-10ec-4330-ab37-0bef10e82333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76991d33-1327-4fc4-a6a3-bdf56c6db957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1fb1ae-d219-4d2b-88bc-de926588cf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c024bbc-0b54-416b-8d6f-015357755214",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4972955b-cb6e-4416-b045-51b7ad893fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83de1733-3ddd-4f9b-8f6b-d40de70fa8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cabc1a-01cb-433b-a99c-b53e279fc781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7328acde-d38c-4061-a1f1-b36348125b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91f155d-eea7-46e0-9603-f1acc6ce7f45",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d5d97d-a157-4e3c-9357-bd59e9c5e14a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95c8d8f8-6f72-41d5-bfb8-1c092045c21e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631d4a60-f3bc-4d3e-a8dd-ed4dae5d3ce4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f70410-7a00-4e19-a47c-3e1b532813f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456a1722-f34f-4d3a-9559-b71ad89afe96",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539323c0-ef8a-428f-a460-c82079ded4f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "698d0490-28c5-4bcd-8386-1ee96dec29c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d4a005-605d-4577-9097-3ff6089fdb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979f0226-36f3-4b9a-8ea8-906855317956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698977ab-cac8-4f38-baa5-92932c8b94af",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b725e815-e99a-4f8c-9033-02a6e3d2067f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f00fcb-ed97-4bee-90fc-2700c53f8b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4eedce-5957-40dd-a6a0-a5c654f82bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f61478c-2e1d-4e0d-96fc-ce7b6b775477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1980042e-3d87-4e86-876f-06ae3f728831",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb456f5b-cdc9-4174-acbe-b17fb1ae194a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bce8bfa-829d-449a-a7dd-cb8428d00d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf9e84b-662b-441a-82eb-a3f78bb5e92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6cec20-12a8-411e-bcc6-ce1b4213716f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979a83e9-1d47-4414-bd2f-1cf6f70e954a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c22109-c126-4033-9691-2c856eba6130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0f1c714-6a8f-48b8-af0a-b31d6fde18ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "139c4e24-cc55-4ffe-811c-3cb7a074fd08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c38b642-4ea0-47e4-bef3-3428cf7bdecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4cdee6-d278-4c5b-8252-3eb7f59a8a61",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d88a3ac-0bc3-40bd-bc9e-af3e9a9ff0ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca7be920-3bb3-4790-a467-190a04b15187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebf4e82-d92b-49ba-a4c1-606f07636f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4c80c2-51a4-400a-9c93-ea66e7b65e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d5268e-3174-4b29-953f-e98d52b66621",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2accae6-3112-4eeb-9966-28711771304e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f04caa5-9b5a-42dd-88e1-0c0a51410461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44e90e4-a682-43e2-804b-dd7509b3826e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774a10ea-a8fc-4a89-84d7-80d0874a0c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9f0398-254f-4ab6-8cd0-b0236dedda0f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc25bf2-5e67-4aee-b566-27cce78a463f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4b267e-7cd8-40e2-89e7-8a76b9d1421e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7866fbb5-c518-4e3c-badf-0d717b896d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0545c947-e454-4729-967f-ff42fc87c6ed"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b37dfec-8af6-40a7-9c32-a71666bad7e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d38cbd7-1c07-4a81-8359-8c65be9f9543"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20d71e58-7075-4eac-830c-b61f7b7d5a56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82e558f7-d83b-4eaf-9ac0-44b5982947f8"
                    }
                  }
                ]
              },
              {
                "id": "ebfa28fa-0f76-4d57-afab-d250ab40ce20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77471275-28da-4ecd-878d-8f6d79e79717",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae00322-ff8e-45f3-8a6d-bf16fc150a72",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "972ff797-bec9-4890-b3a7-99dc893a11c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484c6c62-6c4b-4ff1-b44e-d9e7106afdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96660382-35dd-48af-a729-6d81da7f3637"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3065cb14-7a30-42f3-87c0-51505436d87f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "849d84d9-acee-42f1-82ce-415acea7882d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9a61b3e-86f3-4d38-8e69-de56cb490700",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "716a7593-1aa3-4a54-ba8a-0e8ea57bbeee"
                    }
                  }
                ]
              },
              {
                "id": "08110250-5538-4754-b76b-7a37b118465b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5bd296d1-ed61-4bca-87d7-1b13710b5659",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c384a562-8be4-46bf-998b-8235d5023720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5a90bca8-ffb9-497b-b04f-992327ee0ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c93dd0a-5373-42cd-a1fd-e6133b0667f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf924c94-cf36-4e52-9a0d-ccc5e6fc86c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7a8ec232-a05c-46d7-94f9-a2dff7b1f0e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2632fbb-b72b-4baf-8303-19a17ff9a203",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "702e0705-31b9-4c37-ae00-baf7abcf5a09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "89955e77-53d8-484c-9d63-b5f283689642"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ccf49a4-5e91-45bb-99a2-98b19b05563e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4111e5d5-8780-4405-8c7a-fd6bf8143460"
                    }
                  }
                ]
              },
              {
                "id": "2720f366-0763-4808-b652-824d57713a48",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58387d5a-8c94-4178-88f0-9d374eb85bbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4541fc73-7699-497a-a24b-c5b6dd437dce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cab66902-9933-453f-8e36-713ef1188d49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6369aa2e-90e1-4990-adf3-76f96e0fdeaa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03db64da-f207-4f29-9bdb-753b4e898d88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5680b652-f579-4360-8c47-83968246908d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f95cfca3-fdbe-45a5-936c-11c5b8d43683",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61dbdaba-d1b0-4151-be50-368a791dd254"
            }
          }
        ]
      },
      {
        "id": "db797e8d-4f74-4812-a65b-5171b070eabe",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0c5a702f-33be-4ca3-a451-a84ae6070260",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88ad9d32-6c74-4f03-a645-3d3d69c84c31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ed499fe-341a-475d-98c5-2b98a95b4fd8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c76078a-83e2-48aa-847b-912bb21b3732",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e0c4b889-578f-49a1-9267-c9911ec50e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8479bc00-954f-46d4-9f77-7f07cc41bfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c69d9ce0-0e61-49ae-af8b-d77b028abf86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5710711c-68a3-499d-8717-31c9c4bb36de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "236846fd-4c6e-4cd2-8773-953c9b0a78a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60b82e71-de5b-4462-a546-03d8d386234c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06dc6391-71d8-4495-9ccf-8296c7942703"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b26f92b0-197d-43e7-bd5d-54bf6131cf58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "49d2105a-b67e-4855-80f5-72354752f20d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7e6290c-948c-4ced-b652-1d6c5bda2d22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e08f581d-0e3c-47e7-a1fd-2c498d513671"
            }
          }
        ]
      },
      {
        "id": "34043dea-5985-451f-b26d-f21b8fa2d38e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cfd735f9-047b-4a85-99af-1c76a88fc6b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13db2e73-0f08-4410-af8c-4df9148268e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec63b452-7625-4654-88bd-19a5cc089d53",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b70e21-30d1-4d76-a4f1-2fe468494acb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1a24fca-a97d-4623-a1e0-371159ebaadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c54548-dc33-49c7-b081-e1f4d332b879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "534230fe-1cd7-4e84-9fb7-b6c457f0c20c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5169bbd9-dfc3-428e-8067-5fb1a50f80d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17ffdef9-55fc-40da-9ba4-11f26d69838c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e1bf9ad-9c46-4f35-85a2-23e8c8bb1539",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25d37000-813e-4dd5-af03-0410d5ddceb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2122dc1-35ab-47bf-9536-395047e0a958",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5324f354-a3db-4559-864b-1fd36da7217e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "926b3fe5-412c-4af6-b14b-133182bad81e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed393e6a-19d6-43b1-9510-02e716901a83"
            }
          }
        ]
      },
      {
        "id": "fdb24339-b6a1-4bf8-8a95-fb4774c062c4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e1edc004-b630-4eac-a2a1-32efc2e7843f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "968ea7ff-ec5e-43a0-8522-2cc8f1913f44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b86665d2-721b-49e1-b9a2-26b18635d2ff",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf187302-cbce-43be-93be-e416bb8144c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dace0ddf-e0c7-4749-b632-df8f35cf1e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc96e054-8c01-4089-afb8-db5f08c7b905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "088f4e38-9c92-403e-b5bf-685e04450b74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45423b3a-5e61-47de-bc93-7d5c5b3ea990",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17bd4eda-12ae-44ee-ae5e-a487b8b5da24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7381f698-b473-465a-bd53-6cf0acd9819b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18992634-dd7d-408c-9445-23c082f0ce45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16ac59d2-556f-4d31-a928-93b8fac25483",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41e51579-9e65-41fe-93fe-4f3cfbe864b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97d98881-9b83-42c8-88f5-e46e8fca09bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32f75c77-1119-4496-b9d6-99eb535ad472"
            }
          }
        ]
      },
      {
        "id": "9f96ecb0-422d-4d1d-bbd1-afb93f9a029f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f31719c-a029-48dd-ad9d-517633b98693",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "244b2855-f554-4842-9bc7-b22263437d49",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "af7c0da2-f209-455d-87bf-a8520d78f81d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9f02552-6302-4f61-8179-76372fabc1a0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d140314-d652-433e-ba80-ee5bfcddeb2e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 131.202380952381,
      "responseMin": 7,
      "responseMax": 11551,
      "responseSd": 812.9300783072015,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716424594131,
      "completed": 1716424635342
    },
    "executions": [
      {
        "id": "c2a4b21e-39d4-410c-ae16-4d98b4ee7952",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8809abca-4f88-404e-a8b6-9c3ee3ce5770",
          "httpRequestId": "2bebd570-8266-4a48-af10-f6e22a29bde9"
        },
        "item": {
          "id": "c2a4b21e-39d4-410c-ae16-4d98b4ee7952",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "99c2ca62-c6b8-4bf0-8eed-eb1d3cd99851",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "d473c93b-0b73-4d5d-984b-aae65734a859",
        "cursor": {
          "ref": "54e59dd3-8150-4fbe-b207-82e6a481864e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2085f027-2e60-4209-90fe-38a4341e6be9"
        },
        "item": {
          "id": "d473c93b-0b73-4d5d-984b-aae65734a859",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5a186547-a93b-4fca-9f4b-73c7184ebeb5",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "dd76d451-9946-4fbf-86f9-0bdfec02d780",
        "cursor": {
          "ref": "d754ee38-4166-4bef-8aac-68f3ad948aef",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6cb2333c-4697-491c-94d6-175decd6944f"
        },
        "item": {
          "id": "dd76d451-9946-4fbf-86f9-0bdfec02d780",
          "name": "did_json"
        },
        "response": {
          "id": "dcb2b109-69f2-46a9-9d5a-c9e35a666964",
          "status": "OK",
          "code": 200,
          "responseTime": 320,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77ac8e2-8964-4542-8420-fab5dcc9962d",
        "cursor": {
          "ref": "efd8cd0c-51e7-4ebc-9c7e-636169d5dde2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d9617325-0d69-4f1a-b6f8-64fe61eb0a5f"
        },
        "item": {
          "id": "b77ac8e2-8964-4542-8420-fab5dcc9962d",
          "name": "did:invalid"
        },
        "response": {
          "id": "bbf5ecf4-e752-4c74-8310-d31884081ec2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 447,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77ac8e2-8964-4542-8420-fab5dcc9962d",
        "cursor": {
          "ref": "efd8cd0c-51e7-4ebc-9c7e-636169d5dde2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d9617325-0d69-4f1a-b6f8-64fe61eb0a5f"
        },
        "item": {
          "id": "b77ac8e2-8964-4542-8420-fab5dcc9962d",
          "name": "did:invalid"
        },
        "response": {
          "id": "bbf5ecf4-e752-4c74-8310-d31884081ec2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 447,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad94362-7c11-416a-b6e3-780e4dfd6443",
        "cursor": {
          "ref": "0dce7d31-0daa-4689-8baa-2a34d4c092c9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "13c8d031-b401-46c0-bee1-1c4d34c73177"
        },
        "item": {
          "id": "fad94362-7c11-416a-b6e3-780e4dfd6443",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "57700512-12c6-443e-a7f2-316115eba4e4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7894ef2-388f-41dd-8317-d3cfb942c16e",
        "cursor": {
          "ref": "57324e36-a584-4a71-b978-9cc032c0e26a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f7db3c1b-9305-451c-9b40-1fed8c01c343"
        },
        "item": {
          "id": "f7894ef2-388f-41dd-8317-d3cfb942c16e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "13b5c600-bec3-45f9-bf4b-1aec6a3321a7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e68fcb-f5e6-43ed-88a3-f6691eb39dcc",
        "cursor": {
          "ref": "913d78b8-b993-4791-951f-2bc5330289e8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "60b799f4-0b0b-4ee8-a909-2ddca4165de2"
        },
        "item": {
          "id": "b5e68fcb-f5e6-43ed-88a3-f6691eb39dcc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b3a8db07-6985-46d4-b380-54a34dd73230",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3704e6c-1538-45c5-b2e6-04a4347ab720",
        "cursor": {
          "ref": "4e844c3a-421e-4642-b6ec-c9e58740552c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fa3fdec0-4483-4b4d-82a0-0d5006361f20"
        },
        "item": {
          "id": "f3704e6c-1538-45c5-b2e6-04a4347ab720",
          "name": "identifiers"
        },
        "response": {
          "id": "bc2ba765-9905-44b1-b556-2ad0a2342774",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f75b25-d462-44cf-9b69-11bdc8c242d2",
        "cursor": {
          "ref": "fc74a534-07c0-48f0-abc8-84b9e2db19da",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6f1405c7-fe31-47cd-8820-8902bbf4536d"
        },
        "item": {
          "id": "b5f75b25-d462-44cf-9b69-11bdc8c242d2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "42287393-63a9-47d1-8c37-a39441352faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d170688a-7f92-4668-8802-50c162210236",
        "cursor": {
          "ref": "bcc987f3-3973-478e-9a42-35ba2e6b74d7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ac962eaa-2f5a-4f6b-866d-8b65899604d8"
        },
        "item": {
          "id": "d170688a-7f92-4668-8802-50c162210236",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "820c7e41-0651-4240-9dd0-984c7cbfef5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047edb27-750c-4e1f-9fe3-a3dc43065080",
        "cursor": {
          "ref": "b76c9fc4-157d-4192-92bd-5ed1f4f25a29",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7a2cdd32-0c78-4ec2-baad-6243326115c6"
        },
        "item": {
          "id": "047edb27-750c-4e1f-9fe3-a3dc43065080",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "36672592-69db-477e-b840-436d132a431e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9258e7e0-7b70-4044-89a8-db03a3cbb2ae",
        "cursor": {
          "ref": "6522782c-98dd-4b9f-948b-845641db36ec",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "08d2c12c-2eb3-4c3a-9cee-5da6f144b62e"
        },
        "item": {
          "id": "9258e7e0-7b70-4044-89a8-db03a3cbb2ae",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d36fbc4f-3236-4260-878f-b569760f47c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a687f4-ddb3-487c-b934-d397dfd8839f",
        "cursor": {
          "ref": "452cba7b-5ba3-4663-9b90-9796c8282262",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5eb10739-d82b-4fcd-890c-622752a23df6"
        },
        "item": {
          "id": "a7a687f4-ddb3-487c-b934-d397dfd8839f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "74566d15-0b85-43c7-8ff2-124a9ae79444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b89505e-2254-4c82-8bd9-a16d07f4660c",
        "cursor": {
          "ref": "de8bbfa1-1b52-411f-a1a9-9e0b414d2b17",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3784322f-3757-4e6f-a2c5-dba93b78984f"
        },
        "item": {
          "id": "1b89505e-2254-4c82-8bd9-a16d07f4660c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aef89f6a-6907-4c15-9815-63d4df195660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88bf523-8f9d-47bd-b574-fb9c8ed3f7c7",
        "cursor": {
          "ref": "e7072038-40e4-4c8f-a0f0-399c1e907083",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7ad885ef-5d14-47e5-b8af-3af6e4a9fd1a"
        },
        "item": {
          "id": "e88bf523-8f9d-47bd-b574-fb9c8ed3f7c7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0c051a53-913a-4e77-93d7-c0e73be5f3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f661b3-8049-47cf-a39a-6dbad4eece96",
        "cursor": {
          "ref": "272230f4-35cc-4d72-a8ee-a717b9824593",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "76e1db20-86b2-48dd-b3a7-36373bf7e939"
        },
        "item": {
          "id": "17f661b3-8049-47cf-a39a-6dbad4eece96",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "01d86364-90cc-4cb3-9e48-8899e47a61a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978c2426-68ea-4ca0-933c-785adf5c0d1f",
        "cursor": {
          "ref": "58470b89-c173-430b-a1ba-904ef4180e25",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "45b34d95-2ce5-4e3a-8d61-203baea98b5a"
        },
        "item": {
          "id": "978c2426-68ea-4ca0-933c-785adf5c0d1f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fdba50ee-8854-4f65-94ff-6401d74a979f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a481e01-e7f1-4785-9156-eaa5c10e1228",
        "cursor": {
          "ref": "bf7bb9db-58f4-40cd-9730-84887c924ba4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fc495734-8fe0-4f0d-b02d-b06e99af7535"
        },
        "item": {
          "id": "2a481e01-e7f1-4785-9156-eaa5c10e1228",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d465e9dc-309c-45be-afb9-fe9427d6d8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dddd62-be46-41f2-88dc-b84ab5adc063",
        "cursor": {
          "ref": "443e4381-a71d-46f6-843a-5ae9281c8915",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4fcae651-5597-49b0-abf8-5e92ce698d4b"
        },
        "item": {
          "id": "63dddd62-be46-41f2-88dc-b84ab5adc063",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8008215c-0f0e-4533-9d25-b1de12456bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350f4421-2e04-4509-9f3b-77223e41b83a",
        "cursor": {
          "ref": "40a0cc20-b469-44d9-aa30-717f2dc6096b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a28ca66e-80df-494b-b9e1-85fa33a8cd59"
        },
        "item": {
          "id": "350f4421-2e04-4509-9f3b-77223e41b83a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "81725495-5f33-421c-be8f-d4c5eac41976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b568666-920b-4518-939c-f56372932147",
        "cursor": {
          "ref": "b7b535e5-c44d-4409-ac87-e6fa48e92125",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "48a3abea-8478-4b7f-93e3-1d8edc67bec7"
        },
        "item": {
          "id": "6b568666-920b-4518-939c-f56372932147",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "982d3bc1-cc25-4dd9-bff1-20636e3e609f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3eadc2-7a8e-4194-8694-9297f93ddeec",
        "cursor": {
          "ref": "dc0b86d9-db7f-4a94-aea1-0bff067c3695",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "08067c8f-0cad-4449-bb68-9f153a870f74"
        },
        "item": {
          "id": "9c3eadc2-7a8e-4194-8694-9297f93ddeec",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "69cf750d-9cd8-4a20-8dee-68fdbf0b3c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579179f6-24a5-4caf-b236-1cca29deda74",
        "cursor": {
          "ref": "4b912978-a48a-4681-898c-af442c2c12e7",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "29fbc726-6333-474d-a74d-cc1848c7dbc8"
        },
        "item": {
          "id": "579179f6-24a5-4caf-b236-1cca29deda74",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1795641d-c503-4be4-af5c-e9f4a19fda56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f2fd25-263e-4df9-a384-b760d9155f7d",
        "cursor": {
          "ref": "36a5501d-92c3-4b3a-a356-ee5b2e8aa907",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ad155ab8-4821-4255-9f1a-cdff8c85b6d9"
        },
        "item": {
          "id": "b7f2fd25-263e-4df9-a384-b760d9155f7d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e12bc575-a5c3-4cbe-b23a-0b0908ea08db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bfd017-8523-4b31-aeb5-c87a30d8d81e",
        "cursor": {
          "ref": "273ac8d3-24fe-43e0-ac52-fc5130bfa5bc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1b1d20c7-462a-43b8-9af3-563042fac23b"
        },
        "item": {
          "id": "36bfd017-8523-4b31-aeb5-c87a30d8d81e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "300c44d0-f2af-4fe2-b7e7-b5450c8e838a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dd3924-a753-401b-b223-6d92b43c806d",
        "cursor": {
          "ref": "22bc0b85-5a16-49cc-8b23-ac1cf55329ce",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1710d6a8-d884-4180-acea-d77de972cb42"
        },
        "item": {
          "id": "d1dd3924-a753-401b-b223-6d92b43c806d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2ba4c45a-d585-4c52-8d10-6d8e8ba69c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856b71fa-d779-4d42-9ecf-780db7766847",
        "cursor": {
          "ref": "19b34f32-f20f-4109-8b81-430580b67076",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3298c77e-8af1-4220-9fe7-70ac1c337078"
        },
        "item": {
          "id": "856b71fa-d779-4d42-9ecf-780db7766847",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "660144e5-cffd-4fdb-accf-06e6202e1c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d080d14e-ec29-456e-bb2d-c99edb685f74",
        "cursor": {
          "ref": "38e67d22-f399-421c-89fa-6cf6958c6e69",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "54ac3225-aa6e-4c22-b414-2e4a26582d98"
        },
        "item": {
          "id": "d080d14e-ec29-456e-bb2d-c99edb685f74",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1d7b3720-c5ba-4bbb-ade9-6f94b66a48ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8435f146-49f3-45d0-b5dc-e679c649a4eb",
        "cursor": {
          "ref": "d6ecac9d-af98-49c9-93d1-62856e4bb574",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "799b83da-f57d-44f4-aee9-118aebb34792"
        },
        "item": {
          "id": "8435f146-49f3-45d0-b5dc-e679c649a4eb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "eebfed97-5d9a-413f-8c23-8293fe261c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b237ed7-b5d8-4a64-9998-d57be237265c",
        "cursor": {
          "ref": "bb9ee142-a061-488f-b7d1-72d5ad176ce2",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d0bb842e-68bb-4c96-aaea-33677602e799"
        },
        "item": {
          "id": "8b237ed7-b5d8-4a64-9998-d57be237265c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f0941697-b77f-49e1-a6b6-a9eeddaaec4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21245691-abd6-44a5-b2e0-d535db95a4fc",
        "cursor": {
          "ref": "e8a8ae7e-fba5-46a5-82d1-0798d6b6f08f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "50b9ef03-db62-419c-a0be-7e8210c2544c"
        },
        "item": {
          "id": "21245691-abd6-44a5-b2e0-d535db95a4fc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4e5b85ff-714e-4e8a-8870-c03df55f9a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5838c9f4-0ab5-42c6-9e71-6f25155360a0",
        "cursor": {
          "ref": "a24f3206-4098-4808-9631-c458d4147063",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fdd85ff9-83b9-4b14-bc36-69d4ffe353f4"
        },
        "item": {
          "id": "5838c9f4-0ab5-42c6-9e71-6f25155360a0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6c64fbc2-ae46-4fc9-96b4-7c9156f5b906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057b88f8-9c5a-4631-8062-98f3cbbce9cb",
        "cursor": {
          "ref": "3903e2f3-8ac2-420f-acfa-49697d9c2554",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f21d4bec-eaab-43e2-b6ab-bb6b6fe72815"
        },
        "item": {
          "id": "057b88f8-9c5a-4631-8062-98f3cbbce9cb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "379ca5fa-cb6f-487a-9c45-ded27bf409e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe87a355-3489-4c49-a322-2828def090a2",
        "cursor": {
          "ref": "fa11f4a8-0698-44d4-bf4f-54f446dfbc0c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "472a6726-3e9b-4c6c-8faf-5cbfa4bcf3e7"
        },
        "item": {
          "id": "fe87a355-3489-4c49-a322-2828def090a2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5299a16f-4d02-4b98-9e26-beaaa9a3b09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b8a8da-3f00-403b-b3ad-1e3e79a33c5a",
        "cursor": {
          "ref": "af706730-90da-4556-94b5-fb64646af77b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "77932518-2c9a-40f4-89b5-65705911faa2"
        },
        "item": {
          "id": "a4b8a8da-3f00-403b-b3ad-1e3e79a33c5a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2657d807-00c9-43fc-8301-af701110aae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a33a60b-259b-4cd6-a5d3-c2efc0363f90",
        "cursor": {
          "ref": "78546a98-51b7-4b0d-876a-fc356375defa",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "037dfb4c-b10f-456d-9482-dde88f10e12a"
        },
        "item": {
          "id": "1a33a60b-259b-4cd6-a5d3-c2efc0363f90",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a27435a6-f0c5-4939-b0f7-8b00a1428a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffda6dc-4807-4d40-8cd5-c4db9fa138b0",
        "cursor": {
          "ref": "295593a6-ce41-4f41-86cb-86d2ed85109c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "18482049-54dc-449c-84e2-cb7fe2f22bb7"
        },
        "item": {
          "id": "8ffda6dc-4807-4d40-8cd5-c4db9fa138b0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5524c008-3821-4627-b4e6-29e13f04ac02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531a6b30-55b2-45be-b40a-c9c8a2745cd1",
        "cursor": {
          "ref": "46eafec3-d665-45b0-996e-175a84153bc7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "867b13cb-3f1c-4a75-94b9-08effb3c49a5"
        },
        "item": {
          "id": "531a6b30-55b2-45be-b40a-c9c8a2745cd1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d106ca6f-3fb3-4212-9bcf-e5565e45f33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a419a7-83de-4430-8596-cef53e62d4c7",
        "cursor": {
          "ref": "5234bae5-8923-4478-9d7e-2a4bcec4b6a7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6d22dcdf-b69c-44a0-8b37-3c4d2d6a6ba9"
        },
        "item": {
          "id": "90a419a7-83de-4430-8596-cef53e62d4c7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2e220158-ccaa-444d-8a6d-d62d94201bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d214788-111d-4c46-a57e-bbc7e4ea54b1",
        "cursor": {
          "ref": "92df7442-8adf-473e-9bd9-218bf7ffc1d0",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a1b7392f-16a5-4431-b808-787cb246418b"
        },
        "item": {
          "id": "5d214788-111d-4c46-a57e-bbc7e4ea54b1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0c5e5dd6-2382-405a-b9f5-452381cd206a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfaf18c0-cbb2-427e-bf0b-7297c3fc4795",
        "cursor": {
          "ref": "951b38d7-53a5-4f09-8712-a76a2e2ebc97",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5682a5cf-fb33-4b04-abed-824f26b90536"
        },
        "item": {
          "id": "cfaf18c0-cbb2-427e-bf0b-7297c3fc4795",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "430f58c8-32cd-4657-9d73-93f8456b0fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84915b9-54ab-4cab-8164-1ba7efddf4ee",
        "cursor": {
          "ref": "82feb1c1-3296-4825-9758-1634cfed5850",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5a513771-594f-4abd-b675-95935cdc1d7d"
        },
        "item": {
          "id": "a84915b9-54ab-4cab-8164-1ba7efddf4ee",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ef8d7775-eeb2-4c39-8839-2321a31684b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089bcd77-801c-49cc-bb13-6acee536d6de",
        "cursor": {
          "ref": "cc3d41b3-c8c5-4d84-a53b-f58796e30e17",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1739a3d9-a106-4b58-a0e3-c5f36c5f79b0"
        },
        "item": {
          "id": "089bcd77-801c-49cc-bb13-6acee536d6de",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "650aa407-8eb4-4a2f-aaae-a409771bcc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e9aa22-21aa-4fd7-922b-d6801b29eb8d",
        "cursor": {
          "ref": "b7d26f33-3d4a-4dec-b56c-e266579a4166",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c63ed460-61de-46dc-a871-4d81aea0ac5f"
        },
        "item": {
          "id": "10e9aa22-21aa-4fd7-922b-d6801b29eb8d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "346ac234-c8bf-431f-8860-c24e322c2e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67eeef36-890b-4eed-9e20-b95ba45cc835",
        "cursor": {
          "ref": "15380068-b0af-43a6-a91f-0fdf4e15482c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a74e4104-d253-46e1-b7c6-926a7f6abecb"
        },
        "item": {
          "id": "67eeef36-890b-4eed-9e20-b95ba45cc835",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5d50dace-b134-4906-8ff7-43bdaee8046b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934b3d29-7d49-48f2-b601-19925c06a17c",
        "cursor": {
          "ref": "c6abe28a-3dba-4685-868a-831f5c879d46",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0bbc12b0-b39e-481d-9c4a-a316e50b3c06"
        },
        "item": {
          "id": "934b3d29-7d49-48f2-b601-19925c06a17c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fcc01e8d-eb3d-412c-9357-526b6a879184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69368d8-1cea-43e0-ba45-50c97dd00629",
        "cursor": {
          "ref": "ad3e200c-5af4-4660-b9bb-18a9ccf9cf2b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2b0ac93d-83ac-407f-a7a1-08902c46ba71"
        },
        "item": {
          "id": "e69368d8-1cea-43e0-ba45-50c97dd00629",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "72862f9e-de2a-4f58-99da-48def780b2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b08f86-e774-400f-a620-571d913a5d28",
        "cursor": {
          "ref": "fa74d35c-fa3f-4235-9650-6796ed0f8875",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8030d3df-2d1e-4fc8-8baf-50ae02eced36"
        },
        "item": {
          "id": "23b08f86-e774-400f-a620-571d913a5d28",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c38dc2d5-8cc9-4b32-8bdb-b5734c8e0acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8086dd3d-633a-4117-9932-e1a446748137",
        "cursor": {
          "ref": "9f3bc29c-fe8a-4a3a-8c89-fc7d55b368db",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5f5e3dbc-30c2-4697-9e80-ac6b83f34af9"
        },
        "item": {
          "id": "8086dd3d-633a-4117-9932-e1a446748137",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "73f8debe-6afe-4cca-866f-6a8b78c403d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9977a561-04a8-4865-9bff-58f00d37619f",
        "cursor": {
          "ref": "18afbdec-b408-4d5c-8c85-9c90a9be22ed",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c892dba7-9fb9-437e-b5e5-5b2fa1982967"
        },
        "item": {
          "id": "9977a561-04a8-4865-9bff-58f00d37619f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f7f35cd0-35b0-420d-ad38-35af546c628f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd737e8-78ce-4934-ad5c-2012237e1b30",
        "cursor": {
          "ref": "2f79cc06-4ac5-4051-9981-2e37737e524f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56fe1138-9558-4974-93b2-a6c22d32b6b6"
        },
        "item": {
          "id": "bdd737e8-78ce-4934-ad5c-2012237e1b30",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c70d21e9-8a60-4c90-b1fb-55138cabbf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94624886-5603-45bf-abe6-4a5ee237592c",
        "cursor": {
          "ref": "e921cf6d-b046-489c-b840-ac71f6979c4a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d4178a62-87cd-40d4-a518-e3e83a3dfd65"
        },
        "item": {
          "id": "94624886-5603-45bf-abe6-4a5ee237592c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c41cb4ca-9bce-4c1c-a35b-bff069918742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88150d46-2307-496d-9c32-48d085d6c2a7",
        "cursor": {
          "ref": "74048ab3-f332-47ba-b283-3b9c0ad8fb04",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "112c3830-548c-46cc-bfa5-adf9f4746d99"
        },
        "item": {
          "id": "88150d46-2307-496d-9c32-48d085d6c2a7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b6e5c3a5-44d8-409c-9633-57d1aa7ea7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d58aa0-2a69-4a63-ba26-f411f01ebde8",
        "cursor": {
          "ref": "6b0a59c4-a392-481d-a6a1-86c90f8ca237",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d4439162-1201-40cc-93c6-de2b5fd8d5f2"
        },
        "item": {
          "id": "44d58aa0-2a69-4a63-ba26-f411f01ebde8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e01c4819-dd0f-429e-b08b-1d3bae0037be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e197cca-1ea5-4141-a27c-044760446592",
        "cursor": {
          "ref": "965a95b7-7aa9-479c-a358-41c80ca235d7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d4c790bb-0b28-491f-a36a-251b02c71d31"
        },
        "item": {
          "id": "1e197cca-1ea5-4141-a27c-044760446592",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "99de95cd-614f-4bb0-905d-a19d2d5b36ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab08496-4ef8-43fc-acaa-22f4f16d2cd9",
        "cursor": {
          "ref": "976519bc-a337-401a-81c0-c9b084555d80",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e7a0ff6e-c281-47a7-ac4a-33f1a5b39eba"
        },
        "item": {
          "id": "1ab08496-4ef8-43fc-acaa-22f4f16d2cd9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0fcbe642-4d8d-4228-87ae-169c46000cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21243d0e-b3c5-4db5-ab5e-eea788ef8a32",
        "cursor": {
          "ref": "c639c619-fb66-4e84-873c-89d3ad9dc94e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "42d096fc-fb43-4aae-adc3-041a6f6faaad"
        },
        "item": {
          "id": "21243d0e-b3c5-4db5-ab5e-eea788ef8a32",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ae649b6c-4089-4514-95f0-5e09b7d8db90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f17af7-d74d-4724-a5a0-1cc83fd7ba09",
        "cursor": {
          "ref": "7e5daacd-944b-4540-b6c6-1ea198b4240e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3ccbe5f4-d028-4b39-ad0f-bcf4e1e8a300"
        },
        "item": {
          "id": "28f17af7-d74d-4724-a5a0-1cc83fd7ba09",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cd75e98d-279e-4a5e-b3d8-05a5c7d4adbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1112379b-aa87-4ccb-9fc4-698209d7a9d4",
        "cursor": {
          "ref": "55d04348-74da-4a4c-b7f3-0efcca30427c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bf878d1e-e6ed-42a5-8067-a0e76a0abb9b"
        },
        "item": {
          "id": "1112379b-aa87-4ccb-9fc4-698209d7a9d4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "513ac4e3-bda6-4411-9212-17187ebaa81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372e11e3-9dae-4d33-b3bc-9c362e7d875c",
        "cursor": {
          "ref": "5273dd8a-9363-4cd2-b039-f34cbc80d36b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5d95d7df-fdd2-489d-b010-1d3cd66491f2"
        },
        "item": {
          "id": "372e11e3-9dae-4d33-b3bc-9c362e7d875c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "94c17ca9-0a65-4058-a91e-28088ba99640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7660155b-f7d3-4e64-89e5-ccf82316efb1",
        "cursor": {
          "ref": "5ba6f125-6aff-4bd7-906a-409f292fcb12",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f295cd0b-e1ab-48a4-a34e-9536d5b40dae"
        },
        "item": {
          "id": "7660155b-f7d3-4e64-89e5-ccf82316efb1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9c85d8ec-09e7-403d-9e2b-4c6772181a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f073ccc6-f479-4c7b-b233-1d71c1777a1f",
        "cursor": {
          "ref": "8a17a2e5-d8e6-43e9-82a8-831c17a3caa7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5ae627a9-5045-48e6-921a-a8ca83055aea"
        },
        "item": {
          "id": "f073ccc6-f479-4c7b-b233-1d71c1777a1f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "792040b3-64fd-4493-84b0-1274baa83453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db969d87-e956-4d03-8956-da129450a808",
        "cursor": {
          "ref": "384695f5-332f-4ac5-a643-fd440e2e29f3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a52addac-69b9-43ee-835d-9bb3487590ec"
        },
        "item": {
          "id": "db969d87-e956-4d03-8956-da129450a808",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f24ec11a-99cd-46fa-a7d4-e1565b4cf5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a17224-a178-4218-aa08-d1e6fddb0d64",
        "cursor": {
          "ref": "9af0ccc3-56e6-4450-ac35-3f6b3c2ef0b0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "22bf6d51-9ba7-4306-9b7d-73dd1ae1be68"
        },
        "item": {
          "id": "95a17224-a178-4218-aa08-d1e6fddb0d64",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "65dd3513-a7cf-4f9f-9d7a-fe929b89b8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e83214-1f42-4a27-a39f-2dea4a5e6506",
        "cursor": {
          "ref": "4465fe38-695a-4ead-a4bb-8eee5ed8d0ea",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9e0ec2e1-089e-427b-a5e2-d6fe374eb3fe"
        },
        "item": {
          "id": "50e83214-1f42-4a27-a39f-2dea4a5e6506",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "69b1f0ab-1706-4a8a-9a24-114ec31c6297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41224f2-b601-41e1-be11-9830c31391c4",
        "cursor": {
          "ref": "80ac8b39-7e42-4e16-ab5b-249f076cd840",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "201a656a-309e-4df5-a625-b549bafac152"
        },
        "item": {
          "id": "a41224f2-b601-41e1-be11-9830c31391c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0d398492-c807-4b52-a358-d6d6718a11b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790b033b-61d0-453c-94b9-886aed311bb1",
        "cursor": {
          "ref": "f6e9ff30-d7b2-4459-a743-ed83978bc503",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "55084bef-404d-4d39-9e5b-9d344da0f4e2"
        },
        "item": {
          "id": "790b033b-61d0-453c-94b9-886aed311bb1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "352be5b4-d156-4814-845f-c73c7df6e6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc95ff78-dd4a-4212-b38a-3b54bae1d0a2",
        "cursor": {
          "ref": "568cd21b-3bc4-41a7-b296-a2f7f6517ab4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b2e5fccc-60d4-4ba6-a621-de314326335c"
        },
        "item": {
          "id": "dc95ff78-dd4a-4212-b38a-3b54bae1d0a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d6dba2c1-5444-4bda-b961-96b05c0bffd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcb948e-8409-43bc-ba6c-d9fe67167343",
        "cursor": {
          "ref": "f3341d69-4564-4452-b9ac-0d2207f54997",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c6746d6e-836f-4c3b-83eb-d4b1a5837b8a"
        },
        "item": {
          "id": "1dcb948e-8409-43bc-ba6c-d9fe67167343",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "15c93372-48de-4ae2-9341-5c4ab7f763c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f89661-3dec-496c-ac93-d5377178fca5",
        "cursor": {
          "ref": "5f9935fb-6302-4a54-9c21-7bfc2d83ed09",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0181331f-1aea-4b1a-9de2-84b2c9bd4dfd"
        },
        "item": {
          "id": "e0f89661-3dec-496c-ac93-d5377178fca5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "387db8c5-f112-4510-96a6-90085251f1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9185697-a632-40df-8415-351d357debae",
        "cursor": {
          "ref": "c459b606-e85b-4c00-91aa-08dedeb129e9",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "df8ffda8-a558-42e6-91fb-b020a92025fc"
        },
        "item": {
          "id": "f9185697-a632-40df-8415-351d357debae",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d8ff7ff3-4a41-4e1d-9f55-7a8b8a38ef4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44d23c2-e5cc-479b-bf03-b049af8770eb",
        "cursor": {
          "ref": "a6ee9a75-3fc4-4924-a9b4-8dbb0060ae2f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6c4fee3a-9da0-4155-8c4a-f00571275258"
        },
        "item": {
          "id": "e44d23c2-e5cc-479b-bf03-b049af8770eb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c444f640-a624-451f-bab3-f3de8072825c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b216571-19cb-47b6-97e2-c1ec1c9f6a93",
        "cursor": {
          "ref": "d901623c-1920-4634-a9b1-52f7dee73427",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0f373cd7-cdaa-4d8f-974c-33f83d4abef4"
        },
        "item": {
          "id": "7b216571-19cb-47b6-97e2-c1ec1c9f6a93",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e80c97d0-c5d3-4d75-a3db-03675673a752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b27d805-4393-412a-aefe-3e410b6c2069",
        "cursor": {
          "ref": "008bded9-006d-42cb-810b-20c3da3561fb",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "62e0acc7-f098-4d2c-b3d2-84782a70d584"
        },
        "item": {
          "id": "9b27d805-4393-412a-aefe-3e410b6c2069",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ee860868-ee4b-4807-a3dc-ee6bbbd42e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948af2cf-034b-4bd8-aac6-5a4b532bef58",
        "cursor": {
          "ref": "080c5e14-1d05-4df0-8609-be124d6c2a24",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "04cf6197-af88-4e92-b58c-82f81211fdbe"
        },
        "item": {
          "id": "948af2cf-034b-4bd8-aac6-5a4b532bef58",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ae779071-227f-4fdd-b04a-83ca2be0c936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e649db08-ae02-4165-9904-d3f0c8685dad",
        "cursor": {
          "ref": "d00276b6-9f23-4f83-b221-d07e7707c26c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ea4bf6e7-5faf-41cb-9db0-44b2e2a1d631"
        },
        "item": {
          "id": "e649db08-ae02-4165-9904-d3f0c8685dad",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "95b336df-ec21-4e08-9acf-60bb2de6e837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98da7ccd-1c06-40a1-b274-b2f97f14687d",
        "cursor": {
          "ref": "746bbce9-3c63-4b19-adf8-2f5d8d1e485f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3f0176d3-8144-4f68-a891-6c37f76af0fb"
        },
        "item": {
          "id": "98da7ccd-1c06-40a1-b274-b2f97f14687d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dedec780-ecab-4c9c-98dd-7f2743bbf78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e05035-b626-461b-b47d-bd216e44a952",
        "cursor": {
          "ref": "55d9a188-d05a-491e-8c69-a506cd924d86",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fff015fc-2486-4f38-8c8a-0510a8c6f5f0"
        },
        "item": {
          "id": "24e05035-b626-461b-b47d-bd216e44a952",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "97ce90e7-e1cd-4474-b613-417baeeb2f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e067f24-a97d-4582-b190-d0c866399e34",
        "cursor": {
          "ref": "0cbe4d30-b6fc-4c6a-a0c4-16044a37eaa8",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a5b7b56e-1083-4e39-8d3a-1996e1967d17"
        },
        "item": {
          "id": "2e067f24-a97d-4582-b190-d0c866399e34",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5e11c1cb-68c3-4c72-a6c0-c7d558a7964b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8913d65c-04bb-44ee-ad38-e8eae9eb2d61",
        "cursor": {
          "ref": "d9a0922a-54ff-4f27-b6f3-d94df4aa4468",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ea766cde-0ff6-4954-bcca-0c223f8e87b8"
        },
        "item": {
          "id": "8913d65c-04bb-44ee-ad38-e8eae9eb2d61",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "56e5f14a-b5be-465b-8442-dd7b078a82c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa153c3-8fbc-4fd4-b960-19bb581b9642",
        "cursor": {
          "ref": "1442c2d4-f972-455c-92bb-091ca6e24b5b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ea6870f2-7f44-4b73-8908-701cca4a2dc6"
        },
        "item": {
          "id": "3fa153c3-8fbc-4fd4-b960-19bb581b9642",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "13a2b9f7-e74f-4556-9694-f04acf0c6156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9451a4e1-6aed-4ff0-b9eb-f600efb5f14d",
        "cursor": {
          "ref": "1d931603-17b8-481a-81f7-8ecaec136928",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c0a9de9b-bd2d-4375-b26e-e421db254649"
        },
        "item": {
          "id": "9451a4e1-6aed-4ff0-b9eb-f600efb5f14d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8a15b890-8dd4-4a67-8959-7309272c7eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de268e8d-1509-42b0-82de-91c364b88165",
        "cursor": {
          "ref": "c52452c3-55ab-4f83-938c-775adbae4de7",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4d5c75a3-7b1d-4f5c-b18a-e664059ca748"
        },
        "item": {
          "id": "de268e8d-1509-42b0-82de-91c364b88165",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "01aeffc6-322b-45c0-a328-f72030187d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de29c9ea-e8aa-491c-bc28-94913d4719b7",
        "cursor": {
          "ref": "6ce1b9db-93a9-436a-9ebe-cac86af8b8ec",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "21c148d8-2e1e-41f2-9bdb-34dde2dc8e9e"
        },
        "item": {
          "id": "de29c9ea-e8aa-491c-bc28-94913d4719b7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0f4e6f45-39d1-4d26-9010-5b7d84fcc6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de53e4ee-cac4-4c50-963f-32af7f7f1bef",
        "cursor": {
          "ref": "a4ffdc93-c88e-4366-a843-a96a1279a2ca",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3b105406-540d-4917-9f1a-4b901e8b8a07"
        },
        "item": {
          "id": "de53e4ee-cac4-4c50-963f-32af7f7f1bef",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "05ece23b-a6c3-4c31-aefb-be5a2b912c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1233a5f1-f46a-4d7b-9e9e-893e8324aa6e",
        "cursor": {
          "ref": "30c5a99d-7be7-41f4-b4c6-b3ad16a90672",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4f23b956-717a-4cad-be7c-96bbb26e019b"
        },
        "item": {
          "id": "1233a5f1-f46a-4d7b-9e9e-893e8324aa6e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "217a7272-0741-46ad-a231-2df2f7073752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4905aa-ab2a-4ce7-bb67-ce2c9b46eede",
        "cursor": {
          "ref": "c84e85fc-7314-40ea-a981-290c41e343ff",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "835bc9bf-d67d-4fde-90c0-3df6fa1cbe54"
        },
        "item": {
          "id": "2e4905aa-ab2a-4ce7-bb67-ce2c9b46eede",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b5db5716-2c56-4b79-a725-c6968bd1dfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67c2f9b-8092-4038-ac3e-249fca0dd1df",
        "cursor": {
          "ref": "63e895f2-0441-44cc-b32e-a2bba43a671a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d270bb5d-332f-4fa0-9dab-b80c8446da4d"
        },
        "item": {
          "id": "e67c2f9b-8092-4038-ac3e-249fca0dd1df",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4c2660c8-d442-4eac-95a2-633412ef2571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a2169d-308d-490a-b614-7f86523ed516",
        "cursor": {
          "ref": "1d60e2ae-047d-45a7-ac68-cc821f94edf1",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2c0d0797-fb39-4984-8070-dce0a8139f3d"
        },
        "item": {
          "id": "39a2169d-308d-490a-b614-7f86523ed516",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "73a7cd89-9169-4625-9140-a61c3858202d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0bd32e-7903-4efb-b19f-b03032b8b383",
        "cursor": {
          "ref": "8d729dad-0f89-49b7-93d7-a9aa7466a73e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6e54d231-6eff-4826-9cf9-bfec5dba16d6"
        },
        "item": {
          "id": "2c0bd32e-7903-4efb-b19f-b03032b8b383",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "22ab6e8d-14e2-439a-920b-7ee1de26730f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc77f17-36a4-4f9d-afa8-24e791b13db5",
        "cursor": {
          "ref": "7c9db48b-e256-4f8a-bfce-0c087183d9f0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5b5a38ae-9928-486c-bae6-b1c9a02880ef"
        },
        "item": {
          "id": "0dc77f17-36a4-4f9d-afa8-24e791b13db5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c17dd1c5-6b72-48ea-87c6-3574c02670e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03fc19c-7c61-468e-a7ba-9d84c02df140",
        "cursor": {
          "ref": "107eb377-56e4-42df-8911-a14f7114a879",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "32fbea75-0381-44df-b8fb-de32b1597b7d"
        },
        "item": {
          "id": "e03fc19c-7c61-468e-a7ba-9d84c02df140",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "46ef01a6-74dc-4b72-919c-c64e0ecc342b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9964c572-7177-4942-8dc4-fdf9f0f5d1c5",
        "cursor": {
          "ref": "1d81a361-7ae4-4cb1-9172-7b15bffc6e0f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a1d9df3f-b861-4bb1-bc95-9efe5ebe1126"
        },
        "item": {
          "id": "9964c572-7177-4942-8dc4-fdf9f0f5d1c5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e764fd45-d3aa-4eac-9d2f-2c22cf1c51f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1531d880-f131-423c-8146-8b5e90b47d72",
        "cursor": {
          "ref": "dd6a5925-c4e9-4c83-96b8-b26b23db8242",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a7a2cb1d-e9bd-4e28-8923-b87b643074aa"
        },
        "item": {
          "id": "1531d880-f131-423c-8146-8b5e90b47d72",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0ae7a09e-cbc2-46a5-837f-40237d7caa87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39620248-a421-4bbb-bce5-0c7ec9ee7626",
        "cursor": {
          "ref": "9766e1e3-5662-4279-ac52-8d6b6d60838c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a36f14c5-ee7b-497c-b5bf-3e77cb457710"
        },
        "item": {
          "id": "39620248-a421-4bbb-bce5-0c7ec9ee7626",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "25a384b7-7277-40d3-b831-31de6fb8c70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c022acfc-7cfd-4aa4-a571-da2fc0308712",
        "cursor": {
          "ref": "022143e4-df27-4538-a8d5-6299c14fac97",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8b6caaaa-4a93-4d58-a31c-bfb6ead7746b"
        },
        "item": {
          "id": "c022acfc-7cfd-4aa4-a571-da2fc0308712",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f20f5e69-9398-467b-83c3-29a0af56ccf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8343d8b-dbf6-404f-9c42-3a4b25db6de5",
        "cursor": {
          "ref": "cde70169-12cd-4f75-a844-1608b3d47f78",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5bfdf80e-501c-48a9-bc1d-bdcdf3dbe11c"
        },
        "item": {
          "id": "e8343d8b-dbf6-404f-9c42-3a4b25db6de5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "07727850-197b-4fe7-baa1-395f680d4e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e7910f-3982-405b-89fc-28b320aa77f0",
        "cursor": {
          "ref": "acc2791a-970a-4bdb-ba7e-16a9b93d2888",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1f51fe05-8a60-4dbf-ad00-a7d79724c301"
        },
        "item": {
          "id": "a5e7910f-3982-405b-89fc-28b320aa77f0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0e46292c-b03c-4a2d-8318-7ec4148f257d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1dd5b7-bf27-4bf7-975d-899ba2158c4e",
        "cursor": {
          "ref": "bdc879d9-473a-450b-b4c6-9ac841739b25",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "739c7501-fcbf-4c38-94c9-1da0f7fa7e05"
        },
        "item": {
          "id": "ad1dd5b7-bf27-4bf7-975d-899ba2158c4e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "95b79c1e-42c9-498b-90a8-df42dfeb0d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce47f460-d0d4-4ee7-9220-1a3e1460f955",
        "cursor": {
          "ref": "ee9a9ac3-a1a1-432a-92b9-915c5bc7863a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "185a1ffd-2b95-4ccb-95ce-b4d8ac1c0be3"
        },
        "item": {
          "id": "ce47f460-d0d4-4ee7-9220-1a3e1460f955",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d344b7f2-0629-4fca-85e1-cbd11dc2fd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ae20d0-1263-431f-8f24-7260d7a140fc",
        "cursor": {
          "ref": "c456d561-b8d9-4d1a-b400-f0870eaf33bd",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c26276d7-4351-4497-904b-45a56f03a499"
        },
        "item": {
          "id": "d3ae20d0-1263-431f-8f24-7260d7a140fc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2db382ae-9d0c-4192-953d-16a6202986c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d9b058-c01e-460b-9014-1c1848ec7e7a",
        "cursor": {
          "ref": "cbe8e59d-2f0f-403f-afa5-c519438ef617",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "14f0898a-ee64-4f75-a690-cef61d6fa404"
        },
        "item": {
          "id": "77d9b058-c01e-460b-9014-1c1848ec7e7a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "19bf7122-529d-4380-9a9e-403fab8840e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ce8354df-bab6-4165-a178-228c6944a8af",
        "cursor": {
          "ref": "896fe8cc-05f0-4d38-95fc-6cf3cd57305d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "823f0b92-9cd4-4982-bc7a-18ab2fb9834a"
        },
        "item": {
          "id": "ce8354df-bab6-4165-a178-228c6944a8af",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f91f5062-9fcf-473f-87c9-e2d54132fd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b9c186ea-4271-456b-a6b8-56e9285d6870",
        "cursor": {
          "ref": "9f2d13d8-58a4-4f9b-b596-388861182fb4",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6c4575cb-40b7-4477-bc14-9eef7f6cbea5"
        },
        "item": {
          "id": "b9c186ea-4271-456b-a6b8-56e9285d6870",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6b1ada56-e1c0-461c-8951-ef99226bf6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "078c83f1-3d57-44cb-a59c-0426076b40ef",
        "cursor": {
          "ref": "d42da86b-4384-4685-968f-71391875d1d7",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c333faa8-3494-4566-9375-23d614c6769f"
        },
        "item": {
          "id": "078c83f1-3d57-44cb-a59c-0426076b40ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a5420f99-8d9f-4f15-9239-c90ce5a4d72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d657b2cb-e27e-4461-aeb4-6b30043c945c",
        "cursor": {
          "ref": "c2833e40-9b01-4b8c-8d3a-f66e61ffc583",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "92f518a8-3dab-48aa-afd8-5218fe2c9e58"
        },
        "item": {
          "id": "d657b2cb-e27e-4461-aeb4-6b30043c945c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c0cb5769-9e64-4d2d-b61f-c68d160eea85",
          "status": "Created",
          "code": 201,
          "responseTime": 11551,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd551901-b3df-4f84-9191-239c1c68e71a",
        "cursor": {
          "ref": "9abac3da-10fd-4870-92cf-c33ce306f181",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e8788855-ba45-4b4b-a32e-5408eb48b3ad"
        },
        "item": {
          "id": "bd551901-b3df-4f84-9191-239c1c68e71a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9ee41fa8-ef22-4539-85fb-14ec4a809492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d7140e02-9307-4125-84ed-bde41b9e60e5",
        "cursor": {
          "ref": "252cd09e-e4f9-451c-9756-ee7879af20eb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3e1b5c01-2d28-4a44-a13f-01b9f75e94e1"
        },
        "item": {
          "id": "d7140e02-9307-4125-84ed-bde41b9e60e5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d48a2093-6c22-4fe9-b562-36056f5d1c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "104f28ea-d950-47a9-bc0d-f369a072cb25",
        "cursor": {
          "ref": "43b9619e-bfd8-4239-a239-acbbcba3095d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2cad0bea-9f0a-4035-8bdf-4de6c7571710"
        },
        "item": {
          "id": "104f28ea-d950-47a9-bc0d-f369a072cb25",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "950d99fe-5de3-45f3-a10b-68e24be904cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498a859e-3b94-4f8d-8e2e-0588a6446cdc",
        "cursor": {
          "ref": "e5edb627-ce20-4c82-bf30-2d64e9fe2c7d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "032bb3ec-3f95-4fa7-9c43-8e7370076085"
        },
        "item": {
          "id": "498a859e-3b94-4f8d-8e2e-0588a6446cdc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2b3dc6c9-7cb8-4981-acb0-0d16167c370a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762a3ff0-a8e0-4b63-88c5-fb3ab079f7b3",
        "cursor": {
          "ref": "0e2f1552-7924-4a9b-bf78-4cd9bd8a499d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fba55659-b50e-433a-a836-a3c733f268fa"
        },
        "item": {
          "id": "762a3ff0-a8e0-4b63-88c5-fb3ab079f7b3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ef3ca178-c7eb-40d0-a8b5-2b9f412b8ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dba7a8f-67d2-48ac-bb6c-4369b675366a",
        "cursor": {
          "ref": "53a604cb-98c5-46cb-8735-6e8891d5a088",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "88916bba-2d88-4ccf-b9fd-fcf046e298f7"
        },
        "item": {
          "id": "3dba7a8f-67d2-48ac-bb6c-4369b675366a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "acf1c646-c1e6-4548-aa77-872fad586a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5815152e-51cb-447f-86b1-8e4fa6a31f2f",
        "cursor": {
          "ref": "c21d0c6b-57e9-4412-b9db-7acafaa31b7c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1c7d1698-05e8-47ae-9c7b-70b080653ff2"
        },
        "item": {
          "id": "5815152e-51cb-447f-86b1-8e4fa6a31f2f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "66a9b9dc-a660-4961-8e7d-a368029d2a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f3cbef-97b6-4473-9b50-14ebd86d343c",
        "cursor": {
          "ref": "6b410abf-0074-4a75-bd23-e3ce8d387f64",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "12962324-98cf-4470-932c-df22450a630b"
        },
        "item": {
          "id": "a6f3cbef-97b6-4473-9b50-14ebd86d343c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9ce301b4-3a59-48c7-a7a3-17efdb97b29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe8be28-bd04-42d6-9afd-4a770e526fc2",
        "cursor": {
          "ref": "c3601570-5310-4c39-9247-4673df28459c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7763560b-fb57-4230-afc7-1ccc7e848c98"
        },
        "item": {
          "id": "efe8be28-bd04-42d6-9afd-4a770e526fc2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c9b02388-0658-49f2-a73f-70b011e29665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d8fd04-c8bd-4096-991d-05096d5dac64",
        "cursor": {
          "ref": "df730e1d-066a-4c94-9ecf-0a932fbf605a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9860c6ec-e204-4280-961c-9ecca0670367"
        },
        "item": {
          "id": "14d8fd04-c8bd-4096-991d-05096d5dac64",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2c457d4c-d9ee-4a2d-a761-dee25449abde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a153b04-96b1-46ed-ad83-09f1ca6f9a7a",
        "cursor": {
          "ref": "4048391d-9249-4a0a-96cc-bfd2503bdaa6",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bd0f328e-f82d-407d-a426-e614acf91541"
        },
        "item": {
          "id": "0a153b04-96b1-46ed-ad83-09f1ca6f9a7a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3e329579-7ef9-4487-8f1f-1f9e76fab42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f81f6c-6cdb-4c57-b1c7-e9f57eb42760",
        "cursor": {
          "ref": "88632574-970c-48ee-911e-5eded72d1879",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7178a03d-c6a8-4b12-8b73-bb6a13ca318d"
        },
        "item": {
          "id": "39f81f6c-6cdb-4c57-b1c7-e9f57eb42760",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "240060cd-9e53-4273-b0b4-896b1fd98e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24670bc8-7800-4858-93c4-808df63c5016",
        "cursor": {
          "ref": "631e4bcd-a8d5-4833-8a1c-456f80c2ba4c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "71df9a53-fe16-4087-906f-609ab3fb3ff0"
        },
        "item": {
          "id": "24670bc8-7800-4858-93c4-808df63c5016",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "971ee39a-747e-4693-868c-4a8750c458e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62bf1ab-ce7f-4524-80bc-14a62f0db27c",
        "cursor": {
          "ref": "d74b5778-d7c1-4e57-9818-e693a2859181",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e163b1a1-bb57-48c7-b4c8-284e70ee48af"
        },
        "item": {
          "id": "b62bf1ab-ce7f-4524-80bc-14a62f0db27c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ef1f36d3-8cab-475e-9266-bfc78c030cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12900615-7789-4dbf-b11e-d2dfbe9d292f",
        "cursor": {
          "ref": "aa00538a-f1c5-475f-b94f-24b19a2be12e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b090cd58-cefb-4da2-9071-2ac787465f12"
        },
        "item": {
          "id": "12900615-7789-4dbf-b11e-d2dfbe9d292f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "37f48c88-3080-4564-8625-e2e449585d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121b6171-a326-4b60-9130-e09179ccf9ed",
        "cursor": {
          "ref": "e6699626-1ded-487f-8991-60d27efc74c3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2a429701-2352-4136-98e3-48ccc09cda82"
        },
        "item": {
          "id": "121b6171-a326-4b60-9130-e09179ccf9ed",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ff468efc-0433-4eab-ba93-45f3e95442d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb2ea6a-c656-41c6-a78e-1ad0252a9f15",
        "cursor": {
          "ref": "82c5e1bf-3d58-4e31-81da-4d2a8a709dd4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "88071a4d-9918-41f6-9d64-16a2d1bd7017"
        },
        "item": {
          "id": "8cb2ea6a-c656-41c6-a78e-1ad0252a9f15",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "150e2441-5623-4ae1-9e3f-adbb83b8670a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4a304d-9e5f-48fd-a820-875d75dfd1b2",
        "cursor": {
          "ref": "ebf537d4-b8b9-4860-bb5e-b1f3330a1718",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7c9c94c1-511c-41bc-9fa1-da4847d357cb"
        },
        "item": {
          "id": "ca4a304d-9e5f-48fd-a820-875d75dfd1b2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d5d7bdde-e889-4330-a630-39dba663dc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8c4b81-ed14-4748-8a2d-f6b8fa3e0f9a",
        "cursor": {
          "ref": "e096582c-1e28-4de6-b478-644f837e6c15",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2dd83a2a-1b28-4ad7-9671-98964a53a173"
        },
        "item": {
          "id": "ef8c4b81-ed14-4748-8a2d-f6b8fa3e0f9a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0f5f6b9f-c053-4ff7-b779-5176bc4b87d4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "515612b3-e84b-413d-b58e-71142b2715e2",
        "cursor": {
          "ref": "3a6deee9-bece-443f-855a-297a8a48c7aa",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3a08882f-2d72-4a8a-bbaa-c5125aa9ec56"
        },
        "item": {
          "id": "515612b3-e84b-413d-b58e-71142b2715e2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d2021f56-b78c-4d47-a716-f176d77f0f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807af4a8-777e-4fd6-88d6-fda9d6bfbcb9",
        "cursor": {
          "ref": "f3adfebb-5c7b-44e5-8955-e708f3bbb7e9",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3a47f459-38a5-44ef-b38e-11520e707216"
        },
        "item": {
          "id": "807af4a8-777e-4fd6-88d6-fda9d6bfbcb9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "15a99347-5d34-479e-a618-8abea14c2913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52a2ab5-f524-4d91-bfb4-d9aeb388e75b",
        "cursor": {
          "ref": "668e7ec7-0580-43e0-bb5d-a3a47ff3c6b0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c96757e4-a0fd-4658-a52c-8fd144b01e11"
        },
        "item": {
          "id": "d52a2ab5-f524-4d91-bfb4-d9aeb388e75b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a09fa61b-3306-4b5b-9a35-113f659e27f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c7449d-4953-4a1f-bd61-8c844e3571be",
        "cursor": {
          "ref": "87201855-bb9e-4780-947e-81c3b94aead7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "551b51e9-209a-42ab-ba1d-6f95c25f064d"
        },
        "item": {
          "id": "a2c7449d-4953-4a1f-bd61-8c844e3571be",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "42d7eb04-65b1-44a1-ae29-9a93c30e8d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ff4619-0de2-4b60-a20f-83d8f1eb7def",
        "cursor": {
          "ref": "5a500b60-3813-4dfa-b1d9-1cbd27b3d5e1",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "15dceaf7-6bf1-483a-8b1f-38e0ad6a2320"
        },
        "item": {
          "id": "97ff4619-0de2-4b60-a20f-83d8f1eb7def",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "11e06fbf-810a-4d21-a6e8-ee60e0529e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c846855e-758e-4d16-9922-ea96d8eeaab6",
        "cursor": {
          "ref": "d2c2a8ed-06a7-46a5-97c8-1807bf5a4706",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e36c60f0-6d4f-4a41-bb1c-34c784062bb0"
        },
        "item": {
          "id": "c846855e-758e-4d16-9922-ea96d8eeaab6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8ae1ec5d-4c4f-43e3-9f76-c97c5479fe11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7f223b-03fb-417a-989d-da43bf915c0f",
        "cursor": {
          "ref": "fb2d7ba0-2da8-4a66-9dbf-e1acb9032ae5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "680836ea-2c55-4d07-a915-11a4e6484863"
        },
        "item": {
          "id": "fa7f223b-03fb-417a-989d-da43bf915c0f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aa1758e3-deed-4519-ab7e-e427868a26d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa23fe8-2943-49ab-bee5-96f4d1e5ae93",
        "cursor": {
          "ref": "152c305a-a8d8-49bd-9b02-a4e9920833ef",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "aec583f4-ddda-431e-ac8a-f5557bad11d9"
        },
        "item": {
          "id": "6fa23fe8-2943-49ab-bee5-96f4d1e5ae93",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b904fe9f-3edd-4a13-890b-e2e5968ad03c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "212c4238-17e4-45c8-af81-1b3ad2cdc59f",
        "cursor": {
          "ref": "72d6d609-508c-4911-9010-f826856d677e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3072c4c0-db21-4867-9e5a-4fb0699ec42f"
        },
        "item": {
          "id": "212c4238-17e4-45c8-af81-1b3ad2cdc59f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "70f86ed7-744c-4807-98cd-10706a9d762f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d768fb6-2c6c-4c19-b34d-e23547ab08a2",
        "cursor": {
          "ref": "4fb28831-7a83-4d4a-b7e1-d6121b36c0d9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "01176cdd-6b1e-452d-9fb6-a6010d35d06e"
        },
        "item": {
          "id": "1d768fb6-2c6c-4c19-b34d-e23547ab08a2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3044eab6-4ecf-4222-ad01-71e1fa241fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17a24d6-81a6-43ce-a9af-e0180aa4dc09",
        "cursor": {
          "ref": "77cb6d52-537c-4a11-ae6e-c2a7cb44e178",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "def8846b-cb3e-4717-8f80-314b0ef087c5"
        },
        "item": {
          "id": "c17a24d6-81a6-43ce-a9af-e0180aa4dc09",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "91170d21-7ef8-4131-ba0c-f4afdd26459d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adced728-9f39-4452-bdd8-00bcbeea66f3",
        "cursor": {
          "ref": "f07d7ec1-3001-4ae1-8a3a-76b6d6eb8eee",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "28ccce73-4016-4f9a-bb79-b9e165eadd84"
        },
        "item": {
          "id": "adced728-9f39-4452-bdd8-00bcbeea66f3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5d8ceec8-b23b-4841-a7a4-088db147bd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c362c5-3a9c-4ce2-8595-ef98f106c7d8",
        "cursor": {
          "ref": "88baabbb-acd0-4762-83c7-98b3b31ad2c2",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "83fd30b7-9b88-4367-b72b-feb6ea6d7c2b"
        },
        "item": {
          "id": "d7c362c5-3a9c-4ce2-8595-ef98f106c7d8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2fc54072-2679-4e4c-bea9-80922f19ee72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b46fc77-f87d-4872-8f05-9ab1f3016b63",
        "cursor": {
          "ref": "3943e802-2adb-4fde-b402-f2ec2c6999f9",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "70142932-4e1c-4f78-afe5-22ef6ea3250a"
        },
        "item": {
          "id": "4b46fc77-f87d-4872-8f05-9ab1f3016b63",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "56e877d7-c4d5-4b08-ad29-24747f3aad12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8913359-8830-49f8-acb3-21c97c30bab0",
        "cursor": {
          "ref": "ababa978-d79e-4b06-bce7-b0893b1ef322",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ace7c5b2-7b64-4909-81ac-50c6383ba3be"
        },
        "item": {
          "id": "a8913359-8830-49f8-acb3-21c97c30bab0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c9bcbba3-fa83-4f0c-b7bc-8bcd532ec297",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c4f73775-cad7-4593-908a-971a6b3c8406",
        "cursor": {
          "ref": "25f73cb7-feee-4786-a4a9-2b93f06d3930",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1bcdc1ca-1d8a-4e53-a3ac-505f2b17e340"
        },
        "item": {
          "id": "c4f73775-cad7-4593-908a-971a6b3c8406",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7d2d3a87-adfa-4c8e-8971-765ee9d54cf3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "2c965634-6fe3-4e20-8fe8-14a7966dda54",
        "cursor": {
          "ref": "b3f1cc55-3c86-4a98-8d60-c6e1e23394a3",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3d2a34b1-bff5-49dd-a85b-c15ba877ea8f"
        },
        "item": {
          "id": "2c965634-6fe3-4e20-8fe8-14a7966dda54",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "695bbe65-1f28-44cc-901a-3e77bc6ec1b9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "399991bc-b583-4d56-872c-93cbf52bfed0",
        "cursor": {
          "ref": "96423429-ebcd-470d-bf81-9105026b7135",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5f071caf-f6de-4ede-80b6-4a558b2d1b37"
        },
        "item": {
          "id": "399991bc-b583-4d56-872c-93cbf52bfed0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "92246f69-9e53-4ff7-8b48-6872faf49770",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "7838e874-2582-4bfe-93bb-71a84ba28b11",
        "cursor": {
          "ref": "226f1b64-3fa5-41a5-b919-50b0b1e998fa",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d4c2584d-a4a3-4df3-8618-c5a5bce3f950"
        },
        "item": {
          "id": "7838e874-2582-4bfe-93bb-71a84ba28b11",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5dcac935-fdc4-4b0c-9d19-30324a4c1525",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "0c8823f4-0aec-4a08-aea1-932a024b3614",
        "cursor": {
          "ref": "39ddf4c7-d55f-4564-90ec-4d706651d8e0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "72dc8bc7-37ad-4a9a-b7f6-0bc7aefffd44"
        },
        "item": {
          "id": "0c8823f4-0aec-4a08-aea1-932a024b3614",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "48d15ca7-f746-4b42-a73d-3d2b10fc1081",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "176a12cd-eea4-4e92-832e-f51a9ba0f6dd",
        "cursor": {
          "ref": "dfea8ffe-dc7d-49c6-9631-f8fdca5ada98",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a033ae8e-049b-4996-9cfe-c37bcf9d7634"
        },
        "item": {
          "id": "176a12cd-eea4-4e92-832e-f51a9ba0f6dd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9edcf27b-3929-40eb-8090-7ef9978118ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627c53f6-eee6-4d07-8a20-a22c63413699",
        "cursor": {
          "ref": "bd7b9b31-9dfa-421b-ab31-f4e7c685af65",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "06d711db-fde7-4901-bdda-3be013942559"
        },
        "item": {
          "id": "627c53f6-eee6-4d07-8a20-a22c63413699",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "38d68a15-26b1-4eec-883d-6a4c37c91030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5250bfc-6c58-4c28-acb2-5c973c6fc123",
        "cursor": {
          "ref": "caf7715f-320d-4735-9898-f046bf742a29",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b5aed16f-f26f-4c9f-b895-932dcc0b13c8"
        },
        "item": {
          "id": "c5250bfc-6c58-4c28-acb2-5c973c6fc123",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "25f3b00f-b76b-48d6-9c4f-a1ec1c3ce9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5688b25b-9ab3-4b9c-b8ff-b8a85a400c67",
        "cursor": {
          "ref": "16238aaa-a81c-478e-87ac-04d9001db787",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fc6ab314-4596-4b04-a740-c70bb25652d4"
        },
        "item": {
          "id": "5688b25b-9ab3-4b9c-b8ff-b8a85a400c67",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b39da2a5-68a2-4e07-a36a-1c1af2ec090c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd11fa7d-e7d8-4573-8fca-6848e8d1aedc",
        "cursor": {
          "ref": "c7c610bc-d3de-4119-a334-ba6aa07f2ff4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d6d957f9-4800-4861-96ae-51fca1d735e2"
        },
        "item": {
          "id": "dd11fa7d-e7d8-4573-8fca-6848e8d1aedc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b41d2222-e536-45f7-80f5-6cefe5052804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e10c80b-7dda-4df8-9a85-3b98c782879b",
        "cursor": {
          "ref": "2eef6f10-5387-4c93-b259-1723fb3b12b7",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "83c566db-ad80-4b04-9802-afa5a551a849"
        },
        "item": {
          "id": "1e10c80b-7dda-4df8-9a85-3b98c782879b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "76c1c87c-e1fb-4d87-8356-09d4e2db9117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f864b6-dbc7-4f12-837e-ff36860d760e",
        "cursor": {
          "ref": "cf8470ae-79fd-4397-91c5-751da8b3e1dc",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "011d0b11-d17b-4d8a-b73c-e7c13e5c48f0"
        },
        "item": {
          "id": "f7f864b6-dbc7-4f12-837e-ff36860d760e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "92c4bf6e-8497-4aa3-bc33-a0a98cf3a08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e2514f-4dab-48c3-a512-b7ed2071226a",
        "cursor": {
          "ref": "d7ef5075-59eb-4202-8ee8-4de6d2d5f746",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "14f14869-7d2b-48a7-894d-bf13af4b426f"
        },
        "item": {
          "id": "a8e2514f-4dab-48c3-a512-b7ed2071226a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a7c9f784-4c3c-48da-a1aa-99a5af112b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4753972-9480-496d-9e68-eaefce89786c",
        "cursor": {
          "ref": "0c60ce91-fed6-4fe8-96f3-e21781f84146",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "96b1c9b9-ce5b-48b8-a3e2-4994a813bd23"
        },
        "item": {
          "id": "e4753972-9480-496d-9e68-eaefce89786c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2b46f101-61b6-4227-9fdb-fcda5bc80820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33707862-7eab-4a1e-a7ca-bdb069be6ca3",
        "cursor": {
          "ref": "33871175-fea5-4e7f-9b0f-f2d2138298d4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cd1fcea3-3fe6-4af2-b283-596944c2594b"
        },
        "item": {
          "id": "33707862-7eab-4a1e-a7ca-bdb069be6ca3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dd30585c-8aed-469b-9ad3-652790f16bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd2756b-7c95-4539-b6ec-056fe6f0d4d7",
        "cursor": {
          "ref": "2c5f3618-60ba-4376-a20d-f1f06b4e6d91",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2add634e-b6f1-4092-9874-b7687c1ee249"
        },
        "item": {
          "id": "6fd2756b-7c95-4539-b6ec-056fe6f0d4d7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bfd6dc8f-f522-41d2-8243-28eb42397941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f2a132-c251-41dd-b508-49c4001fdd81",
        "cursor": {
          "ref": "1c6d0617-0f1c-431d-85ca-41703d2484c0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c2d7f6cf-061a-4951-b80e-6fd9f1de6c83"
        },
        "item": {
          "id": "b7f2a132-c251-41dd-b508-49c4001fdd81",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3f086b99-1888-46e7-ada8-fbcacc0a4573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e94434-0f3b-4fb0-872d-1aff4cb171fb",
        "cursor": {
          "ref": "b8a874a9-36bf-4c70-9846-1cdb970e3b6f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6fa4e5c5-42ed-4f4f-a605-f809c4b28e69"
        },
        "item": {
          "id": "84e94434-0f3b-4fb0-872d-1aff4cb171fb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f21ecead-156d-4cdd-b6de-56edb3c61a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d595e502-1b62-4452-8250-8a66976a8335",
        "cursor": {
          "ref": "bbfa2e7c-9697-4a2d-b75c-39b52e7b912f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f8725988-5269-471e-b1fe-65bf16e96315"
        },
        "item": {
          "id": "d595e502-1b62-4452-8250-8a66976a8335",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b98cb65f-62fd-4764-86e8-c9a42a33300a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e300a952-a139-4a72-9880-50950c7ed1f8",
        "cursor": {
          "ref": "31595cfc-0304-4f00-a86b-4f6babe82b06",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1082d7db-262c-4a33-a17f-24effe77acb1"
        },
        "item": {
          "id": "e300a952-a139-4a72-9880-50950c7ed1f8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f263b1ad-ae3e-4175-90b1-1bbe5c482b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d16635-ac28-4349-81d8-e29c273e2951",
        "cursor": {
          "ref": "c63a2ff7-2d6d-4c96-a968-20c30aa372fa",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8101ecc7-d336-4b4b-aff9-5110b26bd3e9"
        },
        "item": {
          "id": "33d16635-ac28-4349-81d8-e29c273e2951",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "91e8508c-a705-4262-ab6a-4637bad952e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a63eff-bb3b-4523-8d4d-0a5844dbcf57",
        "cursor": {
          "ref": "bfaffb94-995e-43a4-9ada-3f313df7ba81",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0b312e18-9af4-4958-9051-dd06f32bc078"
        },
        "item": {
          "id": "c9a63eff-bb3b-4523-8d4d-0a5844dbcf57",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "65347430-c83b-4c18-bd2e-e3c52a7eedd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7b4e6f-30d5-4122-a850-dc1d1e2fba26",
        "cursor": {
          "ref": "e42323af-32eb-4d8d-8c98-2dee267ff842",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5069d008-9ae0-419f-b3e9-3368e211e4fb"
        },
        "item": {
          "id": "fe7b4e6f-30d5-4122-a850-dc1d1e2fba26",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4f86bce4-f0c8-497a-8402-df4869d7ff5a",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "22a29d49-19d4-46db-988f-206fc7c7a27a",
        "cursor": {
          "ref": "58e81c89-f075-4ca0-a4c2-b1cc5d6f41f2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "82782d1c-d68b-4419-8d0a-96bc219d03c3"
        },
        "item": {
          "id": "22a29d49-19d4-46db-988f-206fc7c7a27a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c1fb96c9-49e4-45c1-837b-e6a3a746d8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf703d0c-5ec0-4541-b79e-c14fec4bb69b",
        "cursor": {
          "ref": "9c05ef35-8a7e-42c6-849c-b88890a2c6f5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d7d0a10f-7984-4486-9f3b-3253f4d47209"
        },
        "item": {
          "id": "cf703d0c-5ec0-4541-b79e-c14fec4bb69b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2b534794-6486-45a1-ba75-033ea72dba69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5e7e3c-99fd-417a-8271-7d6c8966d09e",
        "cursor": {
          "ref": "b37508a9-2951-44ca-9495-286ec4441077",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "80b4b9d4-0d92-4f77-b16c-5b9e15fbbc4b"
        },
        "item": {
          "id": "0a5e7e3c-99fd-417a-8271-7d6c8966d09e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a2f76cf8-dd91-4c71-967c-1f1879574fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dab84da-b05d-4fdb-921a-d1f46276810a",
        "cursor": {
          "ref": "107d74a7-7fbc-4d44-a871-fcf88e26888b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "eddaa81e-3d10-498f-a292-b161cde2cda4"
        },
        "item": {
          "id": "1dab84da-b05d-4fdb-921a-d1f46276810a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "48131224-9fdf-4686-ba08-a0f0640e1095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e4bef3-e4c0-44ab-b8b5-aa9f9d13156a",
        "cursor": {
          "ref": "bdf1aaff-2308-4533-b3f3-6f08321f2368",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f19a7e1b-187d-40b8-ae4e-38c3ffdc39ed"
        },
        "item": {
          "id": "72e4bef3-e4c0-44ab-b8b5-aa9f9d13156a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8cbde145-2231-4fe6-9b1f-6e808b11536f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f52513-cc12-4767-874d-62a69ef63f62",
        "cursor": {
          "ref": "a3940afc-eb43-4e9e-8ad2-89b1c3b5293b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d4dbee31-1080-4d5f-bcf1-cb495eb1fb48"
        },
        "item": {
          "id": "b6f52513-cc12-4767-874d-62a69ef63f62",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "60941fff-ee6f-4612-8531-d4f68f87411c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdabaf3-7f57-4e5c-b8c6-3a487142a264",
        "cursor": {
          "ref": "cbc839b4-75bd-4f57-acd7-5f5655a754f0",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "52c03644-6f23-4638-9841-33949f61f4cb"
        },
        "item": {
          "id": "6bdabaf3-7f57-4e5c-b8c6-3a487142a264",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1c165ee0-c041-49b6-9243-e3ae05c6cb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc5364b-31d9-42f5-8529-c5948a4d04ba",
        "cursor": {
          "ref": "3ee024e1-c87b-477b-be44-7492692dcf22",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e94f34ec-67b6-4679-bd08-35f1065ce4b3"
        },
        "item": {
          "id": "bcc5364b-31d9-42f5-8529-c5948a4d04ba",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cf0bf679-8129-4b4b-a1de-520d19dc384d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab83e5a0-bf7b-40cc-bf12-09b11ca67d42",
        "cursor": {
          "ref": "17f26f3a-349c-4f01-8b75-a28c5cb48998",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bfc53a0a-9ca2-4620-8b36-3d43dd5dbf69"
        },
        "item": {
          "id": "ab83e5a0-bf7b-40cc-bf12-09b11ca67d42",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8f0dd14b-857e-43b0-9abb-1a89f242f81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d5f9e9-9cee-42bd-b043-e02ca9ec3d73",
        "cursor": {
          "ref": "9942c9ab-eec8-45c9-8ec1-54c7043ad8d9",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0841c477-8eae-4eb9-abbc-c2860c8c37f4"
        },
        "item": {
          "id": "36d5f9e9-9cee-42bd-b043-e02ca9ec3d73",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "35ce2b40-8680-4d76-a8a5-9acbf4458287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db047e8-e421-4816-81a3-2eeb7156971e",
        "cursor": {
          "ref": "192b2157-6f3a-4d54-acc7-93e3e25c5026",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d0245c4d-039f-47c9-b7f1-e409965a75eb"
        },
        "item": {
          "id": "7db047e8-e421-4816-81a3-2eeb7156971e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "aef30db3-2c0a-47e3-98b9-b3ea4ac46045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6769202a-d68e-4f4e-96e8-888d100e833e",
        "cursor": {
          "ref": "39b4d3ea-25d2-47a4-bc5c-d1dad5fdc6aa",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4e99cc41-266e-4954-ae33-100a1d654016"
        },
        "item": {
          "id": "6769202a-d68e-4f4e-96e8-888d100e833e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c8aa5abe-ae37-4f93-879d-e732cc10e375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afcc547-e184-41f2-bea0-4f3ca1e181e8",
        "cursor": {
          "ref": "4bc5306a-44b4-4b8f-bf32-3f28a38324c1",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1959d932-788d-496f-a6f8-2dcf796cc2b7"
        },
        "item": {
          "id": "0afcc547-e184-41f2-bea0-4f3ca1e181e8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9f377fd8-0a1a-44f9-9198-0f32dc289ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ea8ebd-c868-4b8b-a7a8-5d3e130a716b",
        "cursor": {
          "ref": "a12e5b24-0db5-4fb8-acb9-ffb0fbbff086",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c40bb370-9a02-4193-ae07-46ffcff47ede"
        },
        "item": {
          "id": "f9ea8ebd-c868-4b8b-a7a8-5d3e130a716b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4ea3e7c9-1dda-4fe5-a6e1-fd1a396866c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c249fcff-3ad3-48c8-ba8c-7acc1a0a44c8",
        "cursor": {
          "ref": "2b6c0f58-cc48-448a-b24a-c14fc57de619",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "58144115-550e-4f9a-bfe5-fc5c9a534762"
        },
        "item": {
          "id": "c249fcff-3ad3-48c8-ba8c-7acc1a0a44c8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d55d836e-2e52-4831-9d5c-1e426c483a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbe18a2-77bf-49c1-b3a9-10d182c404f4",
        "cursor": {
          "ref": "17b6b3c3-4cb9-48a1-9d31-4907cdbfa426",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f2b6928f-5f27-411c-b511-dec07f1f7252"
        },
        "item": {
          "id": "ccbe18a2-77bf-49c1-b3a9-10d182c404f4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ee3c3a40-e879-48ad-956f-e3c18df65e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7097f1c-1080-42f7-8022-5683df12dead",
        "cursor": {
          "ref": "a7ea6055-374e-43f9-9c8d-9c8b568e4dbc",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fda5f945-6583-4232-8c44-6966d0524b74"
        },
        "item": {
          "id": "b7097f1c-1080-42f7-8022-5683df12dead",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5b33a52f-9d50-4683-8eee-6fc6b579d933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dc3428-d642-4490-967e-d3529db8bb7a",
        "cursor": {
          "ref": "37a94dcd-03fe-412f-9d17-99c326470722",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d8b140e9-c426-4677-bd06-796e1bb6545f"
        },
        "item": {
          "id": "82dc3428-d642-4490-967e-d3529db8bb7a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "06777b33-7d2d-4b68-948e-4d444ed043bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881adfe4-83ef-4691-9536-2f8268512953",
        "cursor": {
          "ref": "d67c43d6-290e-46ed-9b8d-bb794861eef7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8b827e78-ac09-4252-899e-917ea6421265"
        },
        "item": {
          "id": "881adfe4-83ef-4691-9536-2f8268512953",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "09f9b91b-24c3-4978-b55a-1ffc4abb27d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f707b99-383d-4e05-a6d2-2d07f447b162",
        "cursor": {
          "ref": "9e79f253-0a1d-4f35-b36c-2f50ab01b26d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bbc769c8-ae35-4411-998e-38a9d9e82e29"
        },
        "item": {
          "id": "1f707b99-383d-4e05-a6d2-2d07f447b162",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "417a7aa8-4802-43cf-b76d-940e2c23adf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ab1cf5-0347-4b6c-abbd-9f4af5ebd3a9",
        "cursor": {
          "ref": "796143c7-9479-4f98-8c59-72697d7e034e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1964e133-c19f-40d4-9b2f-00a5ea540861"
        },
        "item": {
          "id": "f1ab1cf5-0347-4b6c-abbd-9f4af5ebd3a9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "385f340b-d33b-478c-b15e-e8fe57b13abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e2f30e-401f-40a1-a105-934c87bed9fa",
        "cursor": {
          "ref": "c7ccc5f7-5305-4097-be62-94b20e4fe62c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b9a6bf93-a5ad-4040-9fed-4858f179a53d"
        },
        "item": {
          "id": "18e2f30e-401f-40a1-a105-934c87bed9fa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "abc65c73-95c6-4dfd-8605-bfe1f4a82dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20b8424-e5b5-461a-a0b0-ea9cc8ffa340",
        "cursor": {
          "ref": "c0d82036-5509-4d48-be62-ef3861ad3248",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eb61e334-c165-43bd-96f2-27d8c1edfdf0"
        },
        "item": {
          "id": "d20b8424-e5b5-461a-a0b0-ea9cc8ffa340",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b632476e-8fe6-4835-8423-2c3593b9b18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c36c684-4fbb-473c-9c5f-b226847ba0d2",
        "cursor": {
          "ref": "a9e3cffe-37f0-4821-9b5d-9f906da67a4d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ca1ede0a-d4f2-4d6f-98bd-44d5519ed185"
        },
        "item": {
          "id": "8c36c684-4fbb-473c-9c5f-b226847ba0d2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "700867e7-d0bc-47e8-8c61-1d4001d26b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbc45da-97ca-47f3-a667-ea167a59ee05",
        "cursor": {
          "ref": "9884eba9-9a12-4afb-8e58-0514cfc0871e",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2724a6c4-e3be-4e6a-a426-44592d873195"
        },
        "item": {
          "id": "dbbc45da-97ca-47f3-a667-ea167a59ee05",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4fc05226-cab2-41dc-a2fa-b6cd84ad4f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8ee79e-a643-41a0-abd8-6180897f610f",
        "cursor": {
          "ref": "9448a03e-4e6e-464a-9d84-795c3012116a",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "416afd99-6358-4c99-a465-12c682baa689"
        },
        "item": {
          "id": "eb8ee79e-a643-41a0-abd8-6180897f610f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2f289e62-3e8a-42cd-8958-86f08cd13ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5098c6-0bb0-493a-b9c0-2538d875c482",
        "cursor": {
          "ref": "ddf303a2-de18-4591-bd37-68301f263025",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6a85a188-4850-4df1-9f17-7f304f883e9e"
        },
        "item": {
          "id": "bb5098c6-0bb0-493a-b9c0-2538d875c482",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b702744f-9937-44b9-a828-1b74d25606e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76adc197-1082-4fb2-86e9-70facd3e1663",
        "cursor": {
          "ref": "dbb5ef7c-05d2-4558-b420-f46209d5d7f5",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "19779657-6bfb-4d9c-b053-b59696fac8ce"
        },
        "item": {
          "id": "76adc197-1082-4fb2-86e9-70facd3e1663",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a6073b39-8b51-4c52-a7d1-7ef74bbb64ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15a6831-2ad8-4b53-9e35-f5a2f37f4559",
        "cursor": {
          "ref": "01de8960-96d1-4d7d-92a7-7569f65c81a4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "11534ffa-4425-444a-8890-0317bb3480c3"
        },
        "item": {
          "id": "a15a6831-2ad8-4b53-9e35-f5a2f37f4559",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "44aa7338-9f55-4490-b2da-30aa8654565c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7693ad38-648b-4b70-9840-a8e6450daf52",
        "cursor": {
          "ref": "a87fc589-fbc2-45a8-a5fd-ac09875fe5f1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c80f9dc2-5dc3-4d88-86b9-00f86f4e9f07"
        },
        "item": {
          "id": "7693ad38-648b-4b70-9840-a8e6450daf52",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e82584f3-0132-4b4d-82d6-490230882c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0d2746-2cb8-41c3-8d92-322adc4170ed",
        "cursor": {
          "ref": "d230166f-80cf-461c-b3cc-b14919c7aa2e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ecc718d7-7530-4d62-950b-814ee67830e9"
        },
        "item": {
          "id": "2a0d2746-2cb8-41c3-8d92-322adc4170ed",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0c0b6ba2-75a6-4757-90b6-3b27e4504441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd68573-4f3e-478c-b829-828a7af13eb9",
        "cursor": {
          "ref": "05c8cd62-78b0-4e5a-9beb-4fa33be8c7e3",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8fddf542-e03a-4eaa-82df-d3b49286b381"
        },
        "item": {
          "id": "afd68573-4f3e-478c-b829-828a7af13eb9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "857c1624-e997-42a1-87ba-6a134cbe1fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28c4e25-9e00-4684-bc15-7106d79e9719",
        "cursor": {
          "ref": "e792912a-6f42-4a6f-8b44-1b83aea5fa64",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a8bc7682-72b6-41ae-8c53-e1ef1cab3f2e"
        },
        "item": {
          "id": "a28c4e25-9e00-4684-bc15-7106d79e9719",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "40913c53-bd61-404f-b7ec-391c328cb8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e7b02d-67dd-4533-bc51-7a8b56eea1f6",
        "cursor": {
          "ref": "9f7758f7-fe50-42ae-a791-0c87fddecd81",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ce6dc604-22bb-4927-80cc-406b93e1cda0"
        },
        "item": {
          "id": "c2e7b02d-67dd-4533-bc51-7a8b56eea1f6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "524dd876-8f68-43ba-bdc8-cd1c86ba1b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14df9fd-132e-4c1c-b421-7b9344cb3bc6",
        "cursor": {
          "ref": "e86aee80-6cc4-4638-a74f-a6a453a4f3a6",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "16d0b2f2-9885-432f-8632-10d94c5d4b55"
        },
        "item": {
          "id": "e14df9fd-132e-4c1c-b421-7b9344cb3bc6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3d6590c6-0ee5-4eb8-90dc-716b0bf4d959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86abba38-de6d-4fa1-a2db-71f76509a1c3",
        "cursor": {
          "ref": "c9515af9-7aec-447a-b5d4-17d424e10a23",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2b93253d-86c5-41b5-9065-9c9343b31ddd"
        },
        "item": {
          "id": "86abba38-de6d-4fa1-a2db-71f76509a1c3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2bc2592f-9595-4fbc-a2e9-4408eacc06c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9bd8e3-354a-468d-a2fc-49b11a6831ac",
        "cursor": {
          "ref": "868fe03c-157c-4531-8b97-bfb486316d88",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "310281c9-fa70-4741-afe7-e20c5bb3425a"
        },
        "item": {
          "id": "6a9bd8e3-354a-468d-a2fc-49b11a6831ac",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2d328feb-3b54-4d0d-9988-26ab8d315aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13de7c6d-2796-4b50-b8f4-bea5b16ac06b",
        "cursor": {
          "ref": "cf8d9586-a31e-4352-a4cc-d2a0211ef962",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "439b706a-065a-41c8-8bcd-d3c3ec13ecf7"
        },
        "item": {
          "id": "13de7c6d-2796-4b50-b8f4-bea5b16ac06b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4247fe4c-54fc-4b40-9b01-625ed9cfc647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b18f411-2acd-411b-9abe-59c74d40cfa9",
        "cursor": {
          "ref": "22992d36-9228-40af-b367-b3c30b07963c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f04b0e02-b321-4ecc-ba6e-98d414c1e358"
        },
        "item": {
          "id": "3b18f411-2acd-411b-9abe-59c74d40cfa9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bc9202b1-4918-484f-9e61-6c8f36b16792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b78c1e-9a03-4b56-8fbe-3b81f926bb6d",
        "cursor": {
          "ref": "77398d42-b206-4b41-b2dd-86ed5f459fed",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ffcb0bab-582c-4957-9f1e-0417d314fef5"
        },
        "item": {
          "id": "84b78c1e-9a03-4b56-8fbe-3b81f926bb6d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4b4b1b27-3f00-461b-9966-c2e9566dadec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71004796-7944-48d0-b368-2c1a68830f4e",
        "cursor": {
          "ref": "f0b2259b-b076-4560-bb7f-8c1659552b1f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1a8d7b09-ee45-4f44-a2ff-01ef057dee6b"
        },
        "item": {
          "id": "71004796-7944-48d0-b368-2c1a68830f4e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ce4f5e4a-ca86-4fb3-8166-e15f09ec45c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c6d7cd-70b8-43bb-a7ef-5ba3ae9e0356",
        "cursor": {
          "ref": "116f3271-feb9-487e-ba9b-f23c143be68b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e544072a-3789-4cc4-8794-3548311786f1"
        },
        "item": {
          "id": "86c6d7cd-70b8-43bb-a7ef-5ba3ae9e0356",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7fa5b173-2dd4-4773-bad9-acf9ab6d1406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae7f334-3e97-4ffb-a61c-41c1421e9a0d",
        "cursor": {
          "ref": "43fb5e59-899c-4076-a958-f08516d49a74",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "79ea9a65-c6c4-4e74-8f3b-7495007b0695"
        },
        "item": {
          "id": "5ae7f334-3e97-4ffb-a61c-41c1421e9a0d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "61451e25-345b-42c1-a61e-b9adaf09b17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f91751-ed54-4d10-b78d-e9e0f9847bb0",
        "cursor": {
          "ref": "65941885-5217-4b71-8cfc-cee244fece20",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eab30e16-4072-4107-87c7-4846032a69bd"
        },
        "item": {
          "id": "c0f91751-ed54-4d10-b78d-e9e0f9847bb0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "86d6a36d-45d5-47f0-bf9f-e9cbf6ea99a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d144a5-73f2-42e5-b931-3ac43fd6e290",
        "cursor": {
          "ref": "fbda5555-15a5-4f42-ac0b-80b10e4cbcfe",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5373f6a9-2206-48b3-94e5-c7113531a22e"
        },
        "item": {
          "id": "22d144a5-73f2-42e5-b931-3ac43fd6e290",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "aa43a574-ff83-4dfd-afc9-bc8d1ceb1676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7f057c-534c-4ccd-b46a-657b64bff6b2",
        "cursor": {
          "ref": "c65062e7-d4d5-48f3-abbf-0cbdef16a6f9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5432ecb3-d6d2-41d5-9cf9-abfee76d19cd"
        },
        "item": {
          "id": "3c7f057c-534c-4ccd-b46a-657b64bff6b2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f2fcb524-a9c6-442f-9a51-a50f578e0f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372d47af-9a61-4bcf-a2f2-8817317e2578",
        "cursor": {
          "ref": "7bb42fd4-3556-4f22-81eb-93ec3bbb386d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "932d81dc-8ac9-4279-9b2d-e814d064b17a"
        },
        "item": {
          "id": "372d47af-9a61-4bcf-a2f2-8817317e2578",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "55a21b8e-19d9-48b7-a4e4-472a21afdc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc49a2ab-56b9-4e1c-b9fa-75cf75379cb1",
        "cursor": {
          "ref": "74e8ea3f-5bed-4dcc-a03f-71ad2b928115",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e9b583a0-7a45-4dcd-8ac9-96a0fa151504"
        },
        "item": {
          "id": "fc49a2ab-56b9-4e1c-b9fa-75cf75379cb1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cf1122f7-022e-4228-af0b-3b944a7164f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ce1d8e-c15f-4727-acdc-9899972022d8",
        "cursor": {
          "ref": "b29d8466-d996-4333-92ba-979b6324c43d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "caba8e30-4c55-4605-ab70-449892b9d061"
        },
        "item": {
          "id": "23ce1d8e-c15f-4727-acdc-9899972022d8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ac1bec82-3dbb-4416-b7b4-6ca2d93464e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23819b5-60a9-41b3-af24-009bef58d073",
        "cursor": {
          "ref": "967958f8-485e-4deb-ba50-558cccb8f22e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c9292567-562a-4ba8-89ce-df0e0e22ee13"
        },
        "item": {
          "id": "c23819b5-60a9-41b3-af24-009bef58d073",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d2c1a520-7d7c-499d-8dcd-3ad9a9eea475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a51234-4db2-4647-80a3-7ceabdec6381",
        "cursor": {
          "ref": "a138c28c-937d-4960-9bb5-eacace6cde48",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "91a2be32-637b-49b1-a1cb-6b5154762379"
        },
        "item": {
          "id": "38a51234-4db2-4647-80a3-7ceabdec6381",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "21a42302-2bf1-47a9-a2cd-6ea9f3c113d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4b1371-609c-4ada-8c4d-3397284f7717",
        "cursor": {
          "ref": "5c0e7e6c-6aaf-461a-bc2e-5a43cb95299d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d24b39fa-5373-498e-9fe5-a0ed5ee1a7b8"
        },
        "item": {
          "id": "bf4b1371-609c-4ada-8c4d-3397284f7717",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2f26c2fa-9889-4f1b-bcac-5f2add4c7931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8834f93a-40de-409c-93ca-ee9f7aaf0c1d",
        "cursor": {
          "ref": "cec9e471-a487-4cc0-842c-6a5c362b3d55",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "09eb8551-7728-4d96-92bb-00d516772d38"
        },
        "item": {
          "id": "8834f93a-40de-409c-93ca-ee9f7aaf0c1d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f62975e2-2c1d-4d3b-99db-78eba6a826ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f28dce-0389-4245-8480-e3601051ff77",
        "cursor": {
          "ref": "45937e5b-3033-45b4-a2aa-0741c2102e7b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d6f844e4-025a-4f58-af66-b57ffac34163"
        },
        "item": {
          "id": "54f28dce-0389-4245-8480-e3601051ff77",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "546f182b-0187-4dd2-b9fc-e0f04a2c5e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba628f2-781a-4e30-a7dc-5728c347e046",
        "cursor": {
          "ref": "189d055d-d476-4d61-9c75-5f02adbd819e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5468463f-63d5-4490-ad13-0dcafe712d5c"
        },
        "item": {
          "id": "5ba628f2-781a-4e30-a7dc-5728c347e046",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8af904d2-44a3-421d-abae-12dcb5533576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8427d6-bcd9-478f-8a8a-a435aee81826",
        "cursor": {
          "ref": "e8c86536-e681-404b-bb7f-3a35373d6a55",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a93474a8-3330-4c4f-8359-481867b78ea7"
        },
        "item": {
          "id": "eb8427d6-bcd9-478f-8a8a-a435aee81826",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eb81a200-6b43-4390-8b3a-15ba923b169a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f9a31b-8875-4f07-a989-be2342f79417",
        "cursor": {
          "ref": "f93f8e92-b465-4583-b90e-7c69834395b7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1d9abe05-5e70-4818-b459-33fbf56b5abb"
        },
        "item": {
          "id": "27f9a31b-8875-4f07-a989-be2342f79417",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cf7b017c-bf47-4457-bbf6-147df9c1679d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16f58ea-0974-4e83-a756-7b4f8f6712c4",
        "cursor": {
          "ref": "75568bbe-7f50-42b5-994f-a137b04e59e4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9b53e979-d0e6-460d-b6f2-6e3242183721"
        },
        "item": {
          "id": "a16f58ea-0974-4e83-a756-7b4f8f6712c4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c8950025-bab4-48f5-9541-cfbbcfc9c1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f36bed-6ceb-4bc6-b3dd-b4a034a83614",
        "cursor": {
          "ref": "ce7e8267-0c59-4ac8-a268-f8c3c0468e32",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bf37b7fc-fa64-48f8-b3cc-bd6ad651c028"
        },
        "item": {
          "id": "b1f36bed-6ceb-4bc6-b3dd-b4a034a83614",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "656a7818-d132-4aea-a85e-07551659a20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed1f75e-28a2-4e72-9e00-15ac43de271c",
        "cursor": {
          "ref": "5a245bdb-608a-4603-9f22-45ddd9146b00",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "70e43abc-623d-4020-a02b-b5df1e38f8f4"
        },
        "item": {
          "id": "9ed1f75e-28a2-4e72-9e00-15ac43de271c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fc93800f-9957-47ad-9e19-519ee510f271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da170f99-f9a7-4483-a34f-725a01324836",
        "cursor": {
          "ref": "e73b92a1-c0ff-4192-abcb-87292d935486",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "22bdf0d4-812e-4fcf-8aaa-145f2ff9b25c"
        },
        "item": {
          "id": "da170f99-f9a7-4483-a34f-725a01324836",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4df7925f-a0ec-4f05-b4f1-e2ef28b2812f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3a5af0-dfcd-416d-bebb-855baf142a74",
        "cursor": {
          "ref": "1a26545f-5c0f-4f07-9977-8ff2405148e1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ccb2c4f9-1d23-4630-8bb3-f2de9ace56dd"
        },
        "item": {
          "id": "fd3a5af0-dfcd-416d-bebb-855baf142a74",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9d6ea0bd-2c52-43b3-9286-e0a4a91755c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cdc3ab-87f7-4d79-9d8c-73da54e1c759",
        "cursor": {
          "ref": "32d5e46c-1f64-41b3-a923-9441b5b326e3",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5006650f-048e-4db9-a530-04bc5565841b"
        },
        "item": {
          "id": "88cdc3ab-87f7-4d79-9d8c-73da54e1c759",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3a7a3bfa-9f4f-461f-9ccd-311c8c32f9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52d2582-fa04-4b0d-ab57-69d7f470434c",
        "cursor": {
          "ref": "23a5ce60-763f-4303-9728-db65651853d5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fdcb2c9a-3b01-471f-95ff-0fed6685f80f"
        },
        "item": {
          "id": "a52d2582-fa04-4b0d-ab57-69d7f470434c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8067cb1b-376d-43e8-a27d-42c83893c3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102a6e32-bf88-4ddf-ab37-ed0c52e43d2b",
        "cursor": {
          "ref": "bc39d355-e53f-43e3-8592-b3eacb952098",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1a622739-1a62-4bb8-9079-52c1abf79975"
        },
        "item": {
          "id": "102a6e32-bf88-4ddf-ab37-ed0c52e43d2b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9eedbb07-6418-4c73-99f6-929c3a3b9132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136ca87f-7a29-4530-b27e-c3e5d7e69f3c",
        "cursor": {
          "ref": "d68fc28b-cbfe-48de-99b9-a7439fae25df",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "de79f85c-0f30-4cd0-81c3-6f1c143c5ab6"
        },
        "item": {
          "id": "136ca87f-7a29-4530-b27e-c3e5d7e69f3c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "382c48b8-5de0-4dde-960a-531ac4d5aa94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8997cfb-c26f-428a-b910-155307d500b7",
        "cursor": {
          "ref": "e625a2cb-5585-4331-9881-40f9c2eda163",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "90a2f197-1d11-452e-9790-c25adc215991"
        },
        "item": {
          "id": "f8997cfb-c26f-428a-b910-155307d500b7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1c0c9a15-2d09-4e0d-92c0-06cb1f17e988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128e0cdf-0122-42d5-8543-00f2e26461c6",
        "cursor": {
          "ref": "514ff46e-e9ba-48b7-8b93-87617028a655",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "585cc25e-9923-4b62-84c3-1a488a70bfac"
        },
        "item": {
          "id": "128e0cdf-0122-42d5-8543-00f2e26461c6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c3d3046f-14c8-4830-bdf0-d78fe08eaf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a99fca-81ed-4b3f-9f53-45a2a3262d8f",
        "cursor": {
          "ref": "8dfcd8ea-dc73-47d0-a0b5-a708713af42b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fa60f8b6-d0e3-43c3-824c-592d91f60aea"
        },
        "item": {
          "id": "f5a99fca-81ed-4b3f-9f53-45a2a3262d8f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "709781cd-25de-4764-8375-ac6c4b4e2b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afef4ff5-ed62-4185-8b5a-ca14c163ba30",
        "cursor": {
          "ref": "51f448b3-a1e2-4c04-bf3a-a1084dd4bcb5",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2f323daf-6065-40a2-87a0-2b45cb8b36e9"
        },
        "item": {
          "id": "afef4ff5-ed62-4185-8b5a-ca14c163ba30",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "187fec4b-7918-451a-98cc-0d671c6054a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2f2552-baca-42aa-b274-c0ab06a31808",
        "cursor": {
          "ref": "28603a7e-1bb4-4131-b416-a156435ab20f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ad150c9c-dea4-43ce-8a0c-bcdafe08648f"
        },
        "item": {
          "id": "6e2f2552-baca-42aa-b274-c0ab06a31808",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bdd7076a-17ad-49ad-82d9-7adb602cbd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c024bbc-0b54-416b-8d6f-015357755214",
        "cursor": {
          "ref": "153f2b64-223c-45d5-b8db-4df39191b73b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "46fd0d39-4859-4fc5-97e6-18c5bbead542"
        },
        "item": {
          "id": "5c024bbc-0b54-416b-8d6f-015357755214",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "57d1eaa7-d9b4-44c3-a00d-5aa759673e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91f155d-eea7-46e0-9603-f1acc6ce7f45",
        "cursor": {
          "ref": "007d9799-195b-4e52-9dd1-c02d341a0d4e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3baa3a67-62da-436f-aaee-43281c0c9e2a"
        },
        "item": {
          "id": "e91f155d-eea7-46e0-9603-f1acc6ce7f45",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4e6a3057-d98e-4b61-88db-9010f1ce94bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456a1722-f34f-4d3a-9559-b71ad89afe96",
        "cursor": {
          "ref": "688e4743-fc43-4a71-922e-51b2ae61567d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e8d9f801-4123-45f2-8204-1bfd839191fa"
        },
        "item": {
          "id": "456a1722-f34f-4d3a-9559-b71ad89afe96",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c6bf0e10-440a-4af2-8ed1-ef52af1052b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698977ab-cac8-4f38-baa5-92932c8b94af",
        "cursor": {
          "ref": "3b33ac3a-8d29-4124-9d9c-b9b857d7d88b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "89a3526c-073a-4834-9e52-8bdf2a5405bf"
        },
        "item": {
          "id": "698977ab-cac8-4f38-baa5-92932c8b94af",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a5a19eec-2e6a-4318-bf9b-88ceff6e1532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1980042e-3d87-4e86-876f-06ae3f728831",
        "cursor": {
          "ref": "eee6978e-d8e5-4498-98f5-99b5eceefbac",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a8cc8cca-8471-4606-804e-97121cf78e30"
        },
        "item": {
          "id": "1980042e-3d87-4e86-876f-06ae3f728831",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1ed6f6b2-9c15-45ce-a5ae-efb182eb26bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979a83e9-1d47-4414-bd2f-1cf6f70e954a",
        "cursor": {
          "ref": "be8bb00f-9808-485e-a4c1-e35669e071fa",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d3005938-bdd6-480d-959f-47a4b3aa3d6a"
        },
        "item": {
          "id": "979a83e9-1d47-4414-bd2f-1cf6f70e954a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e7b77ea2-3ec5-49ef-8561-132cbf08ab45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4cdee6-d278-4c5b-8252-3eb7f59a8a61",
        "cursor": {
          "ref": "c73b2dda-68f3-4525-9075-7a70b67394be",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "15c63e81-54f1-4dee-a91b-2b5f552f8495"
        },
        "item": {
          "id": "3a4cdee6-d278-4c5b-8252-3eb7f59a8a61",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "97f812da-6594-4a90-8d54-bdf29714521d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d5268e-3174-4b29-953f-e98d52b66621",
        "cursor": {
          "ref": "5c67e687-6979-41fb-8ba8-d5653f4e145c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "794c5ff4-f42b-4b22-b35f-e5730a6fdb95"
        },
        "item": {
          "id": "97d5268e-3174-4b29-953f-e98d52b66621",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8c178df6-4f63-4da2-ad25-b27b01df711e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9f0398-254f-4ab6-8cd0-b0236dedda0f",
        "cursor": {
          "ref": "5bee38b1-2968-4156-bfa8-14fcbc688d08",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b81ed7c3-98ca-45a6-b031-0385b5c57ab7"
        },
        "item": {
          "id": "8f9f0398-254f-4ab6-8cd0-b0236dedda0f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dbf96cd3-7a83-45e7-9bc9-2f1b774ace25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77471275-28da-4ecd-878d-8f6d79e79717",
        "cursor": {
          "ref": "8bf807e5-6231-425e-98cb-eee99eb52311",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1232bb51-2e4a-44be-8063-75360943ee84"
        },
        "item": {
          "id": "77471275-28da-4ecd-878d-8f6d79e79717",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6be3a7bf-6f19-4a65-9e0a-615c4cfe735e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd296d1-ed61-4bca-87d7-1b13710b5659",
        "cursor": {
          "ref": "ba23ccd4-da98-4e5e-b042-dac61daf86d6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "76d795d7-b301-43c2-8943-422d18cefb51"
        },
        "item": {
          "id": "5bd296d1-ed61-4bca-87d7-1b13710b5659",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "db5ed174-ed44-4ad3-a4a7-ca90e68cba68",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2632fbb-b72b-4baf-8303-19a17ff9a203",
        "cursor": {
          "ref": "0246b73d-ca03-4730-adf7-c69a3346bb37",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "565bbcac-2426-47c4-88a5-88769d39a039"
        },
        "item": {
          "id": "d2632fbb-b72b-4baf-8303-19a17ff9a203",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e92c9c86-fbdd-4d83-959f-e9ad9e92225f",
          "status": "OK",
          "code": 200,
          "responseTime": 3449,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2720f366-0763-4808-b652-824d57713a48",
        "cursor": {
          "ref": "ac96cffc-9a3c-4616-81ba-15e384b4561c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bbabcd2d-f458-4f64-881f-2e871caf0f59"
        },
        "item": {
          "id": "2720f366-0763-4808-b652-824d57713a48",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7ffdb9e9-404a-4e34-be9f-1bcbce9f2900",
          "status": "OK",
          "code": 200,
          "responseTime": 4689,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed499fe-341a-475d-98c5-2b98a95b4fd8",
        "cursor": {
          "ref": "2c2899c5-98bc-4699-82c0-0b2184083033",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0f86d570-e3ae-4f01-95a9-90f8d8974fcd"
        },
        "item": {
          "id": "6ed499fe-341a-475d-98c5-2b98a95b4fd8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "58039bcd-b0b5-4f7c-bfd9-228919ade89e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed499fe-341a-475d-98c5-2b98a95b4fd8",
        "cursor": {
          "ref": "2c2899c5-98bc-4699-82c0-0b2184083033",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0f86d570-e3ae-4f01-95a9-90f8d8974fcd"
        },
        "item": {
          "id": "6ed499fe-341a-475d-98c5-2b98a95b4fd8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "58039bcd-b0b5-4f7c-bfd9-228919ade89e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec63b452-7625-4654-88bd-19a5cc089d53",
        "cursor": {
          "ref": "ff4460f7-bbb0-4c88-ba73-be692cfc5e1e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b2ef6627-2977-4afd-b5b5-f2a35ae121c7"
        },
        "item": {
          "id": "ec63b452-7625-4654-88bd-19a5cc089d53",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e52f3855-5b13-4b5e-80b3-725a688e4d63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86665d2-721b-49e1-b9a2-26b18635d2ff",
        "cursor": {
          "ref": "81d98960-3f28-4989-b0a0-891fed9b4a86",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "09fe387d-1327-4734-9b8d-26d32ddca4d2"
        },
        "item": {
          "id": "b86665d2-721b-49e1-b9a2-26b18635d2ff",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "17e59408-43a8-4af0-8f17-64f1ad85c69e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}