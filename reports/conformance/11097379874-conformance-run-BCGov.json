{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b9f43679-e888-4944-aa61-d977b4ac9290",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1eeeacb8-8aca-43f2-b9d2-325c2571dac9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee35c17a-d895-4c6b-8c73-3a946a3be00c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e8bc3eb6-fdbb-4514-bcaa-49239789e484"
                }
              }
            ]
          },
          {
            "id": "dc27d1e8-8d7b-486d-b51d-bad7714a03c8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3856d4ff-3643-4428-ab23-33f82404b972",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "00402edb-bec0-4bfb-8065-35ca7f3fdf34"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "29198ef3-237a-45ed-8e68-231d906c94f9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e5efd9f9-9d17-4991-b2c9-a7b7560872a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "403cdc38-66ed-4cd3-8953-a6b16d7d4b1a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bbb1a74-2501-42b2-a04b-75ce2585c469",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc7d2023-132b-48c1-8728-7ec5da9d905c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a2530cb-c999-49a3-afae-e56d1148c487",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a6025b8-0c7c-4b19-ba51-a71ef52977c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e2010a03-d77a-4a8f-ad7c-b2b1167b500e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd65e6fd-6e68-4f4a-b8e3-7da0614267bb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f16e5b53-56b2-42fc-bc2c-2bcd34bcfad2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "303c3d39-9719-4dc0-8832-832408551f08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1b6c03a-7b15-4aec-9e18-53bc023df4f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce10193c-35a0-4373-9559-3eb7c2f22c26"
            }
          }
        ]
      },
      {
        "id": "3405935e-acfd-48ae-a09b-edc75bf4e974",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c8d24a25-23bc-4325-bcac-6ba0d412dc52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10f7cbdb-be8c-4dc8-900b-7f1ebd616976",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d5a7a0b-0c3b-4b40-9e62-6cfad0fb3e08",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a2a0b8-dd9f-411c-8c1e-67d3245f52fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "890feeba-362e-40e1-a057-38ba0fbefc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49c47e4-6fcf-4f45-865a-adc536f3d69f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94eaa14-5bc2-4290-a615-0dd5fc87b47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c83ab96-e98f-4b76-a5b3-d6777f71108c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7b86de-4896-4fbf-8aa5-7137c19ef07a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c8a6e6-f3b7-45a5-8995-89c51284fd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1baef253-2eb5-4059-a8ab-fb0ebbc4cfb9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "512b1e10-0546-4b40-baa0-81861e3c72a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b9940ae-ab13-451c-b8cc-55b94761c656",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ec1d1f-e29c-49e2-9480-4616541d2a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9b2ed98-b7c1-4c7b-ac83-d6b1cd036a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f101a0d0-f196-4dc0-b6ac-bbe06bb2f2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2bbb34-2ed4-47b2-9404-574263c8bcc5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d00c2939-1947-4342-9cb3-91074fe5e2de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70526794-736b-46e8-887a-c0016967f2c5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e91f35f-708b-4924-acbf-a2d15ec83197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "354e2b16-d22d-49b5-a261-44e03843ed2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d831612b-40c7-4ead-a09e-964836962d48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fe5b5f28-65e7-49eb-a218-e93f85d5cd4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b792b38-ab62-427d-933a-9eb416f5af84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b0e7dfc-ead2-44a9-8f43-ae0ac8647e43"
            }
          }
        ]
      },
      {
        "id": "3f0f3026-64f9-4def-b363-fe3035fe97f9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c2d6a669-e539-43be-8eca-f772fb8c7e49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39ad0cf8-e6c6-47c8-b490-2abe05084412",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "043e8be3-c06a-40a8-9087-13aa5bb0e79c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcb247f-97eb-4e1e-8fc1-ce40f4b764f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085a5c7f-062c-407b-a3db-24c957b2c95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e8ade5-f227-4524-a124-09eab837bd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7609d07-cf94-4945-ba28-0702b9d070b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ba6c37-fd52-4a2f-b5c4-9f331b21a901",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113cd1a4-f868-40e4-be2f-bc77a6630e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73baee4-e7fe-4e18-a005-eef7f74c06cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c3c75b-e347-49c6-a638-f479d1e0fcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "221adb06-a1d9-472f-8bb3-dcd1788f0445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39380d62-d6b3-4c05-a009-d0420fc2cf2b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ad4491-eac4-47dd-aba3-ace2884dbf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d2d7f4-1b7d-4be9-a956-e03a24f0c3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c93d56-0db8-4b69-8f3f-18dd0f696a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce8f69f9-55ee-49ba-8b69-9b289c58d607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bd1311-a09d-4efe-9356-0f0cdacb7f07",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95f73e3-cc87-4beb-a7f4-d5cbf3a99b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e2e5ac-3e3e-4828-9e73-156e7f0185fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713773f7-cfaf-4324-8766-880936d3bbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66b59ef6-5d4c-4279-b5c1-8487bfc521d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10434751-b3ed-4acd-8f13-5ee09383d9a0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d70e58-0055-451b-ae50-a0d2a2a71bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b91f62-fa38-4147-a7a2-552e47dbba40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04798c56-b9c1-42f9-b66c-8730a2754654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8adfb8a6-03d0-4964-b4e9-056f97d4e69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f7b36b-262f-4396-bebe-79a55ffc3d4b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fdf6ac-73d9-4a7a-93f8-743083b91d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b30b3a-2130-405c-b380-6bb84cb6122d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f61d77-9fc0-4ec0-9876-a4032c79882a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a73c09d1-8285-4c31-8cb2-5c6b23120fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd6a53c-b5be-48b8-b07f-cee11f709c10",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca7d2b3-5ccd-4413-8387-f182b92d3710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769b8cab-83c5-453c-9b36-9b6a0dac8de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f499a510-308d-4b2a-9c3d-d73b95ad84e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5684144-8c60-421b-a376-a07a0aa90017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05ec6d3-399c-4db1-8478-a4ac3a73e813",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb30893d-233a-41d7-9910-9f41c99f16b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff9bed5-2538-4fc9-a115-ccdcbf056477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595e9f06-a7cc-4ddf-b0d3-09762b49d890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "484de825-210e-47bd-998b-8a4d80b10d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4e1316-550a-4249-95ea-578dff4f4495",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f7672d-3244-4b9f-bfc6-0023a5fc4973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164ef443-d662-4389-9f7c-51784aa7414e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf4f1f8-a834-404a-ab83-45ab05fa1153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90c8b568-010e-4fb8-8d74-3dfba0cb3553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4f5a98-1a4f-463d-8bad-4cbf3ef0d7e0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de844e61-8987-4c96-b70d-c225691067f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b188b6-6aa3-4102-b1d0-222ff9af4065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f88be8-4209-422a-a58d-a1335afe85d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a79c3f15-5467-45fc-93ba-2526eca6fe6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ab1a6d-55d4-4159-81d9-c600209cda1e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d885110-af73-424a-b669-3e87a326a420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b40d70-fa12-49bc-8d78-a93209f1cf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f1c609-15bb-4e45-bbb6-b74a567914d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "716cd24d-d254-4c5b-8331-847bf21db4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb9546e-6ec0-43ed-ab5c-faae39481784",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befe347e-26da-478d-88c8-6e2b58babccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189d4bfb-9386-46dc-b7fd-919d36bd1a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4812da0-4c86-47f9-ae2c-7ca766a57313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a6dc8ea-00a3-4596-8a4d-e85d65770e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f71000f-80e7-4a9d-b72e-f7608be59ec1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620f66de-37a9-45fc-b408-c55c18a5a0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89896db2-2e3f-4027-b32c-5d50ee32c01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121040f8-4f4d-46f0-95c0-6b69c152500e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c8e1be6-b185-4b00-865a-1ae96414a38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43f3b85-42c8-4821-af02-294363b04e6e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d488a4-c4b6-47c8-9851-45f915a90a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a39f459-3dc0-4398-a335-9ede0d7a8a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bc43d9-5aeb-4bb2-b9f3-b8020953a1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec5c6cce-1249-497f-8647-093ad00f101b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979fc03e-5fca-4a54-92d4-bd8759812001",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee64d22b-4be2-44ae-8f3c-4c38280dbc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a4c489-9e6c-4d8b-bc97-6f85db0eab93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c50b831-d950-48f2-976c-7a58e4e85417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddbcaa1a-97c8-4d70-a204-a61430e15ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ecc47c-367c-4fa8-93b6-d0915d9c5145",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faece23-402c-4816-b419-f0f8114176ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ea35cf-cee3-4ce5-b747-9b135ffe3b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f8c968-fd7c-44dd-91c1-b05d692b985e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "226a8af7-af10-4298-bc40-eb6c95f8e7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf13cc28-8ee2-4435-95e2-f6332e2a022f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5facfb2c-4450-46bf-8433-909e6a152325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4ca18a-0a6d-4b9e-8274-457682de23a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d900aedb-8cba-4e72-9661-ee96c95a9a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2502e6a8-8dcf-4eb3-9f09-04637c206e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b563c8dc-6b17-4339-b66a-2111f1f682ba",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e56bea-ea9d-4ea4-8e3c-a70d368bbfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e47b44-a7cb-4979-90fa-b734344714f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b972334-e707-4cc9-bed9-b700fee1b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9ba94b-09db-45f7-aba5-ba40a4010e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce2adde-b68b-4250-ab58-498d40746e01",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e434ac-5e91-45ae-bf79-930bc5fd5fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fa16a1-7045-4349-a2ac-ca63dbfbacd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5dfc5b-f621-4789-914e-3c83ca6d5797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c34bcd00-6d9b-4e1c-9d4c-1ff18923b076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178d8003-4a10-4950-9357-40a418c26f2c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be47e08-c998-4c9b-a079-90c62652a859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f96016-1c43-4a54-851d-e92da7338eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8439c62f-bf5c-43e7-8528-a567d928784a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "492775df-0050-4ab6-af55-c283e29764c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd8189b-8f01-496d-b554-469447c0d790",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7538177b-ecee-43bc-93ee-34fe8a6ff852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a476a1-0d73-463d-b491-245ca8aa17a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bfcf16-527f-42df-919b-af437b9a82fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c873bd82-9f8f-422b-a9d8-58ce83b85946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967e264a-5b65-47ac-a095-61068d27c5f5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccca765-a0a6-42f8-b621-78055f9c6cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64562e19-5ff4-4831-8acd-591a1e8041e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dffe06-a662-40c2-bd7f-eef86c55feb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a99cb35-feb4-47d5-b76b-9f13200d9f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95d4e3a-b8ad-4d5e-9eca-c9a919d12f36",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571e3e6f-d23f-446c-bea8-6548302ed60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ce68de-6cb8-4919-9980-8fa2ab03569d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3adac80-d3ce-4c78-8c9d-4e34e4a9ff1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9371c23-0223-44a3-a36a-b554af72779d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3a834f-0e11-45ad-be74-99bf5ed708b8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9941d765-0ea0-4862-bef6-296af05c1116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17160f3a-e2d0-414f-83bf-4fe60e8698b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d9acb7-1333-49c0-9437-c3fa08e9c4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e31b9f5d-78d5-46f7-a1f3-246150cf8426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f477e9b-506b-4e3b-aa0d-a3bace3013ac",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a516bbcf-3edc-491d-8423-13826aabbd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1fe2ab-1006-4fcf-891e-de64050a3bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef5b8a7-f0c1-42fc-8913-2b2be57c8358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a86e7ab9-27e4-4de1-915c-c3aa37b54b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d267558-a6b7-4dd0-989a-83d9e628304c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013a0f2f-89c1-4784-b0c9-b205bf761983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbc3ee8-3a32-4e41-b943-2c367d734fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de1e4f2-4c45-428f-9810-5a1316892e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb70238-960a-469c-bcaf-687948ed87a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e787f378-5f2f-4789-b488-e9d23ccd3099",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd439e2-2981-41d6-8268-636a5c7c5d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcdc1ef-01cf-49b1-9507-54fa79251443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296243f6-e0eb-4f36-9880-c918fec756fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "acb01aec-f944-4ada-acf5-97d41e0cf863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc73698-b802-4465-a141-b06ee55e10a4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f99af1d-c676-43bf-8d5b-068d25d98332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600a31c6-3346-46ec-a091-850440a0aa31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f69d584-5117-4468-9106-d4564c01dc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f05a02-ee0d-444d-a018-2637d8e6ed26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822791e4-a139-48e8-b444-63d4498db9c5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c7991b-17c1-4628-aaea-7c3119098dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df4d748-9e24-4b48-9be5-0761de471b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304266d0-83c2-4d37-b328-2ed8394bf760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44389b46-61ea-40b9-817e-f4f1cf9d1395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd23a5d-44a1-4ecb-a538-a6252ab0af96",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f3af66-f5cd-4510-be85-3674c56b0b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70d363b-ca3d-47a2-b252-56a2d5ccc2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f97e00-5e8b-425a-9ead-578792a8b8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "438a735a-49e9-438c-a7ed-4cd8478085d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b007f74e-cca5-49cf-bc86-4bf04c68b547",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adaebb7-a2e0-4203-b04e-5df4931622a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5902e146-3f1b-4240-9988-54fcfdd1ef76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b93d96-b611-4a9c-865f-6a8e73ecb937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9964aa-65da-4c6f-b35f-77fcd9ac9f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a04943-e834-458e-9dc4-367ad5f767da",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b9011a-1b51-4182-aea5-85756e6e78f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4daf81-25e6-4c54-a4b3-bd8aa8b2e931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39e26f8-e624-40cb-bef0-4653623c96d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c803b4f3-38f5-4ec1-a25a-2bfb8dbf31b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5646d4-8d0c-4023-b33c-7ba2afe98e83",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ac6857-4250-4a96-952a-f352c29b3733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041d3d4a-08cb-475d-afeb-99f3ee0efa40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450d880f-10a9-420a-8487-c296a7e2fcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a77147-a1fe-43a7-96f4-28a9ae160ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c19420b-9566-4be6-bcc6-4d664602d75b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe04759-6431-4711-81e2-ab9a40b2342d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc84a24b-1ac7-4409-83e1-d6285e89e4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8303b6e-1583-423d-9a50-d3b53f1b8cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbe8a2a-7db0-412f-9143-3e16ea502147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46044a92-5245-42ff-949f-696b365d3354",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac214e8-c371-4606-b3d8-8404aedafa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed258578-90bc-42c5-9631-5af29d5dd5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9165c297-799b-498e-88dd-8299d1f7a63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "43b4ca46-6043-4da0-b7df-474332213f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23d5f60-0708-42e7-a3c9-e9892e5694c7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0750fcb-9939-4e42-b078-d91fdedf401e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "feccaefc-14a6-4120-80f7-4ace5a1783a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3822bc3-f2fd-4053-b773-2778eab977e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c48676ee-3a51-43e8-a5a4-504575cea75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ff2625-e5d3-474e-a69a-49b9d6472701",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b784e94-dfa4-4a2f-bbc6-96d56aec89f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a625873b-c4a6-4733-b713-84123ff69164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30af350e-2fa7-4a53-816b-8d3e6fae6a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6832e23-62e2-47d4-a722-bbda8f5e4a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6092dd-0a44-44a2-80a7-460e277796b8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1302b6e4-0fb7-40f3-8f13-b1070bfae37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca6ec4b-e26c-43a8-9a25-3bd5cb99a1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6048a103-8dc6-4f9e-8959-852bd3834912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e48b16b-393b-4d23-bb15-147f24ebfa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f806e818-94c1-4ca2-90a1-034070163852",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b20e045-1a25-4f55-a102-8bf1468c7e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b31e484-8121-4cb8-a307-d6a9621bc29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c6733d-4632-4af5-b8c9-74dee4e2ef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f412a0ca-3b7a-478f-b741-c0e3bfbc632f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4153c87f-e767-4f37-8b5d-1835a1629539",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e53e72-b0de-4aa5-8f17-b3ffa41899dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb512607-35e0-4998-9b9c-8f4fc263de21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcf73de-af2d-42c4-80e6-1379ffe8bb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff627fa4-9386-4d56-a7a9-9a651ab72ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9186ff-126a-4fc5-b38f-288f40272950",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a7d402-c554-4434-8560-b5c497a1f8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062f8896-4072-4d75-af76-0408805f6274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed37bb3e-b4f7-4713-a9b7-512b0921af95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5eee8f-d6ee-4fe9-9fb1-69aadf919eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25c5cd0-8656-4ca8-94c6-6b5b83e3d6d7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e8efa0-af89-4168-a23d-4b9377d62b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0e4649-d958-4542-832e-84566e1f6bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d63eab-d719-4da5-955b-35d83d932559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1914fd7b-8774-4a06-aead-e6e3d5655b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cc7994-2926-4616-a951-6e4702a6b3b5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcc4952-3618-4a51-83f6-ffeff6f3c6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb23975-9691-4659-9c6e-876e78e2640e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf649f89-a24e-4156-9812-792201485bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b85ae534-72e5-4f6d-bf49-c9724ab84427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fadb37b-03b9-47f0-862c-2d4576f997e2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf62478-a201-458d-b51c-1c4bcb28a8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db97110b-1b7e-4231-a0c0-517fc1b2ff82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f812026-3039-4def-b006-013a44c5dea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6b309b-e395-4f88-9102-0ceb2546c423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c04d50-e31e-4832-87fe-9cba390be931",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e375536b-50e8-4563-834f-daf8847bdd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4044516e-e76c-47fe-9555-c090a4b8d318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d05c55-6496-48f9-b029-c9ba0306251b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1c8587-7cec-4301-b5d5-42ab16c65a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38298e05-5c37-45f8-a293-1ac96917c228",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d164b2b3-ec38-4048-9dd8-4d3e51ac6292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e010897d-706c-4289-857f-f61041d1beb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf667d3-8ed1-42d0-bb8c-623da54f268e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4852d8-4fe7-4001-b908-15b6a106ab5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e17db6-8a7a-449e-9fff-cd1c7a18b800",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6550499-6a73-4a9c-9631-5285d9d482f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0466a37-1d79-418a-9c9c-2c07c1eb37ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4e9670-a221-4060-abf2-6615ace62c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5f7d85-6634-4011-9afd-48d1397f8b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b6ba9f-cca8-44d5-bdc0-b5e8bc6fcef6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bf8e4a-7862-4f58-8e8b-41a9fbea76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9329662b-8205-4664-95b9-7b579e380218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb762cc3-e796-4e13-bb99-5627ca3be320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d47f99-701e-4452-80fa-44085ec99331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328d415c-aeae-4b5f-9306-5e775d3e5f1a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8941ff79-8b0a-45a4-a2b9-dab95ac30869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fc3f99-c70f-4c9d-b3b6-85ed83a87e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2759400-eb55-4873-a985-83b2369b17df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "098ac891-59fc-41a8-830d-8d7968eccdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426c5fde-9bb9-492d-b41d-d094a69e18f1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a2f972-5b66-474d-8fc7-5fb4b8e7df52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0fcd89-e945-4ea3-bb19-0660d6ece3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4722c48-73f9-4b64-8455-785207a6f777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "120adbe9-7f18-4890-a394-e5532fbaa67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e381d5f-14b0-4929-ad43-1fdcd931124f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43a95e1-76be-4ab3-bcea-67fd7f4e936a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d79ba73-e7aa-4e5c-8371-a29903bda54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc55451-b2a1-4332-83f1-5467d1245d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "75da60a1-ca5d-4e51-b328-06709cda010d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624c86ae-729c-421a-a3bd-28072bf4b7d4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf18015-e2e8-4d53-91da-aadab740e18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc4612f-f614-46dd-9c5e-e9038aa37e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65858a5a-f800-4834-9a67-dba3996926ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c5ebea-7596-4f60-b01f-d2a950ce770b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a047d58-3274-41e4-a3e9-f71ae05f7358",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03218699-f31a-4ff1-ac02-1a733bebd4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35eea9c0-9b2f-4223-86a9-ba382585da92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d924145-d6c7-40b1-a533-cc7a969d9fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30433c2d-7bb3-4869-bee8-2905f1919e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fa82d2-e9a3-46c9-998b-ead8527da253",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9847b03-575f-423a-b37b-50cd13f74bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8dcbe25-d67f-4b1b-b1d5-8af7109941b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309b92b6-223e-41ee-9dd8-b35d90964f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae814f96-71f8-40c4-bc8a-86a88a0ca306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d1cc05-554b-4479-b885-bf17b878e704",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7733059-040e-40f3-a927-32e50de60c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5fd41a-4206-438b-a8ae-fedc4c86c449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3092b591-771f-4154-82e7-9ef126ff14cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8799aed9-e88e-456f-89a5-7cef6ae3e896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9ac749-c36b-4253-8180-32befa5a7155",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6f120a-dff6-48c7-a223-dd9eee8dc5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2402d1a6-9ff0-4d7a-ba17-ca49d6ebfb49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcaf930-3303-46ac-b27b-062d754bae66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "97b64f65-2598-4735-af41-88a5a15383bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7575ca-9e52-47cc-b5bc-d203df997f5a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b786690-b2c9-4b1a-8f42-190a015897be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0aec63-0228-475d-b6d3-56f324df7a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c857a7bd-06da-4273-a2ee-53c89b9637e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a23680f7-d585-4eaa-a222-211a864b0ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b616eb3-3f68-4ed6-9972-4f6ef1f63461",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3ada3b-2a70-448d-89bf-1d2ae14f0c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b58465-dc6a-4261-b020-1e26c1f3618b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db86641-ead2-4446-b962-cb6cda687a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a31a7515-0459-4dfb-bfe2-32ebd5acd8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dd0ea5-c856-4e3f-960b-e0051aa98fc0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6325e999-2e9d-4523-a131-923212498eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cafb4ea3-7b5c-4bc7-8201-1e0bfe2c5d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98a8d87-0e56-42b8-8ec1-549554312f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dad4c813-dee1-4131-ab56-90a3e8f376a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a72b74d-fff0-41ab-9335-228ebf9c02b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de00296b-2b90-4b4f-bd83-41402fec0363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e85798-9d1c-49a0-b7b2-f5cda028adcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd3ac68-b071-49ab-9910-c398a7d35b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ee6b40-3e80-4adb-862b-32a59d7305fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78b7b64-92f5-43bd-9a11-aa24b199578e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cd1e5a-e97f-4140-97c1-150d9202b428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abaac2ba-9b1c-491f-b246-17b38cc866a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1087e7-6590-467c-a921-793b632850f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7de6729-4876-4737-b9cd-8c20be6aec72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28d96fd-e844-477d-81e3-9c5d3cbe7c8e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646334d5-0a48-486c-bb68-4fb757cdbb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ab4303-2559-4aea-9fca-fa2267c72607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f16a6a-6c12-4aab-8edb-ad84c8a96622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd224664-ceaf-4a96-aa0f-0d0789af534b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8c6cda-02e0-447c-a24a-3e3f4743a715",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787acfff-7347-461d-99f0-8fa00da5e2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0987dd12-b438-42d6-a419-72d2c0ac6400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7a9147-8921-4a60-8cae-84633f2e4ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f165fc77-ca09-4a68-86b7-ba2262f89400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a848a0e8-7fc4-416b-ae20-5d7e55cc0628",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d34e869-d2d4-41f2-bdb8-04a94e9a83b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46f3690-19c9-48bb-aa57-467bac778007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba38508-e4c7-4c48-b332-f7af77f5ce8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b1018a-265d-4853-bf5b-6cc238209299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f833a5ee-e69f-4cc6-81a3-20526635c74a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5997bf65-2a82-4222-a87a-08b3b098afbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e185521-dbb6-45bc-9259-dc877500b406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d96c3cc-39ee-4c97-bf3f-8afa614871cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb882777-b12c-42e3-b021-28028a7543e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb44968a-b8ef-4e3b-bfd5-ec56090c7335",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ab62f6-9407-4106-93d2-6b4914ed0f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af430ec5-17d5-430d-b874-16191111cc43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a36d07-28b2-419c-bffc-b67e53d1a48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbe5b61-6b86-4c6f-99bf-52bccfdd2489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e4ef8d-2f85-4fc4-87f2-ff197e9d18c6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce842ec-42e2-42fb-a1be-a7c2ee49c217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32def226-575f-4f0d-a422-45270a07fb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d4f972-0741-4d51-9081-00c76d65b1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc24851-f8a1-49b8-ba0d-09bd8b7d86ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e13c39-cd7f-4689-8f4e-a1307d23b443",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b88a2f1-01ee-4c16-94f2-4f8231862238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7254ee0-493a-4626-9ca5-6e0651c0b585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53a29cc-a039-4009-aaa8-715c22c0e337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "87dd5764-e18f-4694-98c7-24aef7fbd1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42dfd0d-9e05-4898-9d26-50172e02f80d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7835cb-8b54-43e9-8f5f-9accf0476d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b669bf0-4781-4775-8612-4f7f6673118f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3910159-a958-4898-9af7-239cbd4aab02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "903aaad3-a650-4896-b552-d1c96554c6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d385458e-7575-44da-adb8-ead94c99da9f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd9b7fe-6537-48f3-82a0-edc20843b127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0f0b09-9489-4bc0-9129-fadeb1c50076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed65c67-0345-430d-95fc-e24f4336496e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74edc40c-0837-4053-abac-b0eab71f5f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f503e7a-bb63-4da1-9fe2-849aebaf7435",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1216ddb7-753c-4eae-bc14-98a1f9d29754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3e8955-8744-41b1-88c6-639e552032d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5a3d7c-c625-4fc5-92ab-ec8c3b1655ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3150c1f1-a384-479d-b221-6d1a51899a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a3d160-c0d7-4bd8-8d82-16ad54fb529d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765955af-5bcd-4d29-a24b-ecbadb95d207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543c7ba6-412e-49c4-8fa1-6093517c7016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678add97-0dba-4158-b0ea-17d1c2f0618d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9afc66b8-522b-4718-9511-7d24a0f67620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08511884-44be-4651-bdc8-4516a0063000",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ca5d82-b46e-49bd-ad66-a59e23aef336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4440add9-d7c2-4bb2-83a3-02e8e3a08ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e58779-651f-4383-ad10-9ee9f1c3719b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "750293e8-7663-4360-86ec-ee8ad100b93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da3b63f-07dc-484e-b076-d4559db864f3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ef460f-730c-4ad2-a2fb-3e50eeaaaa5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302dbc0f-7cf0-4bf0-8d3f-bb0aafe82e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb59a05-0f57-4dfd-b2eb-4172bbb6e98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8b89df-3553-4f7c-8090-e8d01c781c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34a7070-e973-40ce-b04d-83df2295b9f7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98ec4f3-b029-4a10-9a66-43d1fae5b660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25b2fed-66ce-402a-a582-d932ef890b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce38ff6-8d4a-49c5-b6fb-69917a4995d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0967afc-9e32-45eb-b213-77b67a8ef92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb0799d-73f0-48c3-aea1-c163ccc18814",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbcc595-9721-4463-993c-334007a7e7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f111d94-2a5d-4faa-a7f9-9b74e3babb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b88216-a962-4ea9-a733-78c8688dbad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db30b680-cf15-4e7d-8af7-0ef3420dfd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078dae38-e8ec-429a-9f7d-f0bd8800daf5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccad4d1-7b8e-4b0e-b028-e8907aa7ba19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954fe8bf-8f2a-4f86-a94a-ecd96bdee297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63465088-87e0-47db-a40c-09dff9680813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "885b0f62-e385-4d58-a16b-2117514eaec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3de77f5-c431-467c-88b3-050a3ab83297",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff9eb9f-e2e8-4d08-bda0-c0aa60422183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c27bdc-23aa-4d93-abf2-fac110ef71b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b7b1a5-b670-4c5d-9057-76c7ffc2ed01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bea8f8-2e99-4942-95c8-81961f6b709c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f01b1ce-66af-4a33-9486-dbdc4862bdd9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6a4170-ee69-4b43-bfec-e30c13888ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53569cf-8eba-41f1-8c62-1aa150e48f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f004d6-286b-46cf-aaef-5ffe3f65f29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5bd206d-977a-4ac5-8cca-5e66a2da6e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5aeae86-d168-4681-b644-07b1834b1112",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4c8c05-c81b-401b-9af5-bf7bb2f54cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c52428-c773-4f77-aded-8b25692c25cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6bc62c-3f30-42c8-a5e7-2756912dce33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55f70a75-cd09-4953-bad1-b6d82151b541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d746d6-aba8-4aaf-967f-578785432abc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff27b9e-cbd2-43e6-b9dd-be8ed0612a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366b4a25-8255-42c8-8300-3eff777440a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360ec6e1-812c-4bb1-a549-8290f3e0328a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c17ce0-bb1c-412b-9feb-0142d2e0886e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8218aa-e7c7-4599-922d-f5d777119533",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d7dda4-b77e-4cea-81c5-11af3e17e8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6d230c-0028-42ce-9d46-c64b3d28f716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6f0f26-7b79-4a2b-b37b-673d3b735ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "537fb896-93ff-440e-90c9-afffbc2e3996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f79c0e-bf96-44cc-a030-c408018cdd2a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56051725-302b-40c7-8643-702ad9d67a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ae14a3-351c-46b2-9d17-0860428b3c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a0eed1-a468-4e67-a518-d028738b599d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6932ab07-7bce-4d54-9499-ff79756bc687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd740ef8-5963-4abd-81ba-c95ac82d59e9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5eb546-7538-4ee3-980f-615ef33aba0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6d08d8-7ab7-41f3-8c51-5ce88a8055ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25b6f3d-bac7-43f0-bcd5-471c72d64821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0786b36a-8f43-4c7b-a056-01fed5e5b15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63deb577-4c94-4dfe-86ee-3e9a36e57390",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485b8b62-48dc-4a89-8af7-97985a8e376d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74c4b51-22df-4a8c-8760-04e83ea52f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bb3116-ddf9-4dd5-a7cd-25a94623d0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47de6f15-4c03-4d33-a560-f9cc9863ad8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33b851a-a54f-4c50-a402-f387615b3bab",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d854759-8774-4bcb-8abf-2820ae6f2ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00483c56-38eb-4aa7-9bb3-2baa3e7ca39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79262bf1-7bba-42ce-be82-fdc433ea06ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f667e566-2c1e-4d12-972c-ae4a92aefbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b54cf53-f8f7-4d6a-a470-c62564ef4629",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d033966-a153-4060-b462-1f5707dc6e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a05db1-f0b9-42f0-bf40-f8b4abb02fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a282075b-7bb1-4e4d-b10e-3c98292a0443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8e502e-32c9-45de-9772-60f7ddbbb161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f9c648-a41e-4225-ba27-4527b7265f80",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa30993-d691-4d35-b648-1e6c523e7d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ee203d-5157-4cdd-9f96-b7ffd8a212d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a7f240-32fc-4efc-8761-61b7af383c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "40d6991b-4d4a-46d7-a20b-8cb732a0b072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1ab9f5-29c3-435f-89c1-7e431e716043",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2935d9d-a57a-4476-9bae-d33501e5f113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0d8d0c-9dc2-42f9-980f-e45e4246e431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab67ddc7-795b-4d42-a76b-c7e40ff0a1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "60c38495-8b9a-4d6e-9aa0-7981ead0a1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1769d5-8f61-4f64-9724-ecf1ab07fd34",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0636c525-fe4e-4d5b-bb4c-c8cd9054d14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d2ba04-5cb5-4abd-a6b9-7844b144d791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7226f038-4794-499d-b27e-2ed7478eb230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "385f5e5e-aeb5-461f-be97-b8e04bbc8541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3398243-d3af-4395-a127-e59ae3a90521",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e41c9f1-60cb-4ce6-8115-c56eafedad61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4321f33-4aa5-45aa-825b-35220a4e0534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ff975c-9ede-471b-a731-374e74633f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d43e0e5-9422-4afb-aaac-366bd41cbf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fefcc3-f767-4255-a736-8bf449839b2f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caef7dba-6a4a-4dbf-98de-f39f80e97c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1dd670b4-0627-4170-a344-b99262f5768c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e147b039-7674-4bb1-9426-1ee86da4dfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e652ad02-9948-4566-84ba-bd1a5b072e62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d9f8262-f07b-488d-8e34-d2451b4c3164",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff2eb11f-aac6-432f-8ce7-f99083138e9e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b86f51-0da9-4bbd-8f5a-0e30ac8cbb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09256b18-43b0-4a59-a68e-7184443468a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ff1ffd-3cb6-41e4-99be-02c15c276bef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d3317ab-bc53-4331-8b18-8b4b78040827"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ceefb7f0-a90e-4caf-bd18-0933b9d1f0e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ac81689-b95e-4a5c-8d1b-e932f60d298f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57615afa-256f-4fe9-bae0-e6525658e8d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "683a1767-467a-4ed0-a438-21c497d888df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ccfecd1-77d3-4a40-b0ba-fc8a56df4f05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f682daa-f07a-4d1c-a15d-f99fe63f1f51"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "522c5722-810a-4bac-85a3-a991ae8d8c90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7cd91309-cc21-472d-9f5e-099b7e70cb6f"
                }
              }
            ]
          },
          {
            "id": "44aaab60-faea-4bfe-943f-2c8078861418",
            "name": "Positive Testing",
            "item": [
              {
                "id": "648c3f44-deb3-4f26-9558-3fe1b7b33a58",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "481f5b5b-1e65-41ba-bed8-e557dc558649",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77e1f45-cf0b-4857-8bac-366a9af709ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "90b50ca5-9d1e-4dbf-b9f5-7d2f1edccbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b17376-ab1e-4f34-b2b4-68068683904f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74571e35-ca31-4f02-9e38-7dd52315cc55"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "93e866dd-1703-4fc5-b934-b688a15e555b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebd7c8af-20e3-4f0b-8d39-a50e8f85c293",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "beacb1cd-b982-450c-a53b-159c5cf9d7ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7c074ad-4688-47cc-a18c-28b86d6c1c8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7de3a3ca-2855-4a93-b054-5c19a038c817"
                    }
                  }
                ]
              },
              {
                "id": "0bfb6fd2-3180-415c-b378-a2fb72f0b021",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e191f316-1800-46d3-a47d-cf2dedb5e9a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5836877-3374-4af3-a0db-85c554e2ea89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8af51c13-8489-43f1-a913-e4f87823c78e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73a71c92-3c88-422c-b4b4-5a96e660c33c"
                    }
                  }
                ]
              },
              {
                "id": "c99c0ce0-9e80-44cd-b4e7-c684cf7f7cf6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48370d26-dec1-4ccd-8416-fc3e342b44a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ddd90bb-13a7-435f-8810-84ca7872bde2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fda473ed-5bda-470e-8baa-ee92b99219d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7d381d3e-b43e-47f2-bb34-756789958c39"
                    }
                  }
                ]
              },
              {
                "id": "a43d6702-3414-47e2-9ecf-10983ea9a538",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9748e47-853c-4671-9d60-a4a5bae1a115",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7877822-f3af-4772-977a-156c57f7bf1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8af9776-2dfd-4b12-996a-795c6a93d516",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3843f9cb-2462-40a1-91a5-8cf9fcf9a2fe"
                    }
                  }
                ]
              },
              {
                "id": "70b57a7b-e600-4f25-a7c2-6c31f868c870",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50ec64c7-3fb2-4884-8b94-4da97e5801ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94a73145-2d30-4236-8fe6-3856369e737c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bf056fe-4577-4d96-ba0f-69685006cad4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a7bc89e9-d269-465b-b78b-c9c954b19736"
                    }
                  }
                ]
              },
              {
                "id": "645872a2-511c-48b7-91c9-4aeef9a6a1c4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf1c45e6-473d-4153-89be-724d6c6654a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9cfd90a-8c9b-4227-ae08-c5b2aac74cdd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c907d998-dd58-4235-88a4-cdd8b8659d33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53920218-2768-4544-93a8-96151704ba01"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6bf531e8-a8e6-41d8-94c9-2f8c6dde35b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6ba0162-9905-4573-b65e-b741ccb31014"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "073cc11b-0aaf-49fa-8711-5c0cee8b6efc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2674b80-a3f5-4bbb-9b13-2a0f1170a843"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72d86c6b-d38f-458f-83e6-4dac44e9a199",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c393a616-5b7a-422b-a75e-c85ff8f059c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34b63937-9466-4505-bb7c-75b4ea5f2497",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aacd2a01-2336-46a3-843e-e5b1bb334f33"
            }
          }
        ]
      },
      {
        "id": "5ff31ded-25ea-47b3-ba3a-3b7b731f1038",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "94ad9858-e573-4c82-b0d4-945b990b3a61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39258694-53fd-41bd-afa0-b46be4f375ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09dd85f2-12f3-4c1e-bfd0-258a3513b595",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735b0639-9728-4642-8e65-e3d2cafcd2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdb7249-64e3-4170-8c66-0b226d910985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dc3343-cadb-467d-a164-a41b62315d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "365fda90-6da8-49c0-ade9-c2b8deeb9760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531875db-a48e-4087-83fb-8b63bdb363e3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b9cb83-131c-4da8-bde4-fb8de20f6e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86441648-04aa-4ea4-aa01-ecf11e4a7ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb22c592-8033-49e2-bab5-544e20ba9c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab2a51b-bf40-4634-92b1-d3ffd0e4278a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa185b3-cdd7-4478-9504-eb9a5a63100b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76044af8-1137-4163-b1d6-8d7aba17a5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a90455-6d95-4853-af88-3cdd813fe840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f29c6f-ac3d-4e98-ac46-8dde2fe8bad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e99990f2-776c-43eb-b369-381d8bd6b55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf7f86f-aea8-4417-acbb-a307811599c1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e1a5c1-8d4c-4bdd-b154-539f60c5463b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdee8c8-a318-4f15-94e3-a9e6fc38b59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cea355-5e2c-47e3-94c1-8a6a974d567a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4667d58b-044b-4a95-8093-6b36449d82cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68b0d27-aae0-4df0-8c5d-2c4d86e1ea17",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785f84ad-177a-43a3-a4a2-30f3eb04fdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b2d893-29d6-4c47-ad84-7d2c82d53ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6075b05e-000c-472f-97d3-1bd9d8b813d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59b5b261-0416-416e-b8a2-18beeca34f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31330a1d-e9d9-463e-a0e4-eb609e8e919c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4be4ef-3565-451e-8d97-6c358a36af1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c538ac5-d3f9-4e58-9afc-5d912692c5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165d11fa-8aad-48ad-85ed-a40f5fcfe965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33256b8f-e0b4-429e-8910-1557c211628b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f9470a-c6f6-4dc7-b67c-42c7f99efaf4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1760b0bd-1ce7-491b-8d3d-5cf30fa13ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4b8584-4129-4a66-80a9-2275337ec42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78b64d6-cadc-4720-a397-5f1cdc081509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee4a6d6-3a17-484b-a177-bd85e5d3d6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488d2bdd-b0d9-4e04-aeea-1e510c20ebd0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd11d49-14e7-4a2f-8809-2575907030bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d7a4b9-42bb-441e-8466-5682a9f51551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ba02d4-393e-4658-beb8-ed4a0d864ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5af16b9e-de42-40fc-bb85-cc682f2bddc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4539d9-047e-49b3-b024-6f59020ad2e1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc2a704-1e43-4fc7-8ee6-05e2eecaf20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58276ce-f1d5-4c75-b0e0-1f64e6fd59e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0953fa-6e16-4e26-a51d-80729acd4303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec43c41a-c373-45e2-a0a6-95fa3fc96a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1784819-600c-4940-8300-1cec49286b52",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5062b6e-60fb-4f4f-bedf-76add5e3c4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab81b01-711b-4291-9ec8-da8de3cdeb49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f1beb9-49ab-4f21-b480-017453e1b88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d0e6b8-d4ef-4014-b30b-b3af21c2829e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f9e8f5-c589-47eb-9c44-c6c6161794e1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9f17c5-f418-4ce3-8d87-7273cb7f7240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3f0c44-2b9e-47a6-90c7-b0e1389d7a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106df247-cce3-40f4-a60e-9cbd4ef52395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6fca3d-16f8-48eb-b891-0e064a6de363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931c2fda-25ef-4b00-a5fe-3bd96f876f22",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fc3bfe-1677-4161-9f03-ff0df836a1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a165dab-aff8-4861-903a-677604b77e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daab2219-c7c6-42c8-bc58-aa918bbea1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6c6c45-3f4e-4b13-ab4e-f77bc5a908b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5ad6e9-d599-4db8-96c9-a4f40bce78b9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81fd732-e8ee-4bae-9dd5-8b3232132b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe11926-d5ac-4963-8bb1-8937167460ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8bcc05-8ac6-4d9a-882f-522d2ebd1b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "048082f3-26b5-44d2-98c8-97e5c97e39ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a00a4f4-03c8-4bb7-8d0e-cc1f01ce9d31",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c5c458-ef58-46a9-b72c-b893f99a8b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d1aa6e-5adb-4578-b53e-0b1f2d968651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57598eab-13dc-48b7-8937-0760152c0269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da9fa6a2-1504-4b1e-a2de-ac26ec2a7211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1d7d65-dc07-4c6a-ab5c-1fd8cd4fdf68",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d50958-ba92-4f05-9877-e5b7f8f78cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86098a27-69cc-4835-9e33-23eb0595f8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82eebc3e-24be-469a-90d2-3f45f23b5492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0f940d-7e82-480a-ab6f-d516bc80d321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc96d338-5824-4334-9347-e0993c182bd8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89814f09-6153-4e03-ad94-95365a02c1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3842b9-8e4c-4d32-81b5-51455c9225c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bed7dd-2a25-4dd8-9b82-4cbb0e89eeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff49defa-75aa-4f62-ac47-b803365223ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49487c28-4daa-4590-9760-ee05ee5973a6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d635ffbf-bdb5-4727-ad44-95d38bee5a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360b1a4b-157f-4fef-9218-e0d257242728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb03209-527f-422e-b8b0-be7ff85314c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b67b5f9-ea9f-4654-8bc3-889d24e2cd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04a93f1-f600-43d4-9e2a-b09eb2c3c624",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef7b873-0b26-45e4-93cb-453560d2b2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470e8fa2-3348-4787-923b-48fdd3b4af21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a330b0-2eb4-44b4-a8bc-4f499f113f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "efbbd3fa-8452-4acb-aab0-033de61bd16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bf83c9-6a71-4dda-a18a-f3f20ff67839",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc02575-ae5d-4b7c-a77a-dbbcadd922be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d36a030-edf8-423b-8167-b8b819e2a2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f42e927-49d4-403b-a95c-42411e5e0a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b422eb-377a-4d3f-8325-85cdd2420bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fc1ff1-aab4-4446-9a87-f677180a1228",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a58c441-0e31-4d33-b8d6-6a4c07252e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1729533c-a793-480b-882a-30e40c4737d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86b8b83-43c2-4501-8469-734f2f865917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fef3249-a0e6-4ec0-8687-7c638123ae87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eacdbf1-6dcd-4ffe-8ee7-ec619976d47e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e17eeea-5752-4417-adca-a7936c50f5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626b01d9-787c-4a7b-a336-cb18f109042c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80621f48-72b6-48ea-a9d9-ce1b8b4b265a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8b576b-c9b6-410b-9a72-f3785ea43018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1911745b-331e-416e-b8ad-7d0ce706d3d8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1411f49-5c9e-4839-a593-37b2eb256b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff6d7f5-ec74-4617-84b7-046553c1af3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3699ca74-7ce3-429c-aa3f-76c9dbe4e2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16efd37e-1fa1-4609-b07c-c3c422b0437e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41bfada-46cc-49d7-ac70-dc0976fc4adf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18d300c-af9d-4ec6-bf2d-5a48bd3645f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a171a8be-d82b-4a38-a329-a44075c1ffa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd67c8da-fb37-4d37-a369-08e16422bb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf5e956-1d3e-4e7c-80f6-e7f85a4eff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5453313-9e0a-4016-a1ed-e37f50db5d0b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2333c3-b2f3-45ac-b799-5a71497dbc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47166e4-645b-4c30-8e95-870fb2707309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5d0471-bc24-4509-889f-37329ad4b02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60f97d5f-8a1a-4c1a-9cd0-538c7c239c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401cbb17-8e50-47fd-8fb8-3e1af1a932d7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013fb972-22df-4f1c-9c90-9bbca298a71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef23092a-1c64-4278-9b90-6f6f1bbce13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2e9aca-8fc0-4d2e-9ef0-d2af4da448e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f95871b5-f3df-40f1-b397-8c5485ec9d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd85e4d-b095-4ed0-98ca-04bd7e77f685",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e700d7-166a-4551-8b2e-922d42c8f7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f5c597-a07f-4847-9b38-712c35468f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e63eaf-7374-4663-822b-7d161a1e043b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd601082-9ab1-4ee0-b286-14d0de838e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a0b6ef-6283-4240-924b-2cc67049aeee",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84f1c21-1ca9-4aa7-a3db-276131432684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5586f965-5e24-4dae-8439-afda619d6f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be75599d-3aa3-488c-a1ad-d120795fb5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7b8abe-a985-4aa4-bd52-65b508022598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39690dd5-0886-456a-b474-c23d7f118391",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57f347b-874d-412e-8480-9f7855c96af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbaa4c5-9b04-4ae6-8d64-50d97010a762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33e8b6c-6059-44b6-80e5-67e9716f46cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bcad1b-2c91-444d-b183-98a96b36b1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ca1e0e-262a-447f-b145-9cfc8aba0148",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7a86f0-ff8b-4522-b787-58cd32e5cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b57d26-0be8-4724-bdcc-b83734782408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faa7c71-736d-4663-ba44-e28c57ecbd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75267461-0424-4d62-aaf7-63154f425fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca81c6f2-a1d5-4ed1-9b2b-738e8314a36a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fd0536-3a91-4041-ac80-08e7c598554e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd1a3ce-87d6-4a20-83d4-18a64e088a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d761c4-663c-4937-a07c-72ed67c01178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "800ca358-80d8-498c-8fe7-87b44e80569e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d7737c-d4b4-4008-a7f8-66fea4b14336",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d41e3a3-4450-4881-b4dc-23b5e8908df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50b9c3c-86b4-45b3-88d8-51cfe24cc240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f8f311-1958-4329-9c18-e880a1674e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07eac308-4ee6-4488-a508-aaceab351e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7069a275-0e5e-4db2-97bd-587c309d6758",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f294ddc2-69db-4a2c-825b-960fbc273319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cb552b-b49a-45ec-ac0f-b1be7e4369e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605fe3f4-7e8f-4833-98e6-cf221a38634d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f390115-70bf-441f-bed4-d0d31f5fe448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982af369-a87a-4150-abba-8ae7c4b849fe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629a374c-9943-4846-bd1f-31b94751a4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a2aa1c-14cb-454d-9ccb-e2d8beddec72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c432d2e-d34a-4f26-8622-70a5c331eda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20bfc60-5cd4-4100-af35-15a5e49835fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2921d6a3-b1e8-4f25-ba90-e62a791c3657",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589dc989-5bef-4b9a-8f72-bf62462ef95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167bd556-b92d-4167-ae28-e501575ad80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af9df3c-2fa8-44cf-93b8-3c3a774f84ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1181e1-07eb-4f6e-a31f-50a3765378c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8da669-940a-4b11-a2cc-ca120688fed9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a44c4c8-83dc-4748-b9e1-d8c09eeccc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5129fc2e-2870-4979-9f34-7dbb83bffc85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834483bf-7455-46e4-ad23-e9ab003735e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa4066d-f4cd-446a-973a-3ce0f1986c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed56016-b9e5-49b8-9c40-e2d827db4c69",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b553834a-bffa-4177-9b3f-426e657ee556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827a307e-cc0d-498a-bf1c-71e4d9df7b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d923e9e2-fcde-4761-a062-fd15b7636460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdbcfcb-7c99-4c09-9536-94d9a5c32a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96be483f-eb9f-42ed-8031-055cf5eed72a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42fccad-dcc7-41dc-bb82-41ac96cf53cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c982e677-c54a-4c36-ae6b-4065dc0a0c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068354a2-9b4d-484f-b16d-31d60bead8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a155eecd-8dfc-40d6-b4d1-4ac240e07838"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99609182-ae75-4cf1-bf80-7427b71f3ed7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99f5f348-0403-430c-99eb-fbfadeb589f3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb455d8-076e-4ce4-a495-80fedef1e150",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "01bf7d52-09f2-4139-aa2f-3abc9ef6e73e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f9dd12-e2cf-4318-a8f5-b698e2e3ab83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "025076bb-a5c1-4f53-95ec-2ed49b2c714d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eda917b1-4c10-4994-bf3e-15ba7f85fe80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cd9ee3b-99b4-45c0-a127-e27567eed457"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "937f9235-3511-4f9f-ae30-e2cc46e04d44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "994501fe-981c-4b57-9cb8-dfa5dfeed6b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b12c1326-0977-480f-8396-22a2f7795d19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "632cc8ac-1685-45eb-85b3-9c890c43b827"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ca3f0fd-2b47-40df-8932-b7bb63efd32e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ba7962f-d56f-412c-9707-5c0ab94653d2"
            }
          }
        ]
      },
      {
        "id": "b2ea9437-542c-4cb9-8258-71d6cda01639",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "20f5ac7c-cb6f-4d5e-b24c-8cf96dbb1ec5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8fda6be-9b2b-4430-9e1c-fa4f442c354a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "079d6548-c5c6-4566-8509-30d0d461a9d3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc56bc3-087c-4d09-a988-b567d5525510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3afaa4-207c-441f-9b74-ec2bcc91fbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a24479d-1d2f-49b4-b607-5907c58cb440",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8658259b-c893-4511-adc1-67403e4462a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93555e20-bc54-4f58-afbc-ea559833ad04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9f709b-9bac-4854-a799-0f7b1455de16",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baee297b-872a-41f3-92d2-715370e12b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee446445-fa6f-4aa8-b8ef-809ff83a5fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6b23b7-4a38-45b3-bdb1-1423f45f1fb3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d3f177-5cb5-4ab0-a773-087117a478cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d2f32d-d222-44ba-b72f-769ecfd47f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc19b22-e260-401d-9f2a-7ffa3e5263a7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d060a4-342c-4ec6-8465-bae0ef51fbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f9e284-f096-43b7-b43e-6ec34bb06721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4c1e17-27a9-4a72-9846-b3599ce6950b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113ce146-0e84-4682-a544-afebdb552907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905b4ca2-f452-4ed7-bef6-075be6bfde0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b73bb3-c23f-40bc-a2e4-32a9f5c4fd4b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6981d5f-5522-456c-89b3-949f5558e2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ac66c5-6a59-4156-be20-17aacf6b1dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805ca5fb-b7b2-45bd-9d49-db9b17c18503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953fd466-bce6-48f9-b3f2-cd9a204f0a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13acc87-67bf-4708-a8f6-0ff42cbbd81d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa347ae-37ec-49a5-aff7-ba4ae3b02e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71de9852-51c6-4c36-b97a-c546e44eeb1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415ed973-c00b-4231-bbe0-709157db899b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a98884-0f84-4d28-af85-3b441b11e653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e0cdde-49f3-4e46-93a5-2d27841cd467",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0aff16-4cca-4b49-af23-1407549adabe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e496975-eb2a-4165-9aeb-50c7aa00992d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4da9d2-1527-4c0a-99c5-4bc62cc85e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54022466-3b55-4328-adda-b56ca5317271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ba5869-1fdd-429a-91f0-fdaef54bd3e8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dda750-d7e5-455c-8027-5b15b60fdb69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b75b37-e78d-473d-bda4-e4e6362944a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f23114-12a4-4ddf-8d57-9bf90f83ab95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09b7045-c887-447e-9107-fc23356da9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4869a2e6-ebbc-4d9a-a9f9-d6760d68b768",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b8755c-80d7-4547-b4cc-fe3062938163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0e1207-f24d-4715-9472-acb763a1090d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2ee87d-dfe7-4d16-98cd-f20809e8fe20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5f2897-8b59-4f6b-b00a-ec7e5cbd33b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad4b0c0-abc9-4184-8c25-1ccbb5994e6e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5b2852-ec4a-4212-88b6-c73a70c3ba53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f511ad94-fdcb-4c10-b7d6-84fd151846ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6450d548-acf1-41a5-b3cd-7c429c6b1a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eea424e-3f87-4f56-9367-dd391d39d711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afba2702-bd72-4888-9a45-e7a88b6609a9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71302316-12b3-4c54-b146-ca5e9fb81c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bc3d4df-189f-4aa1-8223-1790f7ec2d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcd6bf8-c02f-4c56-b615-ce887080c9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6949d29-a705-4f1b-b529-7208437fe2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6702403-d520-471c-9149-36b1f70dca7f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7aa744-4ab8-482d-ad39-3acb29a89de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57b3a777-b81f-4f5a-b5c3-01b569395c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4b1455-c03a-42d7-96ce-68f7f988db02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd3c2b6-05fb-405c-b618-e5d2db1ad465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b393011a-1ae6-408b-9e6d-22f22f9af2f9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc62322-fd8a-43c9-82aa-96f4ef016669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09480312-bea6-4237-95d0-0890e7bc7c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e6a239-6406-4e88-b032-02e9dc069ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c65c1d0-e41a-4f19-8663-9526c0a30828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6920649e-4eb7-4ae9-9d18-079ec5893530",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e8b425-0df8-4b1f-b9dd-b3f057f08819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "545cca45-9f2f-4426-b2a0-53f7cb1d0908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f6171c-4ee2-4bfa-a65a-97ad4680ad98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1594f4b-c586-4c2f-895d-9d5571045e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd322ca6-5b5a-4843-ab94-4040202531f3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2b8973-8d1b-4cec-bd89-572c26fc0964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc8400c-1256-4e79-86c5-1697c677530f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51e7ea4-33d9-4b07-a875-0288792635db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fc34bb-446f-4736-8123-4f0eee977edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db39558-9b75-4c31-b647-bcce96d7c035",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06457a34-4195-4c0f-ac35-d334eefc1d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0076d4b2-277f-479d-b555-46c9febe9631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff767d5-c27b-4004-ac51-5feb35c1dfe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df12b17-b98e-4e7a-acc1-6ca27bb50ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f712f81c-c14c-4224-814a-a3f389ccdd7a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4814962c-354a-449a-87b4-e882e1620364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207f94b4-69ff-48bb-ba26-a3cc52261ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6234cf2-9911-4986-bfa0-907d522b9ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032a11f0-dad3-4aae-9e34-4e34931f336b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4254e1c-8dcb-4b5b-b979-e5566ab5eae2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bb0257-67db-43d7-8cdf-4a42e2195519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc14a81d-2035-4442-919c-d314455a78b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aa063e-c0e3-4d56-80b4-003df834e157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281bb60c-8893-4da0-81cd-db66a81e5ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef294b3-550e-47c2-988f-38e71c9b8d79",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d87f384-6583-4a4c-b0dc-37469a247fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf31b72-8eb9-4b79-9aa9-7aee19683353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7566f7ec-0b4f-438f-8f43-e0ed07df3a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e1bc21-ff95-4d88-8894-5019157acca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c769650-00f0-46e7-89a1-e4c5b63d49ce",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9b08a0-f964-4f76-b7e4-803e60fadfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f04a33-2ea5-439d-97d9-91acba342eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5632eb-3099-47f1-bd88-e507f2452dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc563e6-f079-45fa-befd-ff78595f253c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ce5415-2c9b-47dc-aa85-973d9ec2398b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bda456-46cf-464a-8c71-8ba150b145b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23c8083-77e1-4b71-8b76-db85323cca06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda57469-e119-4dea-9520-cca699291979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35ad4cd-d75a-4870-b43b-9c7ac94f1a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fcf974-b401-4236-add1-d07a11ae52de",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4ddcff-1d32-423d-8830-b89937506e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2951f2c-3009-4a6d-90e9-e3ee83c26282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e124cfb-143b-43de-88cf-5b2cb8ec09d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe436d1-037c-4bbc-9787-ea5d16732a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4408cd-c6fd-4b77-acef-7c4730717270",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50ebd2e-b4d7-4a1e-839f-b5a31745945a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bee3329-892a-4a9d-89d4-5d3e8a790d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11f3d15-952a-40f0-a631-a54e20f195ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfb9caa-6522-42ba-a237-440b7e58c046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726050d9-b706-43ee-823b-f82bc7e1937d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73a9df7-73ca-4ec1-80ec-5b63c969c408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff358ee6-4850-433a-aeb4-05492518b82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb6e430-1c5b-4005-9db0-9e22c021151f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0358f16d-649d-4614-a36e-3ad953c5b904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2096a5-568e-4ea2-9bad-97a7d1c2ca54",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba82b60-9fc7-428e-b1ba-68ff3e2970d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad47452-272d-4462-9a99-31b41cddc86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd67053-c838-4c91-b3e1-30098223eb33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34039f7c-41ef-4882-8dfb-adbe74faf51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acebcead-5900-4b24-9fe0-28af98b75e29",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbb701e-876a-4479-b140-84daff807635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0488ee2f-90e6-4c6c-9410-8bfef43e615b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a821f7-a769-48bf-bddd-a95c557a1034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ebb763-5b57-43d2-8aa7-a6e720d72ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba5e182-23f5-45b3-89d5-c480dbf37c9a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89de6cb2-1f28-47b9-961b-eb2e1f16ee28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463e502a-981d-4352-943a-9038fff084d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79c8631-a700-4706-8ea8-af66846bfec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10bafa0b-4d66-45f7-985d-b644ae92ebe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e12a07-8f5f-4ee1-b373-9e7b7b15ac52",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af59e49-f6a4-4808-b143-dfd43aab61d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ed4f6de-eba1-4dcd-80be-15c3304b4f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52c7a06-d63f-4a70-86cf-a6ca07688b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b613487-dbec-45c6-a848-84981af9ea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd01cc8-52f7-42ff-8db7-6a328bb72966",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021dfccf-4554-49bb-898c-cf54f9dcca93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98e133cf-b9ad-4782-8450-d5ee5b9c9875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca08034-680f-436c-af41-cc51ba22fa1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3111029a-7bb3-4850-a7a6-f318692998af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836cbea6-e922-42e2-a50e-7bcc87ea0602",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da084e21-9f34-4a39-9b4e-58c4f31d8362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b0ec1c-1ddb-4a65-bc8d-e76cb19a2570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb871c6b-4e15-4b18-a9c9-ecdf1e89a568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2316c343-54e4-4ffb-a4d0-f75be8746b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c035ae08-9fd5-4c41-978e-2577b7dcddb2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14b3ef7-76d6-4bb8-9794-7c5de2ef2b58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b78a90-0119-4acf-b467-8694726e343b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9d1027-5ac9-47d8-b8f4-c75c0e13f38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93725237-948d-4526-83ac-a560ad4d0123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe75ff3-b3a2-43c4-b921-7f56bca345b7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d012013-39f7-44a2-bea2-c5c8b80f29fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b3a800-e074-4ee8-aa2e-a20c79798f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eebce28-1801-418e-88ef-f5039a0d6c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed558b19-3644-4cf7-81b1-8020b8abd2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a01935a-e2a7-4291-9051-bc265552eb84",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c4a6d0-4f85-4fac-a8fd-96a57e10b6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d9e6be-131e-477c-8318-d983790d5ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d6bfa0-45a8-4026-b574-6e96ac3d82e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6fe33e-9ea2-4f34-8605-c733db50881b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b6dbc0-a523-4e3f-875e-b363125939d1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52362b3c-ed9e-43b7-8a12-6e1e0569fe90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d958e96-0686-457c-ab2e-d535f78c3f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756e8a9f-1995-4091-8067-cadcee636960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb03ab2-83a8-4d2b-b452-43634cf022f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa01e20-87e9-4abd-9c47-aa9a83ffb187",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3161384-4baa-4b64-8043-2dd828cf65f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a74c4f-b5e0-4270-9625-fa2fd0d3bcce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b485ad-862f-4070-bc40-29e6c035d747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140113e6-5239-41f9-91bb-a6c5dbe3453a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f565b048-d07c-4bee-8fb3-095fa79646cd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0c3760-ab09-417c-a132-93bc54e02c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df95215-1527-46c8-9ce7-f9b601c5f5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2f9fac-21bb-4d51-818d-afbc387fa3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b79413-e34f-460d-b3a5-17e39199539d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d6caa8-18a1-4376-bdf1-f05b88289140",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ac4415-872d-422c-aaaa-0078140aea45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848c8ac8-62dc-4826-9faf-ad7cf7d9b047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2c96e7-19c1-4a84-881d-b1db29fcdef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef677101-0673-4180-b09b-c644f1ba6e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c862c6-88fa-4913-a57b-1991dbe24853",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784165cf-f868-44fa-b2b3-64e0cd8f5a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3a8caa-95a7-4b33-bdea-f70c574a0ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c945feb0-fef7-43f4-865f-145d0d680e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22a55fc-4e75-47aa-a93e-a4f4bffb3ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1ba0fb-ef60-4e91-b5c8-aa3fdd9b6678",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5482c17-2e41-4d9f-9faf-0a3f981820e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ee992e-eaa9-4bc5-8c9a-735473555c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca14c8eb-7514-4b2b-8694-ba8baf7447ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd27d366-06c5-4b9a-aa22-721834d37ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32894e53-0a2e-489a-97c7-75b3f7309bbb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b97fc3-5577-471c-8778-0467a7ce5ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34e4996-08e0-492f-b404-338b6d9fc762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92daf50a-0d03-4529-a834-cc79f6e30d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce40f1c9-b74d-4aa6-9e4f-38094755b11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa94c772-7362-498d-95f6-38d8826de6c6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23ef22c-8258-4d2f-8da5-3959d9a52c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b0abf9-7f1c-4630-a940-6ffecd8b3146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f875c02-8cbe-4f03-bf30-45e66c06a885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b473a6-74a1-4eb4-9b3e-d1b4cec654af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3532c9d6-20fc-4b62-bc60-b65d515bfa09",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de756471-afc5-4c45-a9b9-dbdc889b06da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d380119e-329a-42e9-bfee-2641557b71a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb93cb27-d644-4fcf-ae9f-fe648e888cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801b6cdf-01a6-48e9-925b-f0f133bd349f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8d375a-342f-4f4b-b819-e4ced5f3c039",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b01472-faa6-4a1a-b9f3-645708f6c7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b10dd64-b37a-4085-be3e-26568beafc05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abc00f4-c8ec-4faf-8712-0ab88a3a044a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bef72da-32e3-4c5f-8252-4805c001dffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7c4976-bcbf-499b-9938-e1a64cf43ce7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5d8436-a272-4212-bd71-d0cf3171f380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e43822-3837-411c-8584-d3a8e3f56550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fede40-20b9-4738-b07d-7962404cdf81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb8c933-ac37-4070-a768-67028275acb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2447eead-64be-42f7-8a52-3255cbdbf3a3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5d50f9-ecb0-4019-a6e4-4c786ff25f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fca587-d8ce-4902-ad2c-6e40dd2c1eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7960f5ed-383e-4993-9fdc-07990d5dbda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa652f5e-6873-45e9-9b0c-65407fdc9ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3311a4-e078-4123-ac2c-23a856ad2b2c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771f27ce-00e4-4e35-b2fb-d90a328399cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c05aa2-820a-465c-ab5a-5638485e51a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca33f59-8de7-41c4-bf5c-71fb00cc522b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1a1c2b-9af1-4954-821e-2025605be98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d88c34-34a7-4f96-a66b-bb9336141a4b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c19c762-8a17-4107-b3ae-a633650ee541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2a139a-b363-4967-8397-9b032af016a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d08bbba-1687-4181-b5c0-eb54ee084235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe3df73-d0cf-4bbd-9138-d42f42390a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e1aff2-1cb1-4b7f-b5fc-f78caf40e26a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7763d2-2a40-4412-af44-b1cd087ae2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20b1fce-6e88-4554-b2e6-078346e8dfe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86472d9-7d86-4f1b-8103-a447d54c5e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48493d40-8785-48c3-a7ea-e782e5bba8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cce2c6-6ad1-4f7b-bb9e-ed239d713418",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b781f31a-9f05-4ee4-86a8-e88a762a1e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c272ef-662d-41cc-9b28-c6ee5e2adb86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2340881c-ce70-468a-b99d-e0615eece4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353eaab3-ad97-4cfc-887f-86747b749e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd55188b-42f3-4395-99e3-0fdd6b9b8e38",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e209858-29f4-405c-8aa0-e812d7d93a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba18c2b-9128-4652-a56b-ed8300b2ad19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2c29aa-46c6-470c-a4a5-f2a0626651af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80272af6-16df-4465-af99-57e080f8e869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b757e5e-e2c1-41a4-8646-74c31a4ca888",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c850278-3b42-49aa-8574-18eb1879dd24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14ed211-5796-462e-a691-c9c7c5bead95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd564c01-c8a5-4834-a8f8-6468e6fa0360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d375d471-3842-45a8-83fc-e5195999f46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83a4012-19d0-4407-9b20-e0455ab5c6a7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8abc92a-7f7b-471e-86de-52b9631ecad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2e9ef3-f883-4f21-8e75-fc614614055f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c520c7e-445e-4d43-a252-930dba3ddcf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a473fc65-c314-4ea4-934f-1b464b7fd22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebc0d82-6087-4c68-9003-10b7e87808d8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4da2b55-f861-4eda-907b-dd67e6cb07fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e46682-24ae-401d-9e93-6a769f244257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ee6292-94b5-4d7f-9602-7b3c3d342945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac49673-d9bf-484f-be9d-49c7c81a754a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7063e4e-3698-4f4b-8aab-d9274fe1b578",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e758670-1261-4dcf-a6b0-d2020f87dfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f68c74-e8b3-497a-b2ff-531b1698898c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecebd83-027b-452c-9fdd-dd5d6befba6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb88a73-4485-41aa-86e2-5176d97fe08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec7008d-27cb-45a3-9428-3cae54dad30c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a1579b-3ece-4011-ae00-7767b0b2b64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2ceec2-2d4c-4981-8ced-ca878db9060a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c167ed55-9f33-4768-88be-da2d727c55e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98798ec6-d9d1-42f2-9468-aba82a2b7000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1faa775-d2b1-44db-899a-aeb7fb41d612",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce1a993-bad8-4d7b-a19e-c18766d9a119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26f62fc-ac7a-4477-92ae-7faadfad8b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6d7dc5-30c1-488b-9354-6efd8e961f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f538a659-a961-499e-8d99-8d7920a5b886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b139c6a5-aed9-4028-a271-ab484aba6b64",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074772a3-8346-4716-998d-17984fb6ef72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220c44f7-f630-42a7-8381-c02620abe0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d986064-5b8c-456d-8fa0-15af874ec550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294028c8-a24c-4518-944c-77e735dbc80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e36e77b-6ce1-49db-95fe-570526da8c88",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1220128c-f601-412b-a27a-86054022b121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b905bf-a48f-41b2-a1a2-b8b02517a995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7d6074-58b7-457d-a74f-4c22306bb018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f3fe66-a79e-4811-ab05-269a22ea97ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77887689-0a73-4d1e-9d47-b3fcea1135ab",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f794d48-b3a5-49d6-ba5c-ee22ce795404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3904cee-ae3d-4ac3-9400-2171825b9f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff399aa-6136-4daa-aceb-358aa78005f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7965f387-2d4f-411b-a2a0-a33cc774d26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1f83ec-b08a-4e9d-8242-bc392752ab46",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7c0ea4-4160-4f72-a2a6-016d913fc2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbf8ddc-b7ce-489b-8344-5428cb43d956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99e85e4-e61d-4319-b33d-4003b35dfc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2dc7b1a-6eee-4487-99ad-8ec3abc39ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0047a18-83e9-4c26-8ce5-c9b4907a2d0a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6d183c-eef0-4d55-b1d5-8d3a1aac2b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bd2800-d671-4ec1-80ec-038aac49904b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d250b1a-a23f-49fe-8128-2430f4c94527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96c305a-750b-4405-8619-b2fef00cc774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e799422-cc6a-4217-a3f7-7abbf00739b8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9da5a6b-91f1-474b-9031-dea7fbd1f551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6954c319-2359-4355-af21-052466e9773a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c813296-3478-4edb-b761-3e3081b9e087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f563358f-cd23-42c2-bab2-7ab5ad3eae94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b037489-1199-4dca-a5c8-0f80b1692938",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f181ee20-b696-474a-bafa-d2549a870e59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73711b2-7419-4b57-95f0-e5888a8de0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2350516c-411f-43aa-9276-d0b4100faddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8a54a5-ccf7-45f8-bb40-3ffa7d33d601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4830d4fd-ef88-4872-b418-2c3ea9cf46cd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ec5a77-0240-428b-8490-6ad124e47c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97cddca9-96b0-41b7-ae35-a985057212ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dcd006-510c-4e5c-9cb4-15fa7db58c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383fa20d-c660-4118-881b-14df0030590a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413536d0-14d5-470d-981f-bfcb27d2565b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f19f7cb-667f-4bb8-929b-691f71de5e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d70fbd63-5d5c-4b70-859b-0c5370570f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f964829-d663-4bfd-bdfa-e35492ceeed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54206254-207d-41dd-8666-326153304fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0166d3a7-4644-46b9-b11f-9c6b766fb979",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a041af38-40b2-4f28-9fc4-77225d6f0bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac8ce6fa-222f-402c-a5b4-f825ed6eb498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc5d407-3f46-47dc-9bcd-91f6175849f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbe753e-2068-4473-8b7e-5d280c2acbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8116dcf-3ea8-4cce-8b91-3f9b0b76e4d4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d37f7ca-531a-4951-8e79-cbe8f347b5e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e3bd051-b8b3-4e9d-8757-f96ecee58f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "494226a8-84ef-488d-8982-b1993cfea731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5282645-d960-4539-834a-97eccf455712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d866d3d9-cfde-44ee-bbd1-95fb19cd2e34",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a9bcd7-cbe0-4bea-baff-6935a6b89824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16328a06-b93b-4953-8e9e-f031c5139b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00064559-2299-4e65-9653-3f472f0acbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4f30e4-2a70-4471-ba2a-8ad6be29c5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a807da-15ce-46b0-9298-af190f70bdd4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae98701-b2e0-453d-a139-dace926280e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f465eed-99dc-4c07-ab59-3d00adae5896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13297e0d-8bb1-4568-81d3-01094bedaae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9915c654-64f1-4bc7-a595-3b44efdcf8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f88a08-10e4-4b84-8c79-f7c26f1d78d7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06fbb36-a046-4e2d-b8c6-8b41a9b6247b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95d20652-878f-4ccb-8b97-3b497ba90c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37da34a5-61eb-42f6-85ac-149955d3d205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f144199a-2756-495b-b905-8ab06bd6dce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e0d635-ed3b-4773-9f55-f7c9eb49e5ac",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7bc24c-8cc3-4c44-b458-e8821c2248c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "186e24ec-0776-401e-af8f-86a5cc7954b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1811916-74b8-4982-a22a-22bf0f27b0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c563e54-f3db-4aa0-9274-3e0ce2ef0d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c66e97-bfc3-4d27-b056-1b6c7d0bd4da",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd776380-94ee-47fa-a309-1a657c954504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d6aa66a-c05c-4655-b62e-78cfe34fbfa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c2c65b-cb97-4a3b-a3ba-2761eb2d7e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30b9b54-8083-43dc-885c-b5d5141e0ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76d163b-f16f-4272-b717-717abb4babe7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59d75d5-7077-43c3-81f8-f990846be816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d603630-2fd1-4515-b9d0-d470f3621807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e5e256-5e97-4be4-8788-693c54b08360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ca5828-f40e-46a8-b9f8-aa53a87440ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d85e69-b0ce-4d15-8829-365b9cfeb2b6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75bbb84-d377-43ec-96c0-5e71d5cd22a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d02288-8d5f-43f6-9bbf-d6fdfd02c2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "958555b0-3e15-481b-8140-f713c4d62071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e60c0c6-03f8-4a2c-b11d-91498e4530bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5600a47f-171a-4b99-abfa-818c2df41033",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd049e8-7b66-417b-9b25-423d48f6cbca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d214aca-6dbd-4b84-80f9-4d8321f61c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee59de0c-0d54-4a89-a390-42d3040a45f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6960c7bd-1f10-4fb8-b22c-be71a133982d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c807b726-f95a-4412-b3de-303d2ff2d6c5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e72332f-31e7-46d0-bffe-c4d7341605dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5548d80-089f-4514-af47-d37e77d91d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd1796b-9aaa-49f9-9966-2b34ba1fbd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b15328-62be-423c-92a6-e3e22aafc2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16e64e4-6917-4f86-abe5-e3022ee8ba40",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9693d9-8eb8-4417-9e40-f2d737af57d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f02486-4c8e-4697-87b5-6b5ce252a774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a426c6-2cce-42fb-8e1c-5befdf2bdb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853dfdf3-7e00-40b5-a025-a19f41667065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18ae798-2e2c-4cba-b926-5bafa2e6c4a9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15b25bd-4fbf-42db-86c7-9603f6f606c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b69861c-d64c-461e-afd2-72e2c13f74a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe94de6c-6721-49cf-8035-a18676c71998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aaed48b-4f1a-40e5-a52c-f3e9fc4437e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33114d6a-b6d0-471f-9fa1-3d45f2eddafd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65e1330-3303-4fa2-8299-64545b5a1b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec0c53c4-37c2-47bb-8613-fecabde4f1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df716a41-0005-4b69-b4e5-9f58b839b3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9e2b70-0881-48ff-836f-fe8697ea243a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23ab2cd-03ca-4ae5-8082-09f4914dae5d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4cb18b-e34d-4e77-bc01-07aa9a113f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02ca4c5a-77cc-47f8-92d1-8af861f9376c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af349d5e-5996-46ae-8ec0-a9ee579768b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcd2b8a-6dfd-41c5-9474-758b0e0f4110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04054ff-7098-46ef-9263-f1f2481400b4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf4b533-28a3-4c0b-a00d-102903dcff50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c41c8b05-25ea-44b3-8780-7b3335c1f80c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3d5460-a0e5-42a8-b1d4-551ceb54e791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d2c1e1-ec8e-4bc3-8e47-5aafcd8b9c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f7b622-879c-4c04-9956-1396dfa85506",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d3fdd5-811e-4658-980e-62c0f6ed228c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbff59ee-95c6-49b4-87db-41f18ff34273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b890bdd-fb6f-418e-a82c-8709fca47b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4a445e-3780-402a-b7eb-fb49901af1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2811008-f56a-4a78-9a9d-2b4179af7b0d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5002f14b-56f1-40f8-8d62-e37594134cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "504cfb94-7185-4fa4-b69c-8343dee5d9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a160bb-5721-4b68-a6aa-9a0f49ded9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc562c2-07b0-4fcf-ab03-efb2494317b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6a7103-0a71-48c5-b1a3-8921e7a024e4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f5db2d-5e58-4fbb-ba74-0aaba59ae879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a5456b-daba-475e-8ecd-40f710ee19b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04a5226-e5e2-4fe5-a8eb-545177df7ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a09ab7-73e3-4f0b-a7c7-9bd79e5404f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f037c9b-e3b0-46c9-ab52-5e27ba794f68",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64115396-d08b-43f5-9ba7-1834162a3ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d0ecd52-a607-4ca5-849b-d5bd14b42977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaaf48f-30f4-4ba6-827b-290348caeb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775d7bd0-f987-4a87-886f-f54ddd3e931c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52289b8-ee85-4d38-af25-4032bd91f95a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc904cb-e8dc-4428-ac5e-67f3fc31fc23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d77f9e00-ec9d-4faf-a279-92010a34a032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997e89ea-17d7-47b1-beef-116b7b93a4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf2bcd3-ed67-420d-8bf5-b8ff5448dc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c82f79-1948-4acf-8233-454e99b70721",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da15a18e-0ca1-4514-a346-66e16380ef60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033085af-cd38-4d6e-b24c-35181a843570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03857a30-f66e-4978-a8bc-56fbbacaadef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30945fc-1385-4001-853f-d8d7bf628e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32055cfb-a410-49c2-933c-f05b2e22db4d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a75d514-e96a-45e0-9757-f2a2bc2d31c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c0b9dd3-9173-4d23-be83-92e693424f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63423bda-6a13-4c92-8900-1eecbbd4e0a6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838af71c-5585-4d20-83d4-c8b78b6c1284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de330feb-60c2-418e-836c-ee399d7b4400",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540f62a4-610e-4f4c-8ee7-4b3cee78a9b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09511b3a-1dbe-4283-b03f-6ecfe4d20490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fb7b15-2d65-46e7-8e11-c0973512bb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a545603-88e7-452b-971f-597f4b217885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ece6851-897e-4eb6-b2cd-695d021966c8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4157eff-234f-4855-8f33-7f329dbee94e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd71ba2-0bd4-497f-a51b-ee86e4d15420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69db4ce2-8509-4345-8a55-6874376dec9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4335410d-89cd-49f5-aa0a-4321d68643ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0cd3d1-5099-4651-a6f7-663bd454f4b6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca286c0-471d-4b16-a517-07232288a032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499671a2-bb6c-4b8c-8e25-4404ba55cec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110dcd6c-7158-4e32-a398-2d8b09f5205c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1e0515-3b99-4f22-9d57-a6ec16d31548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9958d7-0189-457c-a2a3-52fc7841629b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f0eee4-9e2c-491b-9f2f-4d2510785f8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4befca6-6dd4-4e3a-bb10-534d3ca015a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77824029-8bd8-4288-a8e3-aa57e9858f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a8ce2c-276a-413b-aac9-030364de7019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436d77ab-7a47-4535-bf66-3c7d84bc61c9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c82120-e946-44bf-bb92-3d4c86c1e316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f38cda3-ea9e-4893-a666-0e9cc83ca69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e582a960-a337-42b6-bc10-57fe2e9258fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be3b014-6aca-45e0-90c6-615c781e11d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f0d093-5af3-4e3b-919a-b117e9dd6318",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17e12a9-1555-45d2-a2da-049fa2ac7355",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "730f6dcf-57ee-48c9-8695-ded029243d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdddf30b-75a3-46fb-ab77-9f26ae72b6a0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bdf5e6-e26a-4421-9fcb-d9f026e10f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57e6c27-88f2-421f-b19b-66b8b0108af7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7b82e8-ab98-4b99-bccf-1cae7a40dc70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35dbdca8-60bf-44e6-938a-2aa4ee594ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4351b6a2-715b-4d3d-91de-76eaea21236b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345895ef-7e7d-443f-b9be-599d2cb4967e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7b3f5fd-3d3a-4d52-a16d-7c536546d9ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b8d56b6-9863-45eb-aad6-d5a6db4de463"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a64820e-d236-4ce1-969a-df6a981836d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "241f567c-4a2b-4329-abfb-b642f48474bc"
                    }
                  }
                ]
              },
              {
                "id": "5ae6ccc1-613c-4440-b624-18c5312f7e51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7e97f69-414b-4244-bf8f-6002239deedd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fddb564-8006-4b9e-b78e-ef879e58f32c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "aa8e517a-d799-4298-a6ff-40ecc4711075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09500a41-e324-45e5-85e6-6b121b8def64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d5cc283-2f3c-4eb1-8e98-0028f33a0eda"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "359a8a0f-5637-4b2f-9ca5-69ddb3eec0ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6c57cf9-2edc-40ce-b4df-09d9d56cf44c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b446c3ab-5578-43e6-b689-5326e11278f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8607ac7-d691-4afc-9a5b-99f9c6b9c71b"
                    }
                  }
                ]
              },
              {
                "id": "1e3c7738-00ef-421f-8a03-abfdc8f44265",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c0f205f0-74e0-425d-ac29-8a8e86803041",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08240554-5e97-4441-a705-676bd67d6c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6697e2b0-2b7b-4319-aa71-338957aac657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499ffbe5-9875-44f6-9ead-a0b9c1a2c53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c493e85c-6ff2-4414-a5e0-42257d02f914"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9d996432-9058-4068-964d-fb9284e5b032",
            "name": "Positive Testing",
            "item": [
              {
                "id": "926df57a-7db5-444f-b399-4f6d3d0a436d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16c08817-ef27-4c14-9bbc-e6a5b1cf4d50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "100c86ad-5390-43be-8cae-b7e8d941bb00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c61caf11-69bf-40df-80e2-e243a81e45bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71be9687-8756-4d69-bc62-0c7667627985"
                    }
                  }
                ]
              },
              {
                "id": "32862a5e-3abe-4c14-b35d-b76b5bcf92c3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c426f2c4-0e38-476e-a29b-c34224edbb93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aa29134c-1eba-4397-a488-6492b5c267c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcd3d205-4e10-4d3d-be9e-deecbc4c7edb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a629d147-5325-48d6-9f93-e6a8826be35c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4857c59-3e93-4ad8-832b-bd0ff8ca7b5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d20479a6-9ac7-4de9-957c-fb8af5b187cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d9d13f9-d18e-4797-bd4b-b767f30a1fae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd01d1d9-a2f0-4b9d-a8b0-5fecbe82c4ee"
            }
          }
        ]
      },
      {
        "id": "09bac247-1dd2-4c74-99cf-6994d73b3a80",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0af1a591-6721-4065-a892-31860475a6c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb943caf-59e3-437f-92a2-d7c30c41179e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b061cf60-1be4-40c9-bc8c-e8c19c5a1b7b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dacd8a-969a-458d-8063-7336671595a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1c261805-2045-4cda-95b2-1d8ddc8d3749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d18e45-3fa2-4d00-82a9-83d086e1b53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a53713be-fb47-44e3-8aee-4d3ba402292d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fced664d-ce68-4892-a1a1-30c5d984b7b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "887b4cab-e234-4dfa-a84c-a6682908d191"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fd0014a-0762-453b-979e-aa194b17a25b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64357e41-03d6-48bf-8f6c-9c6966971f49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffc448dc-f43e-402f-a6bc-00339ac23ee8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2357f50d-90be-42c6-919a-6621b24e462d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61e2a67e-515c-4d6a-b48a-8f36542a2c92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d69f3fe3-0b3f-43f0-b600-8f6dec0e592e"
            }
          }
        ]
      },
      {
        "id": "55d3b5f8-44d3-4481-bb9d-b32c6bd3f961",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b5e3a7c8-64e6-4dbf-8bf7-7fc722d16b61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d36a9e90-d1a0-46ab-a20f-7c82150434c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "081260d6-16e9-4dbd-90fb-15e91a9c206c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ff7290-1ee3-4407-8c79-cd8d15767030",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c968dde-ad87-4c18-8441-98adde4c8639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be7bcd5-546f-472b-bc8e-3847983f641d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "430296cb-bd4f-4b9b-b4fa-d01d22fae360"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96f4a4df-7537-4a1e-93d3-ab463054c939",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c6701e1-583b-43a6-8916-6a8ecae8a2fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f7f2cdf-0691-4fd9-8846-596923823ef7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebedcee8-639d-4bb4-9102-d304eb557aec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42fc8113-01f0-4d99-b80f-f6afd29d5602",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fdb38eb9-9099-4765-9edd-4b0d42e0aab7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46b10fd3-193c-4c51-a367-e0d2d1365dee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "994fe7a2-9e2d-4fe6-b6fc-814900d52358"
            }
          }
        ]
      },
      {
        "id": "c7411d9d-df16-4809-8941-04873c124824",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c601bd56-f861-4bb3-878a-19a15b35d455",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a692837d-dd91-4590-8cda-9537655c4de5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26f2e490-f30c-43e4-8f90-81a704d25d8b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea24027b-c20b-4434-96c5-c3389219e87a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93354c9b-d132-4ccd-876b-a44105957331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804426a8-4a64-4a7c-b5d9-377916282d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d96f3d2-c90f-44be-8046-276e53a4268f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "864ca609-e55c-4a98-b74d-9fe2ae9bbed0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59ba5497-f07f-4c0e-aabf-3270d21dc463"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8fcd196-aa65-42c9-97b5-54e513bcc664",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a5e739d-e94c-4d1d-9be0-d1239aad32cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1723dc1-6389-403e-bfdd-8b8b1bd20ad0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "20b0fa16-2288-4146-91a4-202cf47d47bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a71f2bf-ba89-4bd4-935d-b2aca972a595",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e6b3e53-cda9-429f-8c7b-ef45bff81a2d"
            }
          }
        ]
      },
      {
        "id": "dfc1b8a5-a15f-4246-b4ed-cd4e96c2e696",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cce21e2-59ce-4317-a43c-590682b76569",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97f67b27-9cbc-43ef-b965-15dc00875c34",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a9d43e4f-c5d9-412c-b814-158bac539073",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d8660e6-af66-4cd4-ad14-3ee04893f7ba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "732f7453-60ad-4c9e-8b22-c9aef2754f49",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 758.5634920634923,
      "responseMin": 28,
      "responseMax": 26242,
      "responseSd": 3945.6465581501056,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727657258719,
      "completed": 1727657458474
    },
    "executions": [
      {
        "id": "1eeeacb8-8aca-43f2-b9d2-325c2571dac9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "62a5e728-13c3-4246-a2ea-c45bcb27c75e",
          "httpRequestId": "84848413-a284-4ee9-ad66-00ef589deedb"
        },
        "item": {
          "id": "1eeeacb8-8aca-43f2-b9d2-325c2571dac9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6b04a904-6478-4990-8e36-f78fe2670acc",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "dc27d1e8-8d7b-486d-b51d-bad7714a03c8",
        "cursor": {
          "ref": "d58caa4b-0d8c-48fb-a306-9cae566ba2e8",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "10957f58-edc1-470a-b417-39349338e6d0"
        },
        "item": {
          "id": "dc27d1e8-8d7b-486d-b51d-bad7714a03c8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e899d98b-f0bb-4991-a5ff-febe23f85b13",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 0
        }
      },
      {
        "id": "403cdc38-66ed-4cd3-8953-a6b16d7d4b1a",
        "cursor": {
          "ref": "ee9d0595-a858-4970-8600-714919cfe049",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a77be05d-949a-489e-848d-7693d66d5bf1"
        },
        "item": {
          "id": "403cdc38-66ed-4cd3-8953-a6b16d7d4b1a",
          "name": "did_json"
        },
        "response": {
          "id": "b8ed9435-cb1d-40c1-bd41-0582b45c21a0",
          "status": "OK",
          "code": 200,
          "responseTime": 462,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5a7a0b-0c3b-4b40-9e62-6cfad0fb3e08",
        "cursor": {
          "ref": "c7cf0d0e-03c3-48c4-b15c-577e05015471",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "409e201b-bc0c-4f52-8502-0310d0ed9858"
        },
        "item": {
          "id": "5d5a7a0b-0c3b-4b40-9e62-6cfad0fb3e08",
          "name": "did:invalid"
        },
        "response": {
          "id": "f19b576d-ded2-4e17-9836-d14b15aa5c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2232,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5a7a0b-0c3b-4b40-9e62-6cfad0fb3e08",
        "cursor": {
          "ref": "c7cf0d0e-03c3-48c4-b15c-577e05015471",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "409e201b-bc0c-4f52-8502-0310d0ed9858"
        },
        "item": {
          "id": "5d5a7a0b-0c3b-4b40-9e62-6cfad0fb3e08",
          "name": "did:invalid"
        },
        "response": {
          "id": "f19b576d-ded2-4e17-9836-d14b15aa5c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2232,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49c47e4-6fcf-4f45-865a-adc536f3d69f",
        "cursor": {
          "ref": "4133bf1c-a720-40be-8192-3c56776c8a62",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d86c6f22-7549-45fb-9ec2-77943979c043"
        },
        "item": {
          "id": "e49c47e4-6fcf-4f45-865a-adc536f3d69f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d9fab687-0397-456d-b1c8-e5497f91064f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2652,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7b86de-4896-4fbf-8aa5-7137c19ef07a",
        "cursor": {
          "ref": "fa7935f9-e921-42ac-a08c-f79e0ac8dd33",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b8106c58-b267-4c00-8acf-70dc7a1aed07"
        },
        "item": {
          "id": "6a7b86de-4896-4fbf-8aa5-7137c19ef07a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e588cd3a-68f5-492a-9ad4-e3825d5f857d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2125,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9940ae-ab13-451c-b8cc-55b94761c656",
        "cursor": {
          "ref": "65ca8933-c585-4cbe-89b4-5985e999bcbc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "068cad57-5a8e-4b3c-ba3e-793742d8fad7"
        },
        "item": {
          "id": "4b9940ae-ab13-451c-b8cc-55b94761c656",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "39fb9fcd-b967-43e4-a8c9-bd8937a76abf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70526794-736b-46e8-887a-c0016967f2c5",
        "cursor": {
          "ref": "3b465e82-77c6-4401-81df-38cdbc735e04",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "73682451-1ad7-46cc-ae34-fcea581fdfb9"
        },
        "item": {
          "id": "70526794-736b-46e8-887a-c0016967f2c5",
          "name": "identifiers"
        },
        "response": {
          "id": "80ae270a-e6fe-4382-9723-71dc256a6a40",
          "status": "OK",
          "code": 200,
          "responseTime": 2393,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043e8be3-c06a-40a8-9087-13aa5bb0e79c",
        "cursor": {
          "ref": "9e20b5ba-fd4a-42d5-93ed-b594805d584e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "af48e10f-f44b-487c-833e-1a66154d1e02"
        },
        "item": {
          "id": "043e8be3-c06a-40a8-9087-13aa5bb0e79c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "61c5c8ff-2f53-4c87-b48c-7f2263f2f635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ba6c37-fd52-4a2f-b5c4-9f331b21a901",
        "cursor": {
          "ref": "9ec6a2b3-6110-4279-b07b-8afac96f6430",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "86f2693d-6861-4645-8d32-6a060f60cb46"
        },
        "item": {
          "id": "18ba6c37-fd52-4a2f-b5c4-9f331b21a901",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8ce6b132-0d2c-4a9e-91c1-60443ea11ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39380d62-d6b3-4c05-a009-d0420fc2cf2b",
        "cursor": {
          "ref": "ad2b1811-6813-4229-8406-631d4da54e24",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2cff33ee-96e7-4b4d-bad5-d80c527af576"
        },
        "item": {
          "id": "39380d62-d6b3-4c05-a009-d0420fc2cf2b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9e911f9c-40f4-4608-bba6-5d7d4139ae72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bd1311-a09d-4efe-9356-0f0cdacb7f07",
        "cursor": {
          "ref": "7a0a6c91-7749-4285-8dfd-80dd8d4d3c25",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ace5ef43-b6b9-4f55-bbde-6e4eb5da831e"
        },
        "item": {
          "id": "c0bd1311-a09d-4efe-9356-0f0cdacb7f07",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1f9b1aed-d71d-40a1-b587-6e7c472ca222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10434751-b3ed-4acd-8f13-5ee09383d9a0",
        "cursor": {
          "ref": "c696145a-2867-42d5-878e-ef31e6a5c1ca",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8c102f63-dd9b-4fe4-aa70-dc7ecee277f3"
        },
        "item": {
          "id": "10434751-b3ed-4acd-8f13-5ee09383d9a0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "aebe3f4c-c563-4899-861f-bec9c532905e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f7b36b-262f-4396-bebe-79a55ffc3d4b",
        "cursor": {
          "ref": "ea12ad38-ba61-4337-b07b-c38e74ad6cd8",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d88e2cd4-6c99-484f-a455-c720d50d7d6c"
        },
        "item": {
          "id": "97f7b36b-262f-4396-bebe-79a55ffc3d4b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d5b9bb5d-e74f-4d54-ba8d-228fb1d8429c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd6a53c-b5be-48b8-b07f-cee11f709c10",
        "cursor": {
          "ref": "15361fef-b93a-40ad-a169-3fba502904c5",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "060ec8e6-df4d-4e2f-addc-70d2b23127af"
        },
        "item": {
          "id": "dcd6a53c-b5be-48b8-b07f-cee11f709c10",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2e798ae2-e642-4f13-9b38-cc0a1ed07859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05ec6d3-399c-4db1-8478-a4ac3a73e813",
        "cursor": {
          "ref": "4c2a35bd-be44-4fef-b984-4ccfa0b1bfe0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ca752e2a-52e8-485f-8680-6423c7b66879"
        },
        "item": {
          "id": "d05ec6d3-399c-4db1-8478-a4ac3a73e813",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "31823b94-fe4c-48fb-b615-20b1eed76c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4e1316-550a-4249-95ea-578dff4f4495",
        "cursor": {
          "ref": "c9c03444-8903-46fc-8856-79d7a399f5b7",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "776edd96-af23-43e0-ba7a-0d15d197fcf2"
        },
        "item": {
          "id": "6f4e1316-550a-4249-95ea-578dff4f4495",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "70f5f312-9615-492d-86fc-c28a9ddcbdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4f5a98-1a4f-463d-8bad-4cbf3ef0d7e0",
        "cursor": {
          "ref": "aed06b62-90cb-4be4-8df7-55ff30e13d9a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "858ec008-d452-471a-acd0-d47ff24115ff"
        },
        "item": {
          "id": "6c4f5a98-1a4f-463d-8bad-4cbf3ef0d7e0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "97756731-fb2e-49ff-b1bb-0ae44648626a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ab1a6d-55d4-4159-81d9-c600209cda1e",
        "cursor": {
          "ref": "9e3c831d-efee-4ce3-8a6e-d3124251aee8",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f1e696df-6579-47e2-8ab0-a73ac144de3d"
        },
        "item": {
          "id": "54ab1a6d-55d4-4159-81d9-c600209cda1e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ab521bc4-e224-41b0-980f-8c6e29b78acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb9546e-6ec0-43ed-ab5c-faae39481784",
        "cursor": {
          "ref": "8cce9321-0cdb-4e5b-9e5f-f967f37c29de",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4184b7be-bcdf-4b42-bf42-673deeded82b"
        },
        "item": {
          "id": "6eb9546e-6ec0-43ed-ab5c-faae39481784",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d41a0314-c7fb-4a9b-bf35-47796a9bf81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f71000f-80e7-4a9d-b72e-f7608be59ec1",
        "cursor": {
          "ref": "4be9cdfb-9635-4935-8736-639273f8454c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "666ef702-fc8f-4db4-b87b-1972ae0a4217"
        },
        "item": {
          "id": "3f71000f-80e7-4a9d-b72e-f7608be59ec1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "de270b60-954a-4876-b198-a6f56782787e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43f3b85-42c8-4821-af02-294363b04e6e",
        "cursor": {
          "ref": "f3be8d2d-55c4-4810-9195-388b3ccc5553",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f58ab122-fe5f-40f3-88f6-f982f087babe"
        },
        "item": {
          "id": "f43f3b85-42c8-4821-af02-294363b04e6e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0f6ebc09-a55d-4c97-87f8-3083ca272297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979fc03e-5fca-4a54-92d4-bd8759812001",
        "cursor": {
          "ref": "f54ca714-af3d-49ef-b209-517ab5158a9b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "67c16a5f-dc1c-4391-b8b9-c232ef9656f1"
        },
        "item": {
          "id": "979fc03e-5fca-4a54-92d4-bd8759812001",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b9ad842e-c1d1-4b24-a308-4634b63f0255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ecc47c-367c-4fa8-93b6-d0915d9c5145",
        "cursor": {
          "ref": "1e9c6a7a-052e-41ad-bac1-f42df974bb19",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "09f76978-8744-4b15-bc37-16923fb92999"
        },
        "item": {
          "id": "19ecc47c-367c-4fa8-93b6-d0915d9c5145",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d7b13b41-a659-4ca2-892f-7e60acb61861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf13cc28-8ee2-4435-95e2-f6332e2a022f",
        "cursor": {
          "ref": "92f8a464-6b08-4374-a7da-58c9a4d4c70d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "32b8fa4b-25e1-42a4-87e0-83624f29a840"
        },
        "item": {
          "id": "bf13cc28-8ee2-4435-95e2-f6332e2a022f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e6a4407-086e-4319-b931-cd2ffd7a1a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b563c8dc-6b17-4339-b66a-2111f1f682ba",
        "cursor": {
          "ref": "b71ec66e-ace8-477c-b48a-79ed61151d12",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0f8ef686-1581-4e00-bdb2-43670f49904f"
        },
        "item": {
          "id": "b563c8dc-6b17-4339-b66a-2111f1f682ba",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "15162a3d-3b71-43b5-9347-823b20e8707a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce2adde-b68b-4250-ab58-498d40746e01",
        "cursor": {
          "ref": "fd353da9-0e9e-4a50-93c1-2d64e30a7b50",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2834fccf-817c-493e-85f5-638758bba0fd"
        },
        "item": {
          "id": "2ce2adde-b68b-4250-ab58-498d40746e01",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e6dfb7b5-03bb-43be-9f6f-63f1e37c6769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178d8003-4a10-4950-9357-40a418c26f2c",
        "cursor": {
          "ref": "ea2e9532-ead0-498b-a7c7-3bcecb2da624",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "38c87006-3196-4ec9-abbb-8a0631e2d5dc"
        },
        "item": {
          "id": "178d8003-4a10-4950-9357-40a418c26f2c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "31e9c0b0-546f-4a11-8365-333ea517a67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd8189b-8f01-496d-b554-469447c0d790",
        "cursor": {
          "ref": "0b30584f-7411-48c1-8118-a5c70bf404ef",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "62dbcf0c-1793-489b-99d3-ff90659496e5"
        },
        "item": {
          "id": "9fd8189b-8f01-496d-b554-469447c0d790",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "21507c62-36c0-4807-b00d-9184ab86489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967e264a-5b65-47ac-a095-61068d27c5f5",
        "cursor": {
          "ref": "f2d3642c-4b8b-42a4-ad0a-1f257a7ea451",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "de7c9f1b-e473-4da2-b80d-531a9fbf54a1"
        },
        "item": {
          "id": "967e264a-5b65-47ac-a095-61068d27c5f5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8b11f48b-d9cf-4585-869b-10ee7a08c21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95d4e3a-b8ad-4d5e-9eca-c9a919d12f36",
        "cursor": {
          "ref": "1d99e0a0-acac-4e22-b9c7-8391f9d74513",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a66d71d5-f6f0-4f41-9625-ca05e53181c2"
        },
        "item": {
          "id": "b95d4e3a-b8ad-4d5e-9eca-c9a919d12f36",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "74445e38-e809-4e55-833f-262a9783bd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3a834f-0e11-45ad-be74-99bf5ed708b8",
        "cursor": {
          "ref": "06fc07d3-ee55-4c36-90e3-dfd525b041aa",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a7f9d1eb-d6d6-43c4-ab79-35516cf4c058"
        },
        "item": {
          "id": "2c3a834f-0e11-45ad-be74-99bf5ed708b8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "14eca2ca-3737-42cc-8374-2d24870e9f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f477e9b-506b-4e3b-aa0d-a3bace3013ac",
        "cursor": {
          "ref": "5ed956cc-0dc3-4347-a133-db6666c37f96",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e29bb57e-6ccd-4049-9145-0896a4d64530"
        },
        "item": {
          "id": "2f477e9b-506b-4e3b-aa0d-a3bace3013ac",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d32318fc-8405-4179-a856-db6f7cc8f030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d267558-a6b7-4dd0-989a-83d9e628304c",
        "cursor": {
          "ref": "036d9121-f94b-40de-bf10-17751b089eaf",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "26f00199-5ef2-446d-9056-3f92fbd85b24"
        },
        "item": {
          "id": "5d267558-a6b7-4dd0-989a-83d9e628304c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9710de37-a52d-4c3d-9808-17b6b76946fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e787f378-5f2f-4789-b488-e9d23ccd3099",
        "cursor": {
          "ref": "d5afc10b-6b3b-4527-9577-b7d212515647",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f335d64b-3946-49b6-8380-95cf64de91b9"
        },
        "item": {
          "id": "e787f378-5f2f-4789-b488-e9d23ccd3099",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d280c59f-5779-448f-a3d7-96e9a6bf35b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc73698-b802-4465-a141-b06ee55e10a4",
        "cursor": {
          "ref": "77494456-169f-4d6e-b65e-e53d83a5bd8a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "36a540fd-7daf-4b3d-8881-f60b028b43ed"
        },
        "item": {
          "id": "bfc73698-b802-4465-a141-b06ee55e10a4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d273e276-2743-4c42-aeaf-b5b360910682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822791e4-a139-48e8-b444-63d4498db9c5",
        "cursor": {
          "ref": "aae4db72-a0b2-47f2-9e2c-9187ecf9ed7b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c6c4647d-053f-40b4-b9b3-4a1f1def3037"
        },
        "item": {
          "id": "822791e4-a139-48e8-b444-63d4498db9c5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "425b0f57-917e-475d-a322-cd7b7d539137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd23a5d-44a1-4ecb-a538-a6252ab0af96",
        "cursor": {
          "ref": "00858b24-bf62-412f-9f83-608c97a150d9",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "908f44b3-1f7a-42f2-af6d-f509bd018cba"
        },
        "item": {
          "id": "fcd23a5d-44a1-4ecb-a538-a6252ab0af96",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "587fe957-bd33-43d5-962f-e40eeaf8ca28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b007f74e-cca5-49cf-bc86-4bf04c68b547",
        "cursor": {
          "ref": "3106acd9-eda2-4c7d-a201-0cd9845027a3",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5af9186b-6aa1-4cfa-97f9-314ce328b2d9"
        },
        "item": {
          "id": "b007f74e-cca5-49cf-bc86-4bf04c68b547",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c47fafa7-7b99-4224-9be3-79eaf54a395e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a04943-e834-458e-9dc4-367ad5f767da",
        "cursor": {
          "ref": "a8b77434-2ef8-4ded-8484-e5a9428d7fd6",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fd4740a9-b831-4143-943c-31561d2a20e3"
        },
        "item": {
          "id": "39a04943-e834-458e-9dc4-367ad5f767da",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4d7734a8-3c06-431f-b6af-015680e9f683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5646d4-8d0c-4023-b33c-7ba2afe98e83",
        "cursor": {
          "ref": "b8da8aff-a0c2-4e3d-a2c5-4930af0f1e73",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8f503aaa-906b-47ee-a50c-2426b1c03ec5"
        },
        "item": {
          "id": "9e5646d4-8d0c-4023-b33c-7ba2afe98e83",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ae4b1f46-2c1f-44ba-96bd-acb6718ac182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c19420b-9566-4be6-bcc6-4d664602d75b",
        "cursor": {
          "ref": "e3439925-5c79-4440-8ddf-f5fdeb77b71a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2d755f27-38ca-407a-abd7-8d3c6ce3ae76"
        },
        "item": {
          "id": "1c19420b-9566-4be6-bcc6-4d664602d75b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "41e85e29-8a18-4332-a85f-c0401065ec11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46044a92-5245-42ff-949f-696b365d3354",
        "cursor": {
          "ref": "74ebf301-ea69-4e56-bcb7-7efb21158d9b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1b230857-87b6-4994-a9c7-fea3d9e7b1f0"
        },
        "item": {
          "id": "46044a92-5245-42ff-949f-696b365d3354",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ddc47696-bcf2-4d1e-baf3-be1025e6f37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23d5f60-0708-42e7-a3c9-e9892e5694c7",
        "cursor": {
          "ref": "0391f0df-5009-4aac-a271-7b57ce3ae37f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7457164b-6eda-4b46-8b73-c62041b774bd"
        },
        "item": {
          "id": "d23d5f60-0708-42e7-a3c9-e9892e5694c7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f01e80ad-e015-4709-9b60-3e428f35c86d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 62,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ff2625-e5d3-474e-a69a-49b9d6472701",
        "cursor": {
          "ref": "2d93b9ca-170f-4eb4-a4a3-6b97adbb753a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "956a8977-a18f-4345-85d3-48f7ff3417e2"
        },
        "item": {
          "id": "82ff2625-e5d3-474e-a69a-49b9d6472701",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6267f33a-c539-4b02-961a-35b0f23be7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6092dd-0a44-44a2-80a7-460e277796b8",
        "cursor": {
          "ref": "f15e6915-6f1a-4b4b-ad8a-9dff69bf101c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "245f0cd9-4a7a-4d89-a828-661f688dd994"
        },
        "item": {
          "id": "fd6092dd-0a44-44a2-80a7-460e277796b8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9facbb38-1fed-474a-bce0-2c7e1bb78026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f806e818-94c1-4ca2-90a1-034070163852",
        "cursor": {
          "ref": "ce25a4e4-eddc-4bc6-8b98-051f0064aa94",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5ee535a6-b9fb-4985-9938-099bdba71fa5"
        },
        "item": {
          "id": "f806e818-94c1-4ca2-90a1-034070163852",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "17fa9514-b9da-4396-a65d-3158fd6ea985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4153c87f-e767-4f37-8b5d-1835a1629539",
        "cursor": {
          "ref": "84320830-a78a-4e28-a529-bf50c9ac2db4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b64c2f43-27c8-436f-b049-9b17d01411ee"
        },
        "item": {
          "id": "4153c87f-e767-4f37-8b5d-1835a1629539",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3200e1f1-05bd-4a91-b10d-f926c60fbd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9186ff-126a-4fc5-b38f-288f40272950",
        "cursor": {
          "ref": "5b341d1f-16e1-4e90-a2f2-619fc1b42761",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2b3b28a0-1dd4-4eb2-aee3-39a0183c7efe"
        },
        "item": {
          "id": "2f9186ff-126a-4fc5-b38f-288f40272950",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "24757ad8-a7df-424e-adee-015291073c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25c5cd0-8656-4ca8-94c6-6b5b83e3d6d7",
        "cursor": {
          "ref": "cec83304-e05f-4e41-b344-8c2bc86e4b82",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d44fbb62-1c25-4eaf-970a-5145b86d4bfb"
        },
        "item": {
          "id": "f25c5cd0-8656-4ca8-94c6-6b5b83e3d6d7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c4d271d8-8ec3-404f-b372-7e33e43dcd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cc7994-2926-4616-a951-6e4702a6b3b5",
        "cursor": {
          "ref": "18a1ddc2-84bc-4696-8047-7348b5738064",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "849ddca0-548a-4c69-b7b5-15f463573cce"
        },
        "item": {
          "id": "b8cc7994-2926-4616-a951-6e4702a6b3b5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3dd4a806-addb-4e90-ad22-835edb1023fb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 62,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fadb37b-03b9-47f0-862c-2d4576f997e2",
        "cursor": {
          "ref": "54339c1b-fea3-4286-a2db-facfe10a1fea",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2a91c55b-af72-4e02-abdb-23ce886514b0"
        },
        "item": {
          "id": "8fadb37b-03b9-47f0-862c-2d4576f997e2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "39cefc00-1457-4d97-8b88-a3b817dc789c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c04d50-e31e-4832-87fe-9cba390be931",
        "cursor": {
          "ref": "1d147a50-2425-4748-af97-e4b3a61257f1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "55dd5650-5a43-40a0-91e9-c300c2836ff3"
        },
        "item": {
          "id": "d4c04d50-e31e-4832-87fe-9cba390be931",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "11c3f302-83cf-4662-ad4f-b87572f0012f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38298e05-5c37-45f8-a293-1ac96917c228",
        "cursor": {
          "ref": "14e2f6ac-922e-4270-a2fd-fef46748c564",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bb910be3-58f3-44b7-b647-adf8c8c5c0ca"
        },
        "item": {
          "id": "38298e05-5c37-45f8-a293-1ac96917c228",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f51339d5-2612-42a2-bd79-92fab72d5a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e17db6-8a7a-449e-9fff-cd1c7a18b800",
        "cursor": {
          "ref": "39b8f2d7-fa1b-444e-9f05-5a8e09dff6a2",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0ea4e1ad-5bbc-4c1e-9da5-1f479a8265bc"
        },
        "item": {
          "id": "e0e17db6-8a7a-449e-9fff-cd1c7a18b800",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0b1cbd02-4446-48cc-9c6d-febea423c9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b6ba9f-cca8-44d5-bdc0-b5e8bc6fcef6",
        "cursor": {
          "ref": "0824ada6-7c3c-4e69-bf4e-dad82c619df8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2690e54a-dad7-45e4-b0d1-2b565963ff90"
        },
        "item": {
          "id": "d8b6ba9f-cca8-44d5-bdc0-b5e8bc6fcef6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "41c0332a-8e23-4a75-901c-f1f4b3f37020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328d415c-aeae-4b5f-9306-5e775d3e5f1a",
        "cursor": {
          "ref": "06b97b11-786a-43cf-abfa-6149eb86723e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e4e74170-3621-4a98-b328-4666cee98be4"
        },
        "item": {
          "id": "328d415c-aeae-4b5f-9306-5e775d3e5f1a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d8ca94d2-2ba6-4291-8e09-9eaee4a98a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426c5fde-9bb9-492d-b41d-d094a69e18f1",
        "cursor": {
          "ref": "13d07cf8-4fbf-4ef7-916d-cc695996f8e5",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3a5d05e0-6692-42bb-a3a4-4ae52e641ade"
        },
        "item": {
          "id": "426c5fde-9bb9-492d-b41d-d094a69e18f1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "45d8051b-2922-42b3-b121-8d5da0489014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e381d5f-14b0-4929-ad43-1fdcd931124f",
        "cursor": {
          "ref": "19bca10c-d675-4c05-8740-f7844e3602b2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "33e1b2ac-45de-43b6-8e30-147782be02d9"
        },
        "item": {
          "id": "0e381d5f-14b0-4929-ad43-1fdcd931124f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "065448f8-1a50-4150-a01f-2984468a043c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624c86ae-729c-421a-a3bd-28072bf4b7d4",
        "cursor": {
          "ref": "4ad433ea-c80f-439f-97d5-f0090249b751",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "207ecd78-bc51-44d5-947f-534cab861c39"
        },
        "item": {
          "id": "624c86ae-729c-421a-a3bd-28072bf4b7d4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "354f0333-27a9-4c13-b00d-6b7dc2d63955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a047d58-3274-41e4-a3e9-f71ae05f7358",
        "cursor": {
          "ref": "b9073303-8ca9-4b42-882e-1473a76e6803",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f939c8aa-5886-4ae8-8684-424b960197a1"
        },
        "item": {
          "id": "6a047d58-3274-41e4-a3e9-f71ae05f7358",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bac4e8f2-9cc8-4049-a268-cd12197fa310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fa82d2-e9a3-46c9-998b-ead8527da253",
        "cursor": {
          "ref": "d9cd4745-17fd-424d-b3a3-a5efc5af6b72",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f5db769d-53ce-45f7-b714-d2c47a8a71d4"
        },
        "item": {
          "id": "58fa82d2-e9a3-46c9-998b-ead8527da253",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fb6fec3b-6b87-46f2-aa34-b2220cf44d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d1cc05-554b-4479-b885-bf17b878e704",
        "cursor": {
          "ref": "e8c50300-d692-427f-b4d8-65151951a79c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d83992fb-8b56-4726-8004-5b120387840e"
        },
        "item": {
          "id": "36d1cc05-554b-4479-b885-bf17b878e704",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2efbff77-2465-4099-9731-ae8936360dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9ac749-c36b-4253-8180-32befa5a7155",
        "cursor": {
          "ref": "8479b6ab-d2e1-43bb-95ad-8be915400523",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "359ee764-babe-47a9-879d-5403840d7d46"
        },
        "item": {
          "id": "2f9ac749-c36b-4253-8180-32befa5a7155",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f45b4e1d-7640-4204-af79-9c749a6094f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7575ca-9e52-47cc-b5bc-d203df997f5a",
        "cursor": {
          "ref": "5b944218-35d6-4f88-9491-1eb9268a55bf",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ceb92244-940a-4201-a6be-cdc104eb7b6f"
        },
        "item": {
          "id": "6e7575ca-9e52-47cc-b5bc-d203df997f5a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7c52541e-e055-4f24-a1de-5e9bee35a87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b616eb3-3f68-4ed6-9972-4f6ef1f63461",
        "cursor": {
          "ref": "5025f6e4-042c-4a8a-92be-83bd7ace26cf",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "eded85cf-9d78-49a9-a5f0-40eb7b73573f"
        },
        "item": {
          "id": "8b616eb3-3f68-4ed6-9972-4f6ef1f63461",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0c43d40c-dceb-4299-b5a2-7749795f5345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dd0ea5-c856-4e3f-960b-e0051aa98fc0",
        "cursor": {
          "ref": "b87670fe-4ecd-4910-8066-df4c6f761a8a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fb6c0b95-8aa3-4974-83cc-43d3fb772f13"
        },
        "item": {
          "id": "32dd0ea5-c856-4e3f-960b-e0051aa98fc0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3cb43739-89ca-4f44-9ce4-18e81dce4379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a72b74d-fff0-41ab-9335-228ebf9c02b9",
        "cursor": {
          "ref": "2dc60601-1791-49f0-b206-22302ca895bb",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cfc551fe-d8e9-4fab-b36b-37edd2088057"
        },
        "item": {
          "id": "7a72b74d-fff0-41ab-9335-228ebf9c02b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b0a298dc-288d-4aac-ae54-1e1b7c050869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78b7b64-92f5-43bd-9a11-aa24b199578e",
        "cursor": {
          "ref": "6ca4e6a8-68b8-4f97-9554-fc5952bdb438",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f17e3b47-05cd-4a21-98c2-d2c59e875fc4"
        },
        "item": {
          "id": "d78b7b64-92f5-43bd-9a11-aa24b199578e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0611bd30-feb1-4ddc-9ee8-4899cb591399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28d96fd-e844-477d-81e3-9c5d3cbe7c8e",
        "cursor": {
          "ref": "f8627043-37a6-4170-b86c-7405419fd4a7",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e487b8ab-4c25-44c3-95cd-b6572e886144"
        },
        "item": {
          "id": "b28d96fd-e844-477d-81e3-9c5d3cbe7c8e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "06eb76a5-7464-4d73-9ea5-88a9fc35bbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8c6cda-02e0-447c-a24a-3e3f4743a715",
        "cursor": {
          "ref": "de1e1cd2-67cf-4a4f-99a7-319618bcafb1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b35a84d6-8e6c-46c7-8e98-d4cd1e6fc4b4"
        },
        "item": {
          "id": "1b8c6cda-02e0-447c-a24a-3e3f4743a715",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f17d75aa-0c79-480b-866b-77ce9cfa94b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a848a0e8-7fc4-416b-ae20-5d7e55cc0628",
        "cursor": {
          "ref": "cbc9e645-9854-4ca9-adc2-28edcc1747d5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d8400290-3b28-454a-aac0-feb4f6d67fcf"
        },
        "item": {
          "id": "a848a0e8-7fc4-416b-ae20-5d7e55cc0628",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a9817f4e-49a5-4166-bbb1-d4afd1dfeba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f833a5ee-e69f-4cc6-81a3-20526635c74a",
        "cursor": {
          "ref": "0a8616ea-e9a1-4caf-909f-2dc6ce852264",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "968f61ed-4896-4321-8dde-20234844c50e"
        },
        "item": {
          "id": "f833a5ee-e69f-4cc6-81a3-20526635c74a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4001423a-7d87-4e42-b3db-1114258e3d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb44968a-b8ef-4e3b-bfd5-ec56090c7335",
        "cursor": {
          "ref": "0d378895-dfb4-4593-a45f-1ad33ac5883b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "05fbc078-d0fd-4323-a53d-e994ab841b9c"
        },
        "item": {
          "id": "cb44968a-b8ef-4e3b-bfd5-ec56090c7335",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "caee372b-8571-411d-986e-57022f38ebae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e4ef8d-2f85-4fc4-87f2-ff197e9d18c6",
        "cursor": {
          "ref": "8837a947-5ab4-494a-ad8f-417e93f94349",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8e6ad611-187a-429d-a1cf-2ddffef69b69"
        },
        "item": {
          "id": "63e4ef8d-2f85-4fc4-87f2-ff197e9d18c6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c718201a-3149-4ef9-b494-5bbb5e0610d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e13c39-cd7f-4689-8f4e-a1307d23b443",
        "cursor": {
          "ref": "79a8ca70-8793-4b1e-aa65-ad976cfc6ccc",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2b1b1ead-910a-4359-bacf-5493019ff696"
        },
        "item": {
          "id": "30e13c39-cd7f-4689-8f4e-a1307d23b443",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7f185c57-7700-46a3-acb2-17879441a7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42dfd0d-9e05-4898-9d26-50172e02f80d",
        "cursor": {
          "ref": "be32a513-a27d-463e-b6bf-8b111d8cc9ff",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e58f2887-7f23-4dba-8370-8528cd7baaee"
        },
        "item": {
          "id": "e42dfd0d-9e05-4898-9d26-50172e02f80d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "de2d907c-d7ec-49e9-b9c0-6ceeed3de538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d385458e-7575-44da-adb8-ead94c99da9f",
        "cursor": {
          "ref": "f0ab4adc-7680-4ddf-8f12-83b0f1f807c3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "aade72cb-4e63-4d74-879e-0639621267b2"
        },
        "item": {
          "id": "d385458e-7575-44da-adb8-ead94c99da9f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c1ae1010-6e87-49f6-b387-2b2752b14f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f503e7a-bb63-4da1-9fe2-849aebaf7435",
        "cursor": {
          "ref": "d371a994-d305-4d69-bf3d-e5d449afc26e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "67fd40e0-bb52-45b1-9f81-990b86477edc"
        },
        "item": {
          "id": "2f503e7a-bb63-4da1-9fe2-849aebaf7435",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "246765c0-4b00-4f81-93c3-7fc2fc44f88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a3d160-c0d7-4bd8-8d82-16ad54fb529d",
        "cursor": {
          "ref": "54029d26-f836-411e-82a6-a438d63bdf59",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "52c97d72-be0d-474d-a611-2ad349524064"
        },
        "item": {
          "id": "75a3d160-c0d7-4bd8-8d82-16ad54fb529d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9f0ee8c6-ce2c-493a-925a-38f215009e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08511884-44be-4651-bdc8-4516a0063000",
        "cursor": {
          "ref": "4bd8acf3-3e4e-42c7-a208-229a1d1ec7d8",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aea81cde-fe3e-44dd-9553-cae77d22c388"
        },
        "item": {
          "id": "08511884-44be-4651-bdc8-4516a0063000",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "914fca5e-3d55-419e-a124-1bedcb4eceae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da3b63f-07dc-484e-b076-d4559db864f3",
        "cursor": {
          "ref": "2190f063-99a0-405f-a828-ac919c88faed",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a7c8ebaa-5798-4ecf-bdff-b1b4c899af87"
        },
        "item": {
          "id": "4da3b63f-07dc-484e-b076-d4559db864f3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8c3bdca2-9e43-4703-b752-1bb0e1d0c97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34a7070-e973-40ce-b04d-83df2295b9f7",
        "cursor": {
          "ref": "e2dfa1cf-5ac0-49de-9dab-08d597754bb6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e1c0726e-df8d-4399-90c8-284361a5b08a"
        },
        "item": {
          "id": "c34a7070-e973-40ce-b04d-83df2295b9f7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e3472e25-00b9-4d16-a217-0ec230b1e644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb0799d-73f0-48c3-aea1-c163ccc18814",
        "cursor": {
          "ref": "c0d2aad6-fc99-43b9-95e5-8772fa953f59",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fbe344d8-ed8c-4264-b751-d74cb8540c86"
        },
        "item": {
          "id": "dfb0799d-73f0-48c3-aea1-c163ccc18814",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1f355e13-7f75-4284-98a2-51b899217ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078dae38-e8ec-429a-9f7d-f0bd8800daf5",
        "cursor": {
          "ref": "117e7552-d1fa-4731-b960-b51783cde85c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "68becebf-2efa-4e21-9ae4-b5040499354b"
        },
        "item": {
          "id": "078dae38-e8ec-429a-9f7d-f0bd8800daf5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "71eb416c-e9e7-4330-b4d3-02bfa94f83c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3de77f5-c431-467c-88b3-050a3ab83297",
        "cursor": {
          "ref": "4e682b4a-c2a1-4455-b433-366d376321ba",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2c662282-2e92-468d-8657-8ada9d198418"
        },
        "item": {
          "id": "e3de77f5-c431-467c-88b3-050a3ab83297",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c1b783c6-fe04-406a-89e5-2f9c9f6371d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f01b1ce-66af-4a33-9486-dbdc4862bdd9",
        "cursor": {
          "ref": "b82acdc7-024b-437b-9832-b4fc6420a888",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "38a63ddc-a97e-496e-bb41-8cd43e02cafd"
        },
        "item": {
          "id": "3f01b1ce-66af-4a33-9486-dbdc4862bdd9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "364fef03-ef77-4782-9cd2-871fb78f975c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5aeae86-d168-4681-b644-07b1834b1112",
        "cursor": {
          "ref": "a1379c27-ebe1-410c-bc7f-88e1c95ee750",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4804c283-acab-496c-90e1-3127c514e1c5"
        },
        "item": {
          "id": "d5aeae86-d168-4681-b644-07b1834b1112",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2889c61d-5a06-4e03-b210-a6d77337d4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d746d6-aba8-4aaf-967f-578785432abc",
        "cursor": {
          "ref": "642296ba-297b-429d-8564-00bd14b07f4b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "419da67c-9c65-42f1-b075-33c75762f766"
        },
        "item": {
          "id": "c7d746d6-aba8-4aaf-967f-578785432abc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9a55a042-3600-4980-83f3-c528da1b7a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8218aa-e7c7-4599-922d-f5d777119533",
        "cursor": {
          "ref": "6d20f2d2-2fbe-4061-ab2b-c2db1630993d",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "612c10ab-82ab-461b-82d8-6bc25a3441b8"
        },
        "item": {
          "id": "5b8218aa-e7c7-4599-922d-f5d777119533",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "681bd95a-cbe5-4c8f-91b3-44173af9264e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f79c0e-bf96-44cc-a030-c408018cdd2a",
        "cursor": {
          "ref": "4815c217-b3ad-4703-9104-d206bd7e2fd8",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "06b78195-0206-4a80-bf4a-08742894f2bf"
        },
        "item": {
          "id": "75f79c0e-bf96-44cc-a030-c408018cdd2a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "53882798-3394-4716-ac46-83c82a81b0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd740ef8-5963-4abd-81ba-c95ac82d59e9",
        "cursor": {
          "ref": "cb0cd65c-d680-4d5c-bc60-0baf2d1287eb",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "24368042-b0d5-4e69-a809-a5930e65b616"
        },
        "item": {
          "id": "bd740ef8-5963-4abd-81ba-c95ac82d59e9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4433f143-0b55-4458-b680-7eec52f8b67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63deb577-4c94-4dfe-86ee-3e9a36e57390",
        "cursor": {
          "ref": "c5a80df8-384d-4718-9759-7d5ad5d3dea4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "26a704fe-cf1b-4646-adb9-5fe4d10b7aee"
        },
        "item": {
          "id": "63deb577-4c94-4dfe-86ee-3e9a36e57390",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8c29e7f7-a625-47d0-ab23-b0d204a79ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33b851a-a54f-4c50-a402-f387615b3bab",
        "cursor": {
          "ref": "58c81258-47da-4106-87d3-c1abf8f6afba",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "aa406889-6512-4c7d-b340-cb2f3be51c39"
        },
        "item": {
          "id": "f33b851a-a54f-4c50-a402-f387615b3bab",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "987fe779-de91-4a1a-8e15-f18d24cee74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b54cf53-f8f7-4d6a-a470-c62564ef4629",
        "cursor": {
          "ref": "12232b37-6fde-4d82-b88b-062b2b5fea8b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "62d3b055-12d0-4f97-8c45-d57c8a1734fd"
        },
        "item": {
          "id": "5b54cf53-f8f7-4d6a-a470-c62564ef4629",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e760f4d2-079a-49d5-955c-f40f3872541c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f9c648-a41e-4225-ba27-4527b7265f80",
        "cursor": {
          "ref": "df08695c-4388-4ad7-be93-283b87a7f1e4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b61edc0d-2942-4430-a3f1-dca59ace1ce4"
        },
        "item": {
          "id": "47f9c648-a41e-4225-ba27-4527b7265f80",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "46efd369-8598-4b53-852a-8d362f963f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1ab9f5-29c3-435f-89c1-7e431e716043",
        "cursor": {
          "ref": "32dc35c6-e25f-49b1-831e-25a69af9e229",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d6f4e36f-7653-4b32-b5a2-73a61378f45f"
        },
        "item": {
          "id": "4d1ab9f5-29c3-435f-89c1-7e431e716043",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4cff52d-1273-48c1-a306-0deb3c64427b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1769d5-8f61-4f64-9724-ecf1ab07fd34",
        "cursor": {
          "ref": "6de0adb5-1b29-479b-88d5-ff8db6998092",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "be2341d6-a134-41ea-aef1-c59a39241571"
        },
        "item": {
          "id": "2f1769d5-8f61-4f64-9724-ecf1ab07fd34",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "392cdd9f-818b-4e53-a858-573526dbc199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3398243-d3af-4395-a127-e59ae3a90521",
        "cursor": {
          "ref": "65e7ee87-5e45-4423-8a65-2d0e25392490",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4a09b7db-0904-4bdd-8dd7-39b23148bb74"
        },
        "item": {
          "id": "a3398243-d3af-4395-a127-e59ae3a90521",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d6988c2a-d816-4b71-88e6-5c280e91be50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fefcc3-f767-4255-a736-8bf449839b2f",
        "cursor": {
          "ref": "4cef504c-8fa6-4911-9567-fe8d81b83964",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bf14ea6c-85b7-427d-8b1b-583299667aeb"
        },
        "item": {
          "id": "64fefcc3-f767-4255-a736-8bf449839b2f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f3aecf80-5142-41e1-9ddb-30a7aafa9de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2eb11f-aac6-432f-8ce7-f99083138e9e",
        "cursor": {
          "ref": "4906a705-0e4a-4e48-9648-d8e6343e3074",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "46a2905d-3114-40e3-95e1-71c5a5d84bfb"
        },
        "item": {
          "id": "ff2eb11f-aac6-432f-8ce7-f99083138e9e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0924f7bd-5222-4ae9-80f4-abac0b549f2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481f5b5b-1e65-41ba-bed8-e557dc558649",
        "cursor": {
          "ref": "1ddd0d47-e728-4cd3-96e7-4a271e080a0b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ce9cff0b-dcd0-40d2-914b-71a7bd2f0c30"
        },
        "item": {
          "id": "481f5b5b-1e65-41ba-bed8-e557dc558649",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c8a957aa-52eb-4b3c-b57b-a9abeda6ef7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "93e866dd-1703-4fc5-b934-b688a15e555b",
        "cursor": {
          "ref": "e4009476-d9bf-4475-9b6e-98d94c83e1f8",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "70511c13-dc5a-4181-86ca-38ce7a01f18b"
        },
        "item": {
          "id": "93e866dd-1703-4fc5-b934-b688a15e555b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0adcb1fc-3157-4f29-889c-616b8151c637",
          "status": "Created",
          "code": 201,
          "responseTime": 25843,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfb6fd2-3180-415c-b378-a2fb72f0b021",
        "cursor": {
          "ref": "439e7092-9dbc-4d91-8804-aa10a5a56501",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ce292556-f788-41f3-be44-81250cfaa5a2"
        },
        "item": {
          "id": "0bfb6fd2-3180-415c-b378-a2fb72f0b021",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c8831a60-3d04-4101-a0a1-0422091d2c1c",
          "status": "Created",
          "code": 201,
          "responseTime": 25968,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99c0ce0-9e80-44cd-b4e7-c684cf7f7cf6",
        "cursor": {
          "ref": "503ec659-56b9-4116-a1ce-95c30c25f13a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0d4ed1d6-cba2-4a83-8506-a9da763dfe54"
        },
        "item": {
          "id": "c99c0ce0-9e80-44cd-b4e7-c684cf7f7cf6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "700c264d-b40d-4bc6-83a4-2db45f0fed1c",
          "status": "Created",
          "code": 201,
          "responseTime": 25779,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43d6702-3414-47e2-9ecf-10983ea9a538",
        "cursor": {
          "ref": "3cade8af-6c6c-40b7-bfd9-aacd10330c59",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "01cfb19f-b65f-4c02-ba00-853857b5838d"
        },
        "item": {
          "id": "a43d6702-3414-47e2-9ecf-10983ea9a538",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "778eb919-617b-4e84-8244-5e0c8e3769a0",
          "status": "Created",
          "code": 201,
          "responseTime": 26242,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b57a7b-e600-4f25-a7c2-6c31f868c870",
        "cursor": {
          "ref": "bf4dd56f-33f6-403f-88ff-6432b0f8434d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9c4b4663-9ec8-4df1-aec9-9b61dde866e5"
        },
        "item": {
          "id": "70b57a7b-e600-4f25-a7c2-6c31f868c870",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e4f0b6aa-4890-44a6-81c5-71a8553d75cb",
          "status": "Created",
          "code": 201,
          "responseTime": 25628,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-30T00:50:08Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-30T00:50:08Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "645872a2-511c-48b7-91c9-4aeef9a6a1c4",
        "cursor": {
          "ref": "7ec3a9aa-1e2b-4697-99ae-904a02c43535",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "96c8ec75-c84c-487c-904a-f3e0ba8c354e"
        },
        "item": {
          "id": "645872a2-511c-48b7-91c9-4aeef9a6a1c4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "014815b9-261c-41af-985a-7486e372781a",
          "status": "Created",
          "code": 201,
          "responseTime": 25655,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09dd85f2-12f3-4c1e-bfd0-258a3513b595",
        "cursor": {
          "ref": "b0f57d5c-ad57-4e31-b6bb-548d8f575dc2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "502716cd-7819-4b36-a7df-61a01e1bf902"
        },
        "item": {
          "id": "09dd85f2-12f3-4c1e-bfd0-258a3513b595",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "64d22335-5cd8-4be2-95a4-c2ab17e675af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531875db-a48e-4087-83fb-8b63bdb363e3",
        "cursor": {
          "ref": "dd954292-a07d-424c-b091-a2b31ff6a689",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0021f5b1-de24-4570-aca6-7087234711df"
        },
        "item": {
          "id": "531875db-a48e-4087-83fb-8b63bdb363e3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "548077bc-af11-4e64-9f26-24948eedb409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa185b3-cdd7-4478-9504-eb9a5a63100b",
        "cursor": {
          "ref": "10fa6c7f-4f26-4414-9606-83a78ebd1d9c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4813ecaf-1529-44ca-a10c-0d2d57b5dede"
        },
        "item": {
          "id": "2fa185b3-cdd7-4478-9504-eb9a5a63100b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0a9afd71-2aef-4345-b203-dbafced1c638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf7f86f-aea8-4417-acbb-a307811599c1",
        "cursor": {
          "ref": "247bdec0-a13f-4ee4-b682-783fcbb8eed5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "87cfeb60-a1f8-46b6-8c88-1fb3d1954c09"
        },
        "item": {
          "id": "ebf7f86f-aea8-4417-acbb-a307811599c1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5ed853a9-d4a6-405e-9c0c-dce4b2a28626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68b0d27-aae0-4df0-8c5d-2c4d86e1ea17",
        "cursor": {
          "ref": "f1b6d1f7-03c0-4645-ac71-3f70d7bc9570",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "63b1be6b-47c2-478c-b84b-d2246d16a4b8"
        },
        "item": {
          "id": "a68b0d27-aae0-4df0-8c5d-2c4d86e1ea17",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "78d6d79d-cd90-44ce-9bd5-fe8cf264938e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31330a1d-e9d9-463e-a0e4-eb609e8e919c",
        "cursor": {
          "ref": "e93c5213-eb4d-459a-a09c-f8785a735164",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d033ffe1-f9d1-4c1a-9e22-cefe876b893e"
        },
        "item": {
          "id": "31330a1d-e9d9-463e-a0e4-eb609e8e919c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7f8fe316-f9e6-44c0-940b-05ed9507195d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f9470a-c6f6-4dc7-b67c-42c7f99efaf4",
        "cursor": {
          "ref": "f1406aa8-20a7-429a-b84f-8faa6fcfe05e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "68588c2a-9665-4520-8e35-f4e9f4495727"
        },
        "item": {
          "id": "98f9470a-c6f6-4dc7-b67c-42c7f99efaf4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "592e3ced-19b1-4d96-b372-0fd763ee31c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488d2bdd-b0d9-4e04-aeea-1e510c20ebd0",
        "cursor": {
          "ref": "b12ce52f-dae1-489f-85b9-9b4205ac7a69",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5219fbcc-5d67-49d9-a1b8-2bc588ab988a"
        },
        "item": {
          "id": "488d2bdd-b0d9-4e04-aeea-1e510c20ebd0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "96e9d77e-8d1b-41c9-b4c7-53a34bdce278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4539d9-047e-49b3-b024-6f59020ad2e1",
        "cursor": {
          "ref": "f8179f72-8088-4571-a6d5-151f600910b9",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "501e2028-79c4-4ac4-b2dd-95958ad4a186"
        },
        "item": {
          "id": "5a4539d9-047e-49b3-b024-6f59020ad2e1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "02760056-8cd0-4868-8b02-2399ad77f53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1784819-600c-4940-8300-1cec49286b52",
        "cursor": {
          "ref": "a089c825-be63-4d0d-a8ce-05fc11653ac8",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9df1c5fb-7038-46f9-8e80-b46b23d5fbbc"
        },
        "item": {
          "id": "b1784819-600c-4940-8300-1cec49286b52",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "091b4a0d-5210-4615-a1dd-e28f5e7ee8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f9e8f5-c589-47eb-9c44-c6c6161794e1",
        "cursor": {
          "ref": "e10fbd7f-9b75-40fa-a40c-7a1e1a522449",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1fa0d5aa-b66c-455a-a59d-d8cd37bb528f"
        },
        "item": {
          "id": "03f9e8f5-c589-47eb-9c44-c6c6161794e1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c1b85ddd-f385-410d-a80c-70a084e58c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931c2fda-25ef-4b00-a5fe-3bd96f876f22",
        "cursor": {
          "ref": "441ce02a-a69f-4acc-9f43-7b78b3025d9f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a949fd9b-cee5-4401-9db1-d913471779d7"
        },
        "item": {
          "id": "931c2fda-25ef-4b00-a5fe-3bd96f876f22",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b93677e9-afe2-468a-9431-6f43c6ebe67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5ad6e9-d599-4db8-96c9-a4f40bce78b9",
        "cursor": {
          "ref": "3682bb51-4512-4741-baf8-6f6cfd1338d0",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f4f84d67-4177-492e-b30e-aeac2ee1307a"
        },
        "item": {
          "id": "bc5ad6e9-d599-4db8-96c9-a4f40bce78b9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dd96ed3f-06ac-40cc-a139-f042aa2c5cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a00a4f4-03c8-4bb7-8d0e-cc1f01ce9d31",
        "cursor": {
          "ref": "18b64282-ede1-4813-8033-02cb7eae19e0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3c07b3d2-d1a5-417b-a1ba-6e7f2073ad3d"
        },
        "item": {
          "id": "4a00a4f4-03c8-4bb7-8d0e-cc1f01ce9d31",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3385f45f-1c95-4fff-b8ec-2fd6a15353bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1d7d65-dc07-4c6a-ab5c-1fd8cd4fdf68",
        "cursor": {
          "ref": "efcb1067-1aea-49b0-b5cd-4bcca069e58d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b3c53279-777b-43c7-9039-7aea1aa3108b"
        },
        "item": {
          "id": "eb1d7d65-dc07-4c6a-ab5c-1fd8cd4fdf68",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "00d5ddb4-f8ab-475e-a813-3e9f78c39929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc96d338-5824-4334-9347-e0993c182bd8",
        "cursor": {
          "ref": "e0a89e09-4570-4e90-935b-c9c36626acfe",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "80f4f5da-b3b5-47b4-a3b3-005e54514a49"
        },
        "item": {
          "id": "cc96d338-5824-4334-9347-e0993c182bd8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5391c072-88c1-448a-b81b-3fb875c3fc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49487c28-4daa-4590-9760-ee05ee5973a6",
        "cursor": {
          "ref": "3bf8f774-7d77-459a-b6dd-813c9dd8b7fb",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "85288ae7-e92e-4b01-b39f-5b069285b390"
        },
        "item": {
          "id": "49487c28-4daa-4590-9760-ee05ee5973a6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "382299ea-9663-49f6-8471-b95b4db330d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04a93f1-f600-43d4-9e2a-b09eb2c3c624",
        "cursor": {
          "ref": "b31e2dff-deb0-4ed0-bcf0-9afe617a4557",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "87dd7440-dce0-41f1-a41a-be25f4009cba"
        },
        "item": {
          "id": "f04a93f1-f600-43d4-9e2a-b09eb2c3c624",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "29ff716f-ed04-4a9d-9e8e-b1fcf023f3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bf83c9-6a71-4dda-a18a-f3f20ff67839",
        "cursor": {
          "ref": "08ac569c-ab99-4892-95be-11bc86431511",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "55930a93-5ac1-4a9c-9c54-7ad62d5b4b4a"
        },
        "item": {
          "id": "d8bf83c9-6a71-4dda-a18a-f3f20ff67839",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3cfecdfb-a060-46af-8f37-65787e27cdd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fc1ff1-aab4-4446-9a87-f677180a1228",
        "cursor": {
          "ref": "ad12a9e2-55f8-40d9-904a-9b83084c943f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "950313de-098c-499b-8193-5ab56f111fcc"
        },
        "item": {
          "id": "c8fc1ff1-aab4-4446-9a87-f677180a1228",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "824cfa48-4614-40b0-aa78-e640f98aefca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eacdbf1-6dcd-4ffe-8ee7-ec619976d47e",
        "cursor": {
          "ref": "ee304854-ef2e-4273-9ffb-7a6d8975ae44",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "eb452238-9c14-4e65-a9f5-7fe971fdbac8"
        },
        "item": {
          "id": "2eacdbf1-6dcd-4ffe-8ee7-ec619976d47e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8ae9abae-3aaa-4b27-8c52-402e9a366639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1911745b-331e-416e-b8ad-7d0ce706d3d8",
        "cursor": {
          "ref": "77c39d38-1c9d-481f-b8b8-ea304ecf533c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c84a458f-01b2-4045-981b-2814ebfbf085"
        },
        "item": {
          "id": "1911745b-331e-416e-b8ad-7d0ce706d3d8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "10390523-8cf5-45ee-877d-8b651d034f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41bfada-46cc-49d7-ac70-dc0976fc4adf",
        "cursor": {
          "ref": "1944589a-a8d8-4dd4-8472-b14faf73e54c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "132d1195-fce5-43ce-9d53-f5528edad07a"
        },
        "item": {
          "id": "f41bfada-46cc-49d7-ac70-dc0976fc4adf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "577be793-6714-43a5-98e7-c3fccc3d9230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5453313-9e0a-4016-a1ed-e37f50db5d0b",
        "cursor": {
          "ref": "106fcbca-4ded-480f-a18d-e48546f82e99",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a018edef-adf5-4a37-896a-72d58f9106a4"
        },
        "item": {
          "id": "b5453313-9e0a-4016-a1ed-e37f50db5d0b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4ee5b6a1-ead7-4e91-ae52-520db79c6396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401cbb17-8e50-47fd-8fb8-3e1af1a932d7",
        "cursor": {
          "ref": "49c7bb58-f44d-4d12-a909-ca9fa6d4ddb3",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "63f9e77a-ef53-4247-905c-a33c028ad605"
        },
        "item": {
          "id": "401cbb17-8e50-47fd-8fb8-3e1af1a932d7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "44447683-1df3-49d1-8f24-f67bdb264cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd85e4d-b095-4ed0-98ca-04bd7e77f685",
        "cursor": {
          "ref": "e58d961e-a0bb-438e-849d-5811fd1c9e06",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7fb0591d-d1be-43fd-89ec-4206f8230277"
        },
        "item": {
          "id": "3fd85e4d-b095-4ed0-98ca-04bd7e77f685",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fd6826ff-a1dd-405c-a694-c18889d611f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a0b6ef-6283-4240-924b-2cc67049aeee",
        "cursor": {
          "ref": "b408ed03-1f9f-4a04-93f9-68345c381477",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "31a595a7-a499-48c8-ad32-3501fac87912"
        },
        "item": {
          "id": "f5a0b6ef-6283-4240-924b-2cc67049aeee",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ba0497cc-0fc5-44fa-994e-be3ec11537ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39690dd5-0886-456a-b474-c23d7f118391",
        "cursor": {
          "ref": "e662c5fd-dc26-4493-b7ec-5d8a1948e082",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "95b69035-21b7-418f-8db9-2f485f45a86a"
        },
        "item": {
          "id": "39690dd5-0886-456a-b474-c23d7f118391",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "79301d0b-94dd-49a9-a117-90710cb51f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ca1e0e-262a-447f-b145-9cfc8aba0148",
        "cursor": {
          "ref": "a9b6b047-87ca-46dd-8190-62d8647b8c3a",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c0c7e559-9e41-48e4-a2ad-430191d7ad7a"
        },
        "item": {
          "id": "59ca1e0e-262a-447f-b145-9cfc8aba0148",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "34d95a3d-fc49-4d0b-b26e-1398523398a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca81c6f2-a1d5-4ed1-9b2b-738e8314a36a",
        "cursor": {
          "ref": "46119feb-58be-4f67-872e-de4009a6054b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d8772f29-3cf3-4041-ad52-811638be14a8"
        },
        "item": {
          "id": "ca81c6f2-a1d5-4ed1-9b2b-738e8314a36a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c9f67660-422f-4a00-94a9-eafbcfa59b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d7737c-d4b4-4008-a7f8-66fea4b14336",
        "cursor": {
          "ref": "b2308195-d2f2-4216-acc8-9e26169fb124",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7a29e7e5-69c7-4047-8132-01d7b2f64e97"
        },
        "item": {
          "id": "46d7737c-d4b4-4008-a7f8-66fea4b14336",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5255eb16-4530-4036-b8c0-555e1d8edeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7069a275-0e5e-4db2-97bd-587c309d6758",
        "cursor": {
          "ref": "92535777-5d77-4da9-b8ff-1c3c91714324",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0124daea-6e18-47e2-b682-ffe232bcaa61"
        },
        "item": {
          "id": "7069a275-0e5e-4db2-97bd-587c309d6758",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4b24232b-2abd-4b4a-9d76-d474c8807ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982af369-a87a-4150-abba-8ae7c4b849fe",
        "cursor": {
          "ref": "9572159e-2f7b-4cd0-8c88-fe3c62092ed0",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "68cd4584-d2bb-4a78-9ec7-1f0ca54b69a1"
        },
        "item": {
          "id": "982af369-a87a-4150-abba-8ae7c4b849fe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "079d3302-2533-4f55-a0b0-d82b050878b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2921d6a3-b1e8-4f25-ba90-e62a791c3657",
        "cursor": {
          "ref": "5c722034-d3bd-4155-96ab-0c679feed6cc",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "065fdd98-050c-4685-a67a-7dcaf9e697e6"
        },
        "item": {
          "id": "2921d6a3-b1e8-4f25-ba90-e62a791c3657",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "79807687-a65d-4c30-ac12-8b26ca40ee39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8da669-940a-4b11-a2cc-ca120688fed9",
        "cursor": {
          "ref": "03932c0f-dabf-44aa-8637-3250365b2031",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c7974adc-66c9-453e-92d1-dfe10396f3ce"
        },
        "item": {
          "id": "1e8da669-940a-4b11-a2cc-ca120688fed9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f4dc54aa-0f50-4bae-b6c5-32e98b3c5b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed56016-b9e5-49b8-9c40-e2d827db4c69",
        "cursor": {
          "ref": "31fe5084-180e-4121-a5ec-2abb72a2dada",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f2f8836d-d040-4fab-ad6d-1520074f6133"
        },
        "item": {
          "id": "6ed56016-b9e5-49b8-9c40-e2d827db4c69",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4776eb94-4a4c-406e-b9ee-45be48c2f872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96be483f-eb9f-42ed-8031-055cf5eed72a",
        "cursor": {
          "ref": "0cfb680d-6236-49b3-bf0d-4d26a15cc9e9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "12f90598-188c-4a25-9cd8-4e3ffb99a247"
        },
        "item": {
          "id": "96be483f-eb9f-42ed-8031-055cf5eed72a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cfdd1dd8-8d44-40ae-8601-a77baadbe1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f5f348-0403-430c-99eb-fbfadeb589f3",
        "cursor": {
          "ref": "f5a42b45-e9e0-43fc-9bab-f7a0ec20c9dd",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "556c29fd-d3b1-481c-8e28-8024f1abca3d"
        },
        "item": {
          "id": "99f5f348-0403-430c-99eb-fbfadeb589f3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9381cece-a0fb-4c3b-ab5f-1996ef0dd981",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079d6548-c5c6-4566-8509-30d0d461a9d3",
        "cursor": {
          "ref": "ee7a8836-5a52-433d-bf9f-6fec0d17db4a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "853abb1a-48b6-4298-b7ca-0f41d6fe09fc"
        },
        "item": {
          "id": "079d6548-c5c6-4566-8509-30d0d461a9d3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5589c3fd-7507-4b68-af88-6ce0a3378f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a24479d-1d2f-49b4-b607-5907c58cb440",
        "cursor": {
          "ref": "c9242600-09de-4d28-8f35-4dd18c0ac899",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f4f09234-43d4-4e36-83d8-710964d85177"
        },
        "item": {
          "id": "0a24479d-1d2f-49b4-b607-5907c58cb440",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "330faa9d-881c-4ad1-b392-ed9745c71f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9f709b-9bac-4854-a799-0f7b1455de16",
        "cursor": {
          "ref": "0cbd22a3-f9f9-4cfd-aa2a-4ddbc44f3efc",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cc3c3526-7ff8-46a6-92bd-292e6db63a81"
        },
        "item": {
          "id": "fd9f709b-9bac-4854-a799-0f7b1455de16",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9694c696-7c86-49a3-9bbb-f758cc40c2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6b23b7-4a38-45b3-bdb1-1423f45f1fb3",
        "cursor": {
          "ref": "df037a38-4af5-4122-a1e3-e953deb2e686",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c5c9ace7-cb85-4803-95e8-e9bf02e034be"
        },
        "item": {
          "id": "1e6b23b7-4a38-45b3-bdb1-1423f45f1fb3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ca181b56-7eba-47a2-8eef-27c7c5b5f013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc19b22-e260-401d-9f2a-7ffa3e5263a7",
        "cursor": {
          "ref": "4f527399-ba4e-4f17-b411-08d496f41d19",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f5e66445-2718-4a6d-9668-bdba2a16d8e8"
        },
        "item": {
          "id": "6dc19b22-e260-401d-9f2a-7ffa3e5263a7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6fd45c00-eadc-4797-9f40-5df6660b317b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4c1e17-27a9-4a72-9846-b3599ce6950b",
        "cursor": {
          "ref": "c2b09678-0dd5-408f-a9f2-3b378c97e201",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bcc0b372-24aa-474c-8605-868601442a5b"
        },
        "item": {
          "id": "de4c1e17-27a9-4a72-9846-b3599ce6950b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ac47cf20-0a1d-4b84-816d-e831c78ee846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b73bb3-c23f-40bc-a2e4-32a9f5c4fd4b",
        "cursor": {
          "ref": "990bc26c-499d-4f77-8f31-4f85e422ac84",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "efe666bc-5eed-4c43-9354-051f14e3224c"
        },
        "item": {
          "id": "29b73bb3-c23f-40bc-a2e4-32a9f5c4fd4b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2a3dce6a-5dac-4c7c-938e-1eb4e83f0c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13acc87-67bf-4708-a8f6-0ff42cbbd81d",
        "cursor": {
          "ref": "b77ae338-adbd-484c-91a6-dd672586e07c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "10108765-2cc6-4d94-a23c-7aa91f78fe90"
        },
        "item": {
          "id": "f13acc87-67bf-4708-a8f6-0ff42cbbd81d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "dce93902-9dfd-415e-8d0b-a536c4bb53ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e0cdde-49f3-4e46-93a5-2d27841cd467",
        "cursor": {
          "ref": "72b1c372-82ba-4c3d-b761-689897281222",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4ae9d832-4652-4aa1-9f01-542a4551076b"
        },
        "item": {
          "id": "16e0cdde-49f3-4e46-93a5-2d27841cd467",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5bb0b004-b0ec-433e-b017-a2696f96fd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ba5869-1fdd-429a-91f0-fdaef54bd3e8",
        "cursor": {
          "ref": "45d101e4-79e9-4df4-985d-3d19bfc67d77",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f6e30f23-59a0-4da6-9c76-36867b801491"
        },
        "item": {
          "id": "d1ba5869-1fdd-429a-91f0-fdaef54bd3e8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f7b1863e-757f-4c8d-801d-883dbc6851ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4869a2e6-ebbc-4d9a-a9f9-d6760d68b768",
        "cursor": {
          "ref": "59613ad6-4f05-400a-a762-4e06d90a67bc",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "38acebc3-4203-4d19-95a5-64a7f59383d5"
        },
        "item": {
          "id": "4869a2e6-ebbc-4d9a-a9f9-d6760d68b768",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7de4760d-8dcb-4273-9a0f-ea9509584aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad4b0c0-abc9-4184-8c25-1ccbb5994e6e",
        "cursor": {
          "ref": "16fbc1e9-69b0-4c24-b56d-ad4569a648f6",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5b359579-1f58-4d3c-8404-03d4020690a4"
        },
        "item": {
          "id": "2ad4b0c0-abc9-4184-8c25-1ccbb5994e6e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bf7a451a-726f-4a54-91da-5f4535a91cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afba2702-bd72-4888-9a45-e7a88b6609a9",
        "cursor": {
          "ref": "9c267d3c-5163-46d9-ac7e-1045231316a3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "12f53737-f5d4-4623-9f39-e68895d838b0"
        },
        "item": {
          "id": "afba2702-bd72-4888-9a45-e7a88b6609a9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7ef39c99-874a-4fe3-a62c-f5a9d97d40d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6702403-d520-471c-9149-36b1f70dca7f",
        "cursor": {
          "ref": "4f51da4c-d7dd-4c8d-8e99-51179a721154",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ad0351dc-c7bf-41f7-8836-cc1ffdb51a53"
        },
        "item": {
          "id": "b6702403-d520-471c-9149-36b1f70dca7f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1dc1c697-492c-4f15-8e80-88682e9fdbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b393011a-1ae6-408b-9e6d-22f22f9af2f9",
        "cursor": {
          "ref": "4d713828-323e-4cf0-aa5e-03aa433f09c7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1f3d647a-bb8c-42c3-acd3-009c2d8eaeb4"
        },
        "item": {
          "id": "b393011a-1ae6-408b-9e6d-22f22f9af2f9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "19046036-ad2e-4b0e-92c7-adfa965e94c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6920649e-4eb7-4ae9-9d18-079ec5893530",
        "cursor": {
          "ref": "14ca8462-2cf6-4122-aee0-8ad848664f4d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ebf546eb-b2eb-40a2-ab3d-523be101b4e3"
        },
        "item": {
          "id": "6920649e-4eb7-4ae9-9d18-079ec5893530",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "923c5897-3825-44d8-ab8e-82ef4c214467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd322ca6-5b5a-4843-ab94-4040202531f3",
        "cursor": {
          "ref": "22d6a4fa-e55a-461b-8e17-df3f0359eb9d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "47570aea-f315-48f9-a1c0-89de0f44b7f7"
        },
        "item": {
          "id": "cd322ca6-5b5a-4843-ab94-4040202531f3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "244bfc79-efa8-4e83-a6a3-4e0e98142d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db39558-9b75-4c31-b647-bcce96d7c035",
        "cursor": {
          "ref": "594cf556-073c-40d1-af24-1722b7b85279",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a843d845-069b-49a2-9195-2a8f229d7346"
        },
        "item": {
          "id": "7db39558-9b75-4c31-b647-bcce96d7c035",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "873d9622-f318-4183-af87-9922b0bbeb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f712f81c-c14c-4224-814a-a3f389ccdd7a",
        "cursor": {
          "ref": "b2e12516-0a13-450c-ad35-b0cc09886450",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1849feac-9968-4ac7-9ccb-e74a8beec59b"
        },
        "item": {
          "id": "f712f81c-c14c-4224-814a-a3f389ccdd7a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "44663272-5d24-4630-a285-28bebd77fa79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4254e1c-8dcb-4b5b-b979-e5566ab5eae2",
        "cursor": {
          "ref": "85f79960-6842-478e-9f7e-17272439c160",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "eb5fbcf0-d1b6-4ab4-a077-4ddae872d5e0"
        },
        "item": {
          "id": "d4254e1c-8dcb-4b5b-b979-e5566ab5eae2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "27e9b7e6-b44c-4269-86ce-9ca0ed24795b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef294b3-550e-47c2-988f-38e71c9b8d79",
        "cursor": {
          "ref": "1a9a81ea-1e5c-4ce7-95d2-0dab08d6c27c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "937e64d7-6c84-4509-8fd7-759b8c024148"
        },
        "item": {
          "id": "bef294b3-550e-47c2-988f-38e71c9b8d79",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cee1c0aa-b60b-4dda-b231-9def1e41b52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c769650-00f0-46e7-89a1-e4c5b63d49ce",
        "cursor": {
          "ref": "44329f80-0fd5-444f-beb2-9c30038762c9",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f0c074d8-c1ae-49c9-b19c-5a65d75d52f1"
        },
        "item": {
          "id": "7c769650-00f0-46e7-89a1-e4c5b63d49ce",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "04b6c625-7ecf-476a-9174-50413af0c33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ce5415-2c9b-47dc-aa85-973d9ec2398b",
        "cursor": {
          "ref": "e5086e03-9c7a-4e80-96e2-fdecb2f609aa",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3968ab9b-7f75-443b-ba5c-ad6bcfd6e73a"
        },
        "item": {
          "id": "86ce5415-2c9b-47dc-aa85-973d9ec2398b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3930c7d6-012e-4dd8-b91c-d667da361874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fcf974-b401-4236-add1-d07a11ae52de",
        "cursor": {
          "ref": "d5ead661-84ee-4743-8902-50473727d6de",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ada816b1-607f-4cd2-9639-fb8852fdac6c"
        },
        "item": {
          "id": "57fcf974-b401-4236-add1-d07a11ae52de",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fb383684-53b3-45af-873b-b881318a6624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4408cd-c6fd-4b77-acef-7c4730717270",
        "cursor": {
          "ref": "a1415341-e07f-4a65-be68-349453230a3a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "396eeabc-c2fd-4056-98e7-99225f0a3da8"
        },
        "item": {
          "id": "fb4408cd-c6fd-4b77-acef-7c4730717270",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9ded1332-4205-4916-9208-75a353902383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726050d9-b706-43ee-823b-f82bc7e1937d",
        "cursor": {
          "ref": "8fa50b5c-eb88-427b-aeb6-1cbe26e2000f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "896b8739-dc47-4efc-9f44-674729065478"
        },
        "item": {
          "id": "726050d9-b706-43ee-823b-f82bc7e1937d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f5d9ebf9-8ef7-4968-a2b5-6e2f362ee345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2096a5-568e-4ea2-9bad-97a7d1c2ca54",
        "cursor": {
          "ref": "b1e05864-b297-4e0a-b913-bf80e68baca9",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9aa048fa-1700-4791-aaa3-c7b43a4e4be8"
        },
        "item": {
          "id": "2f2096a5-568e-4ea2-9bad-97a7d1c2ca54",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fce461b7-05ad-43e2-8095-c04c2b6bf4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acebcead-5900-4b24-9fe0-28af98b75e29",
        "cursor": {
          "ref": "90939ac7-b9a8-4bfb-9dfa-53b02bbdb64f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ffe412da-9e8d-4931-9948-d66e50b04628"
        },
        "item": {
          "id": "acebcead-5900-4b24-9fe0-28af98b75e29",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4d294113-39c9-425e-946e-1024f6a23e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba5e182-23f5-45b3-89d5-c480dbf37c9a",
        "cursor": {
          "ref": "4437e94f-1fbf-405d-98b8-525694b766cc",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cff0e71e-168d-4b73-8d59-16742c0222fa"
        },
        "item": {
          "id": "aba5e182-23f5-45b3-89d5-c480dbf37c9a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8c1717c7-24e5-4002-9798-a0ae29fc80e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e12a07-8f5f-4ee1-b373-9e7b7b15ac52",
        "cursor": {
          "ref": "bbe1b6a6-4f3d-4d60-911b-19e3a20949ec",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "07853bce-afa3-4526-942e-bba735651a4d"
        },
        "item": {
          "id": "25e12a07-8f5f-4ee1-b373-9e7b7b15ac52",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "974f6ac9-ecd5-49e7-8378-df13263ef5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd01cc8-52f7-42ff-8db7-6a328bb72966",
        "cursor": {
          "ref": "d4dba3d3-d4fe-403b-9af7-b2068d945df4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4b9b7414-360e-4ab9-be34-9867a83bf548"
        },
        "item": {
          "id": "6bd01cc8-52f7-42ff-8db7-6a328bb72966",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8a4c96f2-44cd-4fff-a91f-b95c3514c0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836cbea6-e922-42e2-a50e-7bcc87ea0602",
        "cursor": {
          "ref": "d2880bea-cd08-463e-b154-51d976a62dbd",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "52c62540-74c6-4c06-8149-9060b7cb7405"
        },
        "item": {
          "id": "836cbea6-e922-42e2-a50e-7bcc87ea0602",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "35ddb98f-2aae-4437-a9d5-cc1b328bdf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c035ae08-9fd5-4c41-978e-2577b7dcddb2",
        "cursor": {
          "ref": "d1f64260-8100-41d7-b0b6-4a2959f96cd8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "85ee2eb6-eb95-49b4-adfc-4b820092aed5"
        },
        "item": {
          "id": "c035ae08-9fd5-4c41-978e-2577b7dcddb2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e2af66c2-ea0f-4720-bb00-02005e887c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe75ff3-b3a2-43c4-b921-7f56bca345b7",
        "cursor": {
          "ref": "7f9aecd5-34c6-428b-a1da-fef0d3f245da",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a2bea82a-1a2f-463d-81f8-947d3ddf7df4"
        },
        "item": {
          "id": "8fe75ff3-b3a2-43c4-b921-7f56bca345b7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "701349bf-71d2-4510-9b6e-05a456a52057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a01935a-e2a7-4291-9051-bc265552eb84",
        "cursor": {
          "ref": "0ab0e276-6300-4c28-985e-0e41d11c2a7c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "724c5c3f-544f-46a5-b616-708f727be529"
        },
        "item": {
          "id": "2a01935a-e2a7-4291-9051-bc265552eb84",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0db4e45c-15f4-4298-8d64-3617961c2535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b6dbc0-a523-4e3f-875e-b363125939d1",
        "cursor": {
          "ref": "552214c2-537d-45a1-b39f-93fca0d6f716",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1118b76f-1c07-4587-99b9-a6a222ea30a5"
        },
        "item": {
          "id": "b0b6dbc0-a523-4e3f-875e-b363125939d1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "879dbb69-36e8-48de-ae4c-8635eac13d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa01e20-87e9-4abd-9c47-aa9a83ffb187",
        "cursor": {
          "ref": "f3b03312-f0e0-4254-bf0e-343ef8317f0b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "63cca987-00d5-4c35-8796-f575f7928511"
        },
        "item": {
          "id": "afa01e20-87e9-4abd-9c47-aa9a83ffb187",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bd90bac4-3197-48fd-86d2-69e0b07226d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f565b048-d07c-4bee-8fb3-095fa79646cd",
        "cursor": {
          "ref": "4c2d0a17-09ef-49f0-b78a-2df41ae1fdbb",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "92772c83-aa61-41ad-956f-eb60bf07e34c"
        },
        "item": {
          "id": "f565b048-d07c-4bee-8fb3-095fa79646cd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8618eab6-44b4-4460-a22e-0c7c8ba18268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d6caa8-18a1-4376-bdf1-f05b88289140",
        "cursor": {
          "ref": "b9049a41-cbf9-4c22-950b-b22301a9a5d1",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c9db145e-2488-4ba9-a195-a5b118fa0618"
        },
        "item": {
          "id": "72d6caa8-18a1-4376-bdf1-f05b88289140",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6d85826d-6014-4529-abf6-d8669bc86cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c862c6-88fa-4913-a57b-1991dbe24853",
        "cursor": {
          "ref": "eed0304f-e68e-443f-93be-13d5b1175d9e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1e88dcea-626d-45a1-bd42-df2fd298287f"
        },
        "item": {
          "id": "11c862c6-88fa-4913-a57b-1991dbe24853",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e71f148f-507a-458c-9902-8c97face1e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1ba0fb-ef60-4e91-b5c8-aa3fdd9b6678",
        "cursor": {
          "ref": "736fd3b0-3b2d-495e-b2df-1182b93cadda",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "92de0f71-f2ab-4669-b252-bae352bb7c07"
        },
        "item": {
          "id": "ca1ba0fb-ef60-4e91-b5c8-aa3fdd9b6678",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bd8ab1a0-4d20-4c08-a087-0a7ba28c79e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32894e53-0a2e-489a-97c7-75b3f7309bbb",
        "cursor": {
          "ref": "5cae0489-524d-44a3-b743-568c30466671",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "beda52cf-2bb8-44b8-a644-19fbb77f49bf"
        },
        "item": {
          "id": "32894e53-0a2e-489a-97c7-75b3f7309bbb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "94139ea9-a7cd-49f6-a5a9-25b2b1befae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa94c772-7362-498d-95f6-38d8826de6c6",
        "cursor": {
          "ref": "043ab376-1d7a-4696-b287-d1f81c93d11b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "194d15ce-080f-4715-b78b-bff864a955dd"
        },
        "item": {
          "id": "fa94c772-7362-498d-95f6-38d8826de6c6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "55c22b20-8dc2-44d3-b00f-c43756610436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3532c9d6-20fc-4b62-bc60-b65d515bfa09",
        "cursor": {
          "ref": "7c7eddb8-7aa9-42e4-922b-90e7ddc1a047",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f8850712-967c-4dc2-9a0f-74b3debc7b4c"
        },
        "item": {
          "id": "3532c9d6-20fc-4b62-bc60-b65d515bfa09",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5586aacb-716d-48c4-9858-82ff0eb4609c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8d375a-342f-4f4b-b819-e4ced5f3c039",
        "cursor": {
          "ref": "a02c9d58-cd62-4819-a237-767c3037606c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4f2a8465-264b-43d4-b044-6c2029af1f12"
        },
        "item": {
          "id": "8a8d375a-342f-4f4b-b819-e4ced5f3c039",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bda1937b-f9a5-4a2b-b9c5-aafb2daff2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7c4976-bcbf-499b-9938-e1a64cf43ce7",
        "cursor": {
          "ref": "01b6f994-bb9e-4a39-a3a4-37f1ca349658",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "32c71ee3-bb34-42b2-ab47-e882f45049d4"
        },
        "item": {
          "id": "7f7c4976-bcbf-499b-9938-e1a64cf43ce7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "554ccc25-fa9d-4a7a-af93-f18c2457f7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2447eead-64be-42f7-8a52-3255cbdbf3a3",
        "cursor": {
          "ref": "48a77f2b-92ea-4dce-967d-1de8ffd6feb8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6475ab85-cf84-42be-b3f1-abda9299d5ab"
        },
        "item": {
          "id": "2447eead-64be-42f7-8a52-3255cbdbf3a3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "58aff2f8-117a-40b5-9895-b479e8fbfe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3311a4-e078-4123-ac2c-23a856ad2b2c",
        "cursor": {
          "ref": "52939cb8-d0bd-4eec-bc1f-11964a6dbbb8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fdc5093b-8854-4a6f-a0e6-0b604d4e1f75"
        },
        "item": {
          "id": "ef3311a4-e078-4123-ac2c-23a856ad2b2c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0fe4effc-973c-4b29-b031-e107645b17f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d88c34-34a7-4f96-a66b-bb9336141a4b",
        "cursor": {
          "ref": "3deff5e3-8104-4bbf-badf-4fb18ce8d635",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6edcbf62-09f7-4e77-87e1-be98a36982ee"
        },
        "item": {
          "id": "38d88c34-34a7-4f96-a66b-bb9336141a4b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e4ceb9c4-0b4f-4be0-91e6-3a5859121e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e1aff2-1cb1-4b7f-b5fc-f78caf40e26a",
        "cursor": {
          "ref": "cc8a9d77-8b8c-447d-af50-68214b0ac6c6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eae2005e-992e-411c-84e7-8d584923f412"
        },
        "item": {
          "id": "b3e1aff2-1cb1-4b7f-b5fc-f78caf40e26a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "58be588b-05ac-4ed5-9367-cd0b07c83c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cce2c6-6ad1-4f7b-bb9e-ed239d713418",
        "cursor": {
          "ref": "44825fac-2502-4c05-986e-3ec69335dbbb",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4cb40e06-eb52-4df0-9d92-5a793ae48210"
        },
        "item": {
          "id": "44cce2c6-6ad1-4f7b-bb9e-ed239d713418",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "59edb730-f345-4693-8b52-d30d6bcca3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd55188b-42f3-4395-99e3-0fdd6b9b8e38",
        "cursor": {
          "ref": "d0f98dbf-fa99-4919-826f-c22b47cdd73a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "413880fe-cc93-49b3-8e0d-e998161afd75"
        },
        "item": {
          "id": "bd55188b-42f3-4395-99e3-0fdd6b9b8e38",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0ebef70a-78f4-40d0-8a23-74e2a2e67d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b757e5e-e2c1-41a4-8646-74c31a4ca888",
        "cursor": {
          "ref": "3bae3b35-c616-4a0c-a786-3ab77025d52e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c9d8dc60-78bc-4ec3-857b-8239731d8242"
        },
        "item": {
          "id": "3b757e5e-e2c1-41a4-8646-74c31a4ca888",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e4abfbbf-ebec-40fc-9d8f-ad299d69d385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83a4012-19d0-4407-9b20-e0455ab5c6a7",
        "cursor": {
          "ref": "ad67f266-49e3-4770-b448-f12985a46969",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7a24dda9-2267-49f9-8cae-881595dfb0ad"
        },
        "item": {
          "id": "c83a4012-19d0-4407-9b20-e0455ab5c6a7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c66c8117-9e34-4805-a78d-66a6397ed6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebc0d82-6087-4c68-9003-10b7e87808d8",
        "cursor": {
          "ref": "f5e2252e-a579-4327-988e-20eaf94a1d0e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2d3fe291-2a21-4cfa-9fd7-370273c8e2d8"
        },
        "item": {
          "id": "cebc0d82-6087-4c68-9003-10b7e87808d8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "670d2322-3e63-48bb-9dc2-0d215c8c4b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7063e4e-3698-4f4b-8aab-d9274fe1b578",
        "cursor": {
          "ref": "388093c5-7974-4df3-8599-4af6e28be980",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "57fd6f25-dc4c-4fb3-a13d-c72e978258c2"
        },
        "item": {
          "id": "d7063e4e-3698-4f4b-8aab-d9274fe1b578",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a5c664a5-a0b7-40f4-8aa4-68a3ca602620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec7008d-27cb-45a3-9428-3cae54dad30c",
        "cursor": {
          "ref": "0fd32627-bf62-41fe-aef1-9a9b1fc453f4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "70442b36-4d37-4dcd-b001-24a339029d09"
        },
        "item": {
          "id": "8ec7008d-27cb-45a3-9428-3cae54dad30c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "49d444de-7270-4bcd-8402-99fc43f01525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1faa775-d2b1-44db-899a-aeb7fb41d612",
        "cursor": {
          "ref": "3ffc4125-78e7-4924-a1c7-606574bc8de4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "85306506-e652-4884-a5fa-2761f05ccb1d"
        },
        "item": {
          "id": "c1faa775-d2b1-44db-899a-aeb7fb41d612",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "02a8d723-2d3d-479d-81bc-fd2de1e00869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b139c6a5-aed9-4028-a271-ab484aba6b64",
        "cursor": {
          "ref": "93f0560e-7a57-4204-b144-9f97310010d1",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9f792155-f992-4733-b3e2-d080fb5115a6"
        },
        "item": {
          "id": "b139c6a5-aed9-4028-a271-ab484aba6b64",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d8c8164f-9b7f-488a-abb2-30d920db59d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e36e77b-6ce1-49db-95fe-570526da8c88",
        "cursor": {
          "ref": "d554f029-743c-404f-aaf2-b1f6ecc9efd5",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "63f3ef3a-036c-49c5-b140-14da35bbcdce"
        },
        "item": {
          "id": "6e36e77b-6ce1-49db-95fe-570526da8c88",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0610ce96-2a49-4913-b3c6-7c6a2fee05ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77887689-0a73-4d1e-9d47-b3fcea1135ab",
        "cursor": {
          "ref": "4d0f55f2-2515-470a-9404-2522755bccb1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7c1cc498-3d07-45b0-af37-0159cf301949"
        },
        "item": {
          "id": "77887689-0a73-4d1e-9d47-b3fcea1135ab",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b3df02d4-246a-4c4e-8b26-c7aa1458f717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1f83ec-b08a-4e9d-8242-bc392752ab46",
        "cursor": {
          "ref": "e4cc4df7-a68c-49c5-a2c2-27dc362f4d6a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "868f52e4-0ee3-4836-a520-8362667d2a96"
        },
        "item": {
          "id": "3f1f83ec-b08a-4e9d-8242-bc392752ab46",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6db3c131-abd8-4170-9825-819bf6df958f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0047a18-83e9-4c26-8ce5-c9b4907a2d0a",
        "cursor": {
          "ref": "5d99f290-84f8-42d7-a395-19801784f1bf",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "38f23575-57ae-4d3d-8744-93d90d6ffb47"
        },
        "item": {
          "id": "d0047a18-83e9-4c26-8ce5-c9b4907a2d0a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "afa06f61-c8a1-4c68-9232-c377c491e00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e799422-cc6a-4217-a3f7-7abbf00739b8",
        "cursor": {
          "ref": "1dc80932-4952-4876-8395-80b9d1c40d0f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8b5023d7-1966-4a6b-bb0f-1a82a10c17e7"
        },
        "item": {
          "id": "1e799422-cc6a-4217-a3f7-7abbf00739b8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6cda150a-f278-4f2c-81d2-bd65ea0b73d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b037489-1199-4dca-a5c8-0f80b1692938",
        "cursor": {
          "ref": "6a57ff55-3667-4a19-a6f0-d67176926dc9",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "32aac32d-56d3-4178-866e-5feb15871896"
        },
        "item": {
          "id": "3b037489-1199-4dca-a5c8-0f80b1692938",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "98fd237d-11cd-41ab-85f4-65e90679947f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4830d4fd-ef88-4872-b418-2c3ea9cf46cd",
        "cursor": {
          "ref": "cca2e2a5-55f1-4eb7-b006-38bc61ffae45",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "19d60479-d439-4d35-bed2-928f44fb01bc"
        },
        "item": {
          "id": "4830d4fd-ef88-4872-b418-2c3ea9cf46cd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "be06bd05-3870-420e-b3af-71375b7cc7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413536d0-14d5-470d-981f-bfcb27d2565b",
        "cursor": {
          "ref": "9a6a4692-eda1-4ff9-937d-43450af23d84",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "91e8f369-d090-44af-8828-ff117f75dd08"
        },
        "item": {
          "id": "413536d0-14d5-470d-981f-bfcb27d2565b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b4cda6ae-19af-44c4-9216-22e81d21ebf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0166d3a7-4644-46b9-b11f-9c6b766fb979",
        "cursor": {
          "ref": "0dfde90c-0b56-40c4-9ad8-111009fc9d5c",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fa8854ed-b349-4f13-b3fc-5151225b0168"
        },
        "item": {
          "id": "0166d3a7-4644-46b9-b11f-9c6b766fb979",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8be97a2a-c8f1-4bb9-bd27-781d46dbe848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8116dcf-3ea8-4cce-8b91-3f9b0b76e4d4",
        "cursor": {
          "ref": "99eab083-cd46-4ba0-aa9c-78af3c6f010c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cfe8f8af-c9b9-4396-b622-fe26c8939f62"
        },
        "item": {
          "id": "f8116dcf-3ea8-4cce-8b91-3f9b0b76e4d4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fffa006c-e686-43c8-832c-d1c6ae6eff2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d866d3d9-cfde-44ee-bbd1-95fb19cd2e34",
        "cursor": {
          "ref": "83317de2-b3d5-4e25-9d3a-9e7608ee1405",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e98e384d-1a9c-4d46-be6b-b3203262c8c0"
        },
        "item": {
          "id": "d866d3d9-cfde-44ee-bbd1-95fb19cd2e34",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8f7e554d-8ca2-4b9d-9b51-a41d6fb74fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a807da-15ce-46b0-9298-af190f70bdd4",
        "cursor": {
          "ref": "8d052044-fb1d-4107-a0c3-bfc30dabe563",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "de55abf8-0742-477d-ad66-dfd5d7194813"
        },
        "item": {
          "id": "b9a807da-15ce-46b0-9298-af190f70bdd4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "66eee91c-0102-4758-9a2d-f1d7042ebcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f88a08-10e4-4b84-8c79-f7c26f1d78d7",
        "cursor": {
          "ref": "45ba54a5-51d9-4962-8f77-1d0a4696e1ca",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bed19017-622f-4832-a9d3-3e9652f59729"
        },
        "item": {
          "id": "c5f88a08-10e4-4b84-8c79-f7c26f1d78d7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2d311fd0-4102-4be9-95d2-c06b6cf2997a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e0d635-ed3b-4773-9f55-f7c9eb49e5ac",
        "cursor": {
          "ref": "d65ef18d-9a50-4379-a4c1-81b456ed5b16",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8ecc72ca-9f1d-4072-9ec2-3e493d372201"
        },
        "item": {
          "id": "94e0d635-ed3b-4773-9f55-f7c9eb49e5ac",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ef966eb6-2843-45df-abcc-221b7463441b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c66e97-bfc3-4d27-b056-1b6c7d0bd4da",
        "cursor": {
          "ref": "1ca26faf-be43-4863-a971-20fec0aba231",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dff2d77f-a421-43ed-9e83-3a5039336f49"
        },
        "item": {
          "id": "91c66e97-bfc3-4d27-b056-1b6c7d0bd4da",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6006959c-d78e-47ce-8025-1370c579bb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76d163b-f16f-4272-b717-717abb4babe7",
        "cursor": {
          "ref": "2c94a0cf-95e8-45da-bd35-6525a1d6a765",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "655c755d-271e-443d-9093-0f016bf7136f"
        },
        "item": {
          "id": "c76d163b-f16f-4272-b717-717abb4babe7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d3879676-84f5-4d4f-a95b-c55bf74d1fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d85e69-b0ce-4d15-8829-365b9cfeb2b6",
        "cursor": {
          "ref": "7902ccf9-3668-4378-9071-270206a25422",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "98ae329d-802f-4621-a2e9-a7c20ad399a3"
        },
        "item": {
          "id": "21d85e69-b0ce-4d15-8829-365b9cfeb2b6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7a0408c1-305c-4104-8080-3deed62cdd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5600a47f-171a-4b99-abfa-818c2df41033",
        "cursor": {
          "ref": "278d02f7-fce5-4626-bde8-a0b09b123936",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8b81b856-b95a-49f5-9f8d-42db71dff24b"
        },
        "item": {
          "id": "5600a47f-171a-4b99-abfa-818c2df41033",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cd5ca13e-a0cb-4dbb-8f98-4579b8dd21c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c807b726-f95a-4412-b3de-303d2ff2d6c5",
        "cursor": {
          "ref": "ccdd70df-f641-488a-aa8c-42caf76013af",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "baf94609-5b53-474b-aed7-8ec7cf507f75"
        },
        "item": {
          "id": "c807b726-f95a-4412-b3de-303d2ff2d6c5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3402a31f-3d48-4c57-8103-5e5b5500e8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16e64e4-6917-4f86-abe5-e3022ee8ba40",
        "cursor": {
          "ref": "d568ce48-feca-4454-8848-10233feac3f7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4c47ed2e-38bc-4bd4-9d1d-89f229fc2042"
        },
        "item": {
          "id": "f16e64e4-6917-4f86-abe5-e3022ee8ba40",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "46d88f9e-f29a-4282-8b4d-9b8cd88636b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18ae798-2e2c-4cba-b926-5bafa2e6c4a9",
        "cursor": {
          "ref": "a4be2d23-2730-4874-9ce5-540d5c39a8fa",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "08cb3736-a4b8-4afc-a22c-8f83dba8afcc"
        },
        "item": {
          "id": "c18ae798-2e2c-4cba-b926-5bafa2e6c4a9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8f10832a-2654-4c1b-8d2b-d22d943efe99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33114d6a-b6d0-471f-9fa1-3d45f2eddafd",
        "cursor": {
          "ref": "b96e3420-1ff6-41ec-8d98-81c5a12f4f67",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "74955f32-3e57-40b5-ae49-c70642fa0123"
        },
        "item": {
          "id": "33114d6a-b6d0-471f-9fa1-3d45f2eddafd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "33e2adda-0d88-45ab-88fd-9358c3efc22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23ab2cd-03ca-4ae5-8082-09f4914dae5d",
        "cursor": {
          "ref": "9cf5962d-4884-42f6-9089-9167c973dd2c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "16a1969d-e6b6-4683-be72-0a22e0fe973f"
        },
        "item": {
          "id": "a23ab2cd-03ca-4ae5-8082-09f4914dae5d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b76c9271-9447-434d-b41d-55de9c73924a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04054ff-7098-46ef-9263-f1f2481400b4",
        "cursor": {
          "ref": "aa1f01dd-33e8-49ab-89ed-b2a12f9dfb6f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0e38e9cd-70b3-4cf0-87a9-1546b49bccad"
        },
        "item": {
          "id": "a04054ff-7098-46ef-9263-f1f2481400b4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b2c27d6f-6a4a-4d21-842c-d85636fefe5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f7b622-879c-4c04-9956-1396dfa85506",
        "cursor": {
          "ref": "1288d093-79b1-4129-9213-10c06eeff379",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bd6aa2e4-96f1-40bc-83fe-0069216da7c8"
        },
        "item": {
          "id": "97f7b622-879c-4c04-9956-1396dfa85506",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5603635c-820c-4743-bf4a-abb1657ac91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2811008-f56a-4a78-9a9d-2b4179af7b0d",
        "cursor": {
          "ref": "14138e99-190c-463d-ada2-c096674c66ed",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "abaa60ef-61f2-4b54-862d-e6bb4a6a4d32"
        },
        "item": {
          "id": "b2811008-f56a-4a78-9a9d-2b4179af7b0d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "601d2fcf-1ef0-47e9-a260-78ec47e1679f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6a7103-0a71-48c5-b1a3-8921e7a024e4",
        "cursor": {
          "ref": "4ecd1910-14f6-4d12-9989-ece0252741d0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7f4e9736-d7b6-44c3-9578-3c2699457c7c"
        },
        "item": {
          "id": "5c6a7103-0a71-48c5-b1a3-8921e7a024e4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "90308dee-f537-4414-b2ca-c30df14e1281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f037c9b-e3b0-46c9-ab52-5e27ba794f68",
        "cursor": {
          "ref": "b5b40559-c351-4b26-9178-e1a13fd3659e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "36aa00e9-9064-4b22-8d73-928c713d2841"
        },
        "item": {
          "id": "2f037c9b-e3b0-46c9-ab52-5e27ba794f68",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8f9d1d4f-de63-45e1-ab35-38d3202fcf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52289b8-ee85-4d38-af25-4032bd91f95a",
        "cursor": {
          "ref": "80416a95-53e3-4ead-b117-235d3f7e165f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c26ca9f8-1a6d-41b5-a871-17bb99f7e4c3"
        },
        "item": {
          "id": "f52289b8-ee85-4d38-af25-4032bd91f95a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "15e39cdc-5989-49be-a8eb-5d6dd553c1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c82f79-1948-4acf-8233-454e99b70721",
        "cursor": {
          "ref": "c3b7c0bf-0957-4a04-bfe2-063ba1f00c8b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "efa8cfb4-2fe5-4078-b7e3-c0cfeca37654"
        },
        "item": {
          "id": "e1c82f79-1948-4acf-8233-454e99b70721",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9b04ea89-4884-4a31-8841-7227c9a469cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32055cfb-a410-49c2-933c-f05b2e22db4d",
        "cursor": {
          "ref": "37d1c5bd-12a6-4ae8-946c-69f423c02cd1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "38075f5f-ae7f-4a91-90bc-928f6e2509ba"
        },
        "item": {
          "id": "32055cfb-a410-49c2-933c-f05b2e22db4d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "064b4871-dec7-4321-941b-44540ff3290a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de330feb-60c2-418e-836c-ee399d7b4400",
        "cursor": {
          "ref": "5465caf0-b375-4134-8449-f731fadd8109",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "413e7763-49dd-451e-8fab-c6062a3ce312"
        },
        "item": {
          "id": "de330feb-60c2-418e-836c-ee399d7b4400",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f4c2e3a2-9a25-4900-a267-b3cf1cdc689b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ece6851-897e-4eb6-b2cd-695d021966c8",
        "cursor": {
          "ref": "544aa12f-9847-4364-8cc4-9f673d1fd250",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "659be9b4-c92a-4a69-8aaf-02e5911e3fae"
        },
        "item": {
          "id": "5ece6851-897e-4eb6-b2cd-695d021966c8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "39a39f16-9615-4c22-947b-42aa1d7bc2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0cd3d1-5099-4651-a6f7-663bd454f4b6",
        "cursor": {
          "ref": "18eb439e-a570-4ea4-a0e5-e775f11cf5d9",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "994ee65b-40e5-4721-bdaf-b0d74e2df26c"
        },
        "item": {
          "id": "cd0cd3d1-5099-4651-a6f7-663bd454f4b6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d2451c82-2986-491c-819c-7376b5900a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9958d7-0189-457c-a2a3-52fc7841629b",
        "cursor": {
          "ref": "2584912a-7f5d-43af-9528-fcbb805c8a27",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d0b480d4-f16d-4a53-a2ee-c0c3866dd91f"
        },
        "item": {
          "id": "4f9958d7-0189-457c-a2a3-52fc7841629b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "77f04592-a497-461b-afe0-0962ae7356ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436d77ab-7a47-4535-bf66-3c7d84bc61c9",
        "cursor": {
          "ref": "17121b88-30a6-4c0e-bce8-0137cce15f92",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c0d177fe-7c82-4227-8f74-4c1ea1745a0b"
        },
        "item": {
          "id": "436d77ab-7a47-4535-bf66-3c7d84bc61c9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dce4364b-d1b5-433a-a09f-cced74795d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f0d093-5af3-4e3b-919a-b117e9dd6318",
        "cursor": {
          "ref": "5d62e12c-db47-4e24-a926-663e2c3c9204",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b811b0f2-8abe-4caf-8df3-87cb65503124"
        },
        "item": {
          "id": "73f0d093-5af3-4e3b-919a-b117e9dd6318",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fcbd806b-d13a-4d01-a0ed-0c91315adac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57e6c27-88f2-421f-b19b-66b8b0108af7",
        "cursor": {
          "ref": "b71a6ec9-3216-460d-9cf7-f84c53ead853",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d8bf2714-6071-4015-bcfa-a58ea08aa476"
        },
        "item": {
          "id": "f57e6c27-88f2-421f-b19b-66b8b0108af7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "52676da1-1e2d-4b25-ad8b-1accfd2330ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e97f69-414b-4244-bf8f-6002239deedd",
        "cursor": {
          "ref": "8a5499a7-2e8f-4b94-8d06-c92e2159c5e8",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0f3b2414-1f84-497c-8fce-fea35efbb9eb"
        },
        "item": {
          "id": "f7e97f69-414b-4244-bf8f-6002239deedd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "22ea47a1-0560-46c0-9b33-68699bbfaca9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f205f0-74e0-425d-ac29-8a8e86803041",
        "cursor": {
          "ref": "97d662d2-b76c-4ee7-bf93-cb01d7c4bb8e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "aafcfe8d-38cf-4fde-931a-6d810cdcae93"
        },
        "item": {
          "id": "c0f205f0-74e0-425d-ac29-8a8e86803041",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7fa5cfd5-8b86-48d0-898e-f52becc2d63b",
          "status": "OK",
          "code": 200,
          "responseTime": 2347,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "926df57a-7db5-444f-b399-4f6d3d0a436d",
        "cursor": {
          "ref": "f1a8ed05-d3b3-410f-a0d0-766621b8b2a3",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7b09c08c-588e-43a7-a8ee-e3f94d3c84d7"
        },
        "item": {
          "id": "926df57a-7db5-444f-b399-4f6d3d0a436d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "624cbc0e-42e2-4354-b74a-2f915b49ca5f",
          "status": "OK",
          "code": 200,
          "responseTime": 3986,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "32862a5e-3abe-4c14-b35d-b76b5bcf92c3",
        "cursor": {
          "ref": "1a4e7064-b6db-4242-bb41-4420462982b3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "62246803-65aa-4afc-86f1-e8a31771c35b"
        },
        "item": {
          "id": "32862a5e-3abe-4c14-b35d-b76b5bcf92c3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e98d70b9-14f7-4946-8a67-c0ea9cfb027f",
          "status": "OK",
          "code": 200,
          "responseTime": 3564,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b061cf60-1be4-40c9-bc8c-e8c19c5a1b7b",
        "cursor": {
          "ref": "8f5d9d05-7412-408f-90b5-111260742708",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d13a41da-dc24-426e-a2c0-8ba306a854f2"
        },
        "item": {
          "id": "b061cf60-1be4-40c9-bc8c-e8c19c5a1b7b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "88434812-5d3b-47c3-b1e6-cc67fbba2bc1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b061cf60-1be4-40c9-bc8c-e8c19c5a1b7b",
        "cursor": {
          "ref": "8f5d9d05-7412-408f-90b5-111260742708",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d13a41da-dc24-426e-a2c0-8ba306a854f2"
        },
        "item": {
          "id": "b061cf60-1be4-40c9-bc8c-e8c19c5a1b7b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "88434812-5d3b-47c3-b1e6-cc67fbba2bc1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081260d6-16e9-4dbd-90fb-15e91a9c206c",
        "cursor": {
          "ref": "80d7811e-02af-429c-a4ca-7535cf2e740d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "41f459bd-173d-4087-9737-b348d0502656"
        },
        "item": {
          "id": "081260d6-16e9-4dbd-90fb-15e91a9c206c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b92c1eeb-b9f2-42fa-9009-e14596164d6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f2e490-f30c-43e4-8f90-81a704d25d8b",
        "cursor": {
          "ref": "303da2d1-6ada-466a-8d7c-36bf0c366a70",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "64d68a05-12f8-4693-b4c2-4d6381e4766a"
        },
        "item": {
          "id": "26f2e490-f30c-43e4-8f90-81a704d25d8b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fd820a6f-6049-4865-811f-78ef7f1b2fa8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}