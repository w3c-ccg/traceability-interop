{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "caa96620-7de5-47c5-9452-82e41aec7c2a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b22f7ace-4532-4e3f-b440-3ba7e28b14d7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d25daf1-75e0-4ed7-9942-1f2529610f87",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "63cede6c-ff0a-4272-b950-98877eb569f2"
                }
              }
            ]
          },
          {
            "id": "aad251a6-1f96-453c-b804-02d74d11ab7f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db32fd93-3d9a-46c4-b19c-b339c9970931",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7fd521d2-826d-4a0a-b6f5-f567de648cdb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b897a3a0-8d7b-4323-a916-dfc0b747d0cf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "39ab9849-9479-407d-ab41-7509357b54b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d5e58a1-c6d6-4db9-81be-59ec9a1bf07c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51f053f6-4d4f-4068-a9c8-2bf379d8444d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a23f41d-0053-4bbf-be62-10028ed7f7b5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb6af866-17cf-43d5-8c04-26dc42e0851a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11a28d3e-be8b-4e94-9cef-57b182ca1fd4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "29430e12-82ef-49c7-b30a-f49f06751dd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6f9e250-bc9d-4b2a-8157-ac6aa4261a56"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20eb3f60-f944-4108-a81e-be394b9ac846",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b8b32285-147c-4803-af8f-675985eb9cd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06e1cd8c-b664-4054-ba15-10db1bc02be0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0eeb9578-d207-4086-81ac-f28fa516a90f"
            }
          }
        ]
      },
      {
        "id": "35e750f9-cf18-4654-a3c8-5175cde7bea5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "78a7ad31-e2a2-47b4-be26-a7b2b7d6bdd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e26625e7-68e6-41ce-8045-2a7e29ad240d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac2d85af-c378-44d3-994c-50d64b8f4941",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61a908d-6582-4f9f-9ec8-6c8360d7c59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cd1b775-2401-47e8-aa26-87be5ced8ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706f18f1-7088-4e2b-b304-11353afb4bc8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfd5807-5480-4d9e-9c09-af7862b20e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eaef88f4-4b2b-48e0-b30f-9478c7bdfc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8048a2-731f-4b90-85ac-c9c1e31968f0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173253af-398a-4bbd-a197-d83c078bce4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b965309c-2cc2-4781-842f-d9eb3782cbcc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "274facc4-b0d8-4ee5-89df-1d1bebfdbebb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da2b9638-e2e3-48d7-9f00-b632e3205d07",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300f22da-6a44-48d4-9dde-1e92165df6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00d7d0dd-feb2-44ca-b9df-9ed78640174d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f477b7-cac1-4a67-a5b1-d10a736e1c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad24239-e7b0-4479-a9b7-e58847f5ccfb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4c2fc49d-5593-4ab7-83c3-1d46c78cc1f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a50fdc8c-f45e-412f-9525-7ea53597f113",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "422dc9b1-2e18-4bc6-8193-bace1e7da381",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7522a0ac-88e3-414b-a59d-6a02feaba634"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8044e79e-f3b2-4a94-aff0-745ed0e532c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2418ecd2-d27c-4d34-9ab1-c43d8e237b59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f032b106-62d4-42ca-9221-c79944f6e8f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72911fd1-32c8-4448-8800-35021e7b7238"
            }
          }
        ]
      },
      {
        "id": "5d317b59-c831-4b9e-b113-a11292ffcacb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ab7f534c-571a-49e9-9342-392dca924585",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abf7d39a-4589-4f2e-82b9-1118bcf96502",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "25bc2395-2ea4-4f8b-a969-35206b6b674f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65869d27-6921-48c1-bc43-04386a2bd711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa192882-92a7-4d17-b542-c3f7efadbcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ed488d-abf3-4afb-9ec5-cc4d6d673710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1396ade-3a71-4d61-aeb4-9e87b95fa4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ebb0bb-e763-4892-a0b0-71aeb4d878ce",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d91e1ba-c875-42b2-af48-87b62e628771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d282d5-5b96-41a5-87c8-1f490d64c87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797a3879-23d0-4480-a159-f69952583d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "696a415b-0d77-46b0-b526-e01be0bd8c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f31215-3918-4180-854a-ecb9b1c0bc15",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd4b35d-e5bf-46f7-88f8-291662221c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e2883f-0aa3-422f-be73-4855900e153d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212ae880-2623-4045-947e-ef51a71218bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e95cb005-8558-4a87-9df5-fcb34a73c0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398fc68b-c97e-4054-bd1c-36ad8369734b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3838ea4-8d98-4704-af49-ddcc56e1cf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dac9fd0-6ce5-4312-9888-8f045a92ee41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7996666e-d7a8-4597-9800-ff085255f60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b61e34b-f504-4d15-a173-fa6448ec2424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8b6236-1e9a-49e3-bd5f-8197db315db0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c329fe0c-c0d4-4bc0-a422-65a98c9ac399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51029bd1-1396-4b95-a5bc-96e378689be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ad8e0a-dc34-4a7a-ae97-87f1a59edda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69f79a10-0772-468d-9a3c-db6acb70c32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a26a41-de18-4c34-ab0a-b3ddf5cfaa8f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052fcced-7368-422d-ac18-b508a5b2969b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dc0347-ed1a-4221-96b1-fb1ca5f7ed80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d8dd57-2abb-4727-b4fb-deea2e440aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d3125c0-fd2d-48f7-bc60-0078fdba61f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090c8aa5-90c4-429c-bb49-52d8fd0da8ef",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cc80ee-4add-463b-81e8-7a23221299cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30999374-f1c0-40e3-b558-fae76c770887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fab8f4-8909-401e-b864-91c90ca6ff22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1411a3e-3834-4b83-b09b-85723a46d66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7c82a9-482b-4c9c-a854-49c398478328",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6fa7b9-9500-46eb-a9c2-d073d8709794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529493c0-3246-4ba9-b804-502e13d8ec9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc63b2d-b70a-4e89-ba40-73af41e563d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d891333e-d1b4-47ab-af55-7559ee84a273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5283d41-6635-49b5-8cbf-457d2e5f4759",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd23623-4fc1-4e01-9ca2-f15296cec74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33f3172-e447-4be6-b1b8-15d6ccb6d68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d5fd9b-1f20-4cf6-ae38-e58215d3251e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b837bb15-6e2a-4687-a180-ccaf17fc09c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb90476-bb80-43ba-b2a6-5123c321c4da",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790fcd87-078f-4bf6-b43e-d40551245de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a6cb9d-d2c3-4a4d-9471-de4d0cd5776c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c7b32e-21b2-415a-bdc7-b56497e02a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8b9bf9b-313e-4bb4-b058-f4c8066c36eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8a7128-26bc-4584-9e8f-d158c3af2cd5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfca6172-882f-41c9-95a5-d0262b2ce6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ab6179-1e40-495d-a89d-abc2df38e55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7d4677-0194-4a8d-a20a-ff5430c528a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "005df304-e225-44d7-9856-4dec3a56f1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdbb04f-c746-4c85-808e-048c9e2c9bc2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383158c7-2ffb-435a-910e-d9d97f08aef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf520ad9-d34f-4361-b54e-89104beb4bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1791b77-dacd-4f6e-af73-668c71a91973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5866fb8-25a1-44aa-99d0-8ac9d298d7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed7d232-bb7d-4ec6-ae61-3b499aa54c2e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecdfc01-7934-417a-ba08-66dc32845211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e5b48a-b7e6-41fb-acb8-a796c093c1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3cbda5-1ce9-4244-be8f-5f480ca4c362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30b68941-7e9b-4991-8900-c919d48ed6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbc6787-dd82-4a19-8e9b-68392d36d434",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ed7ec2-1f67-4105-a87d-fa3a04669840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf05d922-ccda-4cea-9945-9f3377af45c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff03ef7-cdbf-456d-a815-f1e29adc4df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0684a8ee-8c15-41cd-90fd-bc9e8d8c28cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67df22a-2e41-4c00-a1e3-34e337c545ee",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2935bafe-a4b6-4496-ae87-84f1e0551733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058d4751-516b-49e0-a5ad-3ebaf5c6838d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b22228-51c2-478c-9d26-b7ccbfba58e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55de9e8e-f430-45a0-838f-3fa955f6eafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db39d760-734a-49c8-ac9d-64a737e72cb8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bd374e-2d98-497a-909d-82b4ef2eb7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff797e9b-40b1-4b6c-86db-eeddd2532edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2781ae33-c35a-4519-8030-4b5a73a5b3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09cf6720-9cbc-4bd2-afbf-51024b6709df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d4ce02-0fb7-4587-ab99-126fb97fe13a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7743a15b-b5b0-4f1f-8bbd-b0e772611a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e592fa5-6d42-40b7-a0ea-f4e6bb54adc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7c6b5a-6bb0-4ee9-a3f6-de32a82f7430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ce0d992-9e6b-4adf-b719-a720d5053c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad0b408-a336-40a9-8d1c-331ad5c898cb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8712c01-6076-46e4-8d8e-6f2d1a3f941c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7be9f8c-3a81-45dd-91be-d0ac4a8861cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cafd24-bc6b-456d-bb6e-209177ce207c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cec4959-2a54-4ee1-9369-fc768e40d823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff51477-a43d-46a5-a487-e62acbc703df",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df96c5b-cfb5-4cd4-8678-c6226303228e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af26da28-7199-422c-8479-db1b5a98e539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34daab3-add6-4a2f-a578-b97e3dc48fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26808302-1b5b-4ba0-a6d2-fae605f1a1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f669ed41-ee2c-411c-8ecc-531705fc5b04",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb36971-85ff-4f08-ade9-400daee46d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d6fd91-9916-49de-acb9-1a20d20ef04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7484e6-1e3f-47ab-9556-6106b04f81e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6995a3c-89b7-4106-ba4a-100c9629c270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e305db-27f2-42d2-980c-39f5a118f490",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d28c56-e1c1-4f26-822d-880c709ab840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80525f95-7c2c-4ea6-812e-a4a4b5c03423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb67cd1-4a1e-4f3e-87c1-f618db155b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f0c3ba-479d-4f0a-aced-92766c9b4cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9314343-013f-4918-99c9-ecf897c54f78",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ecc729-36ee-43bb-9b52-06ccf3234f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa1fd85-5777-4031-abc2-c7812bf324b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952addf4-e70f-4c3d-a196-64a38f5f526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "759bf619-9513-4f4d-a11c-22b04496d8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9639b593-e555-4cb6-bba9-73012592e5d2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ccd51c-89cc-4094-a40a-ed8c4be0e6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ee3cf5-50f5-4cae-a5f4-7f45bcdcebec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bf04a3-110d-414d-ad03-65604a64d5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cda3bf1f-9e93-4daf-b086-b1a7542c21e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bbc32b-68ae-4c86-ae55-914e94015b4f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c04877-df7b-4c1d-82e3-3c4494f222be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7949bcbf-28be-4d2a-afe4-9999d0ecfb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f30c9a-0ff3-4897-8a8c-012576dd62fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5de6b7-d73c-4081-bde5-4cc32006e8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46e2e97-574e-4c83-847c-0a290818a0f1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d86747-bf55-4301-9611-a4cd41f2b5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a12412e-b2ed-499f-ac54-bf64549f5cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4edaf38-a1b0-4117-9d72-2410ce6cdd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5440fc63-5ab6-47b4-8c42-427c672656d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a9b8ef-49be-46ec-b33f-19a1340451e7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55622fbb-27c5-43d0-a39e-82720f70c984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b196b7-8160-4424-9b1e-091af987ac52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aca351b-63f2-4f0e-8e82-4dbc9dfb5ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6237ec-6c50-4517-9cb4-47dfd46f783c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecce5867-f454-4068-82f1-e56074b2729f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967b1d90-d70c-479c-a2fc-4016dde037e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b2f65d-56f9-46dc-bc4e-4a5e43839d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f82710-2dd1-47d5-8c8a-ffd4b36af0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8875b6-f4d1-4f99-bce6-7043750358d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211800dd-8e12-4098-8c68-6cce88ff9074",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e341ca3-42fd-4749-8129-430f7a42230c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a06ebd-a5de-41bf-8c8c-dabe2889f1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6996af1-2fa2-4b4c-963e-79b950079d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "886d9aa8-d645-4b2e-9739-fd32550d718c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a87c8b-d38d-4639-a374-a0a5dd4eed6c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c61339-5d30-4d61-bf76-9031b637c036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5192d29-d28d-4532-9438-1d50802f8907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821c577b-cc66-48c3-bf08-cae144118761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "edae1f89-01ec-43de-8c67-2c232196b958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866d7bec-2ba7-4ccf-8ef6-4dd9009a71a2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60eec777-9d29-4076-9937-4d2df1676596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a8fe74-e99a-4fa5-8b95-9d488e57aed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9bbcdd-2270-46b5-9575-da8579f403c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f22b33-bcfb-4e13-9d1d-5e32ffba9927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8921b40-46be-4823-8154-9f4b71e14cd8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128191b9-d0d8-4b8a-8efc-43d9cd15e83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d73a9f-6d29-41b9-b3a9-13368ba3a00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a877a137-8f45-4ae1-8d44-db4559c6b56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98f7c369-ad2f-4c9a-8a3c-9e74c64daa43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0654554-7080-44a3-9467-ccb14001cec3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95983db-26bc-46d9-82dd-fe1d426e737e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa8f67f-f927-4a73-af5e-ef17aa8848a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaa55b1-4c1a-4047-bb32-6589befb94ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb34f7cd-fdf7-4949-a790-d74d3800ba36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aeca724-2616-47af-a140-df5812184b0a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c415172-97d1-4457-ba35-ba2ef9770fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e87bcee-051e-45e8-a1b0-5358cc4501ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e589009-a705-4a95-b2a2-f8e8cd67df7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acb5e1b7-fc67-4b42-b1d5-ef08186d3001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d345b9-8111-4499-89ba-84f56e24fe41",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf77a00-4fcb-4092-bb34-1c1c7366006a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0facff8f-7b83-46d4-87d6-251033f0e30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11d8e25-79d3-49d8-b172-8ca3e52d229e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe7e531-6c57-498c-b719-b941f5ed4a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d00fd07-5e87-4c38-a9ba-e87e79a21818",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fae4ee-b5a5-4301-b0db-c642827f0356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc94fd5-815b-4cea-930a-a71eef613b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079dfc68-32f6-48e9-b423-5b664167a04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9a071176-b449-4fbc-9b32-43d26c63510c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ec91cf-7580-4e4f-84c6-551f0c79f2c0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e562e19a-9393-41ad-a58f-07fb70afe0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5a10d03-53d3-4670-b94b-f4bca8bcdce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47ecc04-6adb-4014-820c-d4e665991731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c71606-7d2b-4eb3-b2f3-78e64c65bb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95d37fb-60c5-4460-9a61-fa3f6636a433",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7479ac65-956d-4f59-ab2b-a7cc6688d3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f534882b-05b3-4e0f-9301-4514fe048b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0c526e-bf3f-40bb-a742-06e42267c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47ac064b-bd59-4814-beb2-27b75e75cb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d49037d-62d0-4dc9-af6e-d56bc30549e2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97532f31-0d72-4dbf-874a-e5d5e45242da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603803ed-9ca2-46ba-8d59-7c0ae3098fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033af804-1056-4e91-b3ab-1edc93ff0d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82708574-632f-471d-a3b5-1b2823a17c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c48623-5e62-4e99-be58-95a1b4f125dd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ecf3bf-2fc1-4f95-833f-55cd985f42b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0b6528-c783-4b0c-96c4-ada9c36e567c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc358b9c-aa58-4f81-9122-5c8d953fa2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa596db-d230-490c-8554-386018b6efb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1903c0e1-b134-415b-9949-5c588306e338",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3407752-17c9-4436-9e61-fae216aff796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812417a2-509e-4ac8-8a4f-421e38e1577c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41db104f-34d0-40d0-8e85-ae4edf0e9f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "949b5a8c-3957-424f-906e-dc6250642e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3ba8c0-54bb-4e69-8939-b14c1584fe01",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd4980f-a46b-4089-aced-e721b6e240c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c4d1f9-dc18-4f3c-b750-317d166f08a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddefd43c-2b21-49ef-bec3-49ec15295f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "efe7ae63-f2c7-4710-8d6d-f3960eb11966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd288f4-1403-4719-84c4-15c0f221a795",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2aeac7f-4ece-4ba4-9f01-308b97235f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7e6bfa-fff1-43be-9d56-8a48d30c5ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22adb6b-6fdc-49c1-92e9-0fd98f92ea7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1142cc50-6fc0-4246-a32e-4b4d32138a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac55d874-c6b4-489a-b20c-6b0bffc1e8d3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f82d48-e2a1-4dda-b06a-575471195590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db3623a-6e1e-46e4-b02e-f3c1a0ae67c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04fd431-2056-4602-8538-e836298ded38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "458125ff-6fcd-48dd-9318-c8ea96acb553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f194d6b4-9cf1-449a-9704-d8cfa7fa9fe1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc2451-afcf-42b5-9e62-e11c3e3ffa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224baa8b-a5b5-4662-8b74-1baf88d18a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172a785d-a7d0-49e7-9e65-6bfd2944749a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd528dd1-6109-48b6-a6d8-02aa43f922e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddaf45b-2d31-47d6-a4f8-dbff9f9e7181",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355ec419-f68f-460d-b068-eda783d4875d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43860e9d-e8b0-4de5-9e49-5ebcefae487a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb04adf-8796-4bcd-adce-62eaa8e7d3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35f63754-844c-4fa0-b498-3c0b4d87c702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cde777-cb97-4a8f-a351-5268ec4b6dd9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1fd666-b40a-436e-b8ac-749813dc179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bd2e16-67d1-4edd-b505-4cb0a055d6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b705a480-d228-479d-9309-83d13044e073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "115a40af-b8a3-4e55-9a86-63c032304196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35c03ca-500d-4269-aca0-a95757e6ddc3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6db607-98a9-4768-98db-949426088be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfc06b5-9eab-435b-931a-7586d741f49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cce709-4f1d-40ae-85e1-6393dc108d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1edba94-7128-40f8-8ce7-3a8f8f8f800e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0696d8b1-75e1-4bcf-aeb2-a4e3d3259059",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cff813-91f6-471d-8cbf-74d8d0da5d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7876144-6239-4fd3-b442-c5e11f75d803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce12abf-f242-4b8c-ae9c-6173036c84bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "900c7c46-6af9-43a6-abbd-69f9f1801c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36590de2-a3d0-40ca-a1dd-0eb8d253ee30",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6e1ba4-1e37-49ce-89f3-1163fe7a75c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048f5cd0-bc8f-4146-820b-b68ee5647fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ada767-5540-4e26-8363-3af0f014e4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ead773-1e76-4302-8979-3d8337863551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779bda4e-5045-4ed8-b82f-e55702845f6f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9cb033-41b2-4bc4-ae6f-53c6fa8890e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79630c7f-1059-4c2c-a8de-19e6b40d1048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051d2648-57e0-451d-bcd1-63e59fd9d83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c98472d8-e6b4-4fc8-8c45-4883b29e75c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b0eb2c-3988-4bf7-aa58-39121cefcefb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b024e3c-cb42-48e1-ae20-8ccb1260ee68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa954f2-a9d8-4ac2-a839-f8a01271e4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811a651b-7e80-495f-8786-9ce79cf42fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8c387b-eb4a-42bd-9ff0-b41c6cd15961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d5a73b-0927-4f46-ac7b-4a04c6a9d024",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4585c2e6-af2c-425c-b409-57f8271ec864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dcd07e-09b6-472d-80f8-c0323afb538e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c47754-6b4b-468b-ad4c-43c74efdb323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31589d9-4190-44be-81d4-196d2d622ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d638a783-b993-499f-b46c-1f02161051e8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450dc971-2225-4fe4-b45d-95776345e10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aee27f3-1030-4994-8e98-9851cb770398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5908474c-d6d5-436d-b830-83f4f034f0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20e1081c-88f4-4678-92a5-407c3c2d7f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed2dba4-3c39-45fa-a315-eb2cb40e1ee2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8cfe1b-a1da-4888-b6c6-585d4209f43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccd44d2-d187-435e-a65d-8407fff4f1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b92fe1-c300-401a-9265-d71f0be5a0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4df1e859-053b-458b-9130-0fe708ad1e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a415564-5ab3-4dc2-8738-ef2459dc0ad5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff08f5f-bd97-480c-816b-c295a56a3fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3f49af-5557-40ea-be8e-9f70d3a8ab1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b894a949-ae84-4f8f-abf0-83cbb56d3162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b830bce-fc20-41de-a4f5-fcc50cfae916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc758b3-bb5e-4471-b3dc-eb747e2fc1a6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3999b9-03d9-4827-a185-5484f298ddf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de6b555-f105-4a73-ac1a-e1aa0554839a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d8bebf-95e1-4ee8-ac20-a9945b160d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1268a5e5-62a1-425d-993b-6deaf420b867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c3bad5-85a3-48e8-900f-66c4108332fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fea6712-9e34-4b54-9b4a-b2d82103fdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b7109e-0e84-42b5-8add-ecf2334916d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5fe616-81c2-4702-b4a4-6a5fef9c0e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "288ef7c9-bfb8-4bfe-abcc-1779286328a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13357d79-70c9-4999-a935-9c164b99807b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe4f52d-bae9-47af-96d0-acb38e458fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76a74e9-a75d-40c5-ab28-8c9d30bdcc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9910e898-1964-471c-815b-f095224e8121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb998d9-77fa-4579-aca1-c21145fe80e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412aa93a-83d7-4607-980e-ff985fbb2d97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3110ff-6c89-44e8-be9d-0ef6bfb6a593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf06b242-009b-4691-8062-c9a7f16ae25b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67c1a46-bf1a-49eb-b3e0-fa2de0796da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8b3b5e-c86b-4d60-8dfd-6e7ba50e74e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296e0ab4-b59d-440a-b495-59ee5d9a3008",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df897fcb-e408-4ec6-a3c4-84340caa434f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65243144-2135-40ad-85aa-e0512b28ddc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dda54f-b32c-4146-b008-62d12db31bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95117595-4cdf-418e-8e5e-ef5e50658d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858813cd-9725-4c02-8614-82e937c3b9bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15be7a7-2ad7-4af9-95ce-4c40e8b261e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ba607a-945b-4744-83e1-aab5d513662b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f0aa3d-da67-4cc5-926b-2e74e7a7055f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "596162b1-e2b9-41c6-9ad9-ac483f9b89a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f594ee0e-18de-4f26-bdec-dd154c5511f9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f308b4-07c5-415b-83c8-ca2386268ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fd8f37-eacc-41f0-a874-06341b32178e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d865e9e-3bc4-47f7-8913-fbeba4b08f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8150b95b-7d99-4b91-b98c-ddc34475063f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b390579-7a5f-4eae-8fab-88e74a644920",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b752bdfc-9354-4626-aa8b-542583a5a6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4e0577-8809-486b-b03e-166516529c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec42c54-a5de-4328-9124-520a04d13e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1b0a4f-29cb-463c-a459-db50dd2ff90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19abf192-e737-4238-aaf5-aa34b8024eb5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc593533-ea30-46ee-877e-3fd7698af997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74f3c12-6309-42c3-ae60-620fe7e1df22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e9d1f1-c840-45a1-a4ba-a50bbd553728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4871f0-b29d-4c78-b50c-61f9ad6b6086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da52a7a-61a1-488e-be29-b2461cb35100",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6814434-b8eb-4b9d-8aa1-88c7b0cfbe91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39b7edf-a2fe-4fa1-b5c0-c6a9b9ad6376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633df2f4-7245-42b9-adb2-c98366a9d8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9055349c-da96-412b-beab-9a6e76bec8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6516b81b-5d7d-47fb-bb53-26bc77f0c6be",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5deefe4a-e6f0-408c-93af-d20b0334d042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf6923a-3dd9-4e69-87cd-dae2ac75b929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd0d97c-fa68-4d1b-a863-15fa964e0665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e0a3cc-1a07-4674-ba0a-d66b14affffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a154a063-65fa-4152-ad17-d4477e40621b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dc19ec-cba4-4bc6-bb56-7a9cba5f9d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8075f312-bd17-43fc-af94-3065d09de5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a0e362-64c3-4b58-b47d-843e8b20b76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6903fead-b015-4460-a83a-d621dd27903a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a880f3f-797e-40ba-bdc9-63bcf47dbcb1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffb8c07-5d11-4f9d-ab25-64d179010f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9248bf2f-eb54-4d9a-b8e9-7d5d7cab5149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffa06bf-3405-4b95-be8a-edbd0a88d10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "91d38374-5b7a-4554-88dd-2024d722ad93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6ea874-985f-4855-90a2-e9b5c6982053",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c838dbb-14da-4229-a31d-b1c0d16e11d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9d0563-bf18-4f4e-a1a2-51b42c3fd3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eba0d3d-a906-4793-8b8c-2d0c45a7d9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "782f9e61-9463-4b54-b63f-8f56216afe96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f8cf8a-a7f4-4f49-b3bd-c1ffb4657753",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bf71b9-689e-455a-9d29-1b554dab837a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a2cc42-3e6b-46c7-a9c6-51ed76e41c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7e2cac-9751-4dc7-86fa-b4173b02f153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7ed563-216a-4729-9256-e6d3aed7710f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c78957-adec-4987-87fc-d7f898d5ef6b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b657c808-3151-4c89-8541-e7f85298a459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae2ba72-fef0-4ac6-8aa5-51ade5f8c54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e393656b-1af5-4f99-81d4-9faa0adccfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7db8b80-0272-4251-9ec3-72b65d74198d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b4ba9e-773a-4132-b513-1e25fd28135b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6228b7fc-23fb-4a91-8fb8-80c6f264261f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf896fbb-3061-4cc8-a071-96ad464de886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72447366-b072-4c37-8ccd-97931034b894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a01e44f3-76cd-4d95-9dd4-46c24fc2d4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af18f318-09a0-4ccd-b88f-e5f01cbfa180",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f273de-5920-490f-aae9-ff870acfb82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e893fc-4117-404b-a1db-d5b7728fa57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31168efc-b214-4146-867f-3cdcc21a5d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be0a2789-6b76-4f60-b8e7-80d10ca9580e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dbb1cb-758b-41ee-a64e-0bde9ff504d1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c65111-9097-4842-8da3-5263be8615de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e9bbbf-b918-43b1-8d2f-862bc005cfc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8570901d-597a-4629-aeb2-6e5f52f83865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79376497-bd15-4045-8c7f-905b8d6ee173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6135dcc2-a923-45cc-91b6-bf2996056ec7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5164ac0-307e-472b-8418-e6ea10ec6f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27f5cce-13fa-47ad-9eae-b63dcf8a5a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1fabba-6264-4c70-9498-4df3e09c579d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0090ce-7322-4a6f-b248-1c0018f0cd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f8b8b9-e8d4-4bfd-8e87-ee4adc8e6cbd",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ea5e1a-f0c1-4b94-bcd7-8243fd0e159e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c24146-cbca-407a-8c2d-ae2b56cc803e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f479de-2ec0-4f14-98d3-2c3b9e59d42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb52d2b-1041-4312-a8d3-f825877d7414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50663eaf-03c2-4c3e-af96-8d073cc7c274",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecfed81-ac3f-4f55-ac15-04ae9a7872fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06021953-3448-499d-b1dc-22e53e73f9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fef0cb8-c4e5-46fd-897a-7dc9b60cc3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ae6717-f0e2-462c-a914-deb1117fec1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5ce266-ecb5-4760-abe4-f8ab921c8353",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f506a1-90b1-459e-9580-001dbf43f51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bf1d73-5ffd-4094-ac90-47faa94c0a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c376f9-918a-4587-bc5e-66329d742b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46da4da6-589b-4458-9967-26f6a7a41803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20300f25-5f89-4a5d-a245-404af3642de5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20412870-88c8-417f-8fce-6dcc5ba68408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c830d55-f8e9-4244-9dfd-e6dfb42a8072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6931464d-cc6e-4af0-9e58-b9eb268d9daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "422a9bed-1b50-4131-892b-f630d435af70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42000a7-d0ba-468f-be82-8c57e1cf2508",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5415d032-5485-4fe9-b550-75a57c3f8b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5913ffc-5bd2-48b6-924e-be5ad2631d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8eff92-d649-48f2-9d5c-75edd7c6ad3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe585303-a9a7-4999-9681-b6cec6bd768a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed543f13-c2a0-4c75-9c7f-7a4b83c0491b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e517923f-ad36-4eb9-b65b-51d7e4ca8384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28bfd8f2-92ad-40ad-804a-2891e979d54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf29966e-6f16-4377-9e8c-7e87ed2239c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19858256-d04b-4519-9cf4-4599fd24f9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f49a9e7-d921-4fd5-946e-3d9f8d0ae89e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f63928-e795-47b9-bf24-0e7511157121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ca1cc8-83c4-43d7-b237-c0fee07575bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceba5b40-4dcd-49e4-be20-baeb3c473fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16fcf8a5-5769-415f-8e35-f0b27e3bb8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a08d3f0-9986-4bfa-899c-60e0a90d91d8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bab9ec-4532-4e86-bc73-1e4c23eb6098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a69d95-40a1-4b8c-b998-5d0be4a960c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc5bb9b-f8bb-44c6-9f4a-db3dd514963e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afc1b160-6151-4c90-9502-c9433fec4ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d130e594-ba5e-47de-a6a3-6433e0d9cb6d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3478254-77ea-4a1b-8355-75d2bee42fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc013144-fc33-4059-8ec1-756ad9a68651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1adacde-3656-4849-b221-548e57908f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d58494e-814a-419d-afb0-27844d84aa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc8863f-0f3c-4878-89fd-0a11b606e841",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f15c3f-ae50-4b61-baa7-f12dc79e8663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c5a43e-56f9-45c9-9507-45392d1af662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee0f556-e9a7-4c45-8d52-4ca029e15ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "494db3ed-5eaf-4619-849e-93dc836f0f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baeeaf71-e733-4c6c-b0ae-810eff9ce5c9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c31321b-6439-41a1-8027-b4a6b476822a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0911bc5a-a282-4f9c-aa4a-fcb66a7e193a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059c89cd-381d-413c-86a7-6403effc86d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7adaa2b-0f07-4162-ae56-a83c17a8dbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e11cf2-474d-474b-9076-85f19d2c12fd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e55106-d2d4-4bfa-b13f-1fb3bf173ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1b2f3d-2129-4d9a-a268-b887f6283360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8382472e-6e62-4f20-8f3b-06e39582396e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9874455-4c1e-4e30-acd0-e413e5d4eea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e282c8b-dc6d-4b3b-b2d2-cf01b8545c31",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed73a27b-bec5-4a49-be4e-e20ce401c656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c92f8f7-5e8e-419c-a0a2-ddc09def9357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30397137-7aa5-4196-95a4-1e696123e7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b386e04-25d8-45be-a1d8-f35a1d5afa86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df19f3e4-bdb5-4358-b357-0d8d0047dff1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bd119f-60de-4149-bc26-803310122491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25033ee9-ff76-406a-9287-aedbbe611365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b225b8-b2dc-4271-b4ac-be3d9c0b4f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fac999-b5d4-49eb-9d17-33abdcd14d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e9ea0a-17e2-4773-8b7d-6baeb9dc806c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79dc640-a562-486a-bc5b-a8a8968cacb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6310d67-ce7d-4406-8ebb-bd3a08ceb1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1856b57-faf1-4932-958f-f8debfd244ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bca2cee-4331-4b89-a3d9-d522c606126b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f68622-2d3f-47a1-9afc-3c1c92aab321",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71b5037-6dea-4b01-8958-a4ac8ea7b028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a50fd14-c703-43c0-bca5-6cb8a58f580f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04863b5e-01b1-42c5-b10f-493004f084b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dca915e-3dd1-4b0a-af57-a0f04d46cacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b6fcb0-128e-4cdc-9e39-c371af669fbf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bd520e-505b-4acd-a8c9-132f032215f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "84ad15a0-41c0-406e-9f4d-2924fa43f501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49c97c7-3aa5-4989-a79e-8790b46fb07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1d47c7-181e-4f3b-ab3e-b72d859b20fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a6d5be2-584d-4a0e-97a7-fff69976da3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1438fccd-6f5a-4d0f-874b-18e590257b4d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c99713-0a55-41ea-a139-c9bea568a27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45e91578-5961-4def-8d5f-b7a54e648c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a13de7-b1a0-4b38-9619-173fd4f57107",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5281266-ed21-490f-9b9d-06ce1e50597b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a7606c1-e9c1-40a6-ad0f-dfe9f3ea2fa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "527b787b-c095-472f-ac80-5a212d1db599"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44531e15-5c2c-4779-a61d-a9df2f5fc74e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9da097d-db85-4c85-a1f9-f73a6f76b432"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3822ad91-fae1-4f68-adca-6e7574ad560b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c0a4d2c-ce98-42a4-a049-9cbea2d0ccc1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee41694c-8ecb-4776-bdd2-448ff6ec3c68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c3783f3-3ae5-4940-8d02-327cc7c117d1"
                }
              }
            ]
          },
          {
            "id": "9f9b348f-02d4-4d5b-86fa-db36e9bee7ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37e929fa-4646-41dc-abeb-64fe40e5a572",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "297502c7-e875-46a9-81a1-378f87a9ba82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12798b1d-1ca6-4e9b-a852-3506e2774ef8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f66adb5c-84c9-4a4f-91b5-d09adf0e31ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44c55679-af4f-40a5-949e-e87070a4eb14"
                    }
                  }
                ]
              },
              {
                "id": "896622c0-1b16-4e56-bd4d-2966a53510ed",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a99c889-08ae-4c05-8c93-d49a0a3e40bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "402c301e-49c4-435e-9abc-1a7edb19f1da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2752f2e-61d4-4b6b-ae60-7b818097eeb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7477859-c1db-4542-965a-867ef1213bbe"
                    }
                  }
                ]
              },
              {
                "id": "356381b2-ebff-4003-834f-78418edc0d18",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61090295-0f7e-4328-9a1b-dfa33d4c9d88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af163777-40c3-4e31-8650-cd299baa342a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec2b7790-216d-4feb-9698-36ece31631d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b814e7d9-9435-40a5-9680-df8e080a1475"
                    }
                  }
                ]
              },
              {
                "id": "a2bd450a-62b4-40e8-9046-981bab9f962f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2788a4a-6c62-4953-9c30-606c510c5498",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91f39bb0-5f67-4ab7-9173-07efc6767f7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13d01706-2608-4f33-bda1-14d48b716b44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "08ba1333-2b24-46a3-bd13-94ca4f1fba11"
                    }
                  }
                ]
              },
              {
                "id": "6ad1adac-2217-4e44-9e84-d823cb23e703",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6d1ba82-dd59-401d-9592-fd143d9d3255",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3d2ac14-5ba8-4fc0-80df-4aa064b7ca67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f0bed83-8381-4554-9f67-ce9f55b58f1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d1bcc6b7-4d55-476e-94ab-4545949efe31"
                    }
                  }
                ]
              },
              {
                "id": "29617bbf-6f03-4109-ba8d-552338c4539a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55ebae44-8d98-4543-9710-0cc3ae7ceec3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6ac7867-4c12-454d-ba29-c1487f46ab77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bc907cd-9a25-4f27-81e8-db5143f932dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a1dd69e-3cfe-4add-a70b-4b16908160a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dafd7113-77b9-42b7-8d66-25a7c2ada209",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d79c82b-e7f5-430d-b25a-1cf985cb54ac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ee478cf-bd9c-4f36-b7ab-a86849ba2e77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da51ac41-893c-4edf-bc2d-b9003ae66b28"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65627b0e-019a-4669-86ff-1cf277a2f57d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ec807df3-b1ab-46b8-a07d-bea4b722ca0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74c2e1ef-45ac-487c-b799-7378ae0803b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "781dfc46-f4c4-4af5-93f2-f74e527e97e0"
            }
          }
        ]
      },
      {
        "id": "9aef3804-65e3-4269-b256-5c9fe13aa0d6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3f4566c3-c437-411d-8782-c3fd0a14d3dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb9239a8-ca51-4c85-b3f9-0983fdbc4d58",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2a9f0458-b511-43a3-bcd6-8bfbed953135",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc361334-cc59-4569-9bdf-1781146d1eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aba67a0-12b0-46db-9cf8-6d68828f5357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdcbf38-b45d-4aa0-b6b8-b58d6eacb082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1247307a-4269-41b5-a54e-2e85fc88c006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1b6dc4-3ffd-4589-8adf-4be83f34059f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f67e31-d5a3-4e92-b424-c0f47f429567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2145ac81-0086-4d1b-b72e-58d999770f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b226081-30aa-403f-ac25-ae12e852a0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "276739c9-c213-45d6-8688-9842eb4e6e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe70bbc-1113-4320-acd7-185492bce4da",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426c6799-c3c7-459f-b46e-c9a35d09145a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d5d1bf-aadc-4d55-96ca-6ecc9359b820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63a0f65-277e-484a-b015-6c994eb316a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad30fd8-6091-4268-a2d3-547a49bf30a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a235413-f475-4143-8878-04186d805716",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6911ca5a-6f31-4d8a-a1df-0e8a0612edd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca521d1-6c1f-440f-b10c-37f554ad7e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61acbd67-2638-4742-86ad-3ebac0772409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a33ee3ef-481a-4c1b-8bb6-feec5ff596c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdab1c57-5c22-4257-862d-3990d38c3dd0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50616f2-74fd-434b-a073-9feb991715d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8d19e5-3284-4e44-a53a-4d58b6dd6e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c883e241-31e1-4226-baed-3ce305830bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f986e8bd-92b3-47a8-a7fe-d13669d5662b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c306fd4d-3873-4972-ab85-a46c7802f2d4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58b06e4-b7c6-417b-b54b-3247f9185d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1b2256-f24f-4eda-8226-909b5b7360b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3d4126-91e6-48ca-a640-888cf2bb5d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7f7511-d2ae-4d5c-8524-fdeed068a62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2d5181-2c6d-4499-ad1b-c1f7d93fcc75",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faa4855-dadb-4ecd-b03b-c8075744e3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db66b15-cfdd-4402-bc92-708affdc0cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c923f44-909e-4d33-853b-aa50c390622d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0e8e2b-00af-4916-8494-79c190cb317e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50a9b6d-50ea-414b-b727-6be9b96138e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9451c452-17c7-4512-bdd6-5c228a1f62d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65faf8e8-99de-4213-82f0-a66d134ab9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49925c00-5869-4138-a09e-04c6dd46b103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a366cc22-a341-47c5-974f-cc5d0eb1a6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a1d69e-32be-47d4-8638-cb13f201f207",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bb9eda-9d8d-4afe-b271-3b97f89df9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107f6e61-7755-405a-9086-3334bd7063b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2498e4ff-b78d-48c6-8d4e-26c162c9648e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de7af92-83f7-4d33-92fb-33f2d37663ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6466d17-2b3a-4651-8ae3-c058d3951d0b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab9e29a-03c5-4564-9a7c-88953b544264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519d0307-b42c-41ec-8cc4-32f101da51c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3389d5e-83c8-4ca8-83b7-70feed8213ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "404ecafc-e045-46b4-9066-e7f0af64cd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace0c436-2ce8-479f-b8fa-67ba7094d041",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18166fe4-4198-48f7-aa23-2f9f26039844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9997da44-df3c-40d1-9717-7c243575406f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a2b1a3-b3aa-4243-a862-1873f11e951a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f7a907-7dff-4303-819e-ac833c827279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e0cbda-a9c5-47d5-958e-7bd6e9fc456a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048e143c-e8e6-4182-b50e-395d22e16447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8aaa909-094d-4132-8a75-29cec4e32692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3823dc7-fcc4-4fb6-a1a6-952f6763c1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9135d9-b967-4955-89e5-258bb1cb3431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76593991-8e2c-4299-9381-18287e7b439f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91621755-4f74-438c-9ad8-183be4bc614f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6415f064-6f3b-4f19-984e-1a6b521b41fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032624e3-6633-446a-8f8c-dfae82fd70ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d66700e5-8342-4c10-9616-ec720cce97f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593e91ab-c0e3-4cc9-a8ab-e860b3fff429",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2652d0-3a5d-4483-933e-b66237b13213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54970996-a24b-4955-977b-14f3fe1d3588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27650c42-6e9d-4b8b-9a6a-f41b0e1b63cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a3bf40-44e0-4d8d-8064-ea5389dcacf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f693b916-c2d9-4517-b8a8-45a077eaffc4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9e6319-1ab3-4071-bbf3-a68788f9ab46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e283e977-d8a1-4040-9946-dbd067f0a324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdb474f-40c1-4dfe-8a5c-259af515eaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "12c291c0-cf61-4580-b31f-a25fa5370d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a10ed6-aac9-43e7-be31-1a39c42b89ff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f50f105-e919-4e66-a8ef-d891da56e38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b48c02b-29ec-413c-92eb-77fae7728a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ecd29e-e4a4-4e2d-b264-c9013bbc097a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ce5783-ada0-4351-9e86-b1d8c9669b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db80a8db-117f-41f2-927a-fcb17f149117",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7540b7-7aba-4a91-80ae-38e88ebcbd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85544c51-0dfc-498e-901e-35985d5a3c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c30e58-ca6a-4228-bc45-ab46f19c5d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc81b2db-1c57-4477-b89c-42dd1eb56abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d692e9f-a62b-44d2-a812-00e534aeef33",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bafccf-a67b-4a06-a50e-a6522f26ac59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de868cb-55b1-44dc-8616-cd582e9f54af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410a7696-076f-4c45-bd53-b2ddc60d3485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f08c69f3-c27b-485e-932a-c8b618fdbfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e458697c-cf35-4f42-9d2f-8bb3b2436965",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9cd05f-3915-47f3-aea0-eb11c7355afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba309acb-9aeb-4f79-aeb7-2f2a51d335a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aeb64e2-ebdd-42ab-948d-3e4e8ac96558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7177d9-314d-400b-9c60-c7d2b0ec21cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebbee24-6d4e-4b5f-bbe6-6efc6f7ea4a7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa10c5a-b407-4b67-9bf3-06de3f28bc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985d569e-1a72-4cc7-9b8b-6f151b7e7d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b985990-4de1-4b9a-9dc1-656ed8b363de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d67a010f-d13a-4569-a1a0-b95f4c3c2fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883db849-2b0d-40d6-bc52-8368e2dd49aa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dacf66b-17bd-4078-aa5d-26c0ce9c1434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b125037-64f3-493c-b3b3-d5c2c181d8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ee1a63-f0dc-4fc4-acd3-8ca11800128a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1221169-1f37-48fa-a9bf-70c26a579fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91813b6-bad4-444e-8818-af38b31f27fb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7d5354-8b9e-4699-bba6-46deb9f7ed87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aefe9c5-b220-4819-b344-260cecd31ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad5afff-ee69-4c2d-9c2c-ca92564f9643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3e2581-23b4-46a6-b0f3-589bd8e2a3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31827548-b13f-4be6-8903-f12ede4d037d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb6570b-9b09-44fa-9ef7-2efc4ad104ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19fbcd6-c401-4e79-9fba-8c01b816f418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be55404-62e9-4af4-8112-6a18971eb39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1613f3e6-9b66-4b96-96a6-cb9608751a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991bbc73-5772-4a9e-b453-c0225e70cd55",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19b278b-344e-4bf8-b8e1-5b487c1b207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9901094-68f6-405e-956a-8b06fd866ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ed8dc2-8bb0-4776-aa5d-36741d3d3ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c113717-bf19-491f-80ea-68b957930e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657954b8-bd59-475f-9e56-d82a2e47c694",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ded350d-2ac3-4446-a595-78cf6b50fb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0dfc71-8089-42b1-8645-df3d5f2f2d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5916ace4-2160-4ec0-8404-fb85a1c40840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a61d6b50-9da4-46a9-a08b-a7ecfa94ddaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89f053c-8f69-4b0c-9bf9-df1876ee8758",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10713cf8-ce5d-428e-97b1-a0aee98556a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47da517-4a1a-4659-9d8f-c3021c13c938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb9b38e-e47c-4f8e-a6ff-9e46f5b901b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e66cf2-e41f-4116-ae8a-6ef10efbe861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffcea7a-dd38-438e-bfe6-d011efff0f60",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bd8d44-5431-4a06-977c-e215f0759a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc3902c-3ed3-48d2-86d0-5d14afe1a21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751dec01-b283-4004-babf-028404deeb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "315f5ff1-4324-4f7f-be2f-fa80f01b4277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c7bf4c-9ebc-4e53-a9a8-0762e17c1d69",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9580fd-ea36-4222-8296-91314bc1cdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0204cc3-6806-48e2-ba3b-be3795fc0df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a26e9ea-3bc7-4b27-b4bf-bd50f78a00d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01bcd4ff-9013-44c7-90db-ab8d8e099299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dba39c-59dd-4b43-9e65-428c93708c83",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec71bbea-88a1-471f-bacf-1be6c3e29172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b516dc-b610-4049-af7f-7f643084f877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18711758-6925-4d57-b405-905a91863ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b15efb2-cd8a-4c28-8f14-efff0efc7435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214c489b-0157-4109-aa96-82e35d7d46ba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c214bba5-72ba-46b0-a7a6-0f245d8fd916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b146365e-7d09-4ee8-beb2-715be2bc1b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1adb567-79ed-4ae0-aa42-6c559c134449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5702617-6fe9-42c5-8dc3-3b6617098557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0088dc-4ed6-41a2-a029-eb82ecfa1b92",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df09f5ca-8399-4549-814c-27662697816e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94cddae-dd56-4991-b15e-a69c9b14c39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9192e0dc-2faa-4006-a51d-619f5f1829b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95069673-dc04-48e1-9e5a-3c019c128d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75a3933-58bb-49eb-8b95-e59b015b1e8d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf9bc48-1dbe-491c-ba27-e00328343239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280babc1-0c6f-4723-bc49-948c9ae649ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5acc5d4-071a-4991-b458-7867bf2fd7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ffccdb-fa6a-413a-9371-4b69dc9c6a8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ebf48c7-597f-447f-a787-b4d4b246f131",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b99237f-af8b-4da7-bfa9-98338b3565eb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c0c917-bfbc-490e-af3e-5d440b49a0a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "641abebd-3733-479f-a187-90e2dca6a46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66c2f89-ac1b-4771-a203-ebcd917ae1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7329eb78-34ab-4685-8085-01aef48bdc42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a43847e-6c13-40f8-a89f-f1fffec7c54c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47aa20f8-924a-4933-b205-1571d2171505"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3874e824-cff2-469c-8190-e3c37b6eb84c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39e84927-4e34-4989-8784-ffb132877a11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db2f2115-1078-43d5-88cf-8a81dc81ab41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e91d6c4a-13ff-4059-9d34-566f75ed6579"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "002b2548-b87c-4abb-8f83-ee3942c27074",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44551ccc-cd3c-4b70-af1c-91951a8fb4d5"
            }
          }
        ]
      },
      {
        "id": "c6d97bda-34e7-4382-886d-6d2fc9b6b35a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "43c126bd-0b8e-43e6-9bae-e78be82c9fcc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8936f1c3-fc3c-4f20-aa3a-689cc9083a59",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe68a9b4-6935-431f-8f93-b83b59135579",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7b16ae-be32-4cc5-80e2-899c90cb7ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8111157f-c4aa-4b1f-b830-bb5bb2e01a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d2b2b6-1999-4de2-9a26-c5c71cf2a825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f7b8fa-a949-4852-8dc6-8f1582115eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026fafe0-fcee-4c09-9a71-20fc3efe2fae",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b97df08-0ee7-4c7c-8b66-899a9fff6b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af889721-81b6-49a3-a1b6-65e87219a53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c4816b-c038-4a0a-ba1b-6f3f78592f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bbbcc15-7333-4f25-b923-73597e17c1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7199ea08-d8aa-4aa2-abc7-09ee9d22e381",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2f6706-c8f0-43de-8931-866c59b28acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aff5087-3cb4-4e28-bc39-948b144b0352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debc83e1-1ca2-4e2d-b2c6-f7e2f2f4de10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "656063de-feff-4a4f-89ef-bfcea7668623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf227e83-392d-44c5-8d77-6e8899d353dd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed43474b-f4b6-41f4-8061-ab3db52b33f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e753f2-0558-4c89-b776-bd4c949b9502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e11bc1-ac6b-4e80-9ddd-2c0666d5ce18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c97c4e-bfde-4777-989a-70e221803591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4124b5-940d-441a-a789-8a2f33f5eba3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07612847-d955-43d2-8b20-0244e7247f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b9e849-878d-4ee0-b158-24ddfb4ab238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adfeb71-1314-417a-97ff-e608e3351ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74292a07-5cd8-401c-8a2a-f4c724b8042d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88298474-b52b-49f3-8f43-731b81a42c1b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2f7e94-062a-41db-aeca-a2f73a0609d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329ae3b1-86cf-46d7-82bd-5bb921751da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0f6796-0e5a-4a1a-8a93-e03a21b5b703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a291e476-19bf-4de2-874f-c2b462e4cdd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7779d9eb-2f96-40ee-a846-e97857d11c6c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ae46a3-d176-4af4-9e81-7e55fb1fc32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603066ac-e00c-4fdb-bc0d-bc3be7e4c278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02e24c0-5080-4851-807d-b2b4e35c8574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "80558702-a5a8-4fc3-8b65-400c73b8cd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189536a7-1fa7-4ecc-8fe7-0dc873328fc7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f190f8d1-0fe0-42c2-9f58-0496f9ce0627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886bead0-6679-4fd7-b1e9-28bbdf1c803b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ccbe07-f82f-4d75-9d85-67cb7c5e704f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15aeb3a2-71ad-4827-8fb9-70bcdd526df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f3cd7f-d0df-469a-9d12-5092d96aca55",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055ccf70-e051-414f-91ee-2371465eb6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57698532-e4e9-42a7-8cc9-f2357cb2d159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6603052d-d3ad-4311-baf8-a37dd7b83888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61339924-85be-44f8-b78f-9444d9c8ddea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7dd067-ac1f-4ceb-9d5e-9c2f1c1ef9cb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09159cba-e2f8-4c99-bb26-942a9556b4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9232596a-f643-424b-83ae-d000af23aa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d4c40d-1cb4-4eb3-bbc0-d37c45279842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "851514d8-9a42-44bd-b71c-5cd6ceb91024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cf0de1-0da9-460a-968b-e27e5da7dce3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28170eaa-092e-419c-b28f-0b220017f777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950a24ee-a9d8-484a-83f9-4a74b9c0c346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271c591e-3376-413c-9eed-d39ad786cd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b9cf7fb5-5e3d-44f9-a9b5-8c77d127e330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1425c10e-b7ef-4260-b811-45005d913496",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0e8d88-d6c8-4272-94c9-232befeafb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378327f8-e5c1-4e6c-b371-abf67d7e1de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58c8a14-763f-49c9-a64d-c1a806c8cb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "646884f5-047c-4f1f-b945-db6b9f503857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c706ccf6-2024-4d7f-ad7a-070783336340",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e0c9fe-f8f0-4638-a745-c214cc04e093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0736bf3f-6e6b-4c5a-a622-4ca32c0f15f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b6297e-9bea-4c17-ba63-75fb2fe3a7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a07cb1-1d2b-4c85-843d-cd6e6bdc4c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428a1d49-2d6b-44f8-8433-da76207c3b34",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b664025-5aa2-4cae-8fd5-6035dc80883a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a60c043-b0c6-4c56-8d29-e85e334ab84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8d52ca-957a-4626-82f8-046ae6606e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "685e2dad-c2cf-41c6-a19d-b56b248047dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba8800f-dd6e-48dc-a7c1-4c0070886f91",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27389d17-ae50-4709-a5a1-5f97c96c0944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c731182-dc1a-4522-9cf5-a7db6faa20da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9491aec3-8e9c-4c31-897a-0740d87d2bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "93a0bc8a-c20f-431a-8d0a-31731b9dcf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c14a62-9857-4a4f-808e-8dd9c4395e32",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e81a094-ec2f-4d27-9670-9b7a466f2f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce552222-c340-4a9c-9117-a72c2214c3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81680737-f365-45e4-949d-6dde3b568c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e06d863-9769-4da1-a7a9-55d29f386f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833b06fa-1d55-42fb-8ff8-772b32375bc9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243ae775-ad06-4432-b1b2-67a30693a0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea791dda-f643-4a48-bb21-ed469cb36eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c24e56-6638-467d-bc3c-2a56ddd8f3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "023b8f85-b646-4450-aa7d-f90bdce6860a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06d820e-08e8-40e2-8336-e33cd0a3409f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c937e4-2329-4d6c-9abf-f574d180aa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc59b8fb-6882-4128-9939-0932cd21b858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a480825-eef9-4df7-8234-a0f728eeac77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0fff18-8c3b-46a3-9475-061486e85cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e4c984-16ff-40cc-8e77-2c242ab7703f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17568a10-f995-48d7-bf65-487bb53ee334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9105c1-a6a5-4ad0-83d1-29b6fa87d9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec31016-4e8d-4081-b20f-f43a0cce4bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a629957a-cf41-4b31-ae1c-d558645b23ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a37bac1-c2ce-4227-8c1a-f260cf2771cc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67af1415-909a-45fc-aef8-67e7316cd344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0a5af5-1672-48d0-93b3-2351612e176a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1075d12a-81e2-4deb-913e-2e50412e8036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0a4bd4-9c5a-44a3-980d-1b98b445d70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1c5903-1299-43e5-9777-e80f6d4afdf9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaf84f1-3b47-42b1-9b15-574655d0d326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63af25d2-b39d-4618-9b69-204d090b0041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bf386e-9471-44bf-8edc-4a8bae9f5fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f20f8340-8f7c-4411-8513-6fdcc19b6f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a016c3-6f98-4d56-b0c2-db496a932b49",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41624850-bc7b-4822-af15-8e1a4f2ef04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa12667e-65e9-4671-a07f-86a54f6a0541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c1f734-6000-4887-8a0c-f2996d2c7214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd83dbde-53df-4d86-97a3-6a7479dab346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc69ef0-0f94-40ad-b72b-f5c4da5cc0f6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d551287-ef86-4f70-b257-a845c54336e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38af14b-f663-4591-a796-856761e8e4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a66f59-2ccd-4b1e-8080-3766f8b84459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad81a7c-f338-4d85-8a5a-fbefd7f1c651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beae8452-242a-419b-91a2-467f1ba0944c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585aa463-cc3b-42e3-81cb-93cdd5b696ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6d3a92-9240-4fb9-8c47-891cfefb7a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ace2d3d-3a86-4041-87ee-c2b832fd0787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df9b58d4-dcc7-440b-9827-69563f5e9171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13eb2fa-75ba-4dcc-b7ea-c22822533edd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da11024c-0700-4058-a382-8e49732ad050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bbac8b-c203-4442-b101-9eeda5d1bec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c12279-6b40-4879-946c-fcc41332e1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c487a1d3-9755-4b1f-acf9-ffbf4399196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b67bee-b116-4ba7-b309-a70c3e25e729",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7fb864-ca0c-4da4-ba6f-31ccad141f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d35909-2bf3-4988-aa04-850a1b79d313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4587d2b5-7bf3-4dbd-96f1-d045aefc2f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2e07cc-930b-45ae-a97b-6180417487ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740427bc-1e11-4640-b593-a76580f8ab83",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a136f892-d246-4c0e-91c3-6a7f1981f911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ea99ed-4f06-4577-b805-33ae4099302a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1eac98d-d224-48ac-9acc-7907986a1563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d32a950-f828-4660-9857-f63d69cdef71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d101cb75-9a63-44fa-97a7-ee11d0a7b3a2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8b3055-50cd-474d-bb6c-6dc22d5da0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad32f05-0d83-48e6-a970-db8701a2253f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad393ec8-1a0f-4e44-bcae-e6936e47e119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c849685-2f74-4542-a7ad-676d1524fce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf4bc4b-082c-432b-bd91-0014fa1da3d6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c99fa6-09fa-4efd-8c03-1f1f9f5332cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939a8078-6a7e-4d29-8472-193c3a8481d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff232c3f-fa90-4d90-b950-a75704fdd606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4500bb-f672-4bb1-9538-c395934b4955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5f625f-35e2-4eda-972f-ed8ca8dee22e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456e09bb-251e-4659-a77f-a674c423dc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e933787e-1131-42d5-9b46-233c972fcd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fb4949-7c5b-48af-b15d-0e755b91d35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36f0fa6f-7783-4ef8-ac2b-0e8986d3cbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6131a0cb-486b-453c-89c9-b563bd289313",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9128ca5e-07c2-431b-9e73-5f52e797592a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e29999d-2714-4ba7-8640-b429b7c3ed84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cf4ebe-4030-490b-b937-5a1f71f7cb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25c78578-7ea4-4635-b957-e9c2b3cf73fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fea726f-6230-46cb-bc75-955246358a26",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab70d59-3163-4f3e-b946-8ec2b4bcba26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97df7b5-58cb-4a21-847f-7dc053e104a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b711a2-3172-4970-a974-aa7200153def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c438901-d946-4f77-8229-73863af0066e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ae4ffd-030a-46c0-9ba8-fbba5b0b721b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f739f7d6-d270-43be-a923-08acdb4f4875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884a0be0-a041-424f-8b5d-7892b2230ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd55cca-7c25-4be0-876e-d58b95508abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86939fb9-5957-477a-b137-ad567639bd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea0252a-bf86-4d0e-ad91-5e5d8ec9de4a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309c0489-759a-4185-ae2f-4ddea9f01dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8af5f25-75e0-4d2d-8e76-4127fc5686c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784a6005-6852-4cc3-9c47-479d160d92ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faf26a83-585c-44df-9697-24f7a79fc53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b280c377-980a-475f-8c7f-2f53da9b42ec",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f506a326-a89d-493d-9b8e-382b7e5545b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d334b79-772b-4f4a-926a-a86be97c065a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ae17f6-6476-49fe-b904-244fe4c65888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ba0a4b-9760-4c85-9a8a-dc2c01d24c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb0c00a-4b77-4076-b2be-80c470638a11",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1062520b-7f06-4689-a1e0-ad9ae4b38094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c84082-6f32-4965-9d89-4ceca858f31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a548796d-0363-45ae-84b5-8445476b943f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b201f79-3d7c-4051-9820-a15554569865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168ae75a-2f7e-40cf-a29b-c06241401b73",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af64a16-e2a0-437e-a6a1-13e4fa0d48d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b350099-e3aa-4546-9d5a-cdd84211a576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08729e8-d1e3-403f-8531-9884f932852e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "233a7d65-7211-42fa-9a21-474743d3b6fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eae219f7-417d-41be-bc1d-eef2722b08e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef645e39-f2b9-4d31-be47-71b921d12c1c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8f0306-a4af-42da-830a-706e0e6a290e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9709b3-7c53-4563-91a0-49e12043c65c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d55aa2-751b-4ba3-b587-56c231196dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1cedab4-991e-48da-a0bd-9b4477f97e0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d53e93f6-8eaf-4081-9925-ac8f8eb14c49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4552bd47-6b4b-4b11-a20a-76bb209050d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fb2f85f-98f9-4b38-85a3-a45c9d0552ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8ecc744-16a0-4ff4-ab24-c13ab13af17f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c6d9100-35f6-41ca-a1d1-f9475a702cc8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fc208be5-c23c-487a-8076-43b84b14c69a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34ae6a52-51eb-4e93-be48-9a10914420ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bece282-0d88-44e0-8273-32150b18ca16"
            }
          }
        ]
      },
      {
        "id": "0f6c49d8-4fde-4024-906a-77bcba1f1a8c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "deefcb04-68a0-4c4f-a3d8-fed79c2750f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0413ccd6-2b89-4b45-be48-afbd8b912550",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ee878f8-d5e6-4dde-8d53-4a0a84646465",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9339386e-a987-46c1-97a6-691b007011b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431dda93-845a-493e-9306-a46f474d3982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6521bd1-5a68-4ee1-bae2-137bc7f0d7c7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cde006-8bf1-4b45-853a-3c62e2acbe0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb97582-ecaf-4c10-b8df-da213d661abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dd0fef-15ae-4c13-9b37-a8bda7d26658",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7fc9ce-5d96-4926-b6c1-45cca61015a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd0b039-a3ff-49c8-b290-1f137832edc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b8384e-2753-4cac-9079-9ccf31a42585",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470a65fd-5362-4b3f-acbb-e8b75a5ca564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8b9ac4-0ca0-4090-a5f2-fe08e0c478de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c740142f-af07-41cf-a454-8fc64e415c34",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a314ba-afff-4777-b382-e0b4a40cc693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a0967a-13dd-4d4a-bdcd-66ecc4f01091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12518b7-13a4-4697-84e8-5c8af6787f4e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc81ffa-7eaf-4c2d-80ec-b365bb9606ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38474c83-2e67-4ad0-a26f-485a0e75a236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4f6af8-3007-4831-9a1f-94d0c2207a18",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47f166c-2eae-4b68-ae6b-6728837c1381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ebc53c-a906-491f-be34-932322952a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fb6851-8b44-41cb-bb47-b0ef8e657910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6761e759-4566-476d-aa9f-62e31b776eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744b8381-e189-46f6-b5b8-0a9ffdcf0a69",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b7d655-bccd-4ce6-bff7-4f6deae64752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ced2664-8d1c-4d72-9c80-18a081b07aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3889e159-e87b-45df-bef1-7ec0a1df89d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bec4a5c-dfb7-4400-b8b9-308f3fcd061c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25180c66-b645-43cf-89ee-f2192ad3148b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edc1bc7-c8d0-4d01-8eff-9cb827af9367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e78898-dbb2-4cda-9020-f93c35f4d313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "029d7618-306a-47fb-a64b-ba14f440af5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5fd0e5-fbd6-484f-80a6-6eea3539ccfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0b87ac-af86-4726-a790-9022976df9c4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc9a079-46ac-4dc6-8898-581b587e772e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ea81281-01e1-4f68-a7c2-d97c8cea2a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fca4c4-1116-4bb0-b56d-cd224d8efe99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1618588-2e73-451b-9e43-c5326f9ea157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eaa0f17-afe6-48c9-9222-b694585181a7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bc3ab5-0ce2-494d-b6eb-08073c691690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee2177c-6256-495b-beb1-917f32a1cc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc0e176-ad51-4db0-9531-4ed465fd7e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34f30e7-7724-4aad-a298-1f9819aca38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f0d73c-2968-4081-a637-a680e323040b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6274015e-a157-425c-bd1c-b2c345cac929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00077d1d-ebca-48b8-95ae-4c2a83ae21f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c78787-61a7-462b-a9cd-4ccee2c28a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62e58fc-c316-4abb-8fbc-bd60245341f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80cf955-3dd8-4e2e-97c8-fcc0571eb42e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1594620-1529-444e-8bc1-54a3419c48f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f026cea2-d302-48ae-a515-4ea540155b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "affffccd-4f7f-4f54-aef9-fa41f3c0824e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f97cea-e4b7-4458-ae17-a0a177e0d513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c828e0-c7ba-4cc3-b651-7c2a57bae2aa",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f691839-4334-4ce2-a48d-c6c3e9885879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39fbb3dc-87e8-4c47-8c27-abc9ad69c843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6eb3018-a3aa-4706-a8ef-5bf45848d481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021675e2-0cbe-47f7-9985-1c352898d24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41c4aeb-fea1-47fd-a1f0-3a7b4be8e925",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a7f4a0-02f2-448f-9924-7417c3211014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b4f8c21-facd-4872-9656-6c8bc9bcd7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6599f6-36ac-4d9e-b382-bfeacd47a072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42612559-3625-4901-85a1-03438b08cf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83849cb-7a47-46cc-9917-b94b1df6f112",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4215b435-d33c-41e3-8c0f-b5222b40cbe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1673df64-3075-4d2c-acf3-9c5a103d3da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e78b72-9070-4abe-ba40-55145e3cd741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8f5202-b885-4dd3-9cb9-bdad426fde31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5004a2-c091-4158-b38b-0e1fbe432f78",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367651c1-e90f-419a-b712-7af4f992b9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbf78ed-04cf-4cc0-ab1e-7f0998bf605c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454eb237-d935-44d5-989a-1c71dd166cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b6e089-df8c-471f-b01b-3e027c908fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebd2a73-9bf7-4200-ade8-a2d294ee2255",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc8dbc6-aaea-47e2-8c47-7f36cc7720a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22caaf2-5101-4022-b15b-2aa1a226817c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a02791-38b2-43e3-bf87-672de875f314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb88333-05c9-40d7-a964-6ff035a1fc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3460918f-4dba-4099-9664-775c1ba004b4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa7683b-8a32-4a6b-ae5c-f845fee7889d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15780b16-d26f-499f-a464-c64724428c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58911c9c-aab3-4555-8e00-86406ffddbbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac42327-db92-42f5-914b-3c6c9b110d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1895f79-e8eb-4124-9eb0-49d426014409",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4165e190-6bb9-490f-864c-81a7963464f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e558fcf-fd07-4d33-981f-1a8fdd93437c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d3a0e7-17ae-4120-9e2e-0722e613b33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfb40d3-e2b3-4e63-88aa-3dab01344085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679e2cc3-1ad3-401d-86a1-ca9d5ceb0ccd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b34e29c-a44d-4135-bd7d-ba741ceec6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d3bd49-08d0-4a6f-8e03-067ff245d129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2130bdc-3c40-4d4e-b00e-654e69e59d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c7777b-d6bb-4159-be8a-8d00a2e63e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05f7d11-b917-4025-ae84-4170105a8f7c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3404c8-0ffc-4474-9e9d-1b453f44d6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725be61a-6f39-4b17-8969-fc361f7711a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc26b606-015d-49cf-a13f-80f6b158def2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7968f6b-cd8a-41a7-a706-5129653b3df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32965ead-d149-4907-aeee-a67127046870",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30474582-dc02-4675-845a-55dd999b6d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc5990d-9905-434b-82c3-3b0b2c46b585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162538be-b4cd-4e44-bdd4-175717b982a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cd7959-db8f-4b92-af50-70d531f78e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ea920d-6556-41a7-91c3-e85d2a621e1b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b686ba65-6378-4f18-a316-657cb6ad8da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059761c7-4818-4e49-81d0-c5643607e8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030d5917-464b-4c0e-a3f3-935bd1cce52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af864974-5d9c-47ac-bdb0-dce6da72970a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8676e367-0712-4280-b71a-5bbe2be273a2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300cbccd-c18c-4976-b047-d601dd1784be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddf5733c-6c2c-4f10-8f1d-6512f5ee1cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3ec6d9-0248-4c8e-af5c-5a0c1404b99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c924d8-687f-44fc-be07-3a6d47aebffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b52af4d-cc62-4255-951b-b7e5379ca5ef",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a1bbae-8022-4f5f-851a-2833f20e3e94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ec82f7-713e-4e41-a757-40e1917cdda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f50996c-177a-407e-816e-0491fbf65f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd763a2-6e4a-4672-9f40-051d9631cdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fba68b-bb55-4351-ae40-86f45102e525",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0674d73c-2744-4209-9d3b-6ce78ed8c85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1460d59-06aa-478b-bd76-01ce6c735796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73652e1b-c56a-4c6d-84e9-d0051db26579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23dba8e9-32c3-458d-8c1e-f466a799f135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc78839d-6849-494d-aa81-708ce4e254f1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccea272-d2e2-413c-a95b-00ed62daf714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4690d1-b27d-4c62-a802-a9d0ecbcbae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cd8a9f-e479-4cb4-ab7b-6f2ae51b2e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f91ca5e-7bf4-4cc4-910d-154e9b7e1555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adf47ba-8eb7-4d16-94a5-28ff367313c3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8200516-aeb3-41df-92f2-12e3ee87d915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75303525-acd1-4722-8925-b595e4a94504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766340fc-b9a2-44c6-9043-64f2f1ee612f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0dd45c5-e086-4b6b-9e32-73b982896e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6160b0c-cc66-4e4e-8e36-92d82d128ab0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd71883d-ba59-4889-88fc-123478d6add1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "782f6009-0049-485c-b3a7-bc42d8173723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18070f84-6c77-41c9-af39-3e6510e85346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03f274e-23ab-4a6e-810c-526b72dc8145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d47cb1-6da4-4e2b-87ca-6452780c14ab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66176968-265a-46fc-a6b2-b8bbf2551a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03734d1e-ee67-4ce6-b662-a2b81cb47d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c35b93c-889c-4d78-afc7-ddf095f80628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3c24a8-69bc-43c6-b54f-7fd51455705f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e78bb4f-5348-4912-92de-e4c1586f8b10",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f39c40-e789-40d3-b6d4-9c7a7910ca5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c3a4331-6023-4407-b4a9-967c48a822e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1607c0c1-7704-4009-a28f-45720003707d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379246bc-9397-46b8-a07c-5db84daa76f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63b7608-2919-46aa-9cf0-1e430ebbb485",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc60512e-adb9-4f0e-befe-15784e296dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6083eb21-0dce-4c56-8691-833cbc4eebbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154e29e0-0f32-4274-a22c-c63d0a1267aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54c9987-fc43-4888-9a55-dced8378130f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c530036b-7d57-40d6-bbc8-da3cce2b49c4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c05de4-914d-4e34-9531-fa2e27cb1fdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d690fa76-7dfb-4d3e-8f06-70a4a6c29c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337e4b4e-d947-4041-8d98-4eb7c4350203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93849b92-9598-42b8-a377-72687125bba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94e702e-3ac6-47de-916c-d3527197d750",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc912d83-12ea-4096-ad6a-afc1805c432d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d095033-1834-4b5e-a6a6-02fa024bec18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b5b495-db5b-4c80-942a-be9e638acd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1947fc3e-af2d-4c45-96ef-ef8ecf4dd040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f26dc50-5b4b-4f39-8233-4f4a2d182500",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcb4f22-89df-4b8e-bdab-08450c3c6a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1654f865-0d96-4af4-97ea-9233d1e044bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975ce51e-e084-4f67-9597-6617144129b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ec0fb9-ea74-498f-93c5-33167933ae12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0029c152-8a5a-4002-8c58-f5bba591cfd9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2ea9ca-ce96-419b-bf89-d1010d6fe360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658e339b-83eb-473c-ba25-2c893e22ac1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb000950-a2c4-4e1e-8716-142768a8480a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e1baf0-74c4-4eff-9f76-83bc248e5b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6935864e-4bcd-455e-8f0e-ad099c909cbb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc38537b-9c33-4802-9005-63446c778afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549dfae0-c9d7-4d59-918e-70d03873467d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5c25b9-da2c-4c7f-9d2f-2b2b69626344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7746ed45-245e-49c6-8988-6c2f41626ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af0c592-e4d6-4731-aa72-f6ef72f8c2f1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2216bd58-b336-4498-be0c-4e1bb2f98f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0edb43e-8007-41d6-a3c7-adaa6fdea60c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f097af0-1641-48e1-aa20-58d694a15b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98530e57-1b2e-4eeb-9099-1a276a2255ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30725f51-10bd-43ab-8567-b97e00265368",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e43330-1e02-42e8-9a83-5e5e985a8432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69121233-8b14-4f83-a260-0fae1cbf8f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d657d0e-186e-444b-977f-81030d51fac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440af645-9a11-4f08-b5be-47597bb3d86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c8681f-9ec3-4a7d-8c9d-375910fab7ed",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95542672-b7b3-4cb9-a5bc-440b9407761e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67abaf7f-8ffe-44f3-8b5f-ed58cfbc3ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190648b0-b10e-48df-a972-0f0be8d3b59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684f7a7d-d791-4cc8-ba98-f0746707bc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325fa743-6606-4d8c-a121-06d1245ee768",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b046c74-5a20-4e8c-accc-b00f6a581297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5adc0872-1cd1-405e-b304-f930941893da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e31c3cb-b3d2-475d-9903-5491254e78e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcad9d0a-658c-43fb-999f-7abc319280cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17149460-2727-43c7-b296-912b6db856e0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c181d2ee-435f-4a3c-862b-a11af09c7096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b80d3ce-b7bd-4699-b6e7-12f407feb44c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e542e7a-ff9e-4a27-a149-7ee25c6bcfee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e006c196-22e5-4b14-9654-1ba267e245d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e195af8-dcce-4e8b-b67c-8a1a833023ee",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23597b6a-3ef3-4867-8148-10c5aaab9688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd7d69a-a870-46d7-817d-cba7686a59e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e50827-4c0f-4cfc-80cb-5f689b7c967f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2e3979-de7e-450c-877b-d1e32b28aacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cd9e08-cd2c-4cd1-bce9-fe6b8bc672f4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8277069b-bd4f-40c6-8cae-9bc8f72529a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b6dc58-b3d0-45f6-ad0f-a8c3de86ad7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1c5d32-af3e-4f2b-8f23-79628aa5df37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23b08cb-7bc8-40ae-97ea-894c46fc2dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c5872d-8b79-44a8-a069-e4a14b96ebf6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bbc29c-fefb-4d04-9049-c065725583cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c240261-2746-4ec4-a17b-8bb178c8faa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf774d1-00cc-4a00-b4ea-c133f6f2cf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f488961-ba93-45e1-9f26-ad0cd0da0f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911a19bf-5400-4047-9260-2acff0aeb55b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce74af27-960b-444f-84f9-ef4e60e933a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac35e7a7-2faa-4e75-a87f-f01992278da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e9bfa5-b639-4f84-99d3-2c04be4ee77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19415685-bcb6-4e95-92c8-b294d5edd9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77acbd63-3fb4-4d62-96b2-b38629da1c62",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a43e42f-e300-4071-a4ea-34aae8863542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca84932-4232-4e96-9fee-43149655644e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc9981b-59a8-4aeb-bcfd-0d9fa4ba7d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737ac6bd-3bda-433c-8e04-c0636284147c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0204333a-add7-4fcd-9abe-5f218a818115",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8499eb-b381-45f4-838a-b45e65b17cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf1f959-a1cc-43b5-bf43-2e79a770a0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9c864e-49b7-411f-a453-0bf857e60da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea08a28-e0b7-4e8c-9008-1190d2ce5adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053941e5-1a95-4d35-acf4-31b659dce83b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e67397-231d-4261-8087-41a13779952c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770acab7-2a57-47d3-99b1-811373f002e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8830e9-26d0-4cc9-acfc-983fce15db81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b34a93-6d9e-4047-86da-ca0f60c21f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2779c95f-b851-434d-b8fb-08983848e4af",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c1e107-6bba-4a98-b647-4469e7dfe969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d04f91-dfe2-4b35-8766-5457b5e13e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92a04ac-5917-402f-8e21-d1840dcd0daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6db828-b1fc-4d77-bba3-a973c0efd501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c96f018-d416-4143-839e-7c07b3b9dee9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c55189-7792-4a36-a992-0b09898ea727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0264d4-9216-4684-ac3c-d26af27ed3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bda01e5-179b-4cff-8c99-6f08f2bbfa96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d224af0-208d-41e2-9e2e-281c8ef76dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d141965-c015-40da-8946-1b690dd35365",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a85e8d-b025-4054-8f8d-e464d539fa1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0b24ad-614c-47d2-b957-00b4c76f1749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3410ee-eca0-4c47-941c-b7cdb93d6219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc29951-6108-4e8c-8b33-effc4caef876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf556ccf-0d71-4b26-87de-417e13862255",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf43d18-3ca7-479a-9b86-234e27767347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e165bf34-85cb-469a-a23b-34cec2d94a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cec2ae-4230-4bd7-a609-c2c2de72356d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61365388-d68a-4c15-b105-ffbcb9003c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297bcb9e-07e1-445b-a2fd-77288524523f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ffd1ac-0a2f-494a-b935-d3f57d91f3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfd878b-dc64-4dea-8ef0-eaeffa10c4f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e51141-d33a-4b4e-88bc-71c111ce5019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5673293-8bfa-469e-aaad-0f7ed6296b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8b3bf4-62ea-4b99-9ad7-d99572b80ef8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389243bd-b844-4e46-8022-6e392aacd662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacb4a81-eed7-451c-a58b-dda1ee07509c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a76bb98-5dd2-4a24-a487-331e03423d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b67d6db-4fa1-48b7-8cbe-255424445257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34832675-6fc1-4c57-b57d-13b6246d9ca5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01f1713-4bdf-493e-a34c-b9d86892d687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a71a3d1-3d41-47a9-a9a7-a3a3a0cc0fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327e52ec-00f7-4518-9dbf-9ffb8a22fabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be431993-3c8b-4d88-b665-881c0e9164a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8542934-faca-4a03-9763-5812e6f1615c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af69a1c3-02e1-4cad-a1f0-045d09eed058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2f4b0e-1019-4b5b-ac63-a04821063863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360b3d14-4f47-4ee8-b57e-d72e3f4ef4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec630d5-c003-4337-ae64-6d7367f400ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5a154e-03db-4da2-bb30-bc3548e7f701",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d900a08-10db-4eb9-b2c9-b089c41ef9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3971931-b6a5-4332-8a24-815370c2050d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6e7611-38e4-4088-b42a-24b294c3d57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eada229-6dfd-4ea2-ae35-fbbf0219ea8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d3daa5-9028-4587-b873-20e85e257922",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fb13be-4c30-4155-8f1d-ed073a893502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf4b5b2-b1cf-48ce-beb0-00b3493c16ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b05fad-006a-4c6e-b489-c4aa20d70797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c14af1d-c95c-4096-8671-23d5b0fe0ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953b6677-c7a6-40cc-95ed-38dc33423fe9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f014ca-bbae-4546-a29b-915f1dcd0243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3055b92-3cdf-44be-8d66-cd46d521a9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b273479f-e49d-4261-9273-c59c76697939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42aed0e-472e-4dee-a5c9-001a2f8a99f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ec2e7b-2def-412e-bc50-dc7ad0bed5bb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18be950-32a5-45f4-a878-0bc910f809fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f7636a-7ea4-4736-b41e-f2d02af87863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665841bc-3d1e-4260-b473-e862202e4907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80a5226-7b5c-4a97-a10c-222ab128bd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e01418-9ef2-4d81-8cd8-3f03135799f4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d609ca4-38b8-4985-aaa3-4fa9a5ebc06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c145ccf-bfd3-4cea-b6a6-a7b5395a162f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80c7e94-f634-49c6-a48c-b34cd0271979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a30a55-0b54-43ca-828b-c4eec82a56f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8131d6-6f07-4db0-a41b-47611c128263",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ced139-4e33-4f2e-9d52-0a5d9ba80818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d912a27-3599-4ff0-b42c-affb1a14ac0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf15e4c-e737-46e0-82ac-792af09b31e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1e5af0-be25-4db7-b1cf-96b009590eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d4a1e7-39bd-4401-9e4a-60fb45d14336",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89297662-b82c-49dc-b3f3-4281fc2c2a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2aa27cf-e5c2-47e2-b94d-703db6f35d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16fb703-7ebd-4bd8-8b38-1193a0ee032f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79e0a73-dbf6-402c-9a29-0c38d0bb52e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7af1eae-8bec-4bd3-8f6d-d68b8d484f05",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a5cf21-e7a1-4e5e-a0c6-4038f051cfd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b0d442-65db-41db-a289-f8e8edb3b2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae70f39-41a0-4c14-b5b2-86e5062b9107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5501b274-a58c-42e1-9b34-ecd4aaf44053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f55c81-bf1c-449c-ba93-ea47df314047",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816be7b4-1b39-4fb9-9cad-20adf071eaea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c6bb8a8-3dcc-424a-8bd2-f356a68ccfa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc29397-b9c1-4aa4-8a75-c05922f2efd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91ddf75-3ca7-4c53-a1d6-6a174cd3e4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d84cdc8-5e4d-4d43-9a75-b4b7eecdc8be",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11695fc-bfa2-409b-b337-a9d3158e2927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aac03949-2b8d-477f-9daa-bac23aca98f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7a701d-2072-4955-a466-462720ed78d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3f7289-dadf-4a48-81b2-d2317e97ab87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded44501-b285-4213-97e6-06a8c05c367a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0b07eb-5659-4498-84b3-7f9e20376835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26595c0c-ea80-4b04-88a1-ffc0cb3d8097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6151377-fa08-4993-ac7f-43e3fff84f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67dde395-370b-4c1e-b58c-9ad632f948c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ea0fc2-72a9-4078-bf04-0e3214d9b2ee",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c193d6-4f7b-47a9-84f8-e82770cc656d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d1ff12b-ff98-4fdc-9939-904256c4ce8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8192125a-57ca-4f30-a572-9162747532ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2dee63b-c69b-4e77-80f0-1bb590cdc518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eba42ba-b74c-4c03-a301-399809e85caf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1921e8-f420-4396-a8a9-fc10854bda6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b8c83c-91d2-42df-86d6-e21b1aabfd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee4ace0-bfff-4cfa-aa44-690303045b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491f2033-6aa7-4ef6-8eed-fb62889de511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7184251b-0483-41a7-b5bf-f4dff6f12402",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748b6954-f2e8-4901-b69d-de15091cc95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e221a0-a53b-4614-8286-9383c7a17521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a493d761-9887-463c-bb35-10fcfa3c19c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ff2226-3a60-4152-8e9f-40e4f3784075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92c2355-7a25-4479-8537-4a71f464087f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8fc09e-19b8-4d89-8174-4b4c3b9bc789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8beecdf9-67dc-48f1-8a45-84b2fe6cec75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3947e489-a33a-4b97-bcdb-096c0276b297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c9e079-8ae4-4cb2-bde8-5ac58e01fe1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93185e87-24fb-4a4d-b86b-28f3411aae10",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bbec49-22d0-46cb-be6b-170643c1c974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b47559b1-b193-4612-a256-b91eb3e8b11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2721fe6a-3354-4eea-a806-11aa336e385a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51bac6d-6c4d-44a5-8b61-dbfe1b3e159a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888e70a7-3626-466a-822b-56ef349623ee",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b9c883-c12e-4ba0-9f3a-b418c9dd2aaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a03a429-bda6-4f8f-94b0-4891266b04ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875c05c5-5e5a-4fcd-91a1-251775c36a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fcadf9-f530-4ee6-8c12-7122ef176323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c10dcee-0897-4d49-8646-caa3e999a217",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d432ff9-5c5b-482c-b0b8-cc9394101630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b45a9fc-6d85-446c-9f91-27347bd55b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9470a7-16b3-4b6e-9019-7aa1154c7046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e47afd-0728-4e59-b89c-9116c2bcf9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4639b817-3321-4866-9aa6-dac3eccdaed1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fdb6bf-2804-4d7f-9b0d-8df58aadf8ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca77f40-4784-4312-bfb2-720b25888f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0376dc46-cbfc-42b9-b576-fdab49d359d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e983afd-e400-4833-989d-e8cf44713ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6131fd7-3747-4607-8425-f50fa70d869a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4814b3d-ad95-4cf8-a246-26b233e163a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd09db36-aa0f-4e9d-b235-946c70860aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e90415-f14d-4fd8-9e05-c38037ad5203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6068598-0203-4092-ba68-f46a6cc654b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe266dc-8d33-4645-ad8d-b9bb8e0c904d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693ad313-b226-4690-9cca-6bc2d0e28d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1104e19f-abeb-44ba-a60c-50c7fdeb4c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efc2cde-a107-4a33-81bc-48f8a4dfa93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52cee2d-5fd0-47a9-9fc1-379a646d90c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d04ead-9103-4106-a134-1121685ef554",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7cae63-29d6-417e-8a8e-9dae42666cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62335e27-3854-4b2f-87df-3f04f2d94313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312d8da2-52b2-460e-a4e0-e8763a042bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe26070-332c-439c-9099-77989d239f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc048039-198e-4fbc-9569-210419ec7a2e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50c7422-5a07-41bf-b239-36685a232104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f970d2-9aa0-4fa6-bddc-32aed8436409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57c2000-f839-4ad9-a3f3-fc56a56acd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f162e16b-fdfa-475b-a59b-a403cc2ea3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8c2292-253b-44d4-ac6a-90777b15a077",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98b6da9-465a-4ed3-a28b-b22eca8f06c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7c3082-99e4-44e2-8a7a-f5c6026e645f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cf3d69-6a7b-4dce-b3a7-5c2cf583ff4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255fcf47-d48f-41c7-823a-c34e8fd1d474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1a747b-5bc6-4d63-903e-e06410359a14",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17cd34a-6078-4f5a-97b6-d26a37e24115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f1e244-f7eb-400b-b98c-cb1ce5af3101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6b7fa5-c9fe-4965-88d9-877fca1aef16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0e6e4c-3003-4e01-942d-981045429480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbe02ab-97a5-47a2-87dc-37b664ce8891",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec230ed-3450-4a7f-a88b-256656610fa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed35faa8-1139-4915-b4ec-e53949f02e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1466e9fc-78b5-4d6a-ac2b-872ee875a5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31279242-7c68-4c17-a611-9bc457f07767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01c20d2-59c7-4260-bbf2-631fd1b8c9bc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e618cf1d-018b-4806-b044-c35dad29e2d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e79eed4d-478a-45ca-a1c0-9394099f6396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c756d3f2-468f-4258-b9b1-f0a0944dfbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65241f89-c878-43bd-82b6-efacf9818aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e857601a-5d9f-402f-a8fc-123c7920e190",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a784f8c3-4f5a-49db-bed3-18b638b199e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8846541d-eafa-4b43-9d8b-59dc51bce193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cb89e9-e81b-4823-8326-ecc51417c9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a422c0b-3643-4f62-97df-1fed0ae193f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081b2680-d93a-440e-b004-6f5de20e9952",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c714a92-361c-49d0-b524-e8a88a25f02b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "700b9776-1671-4e8d-b37f-6239ca25fcda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b966e01-97c6-433c-9ce3-8bcd06fc7365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04b0fb2-8c66-41f6-b908-567bc03a937c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5dbe9c-4e69-461e-916f-86de98723159",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d086a130-d713-4d72-bfcc-d05f42e0c1b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31894902-e38c-4899-a0cf-881dda2cb295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f94913-00a0-4444-a70e-86dc9292ba6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af81b2d-e5fd-45c4-a730-91f0bdd842a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acad2410-ef80-4fc7-958e-15296eba4fe7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b8a38f-2718-48ff-ae7b-dd5859adb0bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "443a43fe-d06e-4747-86ca-552d6358eb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8be311d-fb73-4cb3-a589-34f4045c724d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04954a6d-2c07-4783-a263-0e893807130b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4422002d-3ff5-47ce-ada2-c4c953f1d695",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bad7680-55b9-4254-bca4-0b92dc43a051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f550a13-96b3-47d5-8b1e-73ed82556ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18bbabd-f3f5-48b2-b1a2-dc9cd614800e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e21836-bb8b-426d-8828-eac8f88dc379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6213281e-1797-4d85-8870-a7771287bbed",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed3841d-a100-435f-aee0-ab53edb38d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9b6a259-51b3-434b-b109-a944c35df26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7adba91-0696-49d1-bef6-ad4673eb7c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb36fa07-d766-4b2e-a42f-4d82b2c6fc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c34de55-1832-4688-9a16-d813e1d028ef",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200c5bd5-f025-4d5a-aeec-0e48421184cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bacae45d-c4de-4afa-99b3-31625fd0ec6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b26b53-f97b-464d-a46b-e10c7c327f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544a223a-daba-482c-8707-d286f7369332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e12d5b-942c-4889-8396-c492255476d5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9069d912-0b71-45e1-9db1-b9fc9ca941e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c229009e-af2a-45c9-9afa-1c206bb6720a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6330f4c3-3d81-4a87-b354-cd6a73882ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44d8505-ff0e-4a19-9518-6d7cb861d9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554e558a-6510-4693-99ab-52639c838c8d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9d0955-74aa-4c5b-9e1d-fe7130d5b527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ecce882-f8fb-4811-b010-d48b69d1d597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf074155-8065-4ed4-8a85-682d657f76f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4475c8ca-e9d6-4165-adea-aa17eeeccf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4946f1-0444-4a7c-9213-9e2e92577075",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bd2b22-ff53-451e-b397-ff1ba35e53e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d53f0325-0468-421d-8a69-7505759b5e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d10758b-fb13-4dbe-ae79-3f1f7f3ab80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3713cdab-7bd4-4472-957e-274b6a08731c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbd512a-3565-4a6e-846f-14cf43eb3e3d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fa45da-65a9-499b-9065-7de723700a14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "917833ca-e36c-4d01-b85c-2ab0412039c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848a8c82-d727-4b5a-912f-39a654e37bdb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f284a68-6aac-40cc-b48f-b709ecf893e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c03887-2e64-41bf-8b7d-99339ca076a9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb4e0eb-4566-45a9-a252-9d2876017a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae0cca5a-8b2c-4d43-ad0d-47744c74c02e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33522968-c8f8-4b0b-8851-dd636a9af30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63953fb-eead-4ce6-84a8-8ab691dc2835"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e62d7fae-6001-413a-85e8-7f6af5cb15de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "243071e5-c309-45e9-9935-7d0eda7566fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35ff7aee-6741-4ad9-a321-d939a3de6ca2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73aefb8a-1ee4-4e5b-84df-3d30a9f25d6c"
                    }
                  }
                ]
              },
              {
                "id": "6b155d7e-f143-4e22-b007-29cbb24e4814",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76efd9e7-d2a9-403a-aec2-15ed0e2b96cd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631466db-9875-4001-8b9f-d1b3f9f1ecf2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "570a2bd5-f36c-46d6-b739-035d65d7bf47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613a318a-56b4-4ca5-aa4b-522756d4180b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6d81af7-47bb-4797-9e65-75e22ca0cd71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40b474c8-cac0-425c-9322-761f0ab73d54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97cc7657-70a8-42ab-9d0a-f4c2fdb319c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0a16c3f-ee83-4c86-a328-11e8f37daffc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f84be10-3875-403c-9662-384587d8e69e"
                    }
                  }
                ]
              },
              {
                "id": "86f6f18d-0ae6-4076-b7da-6c8332b25902",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "18e67d92-c81f-4ce0-b884-834d6415d8fe",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb8c98c-4e56-47a2-b5b5-42b87956742b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5547e35f-a914-4e0d-af3d-54089b8c5736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b0261f-0e2c-4443-b640-0c5e9777ab9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5903b5-0f02-4a4e-9416-fb29b3cfb05b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "da239b37-a3eb-4724-b294-7b859aef63ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e0e38fd-a575-4b90-98fa-962cb23bd066",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce5bc9a8-e7bb-49e3-8dd9-40d8c81eac97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d5b3bc92-46bb-4f21-bbdc-de50668dd239"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f817240b-0f6b-4fe6-b91b-fd6d0eb802d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e888ecc-2efb-443c-b14f-68b3736ac9a6"
                    }
                  }
                ]
              },
              {
                "id": "758fead8-3fe1-473d-b3db-94d3805da3c1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbe2ceab-b349-4cb9-b7cd-ab4248138e50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "82967bca-48ba-4fcc-bc8f-0d8035ee0474"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b528e7b-68a8-45af-a4d4-6c31a43940f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "709830ce-f670-4f3e-a550-b1f5575c877b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0832c527-3ef6-4076-851f-e1afde8a5218",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ebd06114-6ccd-4d55-91ec-538ad9ef49a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bb1f217-4953-49ce-807a-d5e2240fb638",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f9b774e-9bb1-4ab8-b73e-3fb67bc9c823"
            }
          }
        ]
      },
      {
        "id": "9056d445-a77e-494e-ae76-6ea0418a97ae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ce167ee4-c790-480d-8da0-7a89b7cd8b2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6587e71-a915-4c18-a040-7d456d6bff82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3aeb1a21-5dce-4ade-b206-d90be5049119",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a0a029-fc16-4a01-b989-bbf34fafafc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bccdfc8f-09ec-41b1-8c11-9fc11439bb55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b3b16d-1fd8-4aaf-9229-85c40f3c4be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e2e484e-3cfe-4a6b-8fd1-6b657ce2f4c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ae0135e-e8b9-454a-b20c-042639176422",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cf8e560-4827-437c-9664-535ceab1a641"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85331d4b-d7fe-457c-b3e2-3bfe0550c82d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd7618b9-bf5d-4a0f-9847-a4562065117c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d207835-bc9a-406b-b1bf-6ceda25c5f7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1ddc6968-cd88-413d-8664-45aae09fa9aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96f50ee4-90c1-40c8-b343-2fc9df7efc1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7fd22f4-4250-4069-86d7-e41c6ff1348c"
            }
          }
        ]
      },
      {
        "id": "3d422199-b6df-4ed7-a612-3e7ab4309e2e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0ce82519-a410-45b6-856c-b191f053c9db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1a36dd4-d918-4c83-b83f-318730bdb0cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef188631-27a3-4623-b923-23953587e85e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa76124-c101-4f8e-be86-2fcfb93e628c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "139bdbe4-1a9c-4564-9485-ebfca4b89eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e2b66f-c8c5-4836-b7d0-3d578971982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a009e790-fbd5-443b-a78a-aaacae32c125"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25895a9c-1006-46ed-9eec-a9ef8b7afb68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0915f41-09d0-4c8f-9fe2-9fffc9a5f9ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "272682dd-d774-4f26-8c74-c56cd91bf65e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78c81ad7-37cf-403c-953c-18db797b9b0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa948ab4-bfc1-496e-bb9f-0dc853f2abf4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "26de1b5f-5642-49f2-9f99-923ffb9121f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e55dd70d-8c30-4ef8-9012-64d731bc26f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5560e1e8-6799-459f-a7b0-fa75f7d8bfba"
            }
          }
        ]
      },
      {
        "id": "99e33ec5-a51e-4378-b330-1e8d12df78d3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a81d4238-b942-40a6-a297-7c1de62b62e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79280d8a-526f-421d-aa52-09cabb9ea30d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cffdaae9-35f7-4d3a-8474-a52df6eefbd5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd92f76-b94a-4d85-a750-7b716f16e1fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "563b5679-d4b2-4f0c-a6ef-f94cd241dd1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22334e9e-46a7-4d19-8ec3-bb2df7eb0281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b738aaa8-21be-4bab-89ad-4b19b6228468"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ddae369-d0f8-4753-850c-f3bbf1e8c0bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "386bf3a4-3fa1-40ea-9b00-514e8d156fe0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5460725f-b0f6-4833-b2d7-5abcc52cdcbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34b05009-3091-4338-84e4-d354282a8a74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11a28528-2727-4528-93f3-85e9903480c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "386cc91d-c93a-4bb9-9c87-caa7e45bb0fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bd173ec-6bd4-4434-aa7b-fc8563f11b22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a88be6d-24e1-4200-8d58-88c79c8cd5f9"
            }
          }
        ]
      },
      {
        "id": "e8456fa2-dfc6-49f3-90d6-13b43eb52163",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8589560-f7ad-4e2d-a148-3b66b2b5784a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9aa31e05-7c4b-4f9e-b660-bb0db638ee7e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "96ebb29d-29f1-4dd3-a503-f2534bdb5a90",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1e75e32-b6b1-4d41-a315-d9b433ff0080",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "993e9245-d96a-4416-864c-1c91c3ef21fd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 315.6232394366197,
      "responseMin": 7,
      "responseMax": 7443,
      "responseSd": 877.1094064416244,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691713871269,
      "completed": 1691713973044
    },
    "executions": [
      {
        "id": "b22f7ace-4532-4e3f-b440-3ba7e28b14d7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "29301434-ed0f-4850-ae0b-2e9a3af471be",
          "httpRequestId": "4a002bea-af15-4ea7-ab03-ba95504d8b76"
        },
        "item": {
          "id": "b22f7ace-4532-4e3f-b440-3ba7e28b14d7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9d01c6f7-d06f-472c-be31-108a40f4c019",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "aad251a6-1f96-453c-b804-02d74d11ab7f",
        "cursor": {
          "ref": "b967e2db-5997-47fc-ace7-29761124721f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f85fade8-89bd-412b-8cf5-fab2aa91deb9"
        },
        "item": {
          "id": "aad251a6-1f96-453c-b804-02d74d11ab7f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "757a4d2b-e86e-40bc-9971-1fb8e2d8c572",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "8d5e58a1-c6d6-4db9-81be-59ec9a1bf07c",
        "cursor": {
          "ref": "2bc6f605-8fc7-4f5e-85bc-472620be4247",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2aef96ca-0217-4616-9d84-f7e97d965396"
        },
        "item": {
          "id": "8d5e58a1-c6d6-4db9-81be-59ec9a1bf07c",
          "name": "did_json"
        },
        "response": {
          "id": "6c62778e-0685-44db-aede-41bec91377a5",
          "status": "OK",
          "code": 200,
          "responseTime": 1191,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2d85af-c378-44d3-994c-50d64b8f4941",
        "cursor": {
          "ref": "c8995e58-6350-42d0-9257-63a7f21b5c13",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "832ed4ae-3dbd-41f2-a50e-738e30347e99"
        },
        "item": {
          "id": "ac2d85af-c378-44d3-994c-50d64b8f4941",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab203729-b12a-4261-9b41-16d2847135a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2d85af-c378-44d3-994c-50d64b8f4941",
        "cursor": {
          "ref": "c8995e58-6350-42d0-9257-63a7f21b5c13",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "832ed4ae-3dbd-41f2-a50e-738e30347e99"
        },
        "item": {
          "id": "ac2d85af-c378-44d3-994c-50d64b8f4941",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab203729-b12a-4261-9b41-16d2847135a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706f18f1-7088-4e2b-b304-11353afb4bc8",
        "cursor": {
          "ref": "84a5f92c-5791-47e3-ab02-e00d0546ed0b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7f504768-34dd-455b-89b3-b273fdda95b8"
        },
        "item": {
          "id": "706f18f1-7088-4e2b-b304-11353afb4bc8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "64875e9b-92f8-4393-b9df-8a6a113c78f5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 324,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8048a2-731f-4b90-85ac-c9c1e31968f0",
        "cursor": {
          "ref": "49433ddf-592a-40c0-9aa5-6e7d2fe504cd",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a7e5f325-034a-4236-8b50-08acc52a71f5"
        },
        "item": {
          "id": "5e8048a2-731f-4b90-85ac-c9c1e31968f0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c893191d-16be-4ee6-8d38-36cf6bf903e1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 371,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2b9638-e2e3-48d7-9f00-b632e3205d07",
        "cursor": {
          "ref": "61509c3b-46d2-4961-a425-9730041394a8",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1ffd3f72-c25e-40b0-8ceb-a25d62f28dea"
        },
        "item": {
          "id": "da2b9638-e2e3-48d7-9f00-b632e3205d07",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fd1f0c69-c608-420d-af91-6dc397fe24f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50fdc8c-f45e-412f-9525-7ea53597f113",
        "cursor": {
          "ref": "e0809576-3a30-4fd8-872b-ac2c9cd1b31b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "63bb6c79-683c-49c8-ad85-54a781d4d96d"
        },
        "item": {
          "id": "a50fdc8c-f45e-412f-9525-7ea53597f113",
          "name": "identifiers"
        },
        "response": {
          "id": "fafe7481-0544-4685-a4fc-911ee1663f63",
          "status": "OK",
          "code": 200,
          "responseTime": 1517,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bc2395-2ea4-4f8b-a969-35206b6b674f",
        "cursor": {
          "ref": "ec9355d5-cd15-4bea-850d-12a6215ee49e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "abe89a9c-851c-49d2-a2da-c26da4c75f90"
        },
        "item": {
          "id": "25bc2395-2ea4-4f8b-a969-35206b6b674f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8f8b4902-86ff-43fa-b287-b0e74b4df2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ebb0bb-e763-4892-a0b0-71aeb4d878ce",
        "cursor": {
          "ref": "c26377c6-2774-467b-884a-5023e1e06291",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9a6deff5-156a-42c2-91b8-7ebb09fcce53"
        },
        "item": {
          "id": "c9ebb0bb-e763-4892-a0b0-71aeb4d878ce",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3bd66738-f4d7-4c17-a9fa-13016b59f75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f31215-3918-4180-854a-ecb9b1c0bc15",
        "cursor": {
          "ref": "a3a984d6-4366-44c8-84e2-09397b4854bc",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0cd6c5d4-2de0-4b7f-82e1-a747b9aa31f3"
        },
        "item": {
          "id": "86f31215-3918-4180-854a-ecb9b1c0bc15",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c55b1b69-a28e-4e26-a3d4-764d5f31e1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398fc68b-c97e-4054-bd1c-36ad8369734b",
        "cursor": {
          "ref": "c60bbe9d-a997-4675-8d8c-78292c3dd0c4",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a50c5e1c-6e34-4de2-96e4-ed9f8c32953e"
        },
        "item": {
          "id": "398fc68b-c97e-4054-bd1c-36ad8369734b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5d1af0c1-a557-4003-ac5b-c4a7c592ea70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8b6236-1e9a-49e3-bd5f-8197db315db0",
        "cursor": {
          "ref": "a85dd753-84c3-4fb9-8d2d-124e33b0c9f4",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3f3e034f-12ef-40ad-a75d-a883c4db7a83"
        },
        "item": {
          "id": "3b8b6236-1e9a-49e3-bd5f-8197db315db0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4098d3a3-9b1c-4291-9256-580146cd9b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a26a41-de18-4c34-ab0a-b3ddf5cfaa8f",
        "cursor": {
          "ref": "ce744630-0d8b-486e-a378-81a0db80690c",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "099d9291-d33b-4a1e-90d4-9ff913b45658"
        },
        "item": {
          "id": "13a26a41-de18-4c34-ab0a-b3ddf5cfaa8f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e0417dd1-d7a1-4080-b9d8-5d2339767fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090c8aa5-90c4-429c-bb49-52d8fd0da8ef",
        "cursor": {
          "ref": "ca89453f-56d2-41eb-ba1d-ce221d6d2a80",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "df1a2e90-c828-40c7-b0c4-be7d155019b8"
        },
        "item": {
          "id": "090c8aa5-90c4-429c-bb49-52d8fd0da8ef",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "eea6863f-8248-4367-a8d5-6c2377526ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7c82a9-482b-4c9c-a854-49c398478328",
        "cursor": {
          "ref": "4afd4917-07e4-42c4-8a4c-4b3758b37cf2",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ca78e4dc-3cd9-44c5-b726-cd8eb09632eb"
        },
        "item": {
          "id": "5c7c82a9-482b-4c9c-a854-49c398478328",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b5b81321-0e3d-4900-86e7-83c06394cbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5283d41-6635-49b5-8cbf-457d2e5f4759",
        "cursor": {
          "ref": "028efa11-16e3-4f2a-a5b7-456e0296cd9c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7e3f2a37-5dc1-4c67-ad6d-0c37408a15eb"
        },
        "item": {
          "id": "b5283d41-6635-49b5-8cbf-457d2e5f4759",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "21d12344-78a0-4cb6-86a1-77b194b409ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb90476-bb80-43ba-b2a6-5123c321c4da",
        "cursor": {
          "ref": "9f62ffea-67e7-4141-9e7e-6fe7667c7474",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d2fc4f3a-ac25-4e23-b8b2-3fd76094ac2f"
        },
        "item": {
          "id": "cfb90476-bb80-43ba-b2a6-5123c321c4da",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "90c23f95-aedd-40f1-acb9-09b42204f94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8a7128-26bc-4584-9e8f-d158c3af2cd5",
        "cursor": {
          "ref": "b304c88a-fdbd-434c-9fb3-29eae33d577d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2cf3c297-6f70-437f-8852-413778070384"
        },
        "item": {
          "id": "0b8a7128-26bc-4584-9e8f-d158c3af2cd5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3a829cf4-43fe-48d6-bfea-ff698af7f434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdbb04f-c746-4c85-808e-048c9e2c9bc2",
        "cursor": {
          "ref": "2f0ffc79-0b8e-4e50-8def-c8cd22c67adf",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3de6f4a1-c104-4ccf-8f33-baaf47733b2a"
        },
        "item": {
          "id": "4bdbb04f-c746-4c85-808e-048c9e2c9bc2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "84477d25-7bf4-4377-abcc-ffd95971cab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed7d232-bb7d-4ec6-ae61-3b499aa54c2e",
        "cursor": {
          "ref": "38489e55-26ea-43a0-87a1-085e825fc3f0",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "927a7bd4-7fc3-4ec9-acd8-e30deae01c57"
        },
        "item": {
          "id": "fed7d232-bb7d-4ec6-ae61-3b499aa54c2e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "106162bc-bb71-47ea-8579-5ca5b281383d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbc6787-dd82-4a19-8e9b-68392d36d434",
        "cursor": {
          "ref": "cfb38be1-2f17-4291-ae91-e27a5d81ac12",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "03a6395b-dd85-4e94-8cf7-ece912e5fed3"
        },
        "item": {
          "id": "7dbc6787-dd82-4a19-8e9b-68392d36d434",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a4b5354f-22c1-428f-b689-bf23938513d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67df22a-2e41-4c00-a1e3-34e337c545ee",
        "cursor": {
          "ref": "90949ee0-dec2-46fa-bc9e-3eebe6ced05e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "007827cd-d923-40c6-a532-3bfbae427087"
        },
        "item": {
          "id": "e67df22a-2e41-4c00-a1e3-34e337c545ee",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d634952c-c5de-4ecc-9c24-185a27e95837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db39d760-734a-49c8-ac9d-64a737e72cb8",
        "cursor": {
          "ref": "f8180dd7-e6f6-4972-b7cf-898ace8fad24",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "98a0ded5-8ff6-49cf-ab67-47c41851b138"
        },
        "item": {
          "id": "db39d760-734a-49c8-ac9d-64a737e72cb8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "48f96701-b260-48f4-b158-ea74d559125e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d4ce02-0fb7-4587-ab99-126fb97fe13a",
        "cursor": {
          "ref": "b27ceb1d-4232-4be5-8b8e-42c47271b3d4",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8e4c9de2-f162-4748-b0c0-08eced98234e"
        },
        "item": {
          "id": "f8d4ce02-0fb7-4587-ab99-126fb97fe13a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "57370458-c1e1-46e2-ac3d-9482c85ab524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad0b408-a336-40a9-8d1c-331ad5c898cb",
        "cursor": {
          "ref": "3b821310-3694-440f-897b-5057040e2173",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2ae48b5e-a8bb-45c7-8cd9-f2eeebb3f7d7"
        },
        "item": {
          "id": "0ad0b408-a336-40a9-8d1c-331ad5c898cb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4c2ac62f-809a-4d85-ab74-d586e3518e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff51477-a43d-46a5-a487-e62acbc703df",
        "cursor": {
          "ref": "8c7bd81e-2fd6-4e4a-938a-5bae22fddaad",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0bb0f674-dc83-4fc8-ad8e-02c9a08c61d0"
        },
        "item": {
          "id": "dff51477-a43d-46a5-a487-e62acbc703df",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "995336d9-56d7-4d3c-98b4-5e2939d7d901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f669ed41-ee2c-411c-8ecc-531705fc5b04",
        "cursor": {
          "ref": "beafa152-16b1-438f-8d2b-0534e8e917b4",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b2b1a7f0-be16-444f-b939-3e75d63d42e4"
        },
        "item": {
          "id": "f669ed41-ee2c-411c-8ecc-531705fc5b04",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f63bc141-bb53-4fd6-975c-371d15a1a27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e305db-27f2-42d2-980c-39f5a118f490",
        "cursor": {
          "ref": "fe276349-5d64-4c43-bdba-329dbe1a2473",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "50c4a277-77cf-43fd-a963-5299bbab467b"
        },
        "item": {
          "id": "45e305db-27f2-42d2-980c-39f5a118f490",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d20d12c6-8639-4066-97b8-206239ed0852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9314343-013f-4918-99c9-ecf897c54f78",
        "cursor": {
          "ref": "4e831ceb-587a-455a-b956-8525c39bc3d2",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9e2b91ae-5458-468a-b200-4f47ae71a311"
        },
        "item": {
          "id": "b9314343-013f-4918-99c9-ecf897c54f78",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "86b64d9c-50cf-4749-9343-a95b3fce2542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9639b593-e555-4cb6-bba9-73012592e5d2",
        "cursor": {
          "ref": "7ef36af5-fd11-4f72-b86a-b3c43ea24b28",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "79941a2e-4315-44f6-a997-cbf25d17b015"
        },
        "item": {
          "id": "9639b593-e555-4cb6-bba9-73012592e5d2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "192e98ad-8d41-451b-9914-56dfd91d6861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bbc32b-68ae-4c86-ae55-914e94015b4f",
        "cursor": {
          "ref": "7a9c04f1-6b42-4327-8387-585a38123dd6",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "88e2ef72-ac33-4428-942f-09baf46030d3"
        },
        "item": {
          "id": "f9bbc32b-68ae-4c86-ae55-914e94015b4f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "29b78a5b-6041-4975-bb13-150bd4246603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46e2e97-574e-4c83-847c-0a290818a0f1",
        "cursor": {
          "ref": "1999ce4e-3cee-496f-b9d9-6616625e955e",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "38f87291-8a46-40f5-8c58-1a339f864663"
        },
        "item": {
          "id": "d46e2e97-574e-4c83-847c-0a290818a0f1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e3af933a-58a1-484a-8503-c43c321dd91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a9b8ef-49be-46ec-b33f-19a1340451e7",
        "cursor": {
          "ref": "33edced8-26b3-455a-8e95-a661959c6ecd",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "db49753c-89f2-4c8e-b39b-e93445368413"
        },
        "item": {
          "id": "82a9b8ef-49be-46ec-b33f-19a1340451e7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8d2570db-0a70-4b9e-8bcd-4eee9dc5c4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecce5867-f454-4068-82f1-e56074b2729f",
        "cursor": {
          "ref": "d451352f-01ef-4a35-b854-042d084b0a0b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4304a39f-6c30-42d5-a11e-3f82595ffc96"
        },
        "item": {
          "id": "ecce5867-f454-4068-82f1-e56074b2729f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "457dce43-5898-487e-af8d-c89149c6f8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211800dd-8e12-4098-8c68-6cce88ff9074",
        "cursor": {
          "ref": "cc5f9c9a-d0c7-45dd-a865-30f9dfddb9c5",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6433a12f-f9e8-4c49-8ec1-badd022c4fb5"
        },
        "item": {
          "id": "211800dd-8e12-4098-8c68-6cce88ff9074",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bea58cb5-3389-499c-8052-a2ac75941cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a87c8b-d38d-4639-a374-a0a5dd4eed6c",
        "cursor": {
          "ref": "d2b673a0-27dc-4606-803e-e1222046a5d2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b61d4949-246f-48ef-a0d5-d81bf81549f3"
        },
        "item": {
          "id": "99a87c8b-d38d-4639-a374-a0a5dd4eed6c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "23c18f33-53d1-4499-a75b-78f51b7602b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866d7bec-2ba7-4ccf-8ef6-4dd9009a71a2",
        "cursor": {
          "ref": "00c20cd8-f9c4-4c14-9c81-c006baf719eb",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "73c82f66-dc05-46f1-a248-9896c3881115"
        },
        "item": {
          "id": "866d7bec-2ba7-4ccf-8ef6-4dd9009a71a2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9ae01b8a-3ce0-475d-a6de-ead0f1db0bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8921b40-46be-4823-8154-9f4b71e14cd8",
        "cursor": {
          "ref": "262d98ee-d6bd-48ff-a497-f24ab63af286",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "51ffa2fe-4960-43ed-8ea3-71992632182c"
        },
        "item": {
          "id": "c8921b40-46be-4823-8154-9f4b71e14cd8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "45af7c61-4de7-40ba-904c-3d3827cc6249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0654554-7080-44a3-9467-ccb14001cec3",
        "cursor": {
          "ref": "89c27e35-0afc-4a24-8030-a1e6beb75aad",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9926a208-61c6-4956-9c8f-9c53cfb95047"
        },
        "item": {
          "id": "c0654554-7080-44a3-9467-ccb14001cec3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c55471d1-f8af-4ad1-9f44-8200b9bc6c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aeca724-2616-47af-a140-df5812184b0a",
        "cursor": {
          "ref": "839d655f-76ad-4470-ba67-46b5a3415e4e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f21dece7-e48c-48c3-b111-1eaaa9f5a31d"
        },
        "item": {
          "id": "2aeca724-2616-47af-a140-df5812184b0a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f9ee541d-9793-4993-9afe-d2647b224225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d345b9-8111-4499-89ba-84f56e24fe41",
        "cursor": {
          "ref": "cce97b5a-0f8a-49a7-a109-8395d72831d4",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "becf5b1c-b9e8-4436-b240-a011d2ca184d"
        },
        "item": {
          "id": "45d345b9-8111-4499-89ba-84f56e24fe41",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2e63ac7c-ab16-4736-9633-50d66461bb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d00fd07-5e87-4c38-a9ba-e87e79a21818",
        "cursor": {
          "ref": "1a4e6df4-736b-4288-97f9-298ed0472648",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7311f5f0-d675-4f78-93c4-7b4a20498beb"
        },
        "item": {
          "id": "7d00fd07-5e87-4c38-a9ba-e87e79a21818",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fe3f7b50-e421-4a43-a547-f5edc0b9198e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ec91cf-7580-4e4f-84c6-551f0c79f2c0",
        "cursor": {
          "ref": "4ce96bdd-3078-485b-95e5-b19e222a2e8f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5f7848a2-cee2-45f2-91f1-4d820a5dccd0"
        },
        "item": {
          "id": "b2ec91cf-7580-4e4f-84c6-551f0c79f2c0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7308a93c-98d5-46af-9eaa-0de7dd52b578",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 589,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95d37fb-60c5-4460-9a61-fa3f6636a433",
        "cursor": {
          "ref": "a108c63c-2127-469c-88e7-2cf291feeb35",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4727c5a3-a191-4ad7-978b-378d2d18da90"
        },
        "item": {
          "id": "a95d37fb-60c5-4460-9a61-fa3f6636a433",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d0bf53a2-77ee-4060-a58b-a3b3b960fe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d49037d-62d0-4dc9-af6e-d56bc30549e2",
        "cursor": {
          "ref": "0d3a9c80-f4cf-43a5-a363-4f57f1790761",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6f5ac120-25a6-4473-9215-397b42f938c3"
        },
        "item": {
          "id": "2d49037d-62d0-4dc9-af6e-d56bc30549e2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0e306e28-b5b3-4414-bab5-b4064f92f312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c48623-5e62-4e99-be58-95a1b4f125dd",
        "cursor": {
          "ref": "c07a3c2f-a3bc-4408-b928-6e4c7655b824",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1328627e-fd98-4e85-a355-fd33b7cc0ddd"
        },
        "item": {
          "id": "b5c48623-5e62-4e99-be58-95a1b4f125dd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6b32b385-e280-4eb6-ae10-299b3fecf08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1903c0e1-b134-415b-9949-5c588306e338",
        "cursor": {
          "ref": "5fbd1ec8-90dd-46eb-9af8-fed7fa60e33b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bc85b91b-4a55-4c2f-b865-6c1df7136229"
        },
        "item": {
          "id": "1903c0e1-b134-415b-9949-5c588306e338",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "25cb64a0-e4da-43c7-b0cb-ca5ed90e670d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3ba8c0-54bb-4e69-8939-b14c1584fe01",
        "cursor": {
          "ref": "c323c4d2-9050-46fa-98da-e922a9b25275",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c7c75af0-27c7-44bf-b87e-56e7438072ab"
        },
        "item": {
          "id": "6c3ba8c0-54bb-4e69-8939-b14c1584fe01",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b5661ba4-e9a4-4572-b88a-15e67585e821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd288f4-1403-4719-84c4-15c0f221a795",
        "cursor": {
          "ref": "65c69987-1fe7-4977-97fa-83c70070d3e4",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c99f887f-72cb-45b6-9bdc-a166ae490b40"
        },
        "item": {
          "id": "5cd288f4-1403-4719-84c4-15c0f221a795",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0882f04d-1009-4672-8b86-10d12b47ac63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac55d874-c6b4-489a-b20c-6b0bffc1e8d3",
        "cursor": {
          "ref": "21960fd2-f2f1-4b9f-b481-c1f88852b805",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "149d29d1-284f-4e13-9110-d983dc7fe528"
        },
        "item": {
          "id": "ac55d874-c6b4-489a-b20c-6b0bffc1e8d3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1e28c4ac-7a6d-4a96-936f-20b9dc4016d4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 601,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f194d6b4-9cf1-449a-9704-d8cfa7fa9fe1",
        "cursor": {
          "ref": "8cf66f8e-1404-46d9-afda-1a79399ef51d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "717d9479-c7c7-40ea-9745-95db38b74117"
        },
        "item": {
          "id": "f194d6b4-9cf1-449a-9704-d8cfa7fa9fe1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "094dc0d4-a91c-4c14-b9a1-6b9a140e04f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddaf45b-2d31-47d6-a4f8-dbff9f9e7181",
        "cursor": {
          "ref": "260e4b3c-325f-4c23-bfd8-20c23cbde1fa",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dee0221f-415a-436e-a8bc-3b71a7ffd7d2"
        },
        "item": {
          "id": "7ddaf45b-2d31-47d6-a4f8-dbff9f9e7181",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8baa6c33-4000-4d42-a819-71221f3e0084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cde777-cb97-4a8f-a351-5268ec4b6dd9",
        "cursor": {
          "ref": "6c0b9376-8dee-44b5-b4c8-bb1e049ba933",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8d1eb51b-a8c6-4bda-ab4e-86382ec2dc01"
        },
        "item": {
          "id": "b4cde777-cb97-4a8f-a351-5268ec4b6dd9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3fc14108-e891-480e-9d64-b40ab078e5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35c03ca-500d-4269-aca0-a95757e6ddc3",
        "cursor": {
          "ref": "603fc5a2-22b2-41de-8a8a-18902a662444",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "43c95dce-9c09-4925-9d11-e2cd03c198f8"
        },
        "item": {
          "id": "b35c03ca-500d-4269-aca0-a95757e6ddc3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d7318b13-82e5-433b-b8d2-3c1bfb440186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0696d8b1-75e1-4bcf-aeb2-a4e3d3259059",
        "cursor": {
          "ref": "3ac17e9e-237c-4f71-b9a6-6787fd809020",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "691d9cb4-6c75-4998-8db4-6c40727a6f8a"
        },
        "item": {
          "id": "0696d8b1-75e1-4bcf-aeb2-a4e3d3259059",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b5ae3352-68a5-4ec8-b891-698a30806148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36590de2-a3d0-40ca-a1dd-0eb8d253ee30",
        "cursor": {
          "ref": "21e76fa5-ffc1-453f-b154-47915a7c5dd1",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "522f1a69-dbac-4567-9225-ea5dcd5ad2a3"
        },
        "item": {
          "id": "36590de2-a3d0-40ca-a1dd-0eb8d253ee30",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4ecde43b-6acb-4a03-8785-3e128a485de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779bda4e-5045-4ed8-b82f-e55702845f6f",
        "cursor": {
          "ref": "c18d8ee8-8b05-4b6d-9c88-6f07b937685d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cfc58559-d905-48b8-909a-b03512b4e0e2"
        },
        "item": {
          "id": "779bda4e-5045-4ed8-b82f-e55702845f6f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "823f6cb1-d23c-4185-97ec-c796525ff89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b0eb2c-3988-4bf7-aa58-39121cefcefb",
        "cursor": {
          "ref": "5eeec83b-3979-4db5-aafb-5601debbbefe",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "19ecdbce-9ac6-4931-a963-c5509f790657"
        },
        "item": {
          "id": "99b0eb2c-3988-4bf7-aa58-39121cefcefb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "17f12084-5882-4622-8ba4-c3cf6ffb3132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d5a73b-0927-4f46-ac7b-4a04c6a9d024",
        "cursor": {
          "ref": "e16d673e-e2a7-431b-9db1-70a34c7b8cec",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0b5dc077-ac2c-46ce-a240-7bbdf4636da4"
        },
        "item": {
          "id": "19d5a73b-0927-4f46-ac7b-4a04c6a9d024",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1eca97e3-71a7-44fe-9c3b-4080a7a90b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d638a783-b993-499f-b46c-1f02161051e8",
        "cursor": {
          "ref": "36631fd3-6d90-40da-8974-83d4f2b45815",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "232d0a73-ad85-4776-88a4-fe2cd74e87c7"
        },
        "item": {
          "id": "d638a783-b993-499f-b46c-1f02161051e8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "676b63cc-aa57-4023-8dab-03f45c41737e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed2dba4-3c39-45fa-a315-eb2cb40e1ee2",
        "cursor": {
          "ref": "fe904a73-7921-4dea-a4aa-c2b7f4d33349",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d7243e4b-dfb9-4421-b6d5-1a64ba4f4469"
        },
        "item": {
          "id": "1ed2dba4-3c39-45fa-a315-eb2cb40e1ee2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "87a3f6b0-2258-4a94-a0e7-6c66e2f6864c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a415564-5ab3-4dc2-8738-ef2459dc0ad5",
        "cursor": {
          "ref": "b14aa780-76ec-4b14-bf2d-96dc5d948a8c",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6f1ec533-b99b-454c-8c28-9e857c56e39d"
        },
        "item": {
          "id": "4a415564-5ab3-4dc2-8738-ef2459dc0ad5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "369d4d04-b9b8-4d68-bcb9-44a0ec140613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc758b3-bb5e-4471-b3dc-eb747e2fc1a6",
        "cursor": {
          "ref": "5c568ceb-ba31-4fdd-a72d-04f4658fe324",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "201f5d02-498d-448b-97e5-5a5ebb6d22d9"
        },
        "item": {
          "id": "acc758b3-bb5e-4471-b3dc-eb747e2fc1a6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7bbf9eac-450d-4395-bf3f-6f3daef52671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c3bad5-85a3-48e8-900f-66c4108332fe",
        "cursor": {
          "ref": "c8a6f6a3-7360-4f87-b524-a240cc401178",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a7664f0c-fb1e-4444-b7ff-668024555a4b"
        },
        "item": {
          "id": "14c3bad5-85a3-48e8-900f-66c4108332fe",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "00c66c5d-7963-4898-b7d3-d432a01e680a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13357d79-70c9-4999-a935-9c164b99807b",
        "cursor": {
          "ref": "7304a993-42e5-4c3a-b8bf-53f457848cc1",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "87164264-1d8a-4391-b444-c85422ed56be"
        },
        "item": {
          "id": "13357d79-70c9-4999-a935-9c164b99807b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3f3e827e-63f7-4858-96dd-e0cef87c05f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412aa93a-83d7-4607-980e-ff985fbb2d97",
        "cursor": {
          "ref": "3b6547b2-b4e2-4b1d-8dd5-703886a0b588",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a6e13841-ccb6-4858-b062-d2f00b3435e8"
        },
        "item": {
          "id": "412aa93a-83d7-4607-980e-ff985fbb2d97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "273a15c1-d6cc-4b4b-833a-571e9d9323b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296e0ab4-b59d-440a-b495-59ee5d9a3008",
        "cursor": {
          "ref": "da61334e-8875-44a6-87a4-8ce0cb141828",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "755a1c33-5db6-4726-8259-8f73692adb60"
        },
        "item": {
          "id": "296e0ab4-b59d-440a-b495-59ee5d9a3008",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "77caf290-f4c0-4ef1-a813-48bc52c766c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858813cd-9725-4c02-8614-82e937c3b9bf",
        "cursor": {
          "ref": "08da3900-93b6-4ff7-a04f-bd689aaace12",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a1845487-3775-4ac7-af74-09c36b6e5ceb"
        },
        "item": {
          "id": "858813cd-9725-4c02-8614-82e937c3b9bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a5683ae3-b91a-4c32-be45-ca19acfe2875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f594ee0e-18de-4f26-bdec-dd154c5511f9",
        "cursor": {
          "ref": "719161a0-092a-4478-af8d-d45d044093b6",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8d9a049d-8ace-4b3a-aec4-883c4a829c9f"
        },
        "item": {
          "id": "f594ee0e-18de-4f26-bdec-dd154c5511f9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "aad1f528-7664-4682-aef5-2f1f2ff2abaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b390579-7a5f-4eae-8fab-88e74a644920",
        "cursor": {
          "ref": "2467da0d-76ae-4e4a-8c36-133ef9a2d51d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "108bd8f3-45f6-40c0-b109-39bbd632166e"
        },
        "item": {
          "id": "2b390579-7a5f-4eae-8fab-88e74a644920",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "54c443d2-f2ee-4475-9486-0e995e5005e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19abf192-e737-4238-aaf5-aa34b8024eb5",
        "cursor": {
          "ref": "0403a4ae-5713-4a98-a61f-e054af529090",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "44232d91-204a-456b-9b82-598e552b7afc"
        },
        "item": {
          "id": "19abf192-e737-4238-aaf5-aa34b8024eb5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "028ad6ff-3d89-42dd-aec3-56a94d50b56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da52a7a-61a1-488e-be29-b2461cb35100",
        "cursor": {
          "ref": "583dc228-6414-44ff-a5d7-1e335d934682",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0f46c6ea-c302-48ec-a5d2-914f793dd169"
        },
        "item": {
          "id": "6da52a7a-61a1-488e-be29-b2461cb35100",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3eeb8e40-a2af-4613-bebc-5755098ba90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6516b81b-5d7d-47fb-bb53-26bc77f0c6be",
        "cursor": {
          "ref": "30aa5b44-e38b-4c96-9cda-57abda645c1a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "32c3b0af-00c1-497a-a1aa-f631d4afce77"
        },
        "item": {
          "id": "6516b81b-5d7d-47fb-bb53-26bc77f0c6be",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e2389bbe-0569-4931-8646-d49416ce33d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a154a063-65fa-4152-ad17-d4477e40621b",
        "cursor": {
          "ref": "40cff1d0-fa08-42df-88e5-ec86b0284f61",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "628a6f2d-7d8e-41d5-8839-c439ededb30e"
        },
        "item": {
          "id": "a154a063-65fa-4152-ad17-d4477e40621b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dbdaf154-f476-46a4-a7b5-e184788363eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a880f3f-797e-40ba-bdc9-63bcf47dbcb1",
        "cursor": {
          "ref": "84301b95-e736-49b0-8efe-30b494596438",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8eeb7500-e0d7-48ad-82c5-51fb4ec36e7b"
        },
        "item": {
          "id": "6a880f3f-797e-40ba-bdc9-63bcf47dbcb1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6667d4dd-d919-48bb-a55d-be4c3db5536e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6ea874-985f-4855-90a2-e9b5c6982053",
        "cursor": {
          "ref": "6c51013a-541d-4764-a4e4-47806bf6d1cc",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9a767850-7391-4759-aa5a-92f8919ad566"
        },
        "item": {
          "id": "cc6ea874-985f-4855-90a2-e9b5c6982053",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2c006640-5009-4bf0-8329-ae0d24199062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f8cf8a-a7f4-4f49-b3bd-c1ffb4657753",
        "cursor": {
          "ref": "5b1506da-beb5-4888-aa1c-9b60a89409a9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1461ceca-5f42-4763-a1ba-72ecdecc64d4"
        },
        "item": {
          "id": "03f8cf8a-a7f4-4f49-b3bd-c1ffb4657753",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cda66b8e-824a-481a-82cb-34df71888250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c78957-adec-4987-87fc-d7f898d5ef6b",
        "cursor": {
          "ref": "f44dcfe8-6c5d-471e-810d-8bd4849dafa1",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "054bcd74-3870-4530-8149-d136b2133c7e"
        },
        "item": {
          "id": "65c78957-adec-4987-87fc-d7f898d5ef6b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2710363b-87c5-4b6f-8bbe-df514d57d751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b4ba9e-773a-4132-b513-1e25fd28135b",
        "cursor": {
          "ref": "cd3a2231-2545-466f-80d4-c70d46b8d289",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "030e0f00-151c-4d8e-be23-9947cc3a91b1"
        },
        "item": {
          "id": "07b4ba9e-773a-4132-b513-1e25fd28135b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4d373ce2-616a-4d43-9725-f78bbbcdf737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af18f318-09a0-4ccd-b88f-e5f01cbfa180",
        "cursor": {
          "ref": "93c61cb1-54aa-428e-ae5e-99c436d23c7a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "af3b16e1-11fb-4bff-ab6e-be567f84d195"
        },
        "item": {
          "id": "af18f318-09a0-4ccd-b88f-e5f01cbfa180",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8923bf49-291a-4a38-b9a2-2dbe535f43af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dbb1cb-758b-41ee-a64e-0bde9ff504d1",
        "cursor": {
          "ref": "32b3fbe0-dfe4-49c6-83c8-118824f9e08e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fb8916d8-79e7-492c-ac0e-0265852fc8e8"
        },
        "item": {
          "id": "51dbb1cb-758b-41ee-a64e-0bde9ff504d1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "44b98cb9-8d1d-4fa7-a221-9bd6b872faa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6135dcc2-a923-45cc-91b6-bf2996056ec7",
        "cursor": {
          "ref": "cd265969-ce98-46a7-9afa-bdba24756e96",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a65cdcc6-ea8b-43a3-a16e-d4a174a387a3"
        },
        "item": {
          "id": "6135dcc2-a923-45cc-91b6-bf2996056ec7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "724d9b35-e450-4bf7-bf9f-3462714da770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f8b8b9-e8d4-4bfd-8e87-ee4adc8e6cbd",
        "cursor": {
          "ref": "2d6d8c7a-4e4c-42ff-a5e3-073408d96f08",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "664c63db-2b3f-43e2-aa06-13a244ec5da1"
        },
        "item": {
          "id": "98f8b8b9-e8d4-4bfd-8e87-ee4adc8e6cbd",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dfba8d2b-1b3a-4e17-9219-99903acd4c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50663eaf-03c2-4c3e-af96-8d073cc7c274",
        "cursor": {
          "ref": "300816a9-de33-43dd-bca6-1b63abf855c0",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8dd954e4-7a37-45c8-8de5-d11f506e229f"
        },
        "item": {
          "id": "50663eaf-03c2-4c3e-af96-8d073cc7c274",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e808cd40-2801-4cb6-95de-bf87fb883a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5ce266-ecb5-4760-abe4-f8ab921c8353",
        "cursor": {
          "ref": "05c0594b-e1d1-43de-8e56-42431c5d40c4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "eb79a22d-70f8-4743-9320-3b5198a66172"
        },
        "item": {
          "id": "ff5ce266-ecb5-4760-abe4-f8ab921c8353",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "82bedd46-b6a1-4f4d-adad-1dc205176dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20300f25-5f89-4a5d-a245-404af3642de5",
        "cursor": {
          "ref": "ffa6a060-eb32-44ea-b231-cb2a181091ad",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "56d4aaf4-6c60-4401-beb1-79417e622083"
        },
        "item": {
          "id": "20300f25-5f89-4a5d-a245-404af3642de5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2c9e78a3-3699-4495-a669-76254475dd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42000a7-d0ba-468f-be82-8c57e1cf2508",
        "cursor": {
          "ref": "79933616-2d36-4509-84e4-65736ea8869f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6114e6da-5367-4c16-9d0b-5473da218711"
        },
        "item": {
          "id": "d42000a7-d0ba-468f-be82-8c57e1cf2508",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7fe1194e-cefb-4d4e-a49a-d1c5b5c7860c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed543f13-c2a0-4c75-9c7f-7a4b83c0491b",
        "cursor": {
          "ref": "6ff83a90-8b07-4ca8-b321-76a42cd085d2",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "71b9e854-ab1d-4751-9dd0-e3d3ab67c420"
        },
        "item": {
          "id": "ed543f13-c2a0-4c75-9c7f-7a4b83c0491b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5a9ed713-fd4c-450c-8ba6-5097d99e140c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f49a9e7-d921-4fd5-946e-3d9f8d0ae89e",
        "cursor": {
          "ref": "df271e35-d1c6-433d-827f-6c2e0b3415d3",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e767e96b-4dc8-46bc-be0a-a96fc08332b9"
        },
        "item": {
          "id": "4f49a9e7-d921-4fd5-946e-3d9f8d0ae89e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b1289faa-84ca-4786-b961-fde9ba4c3b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a08d3f0-9986-4bfa-899c-60e0a90d91d8",
        "cursor": {
          "ref": "8383cedb-ef0f-4463-841a-5a7e0b143a5b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fe00daa5-8171-4c17-810d-a2dc3aca889b"
        },
        "item": {
          "id": "5a08d3f0-9986-4bfa-899c-60e0a90d91d8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "34caf146-5334-408e-b36d-3510f6424d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d130e594-ba5e-47de-a6a3-6433e0d9cb6d",
        "cursor": {
          "ref": "43aa61a6-03ab-40e4-97c0-8d70af3a56e3",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e199b93b-0cd7-40a0-b680-4f7b82b88a71"
        },
        "item": {
          "id": "d130e594-ba5e-47de-a6a3-6433e0d9cb6d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a82c45d2-e5a9-4e4e-ac70-98dacc434b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc8863f-0f3c-4878-89fd-0a11b606e841",
        "cursor": {
          "ref": "0210a62a-391e-4747-9a01-cc1b78b25813",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9a3024d7-6989-4fed-9ab8-a31108d48516"
        },
        "item": {
          "id": "4dc8863f-0f3c-4878-89fd-0a11b606e841",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "883f64c7-f322-4295-987f-977262e8dc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baeeaf71-e733-4c6c-b0ae-810eff9ce5c9",
        "cursor": {
          "ref": "b757ef1d-8578-40ab-a0cf-1c16101ef037",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "83c85d98-2d5c-4116-9735-35a769065d27"
        },
        "item": {
          "id": "baeeaf71-e733-4c6c-b0ae-810eff9ce5c9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b8c46724-2dca-4d29-8dce-49e71a6f0c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e11cf2-474d-474b-9076-85f19d2c12fd",
        "cursor": {
          "ref": "620d2e4d-1d72-45e3-9446-2d918683b88c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1a9bf0cf-bf5f-42ac-a5b5-fdff2d993e23"
        },
        "item": {
          "id": "65e11cf2-474d-474b-9076-85f19d2c12fd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "69682287-e3c5-47f1-8015-6de1e7959744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e282c8b-dc6d-4b3b-b2d2-cf01b8545c31",
        "cursor": {
          "ref": "112d4555-dc5c-4f7a-9f6d-11504c51d207",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f36f1611-531f-42c5-93fd-c1f9c3e9eb75"
        },
        "item": {
          "id": "3e282c8b-dc6d-4b3b-b2d2-cf01b8545c31",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "05f11a9d-8996-4918-9eec-6c4aabf65e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df19f3e4-bdb5-4358-b357-0d8d0047dff1",
        "cursor": {
          "ref": "eb8fbd5e-a222-4a97-886e-2524b85f3a8f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "16a13d14-0790-4038-bf0f-ebad19d311d4"
        },
        "item": {
          "id": "df19f3e4-bdb5-4358-b357-0d8d0047dff1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3e8229fc-2fba-404f-90b6-e46009e59eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1105,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e9ea0a-17e2-4773-8b7d-6baeb9dc806c",
        "cursor": {
          "ref": "605d4aa2-096a-4101-94cc-fc50e4b9b2d6",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6c94e0ac-185b-45ea-8335-1e44f1080fe6"
        },
        "item": {
          "id": "64e9ea0a-17e2-4773-8b7d-6baeb9dc806c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a700dbeb-3086-4a26-ba60-5d8c90a714e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f68622-2d3f-47a1-9afc-3c1c92aab321",
        "cursor": {
          "ref": "e8e6588e-0776-4bbc-b645-054b5755e771",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b19a7bf3-4f8e-4c42-8b4e-503b243420a5"
        },
        "item": {
          "id": "01f68622-2d3f-47a1-9afc-3c1c92aab321",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ab7422c2-c77c-4ff1-8210-3e9288349bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b6fcb0-128e-4cdc-9e39-c371af669fbf",
        "cursor": {
          "ref": "3f2770b1-fe47-4b5f-8188-86fc88024472",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a3c04030-eafa-40bf-95fd-8c330936ec75"
        },
        "item": {
          "id": "32b6fcb0-128e-4cdc-9e39-c371af669fbf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1b369e94-d642-4408-80c8-43b2bfc1668a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1438fccd-6f5a-4d0f-874b-18e590257b4d",
        "cursor": {
          "ref": "d73605e0-8517-4d32-915a-59f75899f41e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "86b7b656-c9a4-42f3-b032-f7626e78fa1e"
        },
        "item": {
          "id": "1438fccd-6f5a-4d0f-874b-18e590257b4d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "878239c3-aede-496d-9188-86cf26e93304",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e929fa-4646-41dc-abeb-64fe40e5a572",
        "cursor": {
          "ref": "2463a97d-5853-4f42-9b68-2214333b053a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c5ebdc85-5fa8-451d-827f-d6ced1967dc3"
        },
        "item": {
          "id": "37e929fa-4646-41dc-abeb-64fe40e5a572",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6f28c9c9-5dd2-4863-af02-1a21c9d226aa",
          "status": "Created",
          "code": 201,
          "responseTime": 6946,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "896622c0-1b16-4e56-bd4d-2966a53510ed",
        "cursor": {
          "ref": "e6cd4a56-88f4-4011-b375-fc612f6c88f5",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6da1b7ec-4ada-4297-859d-46ae4fb0887b"
        },
        "item": {
          "id": "896622c0-1b16-4e56-bd4d-2966a53510ed",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4eb2b5b5-9c06-42b6-b905-221bf9c4c818",
          "status": "Created",
          "code": 201,
          "responseTime": 6381,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "356381b2-ebff-4003-834f-78418edc0d18",
        "cursor": {
          "ref": "a8e64b05-4935-4872-8c63-8f446452c35a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bd93d59a-4fe9-4e30-986a-093dfd264845"
        },
        "item": {
          "id": "356381b2-ebff-4003-834f-78418edc0d18",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "edf2fc1e-a29a-4e64-af87-c70813f3fb88",
          "status": "Created",
          "code": 201,
          "responseTime": 7443,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bd450a-62b4-40e8-9046-981bab9f962f",
        "cursor": {
          "ref": "c9018557-77f9-4825-9b61-220ba9036671",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "083fdbd6-1b62-48b7-b651-cc9eecac2768"
        },
        "item": {
          "id": "a2bd450a-62b4-40e8-9046-981bab9f962f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "75e3a84a-c66d-4ebc-8e34-83f09f7daa34",
          "status": "Created",
          "code": 201,
          "responseTime": 6424,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad1adac-2217-4e44-9e84-d823cb23e703",
        "cursor": {
          "ref": "d6ea10a7-9ea0-4651-9054-87d8e7f297db",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "92694b26-fa5c-403d-880c-13c1c499805e"
        },
        "item": {
          "id": "6ad1adac-2217-4e44-9e84-d823cb23e703",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1e5c6a96-f925-4fc4-9619-4aeb860d0966",
          "status": "Created",
          "code": 201,
          "responseTime": 6316,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "29617bbf-6f03-4109-ba8d-552338c4539a",
        "cursor": {
          "ref": "77b13d0c-d1e6-4fcc-a64f-1e3de124dfb8",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "36c279d2-b9a4-46ae-bfca-b0645cda31b3"
        },
        "item": {
          "id": "29617bbf-6f03-4109-ba8d-552338c4539a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d0a0a25e-37dd-4d4e-a95c-689612a4495a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "2a9f0458-b511-43a3-bcd6-8bfbed953135",
        "cursor": {
          "ref": "bcb236b0-e8e4-4864-a08c-402fc9685ce9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "437fd104-f3bf-4b5b-8e18-89cc611b46f9"
        },
        "item": {
          "id": "2a9f0458-b511-43a3-bcd6-8bfbed953135",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7852b6bf-9fa5-443b-9bfc-c1be1df393e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1b6dc4-3ffd-4589-8adf-4be83f34059f",
        "cursor": {
          "ref": "dd501bdf-9ba4-458f-bf6e-9a445d233bbd",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "08ea73d7-6fbf-4196-8148-6622462e8122"
        },
        "item": {
          "id": "ee1b6dc4-3ffd-4589-8adf-4be83f34059f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "53ad7192-1676-49c3-9fc4-9b49089a5fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe70bbc-1113-4320-acd7-185492bce4da",
        "cursor": {
          "ref": "daa0f45c-05cb-43a8-8fcd-6860847ffada",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5e416632-4609-4ab9-8590-b3fa2567e316"
        },
        "item": {
          "id": "6fe70bbc-1113-4320-acd7-185492bce4da",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bd5c88f7-72c0-4831-a039-0eedb089c9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a235413-f475-4143-8878-04186d805716",
        "cursor": {
          "ref": "b73fa13a-bc65-4e6d-a78a-4e36cdfe9228",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "76629c5e-1354-4059-9435-8d561a04fe56"
        },
        "item": {
          "id": "9a235413-f475-4143-8878-04186d805716",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0337737b-6751-421c-a0ac-5ce4acb3a4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdab1c57-5c22-4257-862d-3990d38c3dd0",
        "cursor": {
          "ref": "e20f0681-422e-4b25-976e-17aaa59585c8",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "64f82a39-799d-458e-bd52-7e924caabba2"
        },
        "item": {
          "id": "fdab1c57-5c22-4257-862d-3990d38c3dd0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2838de33-bca3-4e73-b71b-c6d909f82d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c306fd4d-3873-4972-ab85-a46c7802f2d4",
        "cursor": {
          "ref": "586d2e40-51fe-4d3f-ab80-ff8dfedb0691",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3522bde8-6739-4fca-98f8-9b9cbd07a1b4"
        },
        "item": {
          "id": "c306fd4d-3873-4972-ab85-a46c7802f2d4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8330cc6a-a46c-4b4b-8af2-6e5ba542450e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2d5181-2c6d-4499-ad1b-c1f7d93fcc75",
        "cursor": {
          "ref": "17af7340-10ad-48e0-b9b4-568293a68553",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "24611973-286b-4dad-be11-cd3ffddd2805"
        },
        "item": {
          "id": "ba2d5181-2c6d-4499-ad1b-c1f7d93fcc75",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d4057d55-fdac-4502-a741-ec7edf2db785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50a9b6d-50ea-414b-b727-6be9b96138e8",
        "cursor": {
          "ref": "7eb93f47-8a3b-4a87-8b36-02a3d661a9f0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "54a08e84-8db6-456a-af3b-24fffbdc2641"
        },
        "item": {
          "id": "f50a9b6d-50ea-414b-b727-6be9b96138e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c3f475d5-035b-4bf8-a0a6-03ce70ecb91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a1d69e-32be-47d4-8638-cb13f201f207",
        "cursor": {
          "ref": "e8ad6c0a-815a-41e5-85b0-6ff087305b92",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "511d24b8-1eb3-4771-ad90-c7d8e8711c18"
        },
        "item": {
          "id": "b3a1d69e-32be-47d4-8638-cb13f201f207",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "abbc0150-733f-4359-9105-4572c2a2b8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6466d17-2b3a-4651-8ae3-c058d3951d0b",
        "cursor": {
          "ref": "aec086aa-cfaa-423e-b033-c3b66d2bd166",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "eb1d9fc9-7733-4182-a2d8-94e9f9388305"
        },
        "item": {
          "id": "a6466d17-2b3a-4651-8ae3-c058d3951d0b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e0d840ef-2149-4e91-8f2b-f979a0b36410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace0c436-2ce8-479f-b8fa-67ba7094d041",
        "cursor": {
          "ref": "b18f3de3-763a-45aa-b18c-04e088ebbbda",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6232d6b7-0c08-421e-804b-71367b96515f"
        },
        "item": {
          "id": "ace0c436-2ce8-479f-b8fa-67ba7094d041",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "536c4a1c-cfa9-46bf-8833-5a777eeac628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e0cbda-a9c5-47d5-958e-7bd6e9fc456a",
        "cursor": {
          "ref": "df5f20f7-f647-4e03-a26e-0b93f7dbb42d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c9f5d5b0-0740-4e68-82a2-1510580b998e"
        },
        "item": {
          "id": "08e0cbda-a9c5-47d5-958e-7bd6e9fc456a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8410b376-7d21-48aa-8dce-a1d0ac825a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76593991-8e2c-4299-9381-18287e7b439f",
        "cursor": {
          "ref": "24ee8977-fb2f-4bd9-8440-ca58b84124b1",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "eefbee18-1aa0-4a82-85e8-a094de742822"
        },
        "item": {
          "id": "76593991-8e2c-4299-9381-18287e7b439f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ffa0ba7c-656a-4736-b5aa-71d3871edd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593e91ab-c0e3-4cc9-a8ab-e860b3fff429",
        "cursor": {
          "ref": "267ae579-c4df-4533-b2b1-dd215be960d5",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "53fd8b5f-595d-4361-886c-36cb1fac793c"
        },
        "item": {
          "id": "593e91ab-c0e3-4cc9-a8ab-e860b3fff429",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f8472e8c-e1a5-4f1f-a03c-decdd9405c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f693b916-c2d9-4517-b8a8-45a077eaffc4",
        "cursor": {
          "ref": "bf6757e3-496b-4988-8c17-f5913158a49b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ab7fd388-6d27-430e-9244-c5c01acfea7b"
        },
        "item": {
          "id": "f693b916-c2d9-4517-b8a8-45a077eaffc4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9837b8f9-a719-4e64-8ed2-c4006b623cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a10ed6-aac9-43e7-be31-1a39c42b89ff",
        "cursor": {
          "ref": "8bd7a741-f247-4f8a-bbba-21c871f25c42",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "11754ed4-4733-4865-af2d-2b3f22f3dd35"
        },
        "item": {
          "id": "43a10ed6-aac9-43e7-be31-1a39c42b89ff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bd170204-45c7-4b20-80cf-f3da0d18a949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db80a8db-117f-41f2-927a-fcb17f149117",
        "cursor": {
          "ref": "b563e492-5cc7-43bc-a550-361908617fe9",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e0fbd89c-1b14-4d2a-a86d-64978476f01b"
        },
        "item": {
          "id": "db80a8db-117f-41f2-927a-fcb17f149117",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c4b10ad7-1f50-4410-b87a-8a0d030576af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d692e9f-a62b-44d2-a812-00e534aeef33",
        "cursor": {
          "ref": "15aa6050-419b-4211-b514-deba8ec06a4b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "edb7c8f5-1514-4068-b444-2956fcb057cd"
        },
        "item": {
          "id": "5d692e9f-a62b-44d2-a812-00e534aeef33",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2fb05bf9-2299-46e9-a02d-41cd04ff66ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e458697c-cf35-4f42-9d2f-8bb3b2436965",
        "cursor": {
          "ref": "98285485-701c-41a8-8a27-bb5ae77a227b",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "eea5f0d6-c7de-4318-b671-27fd8ae50786"
        },
        "item": {
          "id": "e458697c-cf35-4f42-9d2f-8bb3b2436965",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b0583827-11d8-47da-a787-66f18b6c158f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebbee24-6d4e-4b5f-bbe6-6efc6f7ea4a7",
        "cursor": {
          "ref": "8ea861e2-7d78-42ea-896a-a66a3929a29c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "08fb3de2-a1a8-4220-a068-075516872c80"
        },
        "item": {
          "id": "1ebbee24-6d4e-4b5f-bbe6-6efc6f7ea4a7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "49f059fa-9ddf-4432-bfd1-9602d76f03c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883db849-2b0d-40d6-bc52-8368e2dd49aa",
        "cursor": {
          "ref": "15b23bfc-2694-4fb6-af94-218d6beae151",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5f095ff1-e6c4-4d19-80cb-f2b9f71efb74"
        },
        "item": {
          "id": "883db849-2b0d-40d6-bc52-8368e2dd49aa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a5cf6fb1-1ca3-4184-bd80-eb81cb7a7efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91813b6-bad4-444e-8818-af38b31f27fb",
        "cursor": {
          "ref": "c39eb50c-2b41-4417-9381-3b874b64b0a3",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3e1b6837-f898-43e9-9ad2-8d0ae9d055a7"
        },
        "item": {
          "id": "c91813b6-bad4-444e-8818-af38b31f27fb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bf31e213-81e4-4800-bd4d-f0ae7213da20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31827548-b13f-4be6-8903-f12ede4d037d",
        "cursor": {
          "ref": "379bf14f-0772-4515-81c5-b57a01b6269f",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6707539b-58e7-45c5-b0b1-2cf88ebf54aa"
        },
        "item": {
          "id": "31827548-b13f-4be6-8903-f12ede4d037d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d7908fd6-0112-4741-a34d-45c9ca6ffaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991bbc73-5772-4a9e-b453-c0225e70cd55",
        "cursor": {
          "ref": "4bcd3217-7f37-4317-8120-7d4f8fb65090",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b0002c54-3f96-4bf4-976a-d1df3d968f5d"
        },
        "item": {
          "id": "991bbc73-5772-4a9e-b453-c0225e70cd55",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "98211f1d-3372-4b4c-a896-bc1a8c612664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657954b8-bd59-475f-9e56-d82a2e47c694",
        "cursor": {
          "ref": "85b0cd17-c7fd-4f4f-b088-9e364cbe72c6",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6806a6a4-83db-4761-8062-3192444f06c0"
        },
        "item": {
          "id": "657954b8-bd59-475f-9e56-d82a2e47c694",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8dad7f27-d10e-4f45-9f4c-15f87a0bf32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89f053c-8f69-4b0c-9bf9-df1876ee8758",
        "cursor": {
          "ref": "476cfcc5-592e-495b-b892-6ed810047ee7",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2a555a43-00c0-4227-98d4-5bb7e9980e6d"
        },
        "item": {
          "id": "e89f053c-8f69-4b0c-9bf9-df1876ee8758",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2b6f153e-114f-4fca-849e-cc2dacfbe7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffcea7a-dd38-438e-bfe6-d011efff0f60",
        "cursor": {
          "ref": "5d470018-df8e-422e-ae0f-9ff134fdf51f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c6cf036d-c563-4ff7-a9db-3f01dfdacf21"
        },
        "item": {
          "id": "7ffcea7a-dd38-438e-bfe6-d011efff0f60",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "07f2c13c-64bb-4c6b-b55d-a6b27b89687c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c7bf4c-9ebc-4e53-a9a8-0762e17c1d69",
        "cursor": {
          "ref": "e3e8d410-223e-4124-9428-dade99f4e119",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b6b064a3-9367-4a5d-9208-9f9b927e4e58"
        },
        "item": {
          "id": "93c7bf4c-9ebc-4e53-a9a8-0762e17c1d69",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4d837327-8072-4766-826e-17f5e8999817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dba39c-59dd-4b43-9e65-428c93708c83",
        "cursor": {
          "ref": "28a57b3a-8824-48f1-8c45-ad3106224a95",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "24823a10-8577-44df-b7bd-5fd743fd7bc5"
        },
        "item": {
          "id": "98dba39c-59dd-4b43-9e65-428c93708c83",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "06147fca-5fce-4b3b-ae49-2946c21c403c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214c489b-0157-4109-aa96-82e35d7d46ba",
        "cursor": {
          "ref": "789a8fd0-ad6a-4bc3-a995-2f4dda2c9a7d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2a05c824-55cf-4898-9802-fde555e73d83"
        },
        "item": {
          "id": "214c489b-0157-4109-aa96-82e35d7d46ba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e124ece5-ef3e-427b-ab58-d1350f0ceadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0088dc-4ed6-41a2-a029-eb82ecfa1b92",
        "cursor": {
          "ref": "1ae12868-032e-4a62-866b-f3ab560ea734",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5319e607-0328-4a06-a0d5-864feb75118d"
        },
        "item": {
          "id": "2b0088dc-4ed6-41a2-a029-eb82ecfa1b92",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cb98773e-5449-4874-863d-82b8ac12f9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75a3933-58bb-49eb-8b95-e59b015b1e8d",
        "cursor": {
          "ref": "fd7ef6dd-3eff-4ab3-82c0-b4b04aaef46b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2b9f6b06-9099-4fdb-8144-ae82df17eaee"
        },
        "item": {
          "id": "c75a3933-58bb-49eb-8b95-e59b015b1e8d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c99ded08-9132-4418-955d-84f8e23e728f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b99237f-af8b-4da7-bfa9-98338b3565eb",
        "cursor": {
          "ref": "cd268bec-77b3-4028-b896-43f1aee28b72",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "05c8f2eb-2f6f-441e-9daf-9b0ae14b2b5f"
        },
        "item": {
          "id": "0b99237f-af8b-4da7-bfa9-98338b3565eb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "28f2e7b0-6fc4-4591-b22d-792ce607b0ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe68a9b4-6935-431f-8f93-b83b59135579",
        "cursor": {
          "ref": "428bac2d-0b49-413f-bb16-770cfacc106b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "99ba5fe9-0f45-4378-98bf-8e2a82ec71c3"
        },
        "item": {
          "id": "fe68a9b4-6935-431f-8f93-b83b59135579",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2a3df139-3fb0-42ae-9be9-9b8a0989fd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026fafe0-fcee-4c09-9a71-20fc3efe2fae",
        "cursor": {
          "ref": "bd3f37f4-9842-44ee-b34b-3e2482720cb1",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a9544144-4e20-498e-a182-f2b5f9dae773"
        },
        "item": {
          "id": "026fafe0-fcee-4c09-9a71-20fc3efe2fae",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cb96f914-b4f7-4c00-bdc6-b421046c82bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7199ea08-d8aa-4aa2-abc7-09ee9d22e381",
        "cursor": {
          "ref": "1a4d9a32-8d2c-4e64-8437-0c54f3d1abf2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1d56ede8-fb93-4599-a33c-27ff8fe1711f"
        },
        "item": {
          "id": "7199ea08-d8aa-4aa2-abc7-09ee9d22e381",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "be0ceafb-46f2-4e18-b2dc-8a62cd6ed2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf227e83-392d-44c5-8d77-6e8899d353dd",
        "cursor": {
          "ref": "1926a12b-a845-47bc-9dbc-bd7d636077cf",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e76f9a1f-ccf6-42b5-bd70-b2f91139eb9e"
        },
        "item": {
          "id": "bf227e83-392d-44c5-8d77-6e8899d353dd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "119f1389-5d18-4c80-ab76-b152c6476c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4124b5-940d-441a-a789-8a2f33f5eba3",
        "cursor": {
          "ref": "d7070d7a-b283-4a46-bc4a-29a840c73b1d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e119e9d3-6daf-49a4-9672-4b94fcc7527e"
        },
        "item": {
          "id": "8c4124b5-940d-441a-a789-8a2f33f5eba3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0a5a475e-23bb-4fda-9d68-253020796ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88298474-b52b-49f3-8f43-731b81a42c1b",
        "cursor": {
          "ref": "0be4de8e-3cda-4b4c-9b8c-8a09b2530fec",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "98c7236b-ae3b-40b8-8005-4c993379338e"
        },
        "item": {
          "id": "88298474-b52b-49f3-8f43-731b81a42c1b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cc7f2e68-dde1-4e84-9074-41eec34a3ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7779d9eb-2f96-40ee-a846-e97857d11c6c",
        "cursor": {
          "ref": "9b0e8f06-4209-4d31-8f0d-bd7ba27c5a3b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ddc8db39-cea0-496c-95ab-7c6670d79b98"
        },
        "item": {
          "id": "7779d9eb-2f96-40ee-a846-e97857d11c6c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2145391d-1465-49db-b265-4be7dcd87531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189536a7-1fa7-4ecc-8fe7-0dc873328fc7",
        "cursor": {
          "ref": "d35713e6-ed3d-46c2-891d-a16d6540cf69",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e001ccd5-2ed2-4184-a3ae-0f67c3079181"
        },
        "item": {
          "id": "189536a7-1fa7-4ecc-8fe7-0dc873328fc7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7bbdac6b-9fcc-4656-9680-d55fb8f41c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f3cd7f-d0df-469a-9d12-5092d96aca55",
        "cursor": {
          "ref": "c04c5939-a11e-4dba-b3bc-543318aee965",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "35f4aa2d-13d0-4cb9-b764-74f2d13bc96d"
        },
        "item": {
          "id": "35f3cd7f-d0df-469a-9d12-5092d96aca55",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0e585bac-0077-47f4-b00f-64b1ee7a76a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7dd067-ac1f-4ceb-9d5e-9c2f1c1ef9cb",
        "cursor": {
          "ref": "3e8e9dc0-95fb-4871-8f8c-676f48c8ffbc",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c437bba0-8482-401f-8388-1cd34bf6239f"
        },
        "item": {
          "id": "8b7dd067-ac1f-4ceb-9d5e-9c2f1c1ef9cb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "963c1a3c-bc42-4837-963e-2902d16c8656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cf0de1-0da9-460a-968b-e27e5da7dce3",
        "cursor": {
          "ref": "7288a4ef-e6d3-4636-9995-5eade44de7e9",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e22870b8-b87a-42dc-94f7-0522129b88f9"
        },
        "item": {
          "id": "41cf0de1-0da9-460a-968b-e27e5da7dce3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5960825e-9dd0-4fd0-b5cb-1a963ef8605d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1425c10e-b7ef-4260-b811-45005d913496",
        "cursor": {
          "ref": "5f2cafc7-4e1c-42b8-8596-08355c7576a1",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9076ab37-2ad1-492c-ad2b-a98e68e7bf8b"
        },
        "item": {
          "id": "1425c10e-b7ef-4260-b811-45005d913496",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ad2e1360-8f16-41bf-bef2-bd6ae9c427ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c706ccf6-2024-4d7f-ad7a-070783336340",
        "cursor": {
          "ref": "c8e651e4-daf4-4d56-90af-602941859701",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c5f87329-b527-4a45-8ba5-7784e0fa3442"
        },
        "item": {
          "id": "c706ccf6-2024-4d7f-ad7a-070783336340",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "33943e69-e496-499e-bf2a-3d6a47a1f2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428a1d49-2d6b-44f8-8433-da76207c3b34",
        "cursor": {
          "ref": "ceeeb7cb-719c-4509-8ab0-7d9119370b31",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2eb4a047-9536-45cc-be48-bae48b8d2c58"
        },
        "item": {
          "id": "428a1d49-2d6b-44f8-8433-da76207c3b34",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "975c13b0-3ddf-4de1-bb61-3cedfc39351d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba8800f-dd6e-48dc-a7c1-4c0070886f91",
        "cursor": {
          "ref": "43b1ec97-99c7-44fc-abac-20e61662a910",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e4a43b40-6d2e-41b4-9c08-31ce55d66f80"
        },
        "item": {
          "id": "aba8800f-dd6e-48dc-a7c1-4c0070886f91",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1fdf35ff-b142-44db-9c57-e403cb88e637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c14a62-9857-4a4f-808e-8dd9c4395e32",
        "cursor": {
          "ref": "e8e1aa25-836f-4bc4-b2dd-2a7d16bfe245",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0b97d7de-3cd4-47f5-91c9-c78fb9fb7d9e"
        },
        "item": {
          "id": "15c14a62-9857-4a4f-808e-8dd9c4395e32",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0051a708-18c9-44db-b28d-0ae335db6a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833b06fa-1d55-42fb-8ff8-772b32375bc9",
        "cursor": {
          "ref": "bd36e5af-ea89-44f1-9abc-3bc6897e456a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3b1ccec5-5ba1-481a-af32-bee59a970d49"
        },
        "item": {
          "id": "833b06fa-1d55-42fb-8ff8-772b32375bc9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3aede2f8-ec29-4668-9c71-af2a1847297c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06d820e-08e8-40e2-8336-e33cd0a3409f",
        "cursor": {
          "ref": "ea04d209-0bf7-4394-90f1-27c6b7a2a16a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1cc4782e-0734-4d3d-89ca-15f6dce2c3d6"
        },
        "item": {
          "id": "e06d820e-08e8-40e2-8336-e33cd0a3409f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ed9b29e9-5f07-4aa5-bb20-4c1a0fd1c07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e4c984-16ff-40cc-8e77-2c242ab7703f",
        "cursor": {
          "ref": "49306cc2-9c8d-410a-9b82-ec025e2df044",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7d60e69e-8e89-41bf-b7e5-e5e71abbfd90"
        },
        "item": {
          "id": "81e4c984-16ff-40cc-8e77-2c242ab7703f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5982eb3b-b759-46cd-8403-da2a070a13ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a37bac1-c2ce-4227-8c1a-f260cf2771cc",
        "cursor": {
          "ref": "3dcb59ad-02f0-451e-8c48-3089cc9a4fae",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "61950b35-e23d-4078-9ab8-76cde868cda8"
        },
        "item": {
          "id": "9a37bac1-c2ce-4227-8c1a-f260cf2771cc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1c8e5e2c-216e-4fe1-a70b-b2cf345ce543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1c5903-1299-43e5-9777-e80f6d4afdf9",
        "cursor": {
          "ref": "aa1a12af-74d9-495b-aceb-f94fb852b9af",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "da8944b2-7297-4834-8b24-702dfa0ac6e3"
        },
        "item": {
          "id": "ac1c5903-1299-43e5-9777-e80f6d4afdf9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "add2ea5a-17a0-4850-ba79-93da2c865db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a016c3-6f98-4d56-b0c2-db496a932b49",
        "cursor": {
          "ref": "469a8bd2-d8b1-450b-ab91-f32263736968",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ccb1c8fe-1a02-4c75-827b-583bb8d34b07"
        },
        "item": {
          "id": "77a016c3-6f98-4d56-b0c2-db496a932b49",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e35efc1d-391e-497c-8b03-6aa981d34c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc69ef0-0f94-40ad-b72b-f5c4da5cc0f6",
        "cursor": {
          "ref": "71eb491f-d616-4689-9c1a-dabcc14475a0",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3e6ab68e-c28a-4038-a4ea-9ddb2cdec807"
        },
        "item": {
          "id": "9bc69ef0-0f94-40ad-b72b-f5c4da5cc0f6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2667bae5-0d6c-41c4-9183-0eed2c1816a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beae8452-242a-419b-91a2-467f1ba0944c",
        "cursor": {
          "ref": "a73df4f1-c56f-4db3-83bb-05d612b28695",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3a5b6721-200b-4ba5-b799-e45b197a97b9"
        },
        "item": {
          "id": "beae8452-242a-419b-91a2-467f1ba0944c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d0774662-9a7d-4b7e-950b-c052f0955d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13eb2fa-75ba-4dcc-b7ea-c22822533edd",
        "cursor": {
          "ref": "e8f0c5b4-b6e4-4a3b-94f0-c8713d9361c3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6399d325-df5b-4ce2-98e8-202b61ccc6a6"
        },
        "item": {
          "id": "b13eb2fa-75ba-4dcc-b7ea-c22822533edd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0631447d-d272-4a95-8042-407c2475136e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b67bee-b116-4ba7-b309-a70c3e25e729",
        "cursor": {
          "ref": "7e310daf-fd75-48eb-86ae-e925e3b6ceb3",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "123778ab-07e1-40ba-b498-86ff05b29959"
        },
        "item": {
          "id": "a9b67bee-b116-4ba7-b309-a70c3e25e729",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "decf800f-0e28-4323-bf62-0e6769f0420b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740427bc-1e11-4640-b593-a76580f8ab83",
        "cursor": {
          "ref": "54fdc4b7-4cf4-421e-af0c-16b1885ccdc8",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "38cc6c60-7a51-49fb-a96f-6b9251cc04e1"
        },
        "item": {
          "id": "740427bc-1e11-4640-b593-a76580f8ab83",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6d8e4f97-abeb-4887-9f28-b35e4c14277d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d101cb75-9a63-44fa-97a7-ee11d0a7b3a2",
        "cursor": {
          "ref": "d26ca3f8-3317-48d5-bbc9-99d60b456fb7",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "da5017f0-9090-4a62-a469-50f57203fc3c"
        },
        "item": {
          "id": "d101cb75-9a63-44fa-97a7-ee11d0a7b3a2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0967c6f0-ed1f-4ca7-adb1-623e6f09115d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf4bc4b-082c-432b-bd91-0014fa1da3d6",
        "cursor": {
          "ref": "b3257766-1a01-42b2-a8c2-7708d3acf21e",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a5a488dc-7b20-4744-a79e-d017e4430448"
        },
        "item": {
          "id": "acf4bc4b-082c-432b-bd91-0014fa1da3d6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2c4dde1a-20fb-4c8d-87ec-8670b15df9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5f625f-35e2-4eda-972f-ed8ca8dee22e",
        "cursor": {
          "ref": "db39dbe0-1b64-48d2-813a-a33c004c2f0e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d29bf654-e6ee-40b8-b242-44715de34c12"
        },
        "item": {
          "id": "4a5f625f-35e2-4eda-972f-ed8ca8dee22e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "550dc3cb-81da-4656-bea7-cd149926489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6131a0cb-486b-453c-89c9-b563bd289313",
        "cursor": {
          "ref": "6a816f52-34b0-47b7-bfa9-02f2450a511e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b60f7002-0542-48b3-9727-e589e1bd64d3"
        },
        "item": {
          "id": "6131a0cb-486b-453c-89c9-b563bd289313",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7a563967-ef4e-42e7-9658-420f58161893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fea726f-6230-46cb-bc75-955246358a26",
        "cursor": {
          "ref": "f7e1d06b-66d6-4812-8d2c-ff565eba97bb",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b87391d7-b216-41f8-b92f-c998aab6dab3"
        },
        "item": {
          "id": "9fea726f-6230-46cb-bc75-955246358a26",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "49affb2e-4e3e-4728-ab55-6df4946911cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ae4ffd-030a-46c0-9ba8-fbba5b0b721b",
        "cursor": {
          "ref": "42ebed10-e17f-41fb-9660-3ba8a7a5222a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4de87edf-c9ac-4954-90c2-d2392aae083b"
        },
        "item": {
          "id": "91ae4ffd-030a-46c0-9ba8-fbba5b0b721b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2e20b487-5270-4a83-a575-60e5f2bbfce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea0252a-bf86-4d0e-ad91-5e5d8ec9de4a",
        "cursor": {
          "ref": "c4e548ce-feec-4453-94c9-f516d19b3680",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "976bcd5a-5498-49f1-b002-48ea37c16886"
        },
        "item": {
          "id": "1ea0252a-bf86-4d0e-ad91-5e5d8ec9de4a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "158feb74-d757-42df-b8d2-9517b7cda538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b280c377-980a-475f-8c7f-2f53da9b42ec",
        "cursor": {
          "ref": "567fcb7b-1bb3-4ca3-9e25-adc9182823b9",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "56b526bd-0514-421f-ac3e-34cb909024c6"
        },
        "item": {
          "id": "b280c377-980a-475f-8c7f-2f53da9b42ec",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "abf53a80-7c9f-405c-9c10-6818afeefa78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb0c00a-4b77-4076-b2be-80c470638a11",
        "cursor": {
          "ref": "72b13ab0-9747-46a5-9050-94330a0bb858",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f259b5aa-61ce-4b9c-af16-adbca55df3de"
        },
        "item": {
          "id": "3cb0c00a-4b77-4076-b2be-80c470638a11",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8f7f1985-6757-41be-b280-348372fc3b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168ae75a-2f7e-40cf-a29b-c06241401b73",
        "cursor": {
          "ref": "d207debd-dfc7-4fe3-8d32-770701cc68a5",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "271b2628-178f-4a12-8fa1-8859285b5f55"
        },
        "item": {
          "id": "168ae75a-2f7e-40cf-a29b-c06241401b73",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e4a19a3d-7bcf-4280-be07-d5fd4331da36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef645e39-f2b9-4d31-be47-71b921d12c1c",
        "cursor": {
          "ref": "25e19e26-73a5-4657-96d8-e15a84ba7a79",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1918c060-7e7a-47d4-b591-8379a611aabc"
        },
        "item": {
          "id": "ef645e39-f2b9-4d31-be47-71b921d12c1c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "22735f04-dfad-47a2-95f7-ddac30d394c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee878f8-d5e6-4dde-8d53-4a0a84646465",
        "cursor": {
          "ref": "07bca6c5-e1b2-4d49-ba01-6082634f0eb4",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cf8a0199-b0ab-4f1e-8f47-d0188d9dbfec"
        },
        "item": {
          "id": "4ee878f8-d5e6-4dde-8d53-4a0a84646465",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bf6cf4a0-0152-4159-8f05-95f1bb84b801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6521bd1-5a68-4ee1-bae2-137bc7f0d7c7",
        "cursor": {
          "ref": "93259da1-8637-415c-95f0-7cba808b2427",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b2c891d0-2669-447b-b367-095178a17f6a"
        },
        "item": {
          "id": "c6521bd1-5a68-4ee1-bae2-137bc7f0d7c7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f3a882c0-8103-43a3-83b9-cd7ba58f2514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dd0fef-15ae-4c13-9b37-a8bda7d26658",
        "cursor": {
          "ref": "5d702585-fda7-4ecd-8ae9-6f2684d6fcdb",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6c3c0e94-1017-4a69-aa73-8bec18de5325"
        },
        "item": {
          "id": "22dd0fef-15ae-4c13-9b37-a8bda7d26658",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1e249b1e-22d3-42c1-83d7-203ad727aa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b8384e-2753-4cac-9079-9ccf31a42585",
        "cursor": {
          "ref": "321107b8-9054-460c-873a-65512b23e24b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "65f06b92-463c-423a-ac0a-92018de977b5"
        },
        "item": {
          "id": "d0b8384e-2753-4cac-9079-9ccf31a42585",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3bb56882-bcd4-48a0-bb26-9adeb2df5db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c740142f-af07-41cf-a454-8fc64e415c34",
        "cursor": {
          "ref": "84fe8402-7086-4050-a748-5ea7a64df833",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8f1f2226-5088-4580-8bbe-4923c8e9d225"
        },
        "item": {
          "id": "c740142f-af07-41cf-a454-8fc64e415c34",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2d89ef59-d35b-4247-9a89-3d5aa291db81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12518b7-13a4-4697-84e8-5c8af6787f4e",
        "cursor": {
          "ref": "8287db76-5faf-4822-8b03-7459c0078184",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b65de894-7465-4ca3-86dc-6078759ae3fc"
        },
        "item": {
          "id": "e12518b7-13a4-4697-84e8-5c8af6787f4e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "57e89a1d-a018-49fa-9e85-ad7ec56bc024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4f6af8-3007-4831-9a1f-94d0c2207a18",
        "cursor": {
          "ref": "a2566b72-489b-45a8-bcb3-504e7eb06d95",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "85c6aa9b-4682-4c59-be65-d76d9e7273b1"
        },
        "item": {
          "id": "4d4f6af8-3007-4831-9a1f-94d0c2207a18",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e23230e2-f8ff-43ce-83bc-a0375f8dc1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744b8381-e189-46f6-b5b8-0a9ffdcf0a69",
        "cursor": {
          "ref": "04900ca5-2e1f-44c0-90a3-4328920496d7",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c6d46b74-4214-46ba-b026-8cba8921c062"
        },
        "item": {
          "id": "744b8381-e189-46f6-b5b8-0a9ffdcf0a69",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2b849c62-77fd-4ea2-9009-6b22a5bdbaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25180c66-b645-43cf-89ee-f2192ad3148b",
        "cursor": {
          "ref": "e2e9ce62-5f96-4e4a-a4b5-dbbe75d7d8ff",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "41f6d0af-16a6-41d2-8bc3-6f6a0dce00e1"
        },
        "item": {
          "id": "25180c66-b645-43cf-89ee-f2192ad3148b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "62e98c60-c8a3-4f1c-9a98-e86359c0fc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0b87ac-af86-4726-a790-9022976df9c4",
        "cursor": {
          "ref": "4f583c79-d57c-4b43-b80a-4ea5027827de",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "910e11b6-ff47-405b-811d-39e3eea4cc76"
        },
        "item": {
          "id": "3d0b87ac-af86-4726-a790-9022976df9c4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "84fb134d-c53f-4ca5-a258-255d7a9b1e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eaa0f17-afe6-48c9-9222-b694585181a7",
        "cursor": {
          "ref": "5a51ef8b-c280-4d74-bcec-8425ec316eb8",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4b90f909-e2ce-4187-b7d1-33d57a0c6eed"
        },
        "item": {
          "id": "0eaa0f17-afe6-48c9-9222-b694585181a7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0401d191-ede6-42ee-b6d7-61e911145082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f0d73c-2968-4081-a637-a680e323040b",
        "cursor": {
          "ref": "b3873e4a-4955-44f6-9d3f-af41289b4eca",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b4a6ff92-b56b-4923-a66e-a34f9d8d1d18"
        },
        "item": {
          "id": "40f0d73c-2968-4081-a637-a680e323040b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "68f2b1f7-49ab-450a-a75a-18a5074cfa94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80cf955-3dd8-4e2e-97c8-fcc0571eb42e",
        "cursor": {
          "ref": "6c8d8fcf-af16-4c59-ba11-6d04d522464d",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c4d78bba-ccef-4e39-95c7-7e1f10775e52"
        },
        "item": {
          "id": "d80cf955-3dd8-4e2e-97c8-fcc0571eb42e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f84def4f-fb66-464b-b847-aa52a58d2364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c828e0-c7ba-4cc3-b651-7c2a57bae2aa",
        "cursor": {
          "ref": "40d9473b-3e9a-45fe-9344-aca9c31a8155",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3ccd169b-1e34-4bea-8eac-1c0bbbb86e08"
        },
        "item": {
          "id": "a9c828e0-c7ba-4cc3-b651-7c2a57bae2aa",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8e0ef470-5b18-4fc8-b090-4be87390af71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41c4aeb-fea1-47fd-a1f0-3a7b4be8e925",
        "cursor": {
          "ref": "cf2d0624-ae3f-43ed-bfbf-dbd730303d82",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "11e04662-82a1-4f14-bdde-e35fd96f9531"
        },
        "item": {
          "id": "e41c4aeb-fea1-47fd-a1f0-3a7b4be8e925",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5995d092-220d-4a3b-bf54-20893ca762ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83849cb-7a47-46cc-9917-b94b1df6f112",
        "cursor": {
          "ref": "eb5cb7c5-8533-4b91-84e4-ddd6dfd3eb9a",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b46fba3d-7305-4827-b314-de236e8f97fd"
        },
        "item": {
          "id": "b83849cb-7a47-46cc-9917-b94b1df6f112",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ed776980-0e19-49c7-b990-42dfa2dcfa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5004a2-c091-4158-b38b-0e1fbe432f78",
        "cursor": {
          "ref": "b5400f69-1843-4117-a22e-f2a2e0473177",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "04c5ddae-6895-4bc6-a8bb-60c9a1aec8d2"
        },
        "item": {
          "id": "9c5004a2-c091-4158-b38b-0e1fbe432f78",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6caa651c-c173-49a6-8333-1d68926a55d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebd2a73-9bf7-4200-ade8-a2d294ee2255",
        "cursor": {
          "ref": "74ccef9c-9ab3-4c81-8134-db034b063556",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "86b9cdda-0977-4e3b-862d-a9fe117bc1bb"
        },
        "item": {
          "id": "9ebd2a73-9bf7-4200-ade8-a2d294ee2255",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "acd447c7-7cc1-429c-b501-6713d894601a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3460918f-4dba-4099-9664-775c1ba004b4",
        "cursor": {
          "ref": "cac96a91-1532-4b98-a798-e358cb9b14a5",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "26f6c68c-e317-4fab-9888-d8640e9cedc7"
        },
        "item": {
          "id": "3460918f-4dba-4099-9664-775c1ba004b4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "48a05574-fcd1-4e5a-85d4-1b7b75dfc63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1895f79-e8eb-4124-9eb0-49d426014409",
        "cursor": {
          "ref": "eb507c4c-80e8-4c3d-8b40-ae737affb2f4",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d873c045-96bf-4e43-a3b3-450a8098d1ab"
        },
        "item": {
          "id": "d1895f79-e8eb-4124-9eb0-49d426014409",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f3289bd2-de62-43b8-a62c-19d85306574e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679e2cc3-1ad3-401d-86a1-ca9d5ceb0ccd",
        "cursor": {
          "ref": "f126172a-c522-4c76-9afa-bbc7bb4f9358",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e2c84d86-fff1-4b89-97f5-f330a5b7c6cb"
        },
        "item": {
          "id": "679e2cc3-1ad3-401d-86a1-ca9d5ceb0ccd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "936f7cf2-22bb-4ab3-8d0a-d30a4e40fec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05f7d11-b917-4025-ae84-4170105a8f7c",
        "cursor": {
          "ref": "163c7b66-27eb-4830-bb16-853068a14a68",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "214f4d06-a664-49c5-8121-17705dc3f7c6"
        },
        "item": {
          "id": "e05f7d11-b917-4025-ae84-4170105a8f7c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6fccab45-846e-46f6-a07c-c9ba8bfd7039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32965ead-d149-4907-aeee-a67127046870",
        "cursor": {
          "ref": "9dcedc6e-e9da-4755-95f9-506647d06c61",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e85ad564-df0a-46ba-90b8-37a4f2e7eeac"
        },
        "item": {
          "id": "32965ead-d149-4907-aeee-a67127046870",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6a8824c0-675b-4fb6-bc4b-932d804b6270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ea920d-6556-41a7-91c3-e85d2a621e1b",
        "cursor": {
          "ref": "c24a69d0-4932-43e2-bdc9-23f6942dde4b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "52ea4492-6671-4f3e-b991-a0da2a15ad19"
        },
        "item": {
          "id": "b9ea920d-6556-41a7-91c3-e85d2a621e1b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7c46f3eb-c4ff-4aa9-8b06-fa213a644eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8676e367-0712-4280-b71a-5bbe2be273a2",
        "cursor": {
          "ref": "439f00c2-feaf-4f87-81cd-d3ba58e0a727",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c6a0458f-a15d-4d15-8087-4fcd575c243d"
        },
        "item": {
          "id": "8676e367-0712-4280-b71a-5bbe2be273a2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c15d62c9-d696-4579-87f5-09591e207080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b52af4d-cc62-4255-951b-b7e5379ca5ef",
        "cursor": {
          "ref": "0edbeb09-c955-44ff-a2df-fe4471c265a2",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "468f342a-3101-49ee-9926-967f04ad2cc4"
        },
        "item": {
          "id": "1b52af4d-cc62-4255-951b-b7e5379ca5ef",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "53243112-3001-48ee-ac8f-72c213cea86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fba68b-bb55-4351-ae40-86f45102e525",
        "cursor": {
          "ref": "24dfbc06-8797-40d7-b252-cbacc2bf77dc",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "28c0988b-ebf5-420b-b53b-7a45d29c57cf"
        },
        "item": {
          "id": "24fba68b-bb55-4351-ae40-86f45102e525",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bf5ca442-2816-457c-8e5d-c8f3f8b0a0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc78839d-6849-494d-aa81-708ce4e254f1",
        "cursor": {
          "ref": "8fd772fd-5274-45b7-8676-fdd8b2c384c7",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "67cc17ee-10cd-4041-bd14-d9d6dc4a3e25"
        },
        "item": {
          "id": "fc78839d-6849-494d-aa81-708ce4e254f1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "631cfb12-32d5-4ace-a11f-a19221871c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adf47ba-8eb7-4d16-94a5-28ff367313c3",
        "cursor": {
          "ref": "d576af76-9ace-4142-865f-e0a1f19dfa81",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fb578d8d-1ca6-4128-ad57-3da15a4945fa"
        },
        "item": {
          "id": "2adf47ba-8eb7-4d16-94a5-28ff367313c3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "20655f81-334f-4136-9764-fd32b9b08c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6160b0c-cc66-4e4e-8e36-92d82d128ab0",
        "cursor": {
          "ref": "cc31dceb-b7ad-4a64-9ccd-0187f5d6ab97",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6112f180-97c1-4bbc-a5b0-0ca9f75e4171"
        },
        "item": {
          "id": "a6160b0c-cc66-4e4e-8e36-92d82d128ab0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "be272df9-681f-497c-94b4-ded84b460057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d47cb1-6da4-4e2b-87ca-6452780c14ab",
        "cursor": {
          "ref": "64505a91-a6df-4ded-87da-46607f950cfa",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c2f8cf98-b9bc-46b6-916a-83fdef46608d"
        },
        "item": {
          "id": "98d47cb1-6da4-4e2b-87ca-6452780c14ab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "76a72ff2-581d-4715-9199-bb89a07ac546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e78bb4f-5348-4912-92de-e4c1586f8b10",
        "cursor": {
          "ref": "3ebf0a15-b3c0-4c4f-9d29-9846d89af8cc",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "964cf7fa-e058-44d5-94f4-829e87be2b5e"
        },
        "item": {
          "id": "1e78bb4f-5348-4912-92de-e4c1586f8b10",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "beba1b10-758d-4ff0-bf8b-41f7cd294a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63b7608-2919-46aa-9cf0-1e430ebbb485",
        "cursor": {
          "ref": "8afe8e95-6f9a-4eb6-9a7a-d5fab6d1a794",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9faf74d2-fb78-4a63-aeaf-f2aadcd94bd4"
        },
        "item": {
          "id": "a63b7608-2919-46aa-9cf0-1e430ebbb485",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3b4b5a0c-3ece-4fb1-8d21-e5f6e3cd5ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c530036b-7d57-40d6-bbc8-da3cce2b49c4",
        "cursor": {
          "ref": "cfaca9dc-5bf3-4082-bda9-c8fe49a94251",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fdaa75bd-022d-45a2-8926-82c2d7cab1ea"
        },
        "item": {
          "id": "c530036b-7d57-40d6-bbc8-da3cce2b49c4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ab7c0939-5590-4413-8c90-6fed22d466eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94e702e-3ac6-47de-916c-d3527197d750",
        "cursor": {
          "ref": "11b3c769-fdc7-435d-9341-196089ffb0a3",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b1239aa8-3931-4914-b488-34af02bacc03"
        },
        "item": {
          "id": "e94e702e-3ac6-47de-916c-d3527197d750",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3068d003-a517-4c1a-b962-6e19316c7b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f26dc50-5b4b-4f39-8233-4f4a2d182500",
        "cursor": {
          "ref": "4434f739-3a06-4c91-827c-9d75fad62b15",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4c175b55-ef89-4288-8afb-f5ff3a2507e5"
        },
        "item": {
          "id": "5f26dc50-5b4b-4f39-8233-4f4a2d182500",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "36f4b7c9-9eea-4adf-95aa-1ad7afa48795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0029c152-8a5a-4002-8c58-f5bba591cfd9",
        "cursor": {
          "ref": "d63bd13f-561e-40c6-b5e8-904311ddf7eb",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ff4b7f29-fe68-4e86-844a-e5175b0684fa"
        },
        "item": {
          "id": "0029c152-8a5a-4002-8c58-f5bba591cfd9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "893b0527-d064-40fd-b152-4d2112fea9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6935864e-4bcd-455e-8f0e-ad099c909cbb",
        "cursor": {
          "ref": "a2786b74-2871-4647-9ec9-8b907a4a9fdd",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "56d42cb3-4ccd-446f-be1f-bbf5ad83d5f2"
        },
        "item": {
          "id": "6935864e-4bcd-455e-8f0e-ad099c909cbb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b26b37a3-8b30-4d5d-a912-cf5385c7fe24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af0c592-e4d6-4731-aa72-f6ef72f8c2f1",
        "cursor": {
          "ref": "455fa53f-0e8d-4eb8-bbc3-c864a43a8e88",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d1c78ab1-21dc-46e6-a471-bbf46065ac9e"
        },
        "item": {
          "id": "1af0c592-e4d6-4731-aa72-f6ef72f8c2f1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cad1aab9-a506-414f-a226-e2cf14044001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30725f51-10bd-43ab-8567-b97e00265368",
        "cursor": {
          "ref": "a7a9ae9f-4aa5-4eee-9544-81a8a30e2094",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b62210ea-571d-4aa5-86e2-df8b12acaf7e"
        },
        "item": {
          "id": "30725f51-10bd-43ab-8567-b97e00265368",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8275d09a-a6be-425e-ab82-25817d5c66d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c8681f-9ec3-4a7d-8c9d-375910fab7ed",
        "cursor": {
          "ref": "8d29f348-7c37-4046-9025-7eb93d6bff0e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d86eef5e-47d7-429d-829a-219982dbb0f6"
        },
        "item": {
          "id": "65c8681f-9ec3-4a7d-8c9d-375910fab7ed",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b5aa5375-5a40-4590-92cc-ce1ffe5c0369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325fa743-6606-4d8c-a121-06d1245ee768",
        "cursor": {
          "ref": "ff0788a4-6897-42b0-80e0-f7a3d9888a8c",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8fb5b721-48e8-404d-a508-9ef5abdc4587"
        },
        "item": {
          "id": "325fa743-6606-4d8c-a121-06d1245ee768",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f14f4c61-f32c-45f9-b904-a5a2403cf069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17149460-2727-43c7-b296-912b6db856e0",
        "cursor": {
          "ref": "6c2028b3-106b-4a30-ae1e-1dfac15a8987",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1af6e072-dc4f-46d5-b789-7cfb541fccf2"
        },
        "item": {
          "id": "17149460-2727-43c7-b296-912b6db856e0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2fa58fa2-4377-4524-84ee-7d3e27e1bc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e195af8-dcce-4e8b-b67c-8a1a833023ee",
        "cursor": {
          "ref": "e0de4f8e-5d35-4657-8ac7-45bc504635b9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a9ba95c8-3343-45aa-a794-28360e29e0bf"
        },
        "item": {
          "id": "7e195af8-dcce-4e8b-b67c-8a1a833023ee",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bf4f0081-8017-4b6f-a06b-f227e2bf52bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cd9e08-cd2c-4cd1-bce9-fe6b8bc672f4",
        "cursor": {
          "ref": "596985e2-008c-47ed-98c9-d161c70cef12",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e92e85bb-fc73-4295-88dd-355d375db624"
        },
        "item": {
          "id": "a3cd9e08-cd2c-4cd1-bce9-fe6b8bc672f4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6088e88c-c15d-4d57-afd8-cb6154d309ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c5872d-8b79-44a8-a069-e4a14b96ebf6",
        "cursor": {
          "ref": "56b0741d-3c75-4a9b-9444-47f3ec35d4ab",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6c9c5c57-9a01-473b-8f49-6fd908875459"
        },
        "item": {
          "id": "24c5872d-8b79-44a8-a069-e4a14b96ebf6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4de0af90-443b-4dfa-b0b2-caf2eb0146a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911a19bf-5400-4047-9260-2acff0aeb55b",
        "cursor": {
          "ref": "d9e50f1a-1c92-4ea0-932b-27a4df43a79c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2223b077-9821-440c-89f1-ca51e8b5e065"
        },
        "item": {
          "id": "911a19bf-5400-4047-9260-2acff0aeb55b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d118d40b-5049-46b1-a144-4bd17824cdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77acbd63-3fb4-4d62-96b2-b38629da1c62",
        "cursor": {
          "ref": "21a86206-21af-441d-9194-01ebdffb46f2",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3239a703-b15a-4982-aef5-19ec996f8f08"
        },
        "item": {
          "id": "77acbd63-3fb4-4d62-96b2-b38629da1c62",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4ccb9682-c21f-4e3f-a1a9-fe7dcda3b65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0204333a-add7-4fcd-9abe-5f218a818115",
        "cursor": {
          "ref": "79540bbf-f74f-41dc-9275-688020dc5d1f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "71e97302-a424-4147-ae73-c2009de9b46e"
        },
        "item": {
          "id": "0204333a-add7-4fcd-9abe-5f218a818115",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6c3bd3ca-3005-4326-9c83-8a2c0778ed06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053941e5-1a95-4d35-acf4-31b659dce83b",
        "cursor": {
          "ref": "e947b009-c969-4cda-9bad-21b297a80707",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6efba407-d32e-4009-baa1-d033f148b855"
        },
        "item": {
          "id": "053941e5-1a95-4d35-acf4-31b659dce83b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5566ed8b-0fc7-469d-bd87-96cb50c57ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2779c95f-b851-434d-b8fb-08983848e4af",
        "cursor": {
          "ref": "5221536c-165e-47be-99e9-16cc39151870",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2123fdfc-034d-4c06-a9d6-bbae09667f25"
        },
        "item": {
          "id": "2779c95f-b851-434d-b8fb-08983848e4af",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8474de9a-64ca-4bf6-8964-e33c3e91b7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c96f018-d416-4143-839e-7c07b3b9dee9",
        "cursor": {
          "ref": "dd7e7413-b102-4c2c-bfe8-48a202ec6e29",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "83991253-f713-4556-a6ed-4edaaaab49c4"
        },
        "item": {
          "id": "4c96f018-d416-4143-839e-7c07b3b9dee9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d24293f1-d74a-4a24-9e5b-cf1256325a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d141965-c015-40da-8946-1b690dd35365",
        "cursor": {
          "ref": "730b26cf-4c57-4ad6-b075-7cd895fdcc37",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8d5364b9-3eb8-42ef-a438-99afa6315baa"
        },
        "item": {
          "id": "8d141965-c015-40da-8946-1b690dd35365",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "afc84119-3e82-4b16-a484-e5b1a05dd79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf556ccf-0d71-4b26-87de-417e13862255",
        "cursor": {
          "ref": "34af8881-b5f2-4502-bd00-0cf60513316c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3d8db5b8-9a35-4a69-aa7a-4070d65e1b18"
        },
        "item": {
          "id": "bf556ccf-0d71-4b26-87de-417e13862255",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1dd69225-5fe3-43a7-8e7d-f93d1e8f8b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297bcb9e-07e1-445b-a2fd-77288524523f",
        "cursor": {
          "ref": "0a1a181a-8d60-4682-b1e2-eaae363aae23",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cfe71253-2482-4a64-881a-07f70686afb9"
        },
        "item": {
          "id": "297bcb9e-07e1-445b-a2fd-77288524523f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9caa92ee-7060-4793-9d39-d40c6a6824f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8b3bf4-62ea-4b99-9ad7-d99572b80ef8",
        "cursor": {
          "ref": "e4d63797-3479-4c05-ac75-f76d508044e0",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9e70ee7c-73bc-457c-a708-2d2ffbf754a3"
        },
        "item": {
          "id": "5d8b3bf4-62ea-4b99-9ad7-d99572b80ef8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b5a52059-8da7-4466-b87b-f4bc7293002e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34832675-6fc1-4c57-b57d-13b6246d9ca5",
        "cursor": {
          "ref": "8761c22b-b02f-43e0-a07f-552def556bd5",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4d199ff1-e82d-425a-bb47-dc4e297f489f"
        },
        "item": {
          "id": "34832675-6fc1-4c57-b57d-13b6246d9ca5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d60e807d-3a37-4b33-aa26-8af53a141196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8542934-faca-4a03-9763-5812e6f1615c",
        "cursor": {
          "ref": "1be07f16-0369-4561-b178-022f383e9a83",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5e0d325e-aa42-46d9-ae6d-9a72bb74cbc0"
        },
        "item": {
          "id": "e8542934-faca-4a03-9763-5812e6f1615c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b0985b98-22bc-43a7-8f9b-092376824c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5a154e-03db-4da2-bb30-bc3548e7f701",
        "cursor": {
          "ref": "0b49d525-9cd4-4063-8c96-03b7d80848c8",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f52c80a1-ee4b-4d31-8dfa-dff7df72f4c5"
        },
        "item": {
          "id": "ec5a154e-03db-4da2-bb30-bc3548e7f701",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c7cb4135-5421-48e8-9ba4-48c37e6115bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d3daa5-9028-4587-b873-20e85e257922",
        "cursor": {
          "ref": "c0868239-6a0e-411f-a30b-bf4b95e746c2",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c8244a0f-c46a-4b68-bcc1-8016f89f29eb"
        },
        "item": {
          "id": "34d3daa5-9028-4587-b873-20e85e257922",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3c13941d-7fe5-47a4-9239-f7186f1d958c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953b6677-c7a6-40cc-95ed-38dc33423fe9",
        "cursor": {
          "ref": "fa95a4a7-f004-4ee3-8005-10bf0761a013",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2f5123cf-4e01-4157-8d2f-4fb591ac8e1a"
        },
        "item": {
          "id": "953b6677-c7a6-40cc-95ed-38dc33423fe9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bae6a355-71fd-4568-9b9d-fdda17e87c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ec2e7b-2def-412e-bc50-dc7ad0bed5bb",
        "cursor": {
          "ref": "4f8a9da3-6f45-4200-b32a-18cb3d7a64c6",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "187226b1-ead3-476c-8a20-bac958b3664d"
        },
        "item": {
          "id": "e7ec2e7b-2def-412e-bc50-dc7ad0bed5bb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4a4d7b4e-524e-4648-9c66-eb93bc647598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e01418-9ef2-4d81-8cd8-3f03135799f4",
        "cursor": {
          "ref": "6ef2595a-fb9a-4006-9dc6-bb282f3da80a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "88591da9-bb16-4417-8fc8-a679f547c3cd"
        },
        "item": {
          "id": "78e01418-9ef2-4d81-8cd8-3f03135799f4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a96e14c9-3a74-4443-bca6-03b9257f3786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8131d6-6f07-4db0-a41b-47611c128263",
        "cursor": {
          "ref": "087f1cd9-67bd-42f3-ac1f-0469c620c4e0",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b644534a-3d65-4a53-b4da-f00d7df0c2d6"
        },
        "item": {
          "id": "3d8131d6-6f07-4db0-a41b-47611c128263",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cc435c43-c9f3-4fc0-86fc-6a532c7067ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d4a1e7-39bd-4401-9e4a-60fb45d14336",
        "cursor": {
          "ref": "de45bc05-e53d-431d-8092-bbe52da6b275",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "23f1050d-bd7d-4ee9-94b6-a15de5cefc82"
        },
        "item": {
          "id": "f6d4a1e7-39bd-4401-9e4a-60fb45d14336",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5dd3eb6c-1bd1-4359-b433-20bbd71755b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7af1eae-8bec-4bd3-8f6d-d68b8d484f05",
        "cursor": {
          "ref": "37397043-ff86-4246-b721-f4fd445c3c33",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9b700593-b41f-450b-9fde-51c1a64929fe"
        },
        "item": {
          "id": "b7af1eae-8bec-4bd3-8f6d-d68b8d484f05",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e91ec5db-d0d9-4a64-bedb-d233d7b4d46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f55c81-bf1c-449c-ba93-ea47df314047",
        "cursor": {
          "ref": "6e4ce2e5-084b-4411-90d2-a8692392122c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "417f1afd-32c4-4678-a353-5519d0bc55ef"
        },
        "item": {
          "id": "e4f55c81-bf1c-449c-ba93-ea47df314047",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6e6170f9-0007-40ad-9b4f-7f2739aaf402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d84cdc8-5e4d-4d43-9a75-b4b7eecdc8be",
        "cursor": {
          "ref": "b9c74aa9-7a1c-4b42-a67f-b08378b9547c",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b926a228-440d-45f3-9cbb-95767a97decc"
        },
        "item": {
          "id": "5d84cdc8-5e4d-4d43-9a75-b4b7eecdc8be",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3928a316-1124-4fdc-b332-137420fb0648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded44501-b285-4213-97e6-06a8c05c367a",
        "cursor": {
          "ref": "dbee377a-5223-49c5-9ae6-0bf13b0388e4",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3d51b7b3-9587-434a-b238-fb76a303e6f4"
        },
        "item": {
          "id": "ded44501-b285-4213-97e6-06a8c05c367a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cb816d7c-518a-41a8-9e8b-9bfdf4285739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ea0fc2-72a9-4078-bf04-0e3214d9b2ee",
        "cursor": {
          "ref": "8b08771b-0449-460e-8707-fee1cc6d8388",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "36ca294f-2616-492d-8cf4-c9fa228ca63a"
        },
        "item": {
          "id": "18ea0fc2-72a9-4078-bf04-0e3214d9b2ee",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c07dd96c-5adb-462d-b04b-da025fdd3400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eba42ba-b74c-4c03-a301-399809e85caf",
        "cursor": {
          "ref": "e19ef7f3-42f4-40ca-89aa-7ddfcfe6ad47",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "66f70d49-a9b5-4914-bbff-827766a8bcd6"
        },
        "item": {
          "id": "2eba42ba-b74c-4c03-a301-399809e85caf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "445a6395-5756-4c03-bcc5-07d1c6baac45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7184251b-0483-41a7-b5bf-f4dff6f12402",
        "cursor": {
          "ref": "ab27d4b3-0b53-429c-b8bc-a51ae449a77f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "98bbb60f-40c1-4324-aac9-3e299efbd278"
        },
        "item": {
          "id": "7184251b-0483-41a7-b5bf-f4dff6f12402",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "872b9b77-8628-48d0-97ef-d84688a788b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92c2355-7a25-4479-8537-4a71f464087f",
        "cursor": {
          "ref": "ab8baed6-77b8-43b8-99b9-4dc105b5df7e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0bf00fa0-7b37-41d7-858f-8991ab422971"
        },
        "item": {
          "id": "a92c2355-7a25-4479-8537-4a71f464087f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "25300520-3f09-400f-b810-28cdff71beff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93185e87-24fb-4a4d-b86b-28f3411aae10",
        "cursor": {
          "ref": "0ab624dd-a76a-453f-abe8-e737dbd1e0a3",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2c59ac19-af6e-4dea-b9e9-172e2bc65c72"
        },
        "item": {
          "id": "93185e87-24fb-4a4d-b86b-28f3411aae10",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "697603d3-a801-478b-8f31-ff36a45e7138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888e70a7-3626-466a-822b-56ef349623ee",
        "cursor": {
          "ref": "946ac0d0-8856-4917-8179-f2bcd9493f88",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "229f5ef9-c21c-4401-b9e3-836837fa7c09"
        },
        "item": {
          "id": "888e70a7-3626-466a-822b-56ef349623ee",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bf511885-0be2-47bc-a509-4cb13ec3fb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c10dcee-0897-4d49-8646-caa3e999a217",
        "cursor": {
          "ref": "562e78a8-0655-44d3-af4c-c3545adb067d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "30038a7e-7f90-404a-9d37-cd285dd5567d"
        },
        "item": {
          "id": "7c10dcee-0897-4d49-8646-caa3e999a217",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "92f9e809-f238-4a9b-9356-831feb70af5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4639b817-3321-4866-9aa6-dac3eccdaed1",
        "cursor": {
          "ref": "737be7e1-2437-4f64-8ff7-e4edbfea114f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "04f37dd1-39ab-4a34-8e14-76225c76f70b"
        },
        "item": {
          "id": "4639b817-3321-4866-9aa6-dac3eccdaed1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "64672a54-133e-4c75-a09b-cc586b5173fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6131fd7-3747-4607-8425-f50fa70d869a",
        "cursor": {
          "ref": "e928d991-cd29-42de-b671-75969228738c",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a7e78294-2671-4895-a7a9-d88175139c5d"
        },
        "item": {
          "id": "a6131fd7-3747-4607-8425-f50fa70d869a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "407c45c1-e7be-403a-9a94-277ce6285da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe266dc-8d33-4645-ad8d-b9bb8e0c904d",
        "cursor": {
          "ref": "1590c635-716d-4834-a72e-5f2b7523d4ab",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0f77c809-4c82-486d-a468-9434219fc3a6"
        },
        "item": {
          "id": "abe266dc-8d33-4645-ad8d-b9bb8e0c904d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c3497e6f-e9ae-46c2-a7a9-5b359affa265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d04ead-9103-4106-a134-1121685ef554",
        "cursor": {
          "ref": "b7a5ab52-f6c8-4e3e-ad97-d65fa5536454",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fe6cb993-eff9-4eaf-b493-786772e05832"
        },
        "item": {
          "id": "a6d04ead-9103-4106-a134-1121685ef554",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "98ac34c3-847c-4141-9d61-241a0b16acb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc048039-198e-4fbc-9569-210419ec7a2e",
        "cursor": {
          "ref": "5cde598a-2631-4706-833a-04c9d61dd891",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "65bdcbbf-6105-44f2-8e16-c84dbdb10a43"
        },
        "item": {
          "id": "dc048039-198e-4fbc-9569-210419ec7a2e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "81e3ee29-f3df-4b81-b165-c923ef6dda13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8c2292-253b-44d4-ac6a-90777b15a077",
        "cursor": {
          "ref": "bc9be704-d039-45ea-beaf-8f84ce2c82c1",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1e5ad6ea-741c-4511-aea7-7d0d9451229f"
        },
        "item": {
          "id": "ed8c2292-253b-44d4-ac6a-90777b15a077",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b098e0de-d57d-4bec-895c-c1570d72f227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1a747b-5bc6-4d63-903e-e06410359a14",
        "cursor": {
          "ref": "0ed936c9-bbb7-4d3f-9853-cbc794d562ba",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "dee22acc-bdd2-4808-afd2-49921ebacf51"
        },
        "item": {
          "id": "0f1a747b-5bc6-4d63-903e-e06410359a14",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "462b064d-b643-4524-af79-1cd0d3bc19ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbe02ab-97a5-47a2-87dc-37b664ce8891",
        "cursor": {
          "ref": "b2a7535a-54fa-4d7b-bfd2-f46a8a68a50e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e05dfe4e-4fd8-4687-aac3-e0b4cf8cd586"
        },
        "item": {
          "id": "5bbe02ab-97a5-47a2-87dc-37b664ce8891",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3f125249-353d-431a-ac4d-e9c5adbd52a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01c20d2-59c7-4260-bbf2-631fd1b8c9bc",
        "cursor": {
          "ref": "0f66b0f8-bcd2-41f8-98f1-c1c94dd2cff0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b2ce9629-78fe-433d-9a18-d0605101dc71"
        },
        "item": {
          "id": "b01c20d2-59c7-4260-bbf2-631fd1b8c9bc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "efe4c5fa-40ff-4f35-9599-62d626ee9c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e857601a-5d9f-402f-a8fc-123c7920e190",
        "cursor": {
          "ref": "44318325-7743-429f-867a-1940759e0fdf",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8290eef9-400c-4ea9-a267-6612e5bd622c"
        },
        "item": {
          "id": "e857601a-5d9f-402f-a8fc-123c7920e190",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a87a4e28-6dc0-4a2a-8c2c-d781c37c9f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081b2680-d93a-440e-b004-6f5de20e9952",
        "cursor": {
          "ref": "70c55088-fea7-4850-b96b-64f8877d690d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "95170a51-0bac-4c30-a3aa-7212ab663df2"
        },
        "item": {
          "id": "081b2680-d93a-440e-b004-6f5de20e9952",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a5cbeb10-52b4-4b44-a109-2cd3791beb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5dbe9c-4e69-461e-916f-86de98723159",
        "cursor": {
          "ref": "bb2a36f9-9718-487d-8f15-6fd43f87247f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d0db42e3-3958-42bf-963c-89919314d3d9"
        },
        "item": {
          "id": "7c5dbe9c-4e69-461e-916f-86de98723159",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c131872e-946c-4485-81a4-f46295668406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acad2410-ef80-4fc7-958e-15296eba4fe7",
        "cursor": {
          "ref": "7978bd96-597d-4659-b8b5-43b02b48b0db",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c376050f-1b6e-403e-9d95-0b3ff4ab7329"
        },
        "item": {
          "id": "acad2410-ef80-4fc7-958e-15296eba4fe7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "16c2396b-16e0-41d4-b94d-faff3914c865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4422002d-3ff5-47ce-ada2-c4c953f1d695",
        "cursor": {
          "ref": "427a3b2b-9eae-41fc-bc3d-51157695ace2",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "090accf7-35c8-430a-a120-695ae8eadf32"
        },
        "item": {
          "id": "4422002d-3ff5-47ce-ada2-c4c953f1d695",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9433fe81-d5cd-4a72-b1c9-ddaca174274f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6213281e-1797-4d85-8870-a7771287bbed",
        "cursor": {
          "ref": "0b6ff946-5d08-4074-a5e6-19fdd3fbc81f",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f17b919b-67dc-4e24-9884-5b25b2cf1953"
        },
        "item": {
          "id": "6213281e-1797-4d85-8870-a7771287bbed",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c0ebd38c-ba51-4ff8-9f82-8246d53b681a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c34de55-1832-4688-9a16-d813e1d028ef",
        "cursor": {
          "ref": "e333e6ee-2262-4e51-9067-587904fd52db",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "84b67a2a-ab57-4935-8958-b72ad5b31bd9"
        },
        "item": {
          "id": "8c34de55-1832-4688-9a16-d813e1d028ef",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "06e330a8-ceef-4408-a672-353b9196d063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e12d5b-942c-4889-8396-c492255476d5",
        "cursor": {
          "ref": "02635f09-9054-43be-89ff-c6a10bf24697",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "efe6152e-fc43-40fe-9ae6-8a6d180bc4f0"
        },
        "item": {
          "id": "d6e12d5b-942c-4889-8396-c492255476d5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ca2de55a-6d94-4525-91c5-26226e9626da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554e558a-6510-4693-99ab-52639c838c8d",
        "cursor": {
          "ref": "707edb0d-cf65-4518-8acc-f9c641a354e1",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "96f9a35a-b302-4d7f-9e7d-b70018d06586"
        },
        "item": {
          "id": "554e558a-6510-4693-99ab-52639c838c8d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "08d2fcf5-63be-4372-8409-67c60ae41457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4946f1-0444-4a7c-9213-9e2e92577075",
        "cursor": {
          "ref": "e74a4d3c-7c29-47c8-a029-0c6ebb901b24",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "da076f06-f4d6-4b25-9556-f659e0e90720"
        },
        "item": {
          "id": "2d4946f1-0444-4a7c-9213-9e2e92577075",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "006fd288-c7e4-46f0-bc34-f3e5cddb6596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbd512a-3565-4a6e-846f-14cf43eb3e3d",
        "cursor": {
          "ref": "c985d38a-1bd1-40c7-a40e-a283854f55ee",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "04d35300-4430-4aa6-a296-1a8edc08b885"
        },
        "item": {
          "id": "2bbd512a-3565-4a6e-846f-14cf43eb3e3d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c16dcc6b-e431-4ca3-a5cf-7e57225991cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c03887-2e64-41bf-8b7d-99339ca076a9",
        "cursor": {
          "ref": "7e49cdb9-6c46-49c1-979c-23b77120c36d",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4c4022b2-4536-45c9-ac66-345eaf85b3ce"
        },
        "item": {
          "id": "07c03887-2e64-41bf-8b7d-99339ca076a9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c2924377-076a-4a87-980d-023dcdd3ab0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76efd9e7-d2a9-403a-aec2-15ed0e2b96cd",
        "cursor": {
          "ref": "b3cc9d54-bdb6-4bc5-b29d-cb83709ad21a",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "059fcefb-f277-406a-a631-30b76e6f7024"
        },
        "item": {
          "id": "76efd9e7-d2a9-403a-aec2-15ed0e2b96cd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e07fcf43-2c90-4c4b-b929-42bb680ba57b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e67d92-c81f-4ce0-b884-834d6415d8fe",
        "cursor": {
          "ref": "fd769e49-44e6-47f0-b0c7-50303f6773b4",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "17ec0e22-2b3e-4f32-9c0b-59f92fc4a109"
        },
        "item": {
          "id": "18e67d92-c81f-4ce0-b884-834d6415d8fe",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "61d87942-d27e-4b34-84f0-c121b5b87883",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0e38fd-a575-4b90-98fa-962cb23bd066",
        "cursor": {
          "ref": "6a2bcc74-8d65-42c6-a614-bcdce04c900d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "adf571c1-1c3c-49db-ba18-4b0174d3d794"
        },
        "item": {
          "id": "4e0e38fd-a575-4b90-98fa-962cb23bd066",
          "name": "credentials_verify"
        },
        "response": {
          "id": "34916d5f-c9a3-49df-a014-9a756ee85b0b",
          "status": "OK",
          "code": 200,
          "responseTime": 1341,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "758fead8-3fe1-473d-b3db-94d3805da3c1",
        "cursor": {
          "ref": "763f8250-1f5b-4a09-9b08-b43e8da24a32",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1df33461-0192-4fb6-86f5-89828dc5fc3f"
        },
        "item": {
          "id": "758fead8-3fe1-473d-b3db-94d3805da3c1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d23c1485-07c3-4bf1-a131-6045e1284381",
          "status": "OK",
          "code": 200,
          "responseTime": 1312,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aeb1a21-5dce-4ade-b206-d90be5049119",
        "cursor": {
          "ref": "b1cd737c-2dbb-4a35-b2fd-4948249fd759",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f2e959e6-e863-450d-ade4-18325dcbe932"
        },
        "item": {
          "id": "3aeb1a21-5dce-4ade-b206-d90be5049119",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "51fb2a35-8e09-4bed-947e-fde91c8f9a5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aeb1a21-5dce-4ade-b206-d90be5049119",
        "cursor": {
          "ref": "b1cd737c-2dbb-4a35-b2fd-4948249fd759",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f2e959e6-e863-450d-ade4-18325dcbe932"
        },
        "item": {
          "id": "3aeb1a21-5dce-4ade-b206-d90be5049119",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "51fb2a35-8e09-4bed-947e-fde91c8f9a5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef188631-27a3-4623-b923-23953587e85e",
        "cursor": {
          "ref": "b36a78e2-7e63-4eff-b6f5-1314c1339af7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cff0d57c-ca67-4975-83d9-b0133571c6aa"
        },
        "item": {
          "id": "ef188631-27a3-4623-b923-23953587e85e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b2cf9637-7d92-4d32-a57e-802722f69620",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffdaae9-35f7-4d3a-8474-a52df6eefbd5",
        "cursor": {
          "ref": "5f7eb901-62c5-4a73-85fe-a252214c1f31",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "653b04e1-0139-4346-958f-de5dc947ca17"
        },
        "item": {
          "id": "cffdaae9-35f7-4d3a-8474-a52df6eefbd5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "76bc011e-451e-4d0f-8387-f9b89b093cbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}