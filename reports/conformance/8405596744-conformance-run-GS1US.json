{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "95094dab-08c6-4d61-aa10-2b6fa81547c9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "06112031-74fb-4b63-980f-7b76d4c89deb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c74b7b16-d3c2-4659-ae47-8b688a3e30bc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e0e7c317-ccce-4ae2-a35a-98718289b926"
                }
              }
            ]
          },
          {
            "id": "1522ac04-1e1e-4008-8fe8-865cacdd6ab6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b67a0e9-1ce3-43a8-a3de-d7700f167378",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "731a49d5-35b0-4ca2-a593-958c47b17a8d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0fb4cd52-c226-42b5-bf96-28318e2c7bde",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3a387f82-7492-4360-aa75-16585dc50b14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60e59f66-2481-4188-b566-b353bedaa336",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b4bfd37-a697-4367-8a60-e58b48c651dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3d5155a-cc3d-4ffa-bc8e-e62ad3813a99"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2530d6af-dc43-4501-9c8f-5e910c0facee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d421d4c-59f4-4f56-a361-295b86df6208"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "26504275-6505-4ebb-8acc-e1bb43222038",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3475d56d-245c-4711-8b7e-71ab487f3aa9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f41cc81f-ccf9-4e14-8797-8d28b5d75bb5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5b919c7b-adeb-4345-a7be-dd9801381961"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e65c884-010c-46d0-999f-e11235fd9549",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1384b07-5822-4438-afca-e3942333165b"
            }
          }
        ]
      },
      {
        "id": "60c02af2-69ed-4c0f-8076-8bae55ad7824",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "81c606fe-0f93-48ee-b979-b6419ee4a70f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f71e4dd4-b51b-4142-8c43-e7b14f269303",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07bbae88-0bc7-47e0-a0ad-03fd0f84cddb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff38852-f8a4-45a6-8e28-1d535d12b1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3cbbf31-bab1-4401-9ec2-3f4d6d6bb81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3199c6-f352-4d59-8031-e034ab2ac309",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e436b82a-a211-45e8-a521-100993e6a8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f96e38c9-b970-4f62-b3ac-ff05be039de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc4ee78-3426-4216-94e1-df23c6b3a07b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5800de7-ea2b-43a0-86f6-e8c465d3b371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83af9dac-1530-44c5-aa4f-9d5ff175460f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b06a0756-592e-4e57-be41-ef8115852ff0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aacd35e9-03d7-4712-978c-7b664b259370",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b131d3-b70f-49a9-9d7f-c8921436f166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "820a0fad-40f2-4a6b-bbf1-14e9b1321058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d72fa79-584c-4774-bb61-da5dceaa3096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68002dd1-6cbc-4b81-bfea-090f621cc2e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "25fdf57a-aea2-4c43-977c-c7107cfb450a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c94321d2-b48a-4737-8f1b-68f8794ea506",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf78ccce-c3db-4945-a81a-ade40d322b95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c71c3a7f-1e72-41f6-b923-4706ac6ca9fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38817697-cd0b-4563-98a2-3a88b7e1b7bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3f4d2292-72c9-4221-958b-02aff2c4c2ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b0c26fa-59e1-49a9-9923-7eea98d2aa69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6b64b0f-36af-455b-958b-549f789636f9"
            }
          }
        ]
      },
      {
        "id": "ba8e1501-7282-481e-ac5e-bc7c4fb20392",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b21f0185-294c-4a63-afb4-eecddd74c207",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d87689a-f947-488e-8011-9909aa99d7bd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1765b2e3-972f-4743-b1bd-f7ef1892b46c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcdc055-f0d4-47ce-a7b5-38690564d8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f7cc1a-4d20-48a1-ae7c-1f2c8e64b45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6588a2-c1be-424a-85b9-58b452aa6b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8576826f-ea99-43cd-8a15-2024714d68dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f795f510-7c44-414d-8261-133512127e0b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081e94ba-1814-4253-bf65-b38813518e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fd44ba-47da-406f-af16-7114c7da1371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74893e1-31de-499d-8255-717f5611e914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a48c7a6d-fb89-48a5-ba36-fd4131b7bd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e293509-c860-4d52-9912-a0a886627cfb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc34d4ba-55dd-4f8d-8e20-f444ff16dd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fce83ea-670a-45f0-8066-28367399bd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759bd1b7-0c1a-41d4-9b6b-e1bdd1957716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e05212a8-b93d-42b9-9133-6dd60b2d60ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7fa82f-97d9-4f05-903c-a4f548744a3d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69c6a1d-0790-49ff-8ff0-a15e30ab0b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5f2c84-010b-4c02-9517-dfd4a6a14e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5c0f43-3245-49d6-8950-d8b57a137ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c086fdcf-f89b-464d-a5ac-bfe6d82a83a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7998a00c-afae-4824-b175-13aec7698106",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9228173-fc5b-4c9c-8b33-dd6e9edae777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00eb13b2-eee3-4c1a-bc08-1970a9de9e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1312097c-97bc-4c78-a7fc-13666a83bb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6af8f5a-1441-44b9-b011-1d8a7421f84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01af3d9c-225c-4487-a01a-30eea486a3d2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d332217-354c-4963-a3fb-69c6e3869ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8394311d-c153-4a3f-9782-151a3d38cc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e560bf04-c133-4a14-a1f7-0dab43b296fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecc59ada-9961-4a42-af66-b08e637aff09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42f060e-ff92-40ee-b5e4-a592bf56e277",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834cc2c1-94c6-4bec-8329-5ade2136125b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91aeae3e-c5e8-4f10-a6ce-885ab8625c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf0ee60-b466-4754-a9ab-c178da54730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "651400d4-5c65-488e-aeca-99b72de83c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84198868-f63b-45e5-8070-f457ab274a62",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dbffe9-7c80-4c00-8f28-6f8b2e9385d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009e3b6c-d32b-4647-bebb-dd4714bcb63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd54873-9804-481b-8a8a-2fa7d453bea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34160e9a-338b-4b60-9931-e22620577e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8846297-81f2-43a5-8618-29af341a0351",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143667c1-349b-4aa5-bb5c-3dd8d26f8a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774de361-5bd8-4000-9b8c-1eb372c30725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64506b3d-b451-4253-99ec-cd939da36a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6048f8f-99d4-40cd-b135-c0525ac6be41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c100c0-bc83-4d20-9daf-8738257c79aa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec5d241-b072-4137-8487-f25b11e45c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6780d044-4407-4cde-8a44-d4b446839ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaea157c-fe64-41e6-9f75-d49835fd5872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0da1dc7e-628c-41fd-91f2-70301493431a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764d4ee1-7d4a-4d49-8566-0c1e50cad50a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6977dace-3261-4ef4-8db6-cd2f343d5997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31560c15-4f96-46f9-a5a6-4bb745c8e112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f28af7-6ac0-4973-b9f2-519b73c382f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8cc2f88-76fd-429b-b476-f8b5c9efb1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edab10b-c933-40da-aea7-1949f8a6c757",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473d3e46-d390-4ea1-b6f5-fe1ec36bc5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9bbb05-e60a-4e5b-b77b-0d7599428423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854d2c09-0137-4690-b8d6-88320ce09e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efe588f9-034a-410a-b66f-b3eca856cca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de1f91e-42dd-4738-80a0-df0a87a96bc5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c845ac-e6bd-457e-a574-d8f12881cd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9ff70a-4013-4527-a142-f124894ba1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd62b3b-9f4d-4bb0-b41c-0132bcd8dbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39c1de11-b20a-4c8e-85ee-ebdde2426bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba754a38-aca6-411f-b750-7f734bc4f492",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05b257b-dbc0-4592-ab0f-fb7646132c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecdf698-c864-4931-9301-fd4b0e002620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fddcab5-c3e3-43d7-83bd-bd6b5a19bf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c2cd9d6-b046-4d97-bf38-c6094a2cd645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3f92bb-de8f-403a-b21a-a812d641e6f5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820a371e-2c2f-48ce-9dca-fb79a9bc5376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48208173-8db9-4f1c-80ec-b97ad2e29e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cc7c4a-d4b8-4d38-b2fc-769baf08db70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "741f1c79-89e4-485c-be8d-39da259e95bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15a66c3-9571-44cd-9a37-25f409d1e368",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be9cd4a-1941-42a6-85fa-9ce9f44490db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9909bc8-94ae-4e4a-8b07-9c13e7c56b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142e728c-3512-4542-a963-8a7c5ce0f3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b073758-b140-4dff-9782-f05348ccf07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f645d10-1722-445c-b5a8-581d93dca9a9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9e9b89-43b0-4a22-9aa4-ef3dc26c213e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435c3e28-4534-4621-992f-3e7a59cf579e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17595a0-4683-49cf-b957-f1a046563214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfd9241c-f7a2-4ef2-bccb-ae484a324ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd510de-519c-462f-a397-9ba01eea7900",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b824e1-0ed5-488b-a4e5-f97b5d0973b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7770ab-f3ca-4b8a-b2e2-97a49f791f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdd84d8-76ae-4454-bd4c-d4c66d7dd740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c69fd6b-818f-4259-bbd0-68e7979c8b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abddf898-c6de-471e-951e-c6445c90e09d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b62fea-08da-478f-9d12-15da6797c7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea91443-1ad5-41fd-999b-15d92d35088d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83801c71-f7e5-46f1-9324-cb49dc9b9bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "664bf9b5-51e2-4bb9-9052-409594eed580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ee032e-7c32-4e99-93fc-b6a65cfa1e23",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34dde13-505d-414e-8b4c-e96b714093c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d261ca7-3804-4cb5-8f4b-b7ff0d42844e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f8b5e7-acc3-45b1-aa62-e90a403ebb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23909345-3c58-4162-a6f4-8da6add48e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44041969-9802-41db-b22d-9d324b481731",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d68cc1c-1979-420e-b96e-0bde49a912e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66249fa-b80e-49d1-a385-50aa52ee2d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0017c3fe-f4ee-4656-8dec-e587d3cf9800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c36d4543-c81b-4987-8aef-13d75c9a6367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71842bb8-c121-4f6c-afcd-53e5a01f09d0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43d8fb9-bcf1-4a63-84f1-a9f4876fded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20e0be2-b557-4b41-a8c7-561fe3567a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dab256-a9a3-420c-b67f-425a74631a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "869f9c74-a8d0-42d6-9ca6-cb244754f50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5323961-3b08-48bc-979d-744010e8ba0a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed791127-0433-4bd4-ba5b-804628ed4363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06471028-fa34-4058-b1fc-dab3cc3a08f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b60f0e-3c1b-4632-ac20-18741cdea858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81883839-ec7c-4e1c-b077-42bb69e6e101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc98e151-2f92-4e4d-9200-ddfdba47a153",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3b2bcc-8630-4312-8674-053866f51ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ef4a51-3af1-4d9c-b1ad-24c074dace11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cdc14e-c0ca-463f-9dd0-530ed9aad9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d0fc57-6e4b-49db-a7ab-86bf429a0827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc930d9-b2f8-4b36-8d76-e5a7f651d732",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0715672-0e45-4a0a-acd3-5640c4ec075e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979506d5-2189-45b5-ae42-680ee13ab6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bf1998-c9a7-4acf-b2ea-ad7757c875a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5ef286-8716-475e-93c5-80bc3d00188a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88b5f66-d17d-4fa4-9d7a-8f6a0f1b6343",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81c0d55-fb02-4b31-a4e8-b695e66bc529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46c35eb-01dd-4c88-bcfc-08b90467b062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0879ee-bed6-4d18-ad56-abef91d9b658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e55516d3-6060-4c7a-a6f1-407f38614354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a34bdea-25ed-465f-930d-93d5d43e745d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba50da1c-3458-49ba-abd1-bf782d091359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6851372-c626-481d-9d33-faadaec41c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91e3b90-5be7-46eb-bbef-38cd87f1f7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7d9af7-3f37-490a-b6f4-d895fc6b989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf1c2a7-b4bb-4a94-a0db-28ff38335b4a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8fa673-8acd-4b57-b7a9-857b2b392766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8e66d9-fca0-4310-b38c-e52b57f7ac3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46388b6-7df4-4795-8212-b6fac8e30564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3243bb5-d725-4fd3-a68c-9a484de48126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c2a13b-a212-4c98-8991-0891dc7f8547",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7731fb-af6f-4179-9708-fbc534bb5813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1900f57b-9105-4cfd-9ad1-dd09d3834380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c0a89c-f846-463d-aeb2-ad16b95dddb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d16953f8-d355-44de-8eca-9da919ff47bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f27b186-7f56-494d-ad8e-59fc55177778",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7193fc62-03ae-4ed7-84df-2f0b62f23139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44d0852-b70b-4fd2-9f77-95623536555e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3ff943-baf6-41a4-aeaa-bcc55b1988f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "303b38aa-e88e-42a2-a8e1-6647db19994e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec63048a-e3e1-4d28-8bad-781e68d8b816",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053c51a1-9592-4147-b8b7-39268ada8788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfde532-ace0-40e6-aebb-0d27713dbaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e31186-e6bf-4ec2-a145-b8957ee35828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0821f633-9efd-4633-a16b-87404c692eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1617ac9-abb5-47c3-9208-fc08989171ac",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e8cba4-99a6-4798-9b94-880af23d78df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bde8e3-9c98-408c-b358-35e504dcf957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6db1a2-8eaa-4d37-a1b3-31a12687339a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13b959b1-e606-4346-b099-6ea228acf135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39ffa11-281b-4b1c-9213-03c0ea706ce6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbea10e1-173c-4f54-b469-91ccdd3b0006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37926894-e76d-4abd-9c76-a9db90712710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b48a32-2e68-482a-a957-f10a1bdf8ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be83291d-7359-4415-9937-c3221b8faffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b181e302-8b50-4830-b4c9-e503ac531b6e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b15e7a-b4ca-4154-a6a3-f6e2611aa915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc7dd27-8651-42f3-844e-982e12442e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b10f5b-9241-4f17-bfa9-6929433a788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d41f314f-e89c-41e2-8b89-c979eccb5eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c0ca33-120a-4389-83df-731ba4871483",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1416c393-07f5-4c20-af8c-b30c0c1767c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd3a0d8-5aac-46fe-84db-73e3d6f6455c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d065b5db-6804-4426-9027-7d34d05d802a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6df6bbda-7173-4929-90a0-eeb9acda9973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65e5fa0-e946-4aa4-91a9-5c42e01400c8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ffa0d1-a8dc-4fcf-a2e8-b39beed18339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ae847d4-d797-491c-a466-ee4e69f7f419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec9a0fe-1519-446c-8482-3f619d2d167e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0cb12d-742a-4f0f-8fab-f2e3f870a3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cefc50-bca5-4ee2-b5bd-bb967ca6898b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c06412-e383-4c88-8977-56aca9b6e205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636a300e-feee-464f-82a7-24a52dc6081b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb4b97d-8f3c-4d43-b51a-7f63beb06e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b302f41b-7701-4c5b-aee2-2f6c664f847e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2a4ae0-a592-41d8-828f-8fe55f4d109d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4452f1f0-a788-44d8-a664-d6f5082b7fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94503be5-e02e-48f5-86ff-2f6200689a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f746f51-6055-4cd1-b4ec-41b23174b36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f06c6f5d-2289-4ac6-8665-b7d210b55cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4359938-77e8-4ad5-bc31-ca99d836c971",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3c1880-d925-404b-acfa-6fb989596ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a889024-978a-41de-8f6c-e0e5a65f5d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecb4c5d-f660-4915-802d-38a1a8f73ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b24ae71-01a1-4b97-aba0-5c3a0ebb8b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1634a4-cbdc-4f75-9eb3-5efdced31539",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e956418-03f6-4d95-b434-5ab93aa2dc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d982122-8c48-4400-92d2-d51a370b53ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb7d921-1890-45b7-a0cb-e66a97696f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2573af59-cef2-4bf9-b687-c87e3cd115f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab82a71c-1722-405b-a6f9-da7872e8cc80",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f106ef9a-3515-4038-b7f5-e607abc51852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3782b61-87db-4949-b433-1d1a14c4c04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d7a9eb-256a-45ce-8965-900fe4809065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "112cc94f-1455-4a56-be64-32661efbe4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f387f9-8078-453a-8fb4-52b9fb494f7e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34bc190-c891-4755-8457-24ca3990af30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9787f7bf-4fae-4392-a08c-979025fc9996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfc6d5f-53ad-4e59-afd0-d4f4a308cafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbeffd4-c630-44c3-8ba0-96b41e386cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f54d7c1-8e37-4ad3-86ae-3ce8a210339b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b873af-8c0f-4cdc-ae88-69be4496fbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de806f65-8fa1-4d4a-86a6-3a92e08506c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a227babf-2458-4273-a3c9-3042af96e257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "975b56a0-518a-4865-977a-f88a83de4323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d62016-820b-4d50-8478-a4bf98acb859",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8315b5-b1d7-4710-8d18-ed3650bd2ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41e523e-bf0f-4f5d-a8be-56fadc47fe78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f464de9e-359e-429d-853f-ccad037448b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2af40f98-3121-4cfc-b23e-7a617b47f58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3594a62-029d-4b03-8739-70fcb1990f8a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39a8e2d-25c3-4aa9-93d9-ef1a61eb6c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c04e2b-e64d-4db9-a360-3e13399887ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85321755-5ee8-48fb-b658-4468735fd374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0b4341-d0c0-411a-aee2-8019473d25f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1826c985-ed2a-47b5-ac4c-c284b5e80913",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb1f5ae-59ec-4fe4-aac4-0a0adba41476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a0df07-2c90-40f6-be81-1ab2163d4b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2180a842-eb5e-4a2a-86f3-cfa7bbdbf762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "659497bd-df34-4371-a712-bdf3f2061c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda1f274-9d79-459d-a819-c88c76897529",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd3c3f3-1dda-411a-ac6b-7183fa137346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76279c1-376a-43a7-8750-8acfffdf5aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fd85ac-fdf2-4f65-a204-93c6feef3584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e02b4c-4c98-44e7-b804-d3ef4cc29b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b3b080-5f75-43dc-bb0a-efa3664d2104",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f058867d-50ff-44a4-a5c8-60014c2452e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d8a22e-e4ec-47c2-a656-bfe1440d1143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3d3fa0-1d24-4849-bb4a-be1af30bbced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d28ceeb7-c4a9-4373-8468-480bf5bcc4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d8fc6e-e0b6-476a-b127-4cef5804c556",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904d0a14-251c-4899-b63a-5a6cb66315ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d865df2-8e04-4e6d-bc8c-b0edc72dcfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f331212a-f536-4dde-bbf4-6c3c810d6857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebafa244-18ea-49e4-9730-092ea2166f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34810106-f312-4e99-823b-b864553f3931",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88117cb7-d337-400d-a7a0-e8b54e308c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b48d18-aa9b-4fe9-81f0-589db56fc5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9cff6c-85b4-4d53-8f0d-0b82aa929db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c898d05-6934-4059-9b18-533647abd68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5915cbe5-e0e8-4f86-aa9a-f7550c633960",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c693041-178b-4053-8557-f81b77d72676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccb91b5-fa47-4f8f-b683-9bb2d90e2a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0aae17-5a0c-4146-805c-f48b4ffcbc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f63c0f8f-6e3b-429c-9532-ee60a7c7de68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d4e601-a0a5-4e9f-bf08-62c72f303724",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce352f7-b852-4e74-bbe8-8d3ddc103382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619ecc17-6c5c-44ae-9ca4-13d506944fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a737b2-12b3-4837-b3b2-42ba26afb21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "314181d5-8946-4dc3-ac36-a7098e9e2435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b183f33d-5e78-4b22-addb-161c5cd883dd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b80f7e4-9218-4b00-b509-d052fbb8353e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84501c33-3f37-4a93-bec6-d8849519cbbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee8592f-1256-4ef6-a982-f35ce708c51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d289723-cd1c-4431-b470-d8333502d8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff52fcf4-4aff-4e1f-a0b9-63218ba8dca2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb2e6e5-1bd7-4868-b2a7-e6ca259691d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936c4a7d-acab-4084-80c7-a011d473a611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ea2867-c811-4769-8887-29be95b918b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a23c730-63cf-4332-8337-af90cb4467c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3fe7ab-2f50-43c6-b7c3-cea783268a03",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08f3ce4-c41d-4f02-898e-28462c3de002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c52890b-4690-42d7-a3ad-de885f801551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6d6bdc-72ad-4e7c-8c68-9f8d132313dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a0f543-1ef4-432b-9e65-ae75a75f7d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eb0cdb-9f39-4a22-b642-7634975426ce",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7be27f-c85e-4485-9f4d-07b4d364148f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03dc9674-7c88-4c8d-8bb6-b8ea5f5a1fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad5c87d-ddb0-437d-b395-b3e1563de724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8d0d9e-36e6-4da9-993c-cdc5a582c9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c9e333-569a-4631-aa47-27a67b119771",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252b55d1-ff21-4a0c-8126-f94a20cb3328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f20f355-b841-46b4-9fa6-472f7ecbe9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2aab00-0369-44ee-8c83-d30a2b73a7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67d1d4bc-d5bc-422a-bd00-091a7e2d6101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a58a65-4cb2-493d-afb2-3fa0720b219e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c60d2f-61a6-4156-b005-7c4f30cbd478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0514e2-727b-4593-81bb-92a57e7fd911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe3bbc3-da7e-4a09-97ef-fb495c379892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a85ad2e-932a-4f53-9dbe-045903ca95a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a717624-e7e9-451e-a3b1-67a6b39a404f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0461485-b012-4786-b3d1-2a6e2dca9733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ee564d-c0ec-4e7d-99f6-33190f3db094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe45ac6-7720-4627-a562-4eed434afaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b42c6767-0414-4fab-9a6b-97d13e1124a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0233983f-8016-4415-9b4a-824a6e098873",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8855d98c-d1e9-4416-b39e-1455eb00e6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd04419d-c047-41c0-be7f-301c454d0c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e29446-7052-442b-8023-046f3a9382d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "757d2994-b235-457b-839f-f5c84b133398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b2930f-de38-4d29-ae10-43f8eac48808",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b85bf31-df7a-4673-b88d-d0baab2880be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4d490d-78b6-48be-be6d-91a095ec185a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d391bb13-6585-4d23-b4b1-9595e642115a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d48c63b2-2e49-472c-bc7a-891e07c052fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abe0d4f-ff82-44bd-bc5b-0c8bb167e192",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eca2a4a-923c-4c7b-8888-29b7d39e9c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e2e1d3-c3e4-42b4-9447-4baf9041ab19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9307c7-3a2d-4776-bd50-df036fd5f23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "845af16f-5277-4d33-92bd-437b99bf08cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81080765-d8d4-4362-bb65-77f8768b52c0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b13810-09db-4767-bad2-4672a548fc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654b8d32-5daa-41c1-9a1c-67fbcc6d1e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a844e3ec-be00-4f4c-a9be-11ef46073e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "207ba486-b88f-4cde-bce6-e6052ad0d611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c91f222-c99a-4d1b-951d-b6f7aeddde09",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d62598-c74a-4c91-a0b8-29ee7fe45c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4506e252-c7ec-40aa-b8c8-1a47fd191c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d557e4-5e13-46b4-87a6-05b68640140b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fac46daf-3bca-48bc-87f9-2aab2e3b096e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6180a9-aa76-435a-a564-e12abdef43ae",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf65792b-13c4-4df2-9a7c-e8cbe7216884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43354bf5-3a7c-4e9c-ab06-6465ee7a7b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64b0027-b4a9-432b-aac3-1b258c1bbae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba073445-ae48-4710-8b17-32fbf2101354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa24c19-fa4c-44e4-b40c-5d56011c8009",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ce47a4-4ae6-45bb-a269-2c03122e4f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106a9eb2-efe1-40d4-bdce-75be0bd33620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186f2d00-6a70-4d30-8a36-ebc4069b3cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54d49d80-0a4d-4ace-b847-34374178e95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdfcee0-1141-4a68-bf3e-fd69088a1c70",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e534a88-b438-4af7-94b2-c4cde7eb13b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668f8bb0-7423-43ef-aef6-cfd42dfa59e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456cea39-c4ce-41db-ab6c-ab573d1d142e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26de07b2-2f0a-42b3-b977-635d3c3b33a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd9f34a-576a-4731-a249-657f3bd18b82",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990e2cff-0f47-4432-9a4e-f7aca8769d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb7bf32-cdf1-460c-8572-61d157ca867c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5bf5dd-8ff0-4fdc-b111-f2c8575385ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b944555-f607-419c-9f80-b53c02f3c421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fbdd46-596e-406a-b58f-95d242666442",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec71b61-5d79-4310-b113-038e2d69d18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df716a6-b86e-4254-96b2-1de398b8f17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bd8bcd-615b-4c8a-bc13-654aea024b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9582b169-410a-4e99-981b-a3951c7807c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160630fb-8269-49dd-b0fa-8a399f1f31fe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2f6f45-d740-4358-a38d-4885b65f7359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89800a78-e0f6-4108-9585-40ee084b05e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6882e3bd-b842-4ee1-9ca9-5f482b132fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a9f145-d2a8-4507-8340-85ced6d2cdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a8078e-dc78-4e44-9e09-18779641144c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da25449-028d-4c08-98c1-8462657c18d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521d8bf8-1ee4-4056-b9d5-677dd398d1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44783454-3cea-43e2-ace8-f553ed85f259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7056aabc-633c-4ce4-9d33-b4b37481c0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61adf3d8-2e9f-44d8-b795-74ae7b0aeeeb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb922d4-2a73-4fbd-ab04-057718bf530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe6a92c-ea69-46db-9182-ec7841b05102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2671ee-e274-4750-9201-6abbf8cf2d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a62387b1-1c7f-4313-9ae0-994898de9750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15d1a89-a703-4df7-b8a9-668b20cef587",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97c276b-1600-4931-a268-0be6441bc1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35235a8c-cdec-4853-bb7e-a183d3ee5284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f0f073-1ac2-4451-a738-51cce7e42a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5689fa1-7ed3-4abc-85f4-f5488c612a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357b8a86-edd5-414c-95c5-b984df03b11f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8968de-be45-4947-a493-0a91890bc7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0249bd9d-2d96-46e5-98f5-2f63e6bd13e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd99a755-8d1e-498d-928f-d8ec65828bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4411d99-5397-4f23-80c3-59effac833ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59a8246-f717-4021-b4e0-61ea74dc02af",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d17838-9fb9-4e77-8dbf-bb85dc3d6b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2415ad1c-c858-49d0-a5d1-6cef030d4e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43c7a74-3d4b-48f5-aa4d-b91833f64bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dcb266b-607e-4d37-9267-eec572f43474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0860ce-8480-4500-ad2f-ceb1abc91708",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8a59cc-7d83-474d-b964-08811b7f3c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f551f16-163a-40fb-a904-1e04c9f484d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67c8bf4-2897-415c-9062-7bf9f4eb3c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f04ca287-f8a0-4e72-abd0-816016e26f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0517da51-e3db-4c47-8e92-1bba5ef9dc99",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6c3da7-1c8c-43af-a4e1-861a553f68cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fcb597-0a4f-4c8e-b414-ec522768c483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d604b891-80e6-4422-9b9e-488a0f24a4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b6a29e-b35c-470e-959d-b19e92b2954c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c98ec8-5a09-44dd-861b-7cf76e898d9f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d27206-6ce2-4b29-86bf-3f1a525cc0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffa87c3-1e51-4c4b-974b-d1c3e67966c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3f6d8d-a240-47b4-b030-deb2a4463efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20672fa8-7dd2-4019-954e-4685343911c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49a2136-59c7-42f0-aafa-ac623a8700cb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98df2358-b828-4a55-b2f7-ede8ed7e5ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1549f49b-6ef0-45d5-ba80-ef8b976edf1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4292924b-0efd-4219-8479-fde493201013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8613995c-a2bb-4efa-a6ab-b1a15a235cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0b67a9-d4e9-486c-87f4-b5f67b15e549",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662e292b-7445-4acf-a0f6-9eb06696c630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dddc27-ad01-4535-aa48-019a2720e7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8d4064-c03a-4fd1-87f2-1af9d13b376c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd7f2a5-ead1-4887-9983-abc72e8930ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76db8b72-56c9-48d5-bf20-5a80ef8c26c8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4895aab6-2e64-415e-940b-956f41f03e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880adda4-eb55-4c56-b6b5-6ccbf34ee5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488fab6b-0129-4493-a628-e716a4c088b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "58ea56a2-ce63-420d-a692-6801368c45f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685c5135-591e-439d-91e2-9eea262a58cb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26507ff6-3c87-416e-8228-c789d65101c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24e8275-520f-47c3-a5c1-814a1758d064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfe7858-781e-42a0-953b-3144e8ff2ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7acee4fe-4408-40f7-a635-ca4b55a05422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8894fc6e-34c7-4461-a09e-3edfe6be49b7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd42681-c538-4fd5-b50e-d712a3387e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b792d28a-f7e8-4d08-9596-3f424c0fe159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034fd757-7b4c-4c3e-b8ae-a49d491d5013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89b9c7b1-82ae-43f3-9f2d-b65bbf79d32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aec86ad-7509-42a5-8862-974cb6c2c3d3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8c35d7-769a-4b92-9c8e-884dd6bb00b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83c6cbc-4da5-405e-bb96-f216f8d58377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab81741-7442-47ce-b73d-50a453593ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df17a1f5-bf52-4d6a-86d8-b5ba77a5b99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa306376-ab43-4bbd-98f9-4749ad1b42de",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea464f2-a1d4-4038-92d8-8a0b39748804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e25488-4e53-438a-ad9e-57e9602eee78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a5f616-05d5-42de-87a3-d55163780586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87c9575b-55de-4560-b49f-ef2bebd159f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fd6164-ca51-463e-8c52-25e9a8a74856",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6331df-0613-4549-bcc6-f05b9c768fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e98c3a-1592-4db2-ba40-a3510776b266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13990c54-d534-4fe9-a3fd-925e29adf1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9585bbd7-c639-4902-ac67-e6214b462b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff5b5a3-083b-4b43-b731-50c16141417f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe19602-616f-4c39-b98f-4beda6924a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20040366-9bb6-4fc1-8b65-d25dcd853a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8666c0f-d42b-4693-9f53-2ced2713e1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7172bfb-5a50-4136-8611-d6dc98ddf823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422e4f32-4934-49f0-b13a-8adab0589ad0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde677a2-943c-4401-9625-28ace3da8147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03134f6-809e-43fb-ad4b-10688d4cd5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6588f261-61ee-406b-9b73-ecb7ea3b871f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61ff2fb4-c1af-4397-a0b5-0ab808325ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12e3300-33d6-4ad6-a658-9ba6483117c8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095675e6-792e-414e-be01-4db4ab2ea5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fee204-6a86-4759-9613-41dea5613b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2709710b-1639-4a28-a12e-4426cb2419ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "42377442-47d2-4a95-b313-e67c775c8c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c5839a-4f88-4c40-a460-a1cfe6a36846",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafe5318-6fcb-420a-8973-c4b3001e2ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5265cd0b-693b-4f1b-877f-f06d583a5fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402bd971-cdc9-45d3-892c-989db3387aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5216224b-d1e2-4db0-9499-a26681bcecde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b527b221-8274-4b41-8dc6-721723b5c376",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de105a2a-321c-4bec-8008-fa9e75c9df16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae22632-c77a-48ba-b2bb-ba4ff6f6c5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6783b470-dfc4-4c78-872f-d80ceb9f1134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1792f60-24b3-4035-848d-d55dc3cbb53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84afc586-8535-4c1a-ae99-db5ac40ef1e3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb14b63-aed5-408c-aa15-2c27e16235b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f8536ee7-75b1-42f3-9d66-e40b1183469d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70956a75-1efa-407c-bea2-1a6a34eb7d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "50626c63-bc91-4667-b7a1-81c1f06329ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "54549a5f-d051-40ed-bbdf-916fa06a4315",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97596df1-8d9d-4faa-b252-8421898daa46",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45835901-f515-4c81-b8b7-4e7c41cc9c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fff1e135-063b-4a61-ac00-b8ad72672d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758a5a6f-6895-4299-acd5-2e612c46bf94",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "579489bc-8e1e-43fc-bd20-f089b61f55e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88d3fb18-c607-4f6f-92d7-021c52c49272",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d4481fc-6704-43f1-b3b3-a73aa95af4b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4cb2d74-9507-428b-af16-e9dfc4896acf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07a47dfb-14db-41f0-af1b-a3676c3a26c8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82e03380-3c26-4dd1-bfef-e2655d90de1f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0f7eb28-5569-4d12-a33c-1c17f15daaa3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8fea5d00-be7b-4249-9908-d7f237d30ada",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5cea429-c70f-407a-ac16-cd7c99e0ee15"
                }
              }
            ]
          },
          {
            "id": "cae09020-8228-485d-b7a4-7cd97ceeb204",
            "name": "Positive Testing",
            "item": [
              {
                "id": "025aa96a-939c-4dea-a0d6-274a87bcccc2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "72bbbc16-6748-4a45-bda1-57c2b3b26527",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a71297-50eb-4acc-8c7b-a660bd1937ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "06fb3445-6344-4716-97d5-0f25d8bc2bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0ed837-2370-4349-afa3-8830635bf4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f6360b-74eb-4f50-87b1-f28200bb3bd5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a5c539a-1f8d-4948-bc8b-bbbc83bf10eb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cc2d316-ca32-4a28-bf63-4d4eaa31782f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41d37cb6-1647-4964-bcc7-e464f70d4cca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01a30056-9204-4759-8b19-fbd06174b46e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dae56691-8e45-4604-8be9-8bd28e9b28d1"
                    }
                  }
                ]
              },
              {
                "id": "abdd665d-a55d-4a7b-bbea-e062811b23b5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e277097-3819-493e-bf0b-abfef6240a71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82e6da6d-c6eb-4a01-9b41-31128e6d8633"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3e879de-e3a4-4c6b-9574-4717f0357283",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91762627-f4ae-46bf-ad3b-ea66360e8bb6"
                    }
                  }
                ]
              },
              {
                "id": "4a5746da-6903-44d5-b975-e21266f7c16b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4e4f5c7-a90d-4eae-bae8-eba8885119ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "906691ce-a628-4f1c-8a63-684b43bce761"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6d0672d-10e7-4b92-a439-13d5e5e277a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0aaa177-0961-40ad-9fbf-bf6cd5788136"
                    }
                  }
                ]
              },
              {
                "id": "6cbe0e5e-a855-4cab-917d-bd669c09fcc2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cec29e69-ec10-4933-9a05-babf22918ead",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a338ebf-8d6f-4c60-aa9d-a5a284fdf700"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ad5a7fb-569f-4891-b388-8bf19e276358",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "638677aa-1349-4793-91a9-31acc6ce333d"
                    }
                  }
                ]
              },
              {
                "id": "425aabbf-ad64-4bee-be81-62f8f464ff36",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "946d20c0-2752-42f6-93bb-c347e9121da6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6540e657-1d6d-4968-8298-6cb783d85b45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d4d078e-8595-4f6a-b12d-adeb12141892",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "476bcd3d-bd1f-40af-abf6-f6d1dc3d1fa5"
                    }
                  }
                ]
              },
              {
                "id": "79b02e38-f6ed-4473-a3c3-4b2ac693728d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1de3c229-4182-4a87-88e0-d239e81dda72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c50f71a9-c359-40a1-88e8-3b6f02899068"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "435152e8-b657-46dc-8915-d18e757e4609",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6fe868d0-5e46-482b-ad72-68ba35041095"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7320a030-dc18-49fa-baca-6ac313804029",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15db39c5-be03-4ef4-bbdf-5adcbc87f6ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0696cb2f-699c-46ee-bb44-775d724bd27f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28b1404f-d0d1-4797-bcdb-0fac878e7ffd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8bcfb5f-46c4-4666-9ee0-4cf936b90c92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ce965c1a-9470-447a-9bba-bb6e5ef90aad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45fd8475-2489-4889-a938-ef38c38b5528",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7508108-8683-448e-b698-06c303fbfba9"
            }
          }
        ]
      },
      {
        "id": "eda84065-5db2-408e-9043-5895da9e229a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2383f5b1-c2f0-40e5-85b7-69c58b943c09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04e3660c-4323-46ab-a93c-90c2577f4291",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4e93314a-ee96-4df7-83dd-e974b1667a47",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2fcbfa-ecbd-481a-b087-20b378e68ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b253d732-1db7-4408-8cc2-3fe65264163b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10eca4c-004c-4121-9cf8-5b8f4509dcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e741884-03b2-431e-98d3-bf23bebe650f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97249388-bbd4-4dd5-8a47-06fe51913017",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd59714-ac2b-4ffa-97ec-532c35b08e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32a6a07-9033-4bce-8701-e2a55df93a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f32557f-56e0-4e23-9bae-0195e07ff329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3fe205-21b4-4302-b08e-69986ee7e2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f743efd-e62c-46ba-9b22-a870346c7eef",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7858c8-85e5-4c63-9b6e-a1a7788fab9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e47960f-fbf5-4e89-949a-c341948ffa35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd719fb0-4fce-49c5-8798-a54d511e75d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "745f4479-b0e3-4a4c-b897-0c74912440ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3bc5ca-5a97-4f66-a5b6-31893ca5d150",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4bdd43-14f7-4e17-8e48-d8396e3e7df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7412ef8-38ef-4bbf-bd3f-a1639ece1f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ba9836-887d-47b7-9ff6-db52a8e5d3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac5780d-a74b-4302-8a47-28ef09f924cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd2806d-2954-42fb-808c-51f5c33c9f70",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbb2eb8-8a68-4575-a3c5-e2aac74f4be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f09b9a7-bf87-4dfe-be8e-662cd49ded45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fc72cb-fcd4-4b23-8308-b58b1f82d94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e160206b-adac-47bf-8776-b654a3c539ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fda0e5-5ed7-42e9-b030-6f060c697c0e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccd3f5e-8c9a-4930-92b5-4396c95d7cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6db3a8-8737-4ac6-8ee6-62b0e5bd5c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da3361b-bc57-40cb-a7b1-444b0afdd424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbf119d-1c4a-4d52-abff-fed092407e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1d0712-c521-40ea-8680-b0a553fa6aee",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a66b15-1d42-4cf1-96d9-fad53664d235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e069653-ff35-4141-9d38-bcb952b08eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7c91aa-cd94-4ba4-98c1-5e0fa896e60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a620db4e-3fce-48cf-ad24-192f82d46bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0d7a5c-2872-4297-a07d-265c38b19a6c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2801c1a-7f70-423c-b723-b7a64428297d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1844ea7e-364f-441a-9c28-c60823ecf697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bc6ffb-63e3-42b1-9b5a-232e735b4c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db03da5f-a074-447b-955d-9da157d8cc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7bae2c-1dcc-49f7-b771-65dada8f48ed",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83481dd7-b08a-4948-80e2-83ddf8585a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cf9ec1-c6d8-452c-a80f-014543e410a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb72fbe-cfd4-4dcd-b5d0-f4ae6f781c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0681d347-681c-4329-82e4-b04904c3993e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e2efb9-7a34-4793-91e6-b244f936813f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f1cc55-2daf-405f-8977-7789255b8aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b934cf61-97e5-422e-a58c-0fdae5b5cdc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7c47b4-9c23-4fba-ae7c-66797032ee93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0311371c-c228-4029-97f1-4e3fbc9729a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8090265c-8ebe-4313-ae7c-61e615d49c07",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f052aa93-6db8-473d-9dbd-a69961eee424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc9d953-b44d-4d1f-8902-6e6ec804d20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdac040-1c16-43b8-a2c3-d1ec574527b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "20ea5f16-4985-49ca-b810-296c5bffb5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1987ecf-b766-4347-8b4b-6e147283092a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdabe08-4b8e-4fc5-8b91-9b0df12a6392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89957d08-7814-4af1-aa29-a19d73d5c4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffecf922-7607-46e8-a809-ef2c0f269d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb6c3e0-2c2a-4d3d-b511-9f211ff65974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63736f0c-a27e-4c1c-838d-71e74075a8ce",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abad825-dc01-4be1-ab32-b18aad824329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6deea1cc-1d2f-4504-866b-9d743fac0286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40083817-e911-4d55-a04a-8bb0a9e4692e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a120bd1a-f5bd-4439-a32a-aada91d8a655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f477ca-10f3-4dcf-aaea-4c78b728d542",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18a2ea6-89ef-464a-8b34-369feb97de42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360b7139-4c37-4caa-94be-d8d1f689f603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cce127-ec27-45c6-8254-e522d345c049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "df522ed7-d5c6-4af2-b831-4de46ade0d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2ac60c-a7ef-493b-8295-9bf88366ebf6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff478f5-ddd2-440d-b995-bb069a09d96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffead72c-8932-456f-b327-27e741f0d30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7aa5c00-10c6-4ddc-9f64-8180256d73c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9720530-51a2-4071-8eeb-af7439efd638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce1ca1a-4487-45c9-aa86-b7ccd6aa5b59",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58299cb2-ba7d-45f1-80ff-0042dbf5fd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67faaab7-7f83-4047-9295-643ce7df4bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363c8ec1-5046-42a5-97e1-394f604f6bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec25975-e41c-441e-a9f8-2ed6b6536983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f58af12-8030-43e6-b6fd-39392c2329a3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39ccd4e-d478-4e1f-87a1-c07cb98cb223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dc4ff8-38a8-4c7a-91ae-8a3ebe9bda09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8617d5e0-6d5a-4a49-ab13-08a269c32328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "499e83b3-8ccf-4064-8737-7caa75cd057d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf798a2-7b70-4062-a2c8-5237e79babab",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71899d13-79b1-4161-b606-9a31bfdaad1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f5467a-60d3-490d-a52c-92b59c64f9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63657fac-9fbe-4d77-989e-c3346f644a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca18dd87-ac02-4944-bb6f-f04f4d16822c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ae5b98-bd9b-4205-8b48-bec208a02b8a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517b0100-79f5-4bbe-937e-f718c9724c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336f786e-376e-49aa-9bbb-9aa2f88ab903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dbdd44-cda3-46d2-9e5e-827b6852b682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "789cb83c-22c3-44d3-bf26-37857927c81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ac16e5-2b0a-4076-962c-35bbaa7ecb0d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7b3ea1-bfd8-47d6-a0e4-dc17671c261d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5170dd45-6854-4db0-8300-50c69dfc8f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e54466b-2053-43ee-95b6-d28a73ab7034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71711589-5b36-4dda-bf8e-cc2bd2f058b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45f0bdf-43a4-48be-b37b-9d08d159f468",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad71924-8eb0-48b7-bd0c-7fd9a2810f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fe672f-174d-484f-be45-cbad61854b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c738dfad-9c62-4ccd-9557-176e5483c4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc69c1b-5224-4943-a9ea-d99dea721df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7f40d0-7fc1-43ec-8243-ca4954054504",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cafb10-f99c-4830-81b2-25b78facc14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789ca981-b01a-47a6-a097-757f23b277cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bed2c5-7116-45fe-a20d-3a6046ab664c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "121d3141-e89b-4a23-8111-ab0aaca89652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c76cbd-f725-4ac8-abcc-e6cfbf0d017f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce60176-6c3b-4cf2-b618-9bab15702044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fd5686-8418-4c13-81e0-6ff32c557b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b89a954-55aa-4c58-ba66-daa31b061724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2dcdda2-7d50-430a-9cbb-98c11f6c3a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d83d824-3be6-481e-84a1-0d30ea7541ee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03957e7f-1334-4cb9-9ca2-1fc2c85c2d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3b6050-cc95-4617-bea9-922955e278cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc4a78b-0021-480c-8df5-c94ffcb0050b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7f93c9-0854-4269-b34c-83180572e035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc290533-49f4-4158-96ce-59d760c742b9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f69d8e-1a1b-455f-826e-60e44c138410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7df4a6-c148-4e09-9067-7614250396c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5815b48b-d815-4fff-a067-db9fde22e7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50d0780-1dcf-435a-90ff-217edf78cb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1155ccb2-6694-4ed9-bddf-54078cf3c6f6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a5271a-7f29-44a1-9e04-2a5b40d5283c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46940dac-6e55-4719-8c6c-ee5160db2dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1008bbb4-d89e-46e5-b81a-1b0294a3892b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b1d17e-7f56-4889-90b2-f80a8f0baaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79497109-3986-415a-9ef8-0c06118361bb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a61229-f2e1-4edf-a64f-add980752158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5090d3-0701-4055-90ea-4fc7ff138ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37671fa2-4569-467a-b5ce-5fca119a617f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82343624-0c79-48b7-8dc2-4887cc9c9c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc9309d-ed4f-4030-b335-2d9a167fa901",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e9ff18-02bd-4c77-b22a-858e7e7b701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce317145-b9cd-4dd8-ad45-76262ca6f3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80adf828-bc7d-4d11-a178-2c20c647aeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75f76d39-3d83-4510-a89a-8df5e5ba1117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff46ef9-8626-4358-b43c-56261934f549",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21e717b-344c-4048-98eb-bb90bba62800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c33216-a805-4caf-a305-3c1406b01be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effe9cec-cfc2-44e3-a51c-8c53562690b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "034c8ae8-1907-406a-ab02-f3f6b19a1264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95956c9b-aac8-48f6-9f8a-a2c1eaaaba97",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e350a51b-0866-48d9-9a0d-bb0f49812504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599ad1f2-0d80-4364-a04e-0c7ff6f3b998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5791839b-8fc1-48b4-bb77-1127369a9064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7701ad8d-6379-49a9-a486-c0154cb8527d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d4b350-172c-4e6b-ac01-ae9e6917275d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5202fb6f-e840-4e0b-af2f-8694606cb6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e94e8d2-684b-402e-a408-a555b7230d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9ab87c-c3a7-4ff7-b769-66ca9c821df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5c11ef-0a48-47fa-bb81-ef4ed1c46a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c643fda-5610-413f-b92e-af32105909ee",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75c388e-b028-47ea-abd2-f00f4dc29f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da3381e-afa6-4ed5-abc1-ffe9175ea2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ad91f4-e219-4b9c-b750-afddec07d802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdc609a-c923-4154-a625-47b9441f19f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df1b2939-b366-43e1-99bd-8f85a2aed186",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9902f13b-65e4-4bec-98da-4de971ebce24",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1985fd19-55e0-49b7-aa84-0220c51a8fde",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1271b4-f837-42af-a287-c1ac34d99d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290fa4d5-24ce-413d-a11b-085d204e8519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c211d37-6aea-4381-a082-6c09c4e6840f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eca9906a-0cb3-4b5c-bfb9-c67c5e67e706",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e11b3ce-7a47-4be5-955d-644a19cc84dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e55cdc2e-a8e7-43d5-a614-4f663fbd3edf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71d926ef-f6f7-4aba-96a0-3db032858b42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "412ace77-c06e-489d-8377-7c3e42232fcd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eaa9aaa2-e4e9-45e7-ae97-9df5ce1d2147"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27dc1d93-20ab-4a29-a9e2-5df0153c0e9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd33b6f1-e805-4b6e-a93a-1ee63f9e81bb"
            }
          }
        ]
      },
      {
        "id": "b78e6343-9555-4e8d-afb0-e592f7300bfd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bd2c2086-6ac0-4a09-88f1-972f595c8a80",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07dce70f-50f0-480e-a147-3dede25b4ea4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7655bf2a-0de2-4fb0-b660-cf10d0332f43",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af16a291-bdc9-49fa-b72d-8999b0e7ddb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11a3bb2-051b-41b5-9531-339c8b1d9a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf32eaf-ff5a-4327-b986-3f05ee0d78d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f4d0d4-3b65-4128-a103-9a4175b72ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc41bb2f-671a-4382-83c6-63183f3bcbb8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83da18d-5722-4ad1-9e17-a1f1a8bd9ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534bd362-b01d-42f3-a557-c955a323963c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9582f000-cd41-43c3-816f-95303875497a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "072270e4-3208-4310-be01-ab10be2bf1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcbc3b3-8a7a-410e-9ad8-ea8e7505edd3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89353b41-8680-4083-a431-d8fdcd18cd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c5ecfa-0e03-4265-b8ea-a4de604d456b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b20c118-3311-48eb-8202-06359b85be38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa7a6a7-63a6-4ead-b059-81e147d341b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c70834-c0ad-4ae8-9306-43984879ef14",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a9ac56-2cba-4564-854d-ae701710c424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888efe18-df12-47c2-86e9-d66ce3bf33a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920ccf1f-b723-466a-8f84-3909b8acd23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b53be827-82bd-4bdb-b62b-d06f0c4e893a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c93836b-d388-4358-935f-63098823fab9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969c2028-e6bc-4c62-b497-42db1e2b298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc009bfb-9a54-47ad-a4cb-6dceaeb8b91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1eabf3-fe77-46f0-a6f1-9ffb93dd963e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57a2896d-1ce0-46dd-81fe-6b8528299462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092c1669-64f9-41cc-a6c2-85845fa58488",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83022c27-e947-409a-aa6d-f77f453975e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d917621d-4036-4017-b990-3c7bfc5e03fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d0b7f6-1a45-4448-a457-4503cb7df0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0633bbdd-d382-4bf4-ae39-2f6c8ac75023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d12aee-a066-46d5-b8ef-cdc653bbbc71",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182544c0-f670-41a8-92ad-547be71ba7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6273ba2-de9a-4bf6-912a-109f17d53d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f4ab1e-a370-449d-b78c-b10a73528519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf664e8-8dd0-44fe-bbe3-814da65c9fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a52caa-1735-4999-a5c2-5e135fb26448",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b5fb61-d720-425a-9263-ee47464eb484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfea336-b963-4da9-be4c-6f5896949e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6718da-b516-4685-b476-dd14be728cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14308199-9018-42fa-aa5f-5928139136b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3412a2dc-ff74-43a9-a330-4cbb044bd9f6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9d5c4c-1292-4422-a1f7-92462a6ac07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9384a45-05b0-4ffb-bd03-01d77fe50d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a3805e-89b0-4dfd-9315-32b94663d08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "894c5a76-76b3-42f2-87bb-30931b617d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727ff969-9772-49c4-bfcb-6582f4ab1832",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f02bd43-c0d6-40f1-877c-b2540957e50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265b9c48-2bb4-47ae-8f12-5e4aab4f5723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ee95ed-665e-413f-bf6a-cd4b4dcc8e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5563e02b-ee83-4660-b039-7ac993c0cd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0057a10a-0654-44d7-9048-aebb28e1f8d7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d44c784-918c-48b1-871d-4a7df3a9bebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea478ab3-73b9-418e-96bd-6443681e5ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b419e9f8-c852-476c-9be7-2b4f2726dfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "560f2ed3-b89c-4abd-ac03-0041c5a85204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fec453-bc2d-4d0d-a75d-a0824e39681b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dee575-b3d2-4056-8b9e-e07108e90e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ecb76b6-1f2b-4c23-ac5e-91b69f54da2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413b82dd-b554-4a53-80ac-c166b524a6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e22ea4bd-f105-474f-83e2-811ab5b5c1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66c03cf-c95d-442d-adf3-45d27a19d72b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac36f51-0cde-40a6-bfe2-bac9d4adc72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1279a9-8e25-4586-bc6e-2dd84726c413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2257f750-0dfa-4869-bd73-906a7bbe9ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a365c427-dd2d-41c3-ab1b-c4c9dc98b223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a182532a-9baa-4418-b375-1ba42253d8f6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ce7f71-f621-446a-9f92-7babee2e1e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cadbd1-0598-41b4-b989-bd0e919ef08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8d7a33-fe96-4f05-9f61-7bc5571b5a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f572ec97-d8d4-41fd-b4ae-ee271200e2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2607f49-69fb-4e2b-a9dd-9925b6d090b3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f81bc7-98f8-4296-b383-a63b154d528a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0f0bf6-2f12-438b-85a5-e576d758213b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b3b91c-f5a6-4edf-b1cf-c0db705bce0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce89ddd1-c950-473d-b647-e3c0c6aeefe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3da0ab-85ca-4d87-ab68-316f7b0a4eba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193b1839-4a9e-4b7b-adab-10df826ee9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a032228f-ed33-4f64-95b8-f03dadccd29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900132ec-2b1e-4e1f-b6df-6d0642b34cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f201180-205d-47f2-aeb5-0cf5eaf9ee7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4750efd2-f144-4750-bdcd-38819b3c209f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e249e27e-d76c-4aae-ad49-d6fe4235f8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f262d0-328d-4d53-aaff-dbb8348e0842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f325b34c-36c8-4276-a868-230405de123b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecbf6a4-1177-4705-b88f-eee4ae7ea965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d626722-4f2b-41ff-bb3a-20902a7241bf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77e4f78-8c66-46e4-9d97-a85fe04450e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d325a10a-3d3c-40ed-b4fc-04b2834acc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66ad9a4-d077-4686-b748-4f25d704e044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ff2ccc-9883-4529-907b-4485d8ddfc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4acaad-6693-4fd2-93f3-494a0bd40b8d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887255ac-d9c9-453e-8fae-965bb9f96a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1fdc2d-c196-4918-911d-4f2fbb90119b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f8a2c2-f29d-48f6-8040-c5e26d89b4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c86fa4-fe7d-484d-a454-1d6106270ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e52ec3-5800-47ed-a50b-8927a90045f8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c8a860-1234-4ac3-89ae-88ccfebc1a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1bf91c-f1b4-4fbc-a192-6206d20e1a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1cfd56-4fcd-459e-8ac3-1a2e80d3e4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76df0f36-2f2e-42c0-a696-3bde27235f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad161e8a-cb07-454f-b712-898c81020dd1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f1cd38-bef6-49d2-bbd4-2b87af09d11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c875e3-2b84-45cb-836d-08f4ef8e41aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3779d95b-ebb8-4885-8260-2ac8a6f0f01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e2a66b-d0fa-4168-a8a3-635fc4c17878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ecafce-9c0b-4e17-b78c-b8ddd5bb5a9a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebfef74-fb93-4162-81f4-2600a1120673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bd74f8-195d-4974-a6eb-c096ba218a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d89f04e-1f9f-4b50-8fe3-c08ffd7efe10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1ea0b4-b926-47d1-80c3-9812854ad06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdfb214-9bd8-48a3-bbd8-d20e5e0291bf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd67e86-45e2-46da-9636-055244316912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e39905-ee39-4c19-9f89-c846a0dedbba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59348cd7-1cfb-4741-8f4f-f254abf62559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a91859a-bf2c-4217-a73a-7a8007e1d6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5118b7-f2c6-4c3f-a84b-2f8e6deaf59c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f21635-4711-4873-8ff2-c758083d463e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4294cd8-1707-40d0-9278-ce6d90c20409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe4e8a7-1902-4ea9-b5ee-93eae5c876f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10453003-1f7d-4a64-a0f6-fb6b1c968c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703025d1-aaa1-4887-881c-81e970f65880",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bf27be-21e9-4793-868a-8003fb859290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e2ac07-9541-4264-a482-7549469669e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3725dfe2-8a77-4d60-9e61-15fe7c116db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13194f01-25ae-4a62-b000-9ecff4cabb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b42691-11aa-441c-9fb5-9ec811ba449f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da23a466-e784-40b6-8823-18ba2e0bba0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28b247f-fb86-46d0-8b19-01dd5be6b929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2019fe2d-d318-4598-8131-1da9d3a98883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d048842-ac2f-494e-9696-1dd51ccd606d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7d502b-1885-4748-933e-e9e687652320",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c50c33b-92c5-4246-87b4-210e98bede62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed42912-e7ec-4114-a579-ec0844c71464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21508f19-c2e0-43e5-b4aa-8fbf53268c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b02a68c-d00e-402e-8691-ceda6a2a7ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4a608d-f1e0-4869-9e1d-0063c5533667",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869c51d3-cf46-40bd-be7d-a92cff50d617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3046cd4d-f46a-40a9-bf73-9243e7a54f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252acd0a-e63b-44b8-979b-fdec6f2e6b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbd1e05-64a8-4599-a50c-bbd16e30793a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfaea49f-cce8-4978-9f2c-688bbd31c720",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7922cb84-62c6-44ce-952e-d9977d5a2e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a9a297-f50a-4b17-9d90-5438fb01c55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8db816-6428-4195-9649-6ec093ae95cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b7c1d1-5d54-421b-9912-39c2a4219465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01551963-96d0-4d41-b630-aea32698f721",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3792bd3e-ede9-4b05-8286-aec237867c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8171677c-6e71-44da-9093-b08197d97eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4517736-40fb-4591-9da2-8a7e5daa8c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a5df2f-0848-4393-afa0-69dedadfd3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120027ca-eada-4172-afb7-d6d6b2d9d444",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a31c58c-d910-4e96-a0f1-b4ad868ccfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd4d261-9318-4820-ae5f-5f40d17cccc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12c07f7-b413-448e-b7b3-cb401bc8b37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3b69a9-ab9b-452b-a66b-cd609b234e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a412a127-140b-485a-8868-237fcac73eb9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ab9f84-ac66-4225-99f5-37cf2bc8578c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789e5b1b-bbac-4be5-8b44-a05d9275f10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bf4c65-b0d1-4456-ace2-0209ebb0e0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6affb9-14fe-43e1-b765-85d660ded305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7633e3-13f6-48ab-a389-33f793ab8ebd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d791735d-2eaf-4d62-8156-6b641c311d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b45628-6a5f-4ba8-bc14-f2f9868b0ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32d8d32-2770-47c0-9c12-a0e82abbbdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f23f40-35dd-4947-8836-3d159d315162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37e3cba-fe11-4cdf-8691-adbacc71e46c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9f4cf6-5e55-4063-8541-89d2fe1169c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8cbc6a-a795-4271-b02a-18b918484eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b42a15-05fd-4c45-9e67-a7bc2ccc5b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3745fd63-304f-4c30-a5cf-a7fcdeb8c86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78ef628-d116-4fa0-baba-1d30bfb095b3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8f562c-d5de-43c8-b73a-b8c40a464742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c63a31b-df18-44c2-8d82-11779ffe9dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72c35f4-f3a5-41c1-aa73-0f3e239a28b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fba418a-3682-4fab-9c0a-85cbb202308c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f8f878-6aa3-4624-9aea-9a47e0502fb4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f36918-7e14-4cf4-8e06-6822bde1b6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d444e44e-5467-4b35-b9eb-a8b7932c715c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b321a47b-6519-48d8-8533-a968705b9793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcdcf8b-211d-424d-85bd-b5e2e9af6007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4482c565-7759-4038-98db-962d6533f36b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7828fc30-0036-4425-bcc2-df6816c6c98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c09ed98-560f-4abc-b844-b62c6f454495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e50e3f-977b-40d2-81d5-ad6f642db004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "957471e0-ba28-473f-b27e-433ddff67e9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94b00b94-1ab9-4a03-a3c0-89351cfdcbbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed3dce27-fffe-46fb-9987-464e474e5383",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438d90fe-ba01-4350-b9b1-50c303c22273",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9849d3f6-b470-4f78-859a-1b85a6e00ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecb99c3-aab2-4bec-a7fc-ba63fb7e5ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f95a014-b90f-4bf6-a70f-161d220bd5a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "649cb096-4315-4714-88ea-32cc6d3e8a8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e0eb575-7c69-4d45-90dd-54d91f0aed0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51533c38-c22d-465a-a8f2-b1b762f8f30f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53d460ee-81be-4b2e-9712-b67b58247ddb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07061f65-90bc-4389-808f-da1c5f2a2a0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "547cbacb-ae97-4640-bf2b-ff5a471f7d3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b20636a8-7dbd-43c7-8a8a-5c314bb91c3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ec9ed24-d763-40c0-9697-90bed3508d0a"
            }
          }
        ]
      },
      {
        "id": "cea4d9e9-3f3b-489b-aa39-3d411e3371a6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "61e38480-e330-47b0-a1a2-d5b44e9a4a35",
            "name": "Negative Testing",
            "item": [
              {
                "id": "237acd77-48d6-495b-b198-9261f30f8d7b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8d44b2a2-cdc3-4fdf-bc1c-6e27c129e5b1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861ba42d-3625-4b76-87a3-15c079167dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aebc236-62b8-4ea4-9160-35de214e9434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91024350-e09d-4fc3-a3f5-e4c4734bd76b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66e1631-173c-48b7-bae5-c12f3e0f5580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d1fe6d-2196-4f50-9868-c7632ff71b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14b1acc-4f34-418e-a692-da7b0eaba80a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de964e07-9d67-4ea1-8c88-96d7829a6726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ce4799-083a-4399-bd7f-d15b26a16198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a2e458-93cf-4b1e-95a2-a8985015229c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0aeca4-2527-45d8-a286-ac3709d2ddce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d91f30c-2512-469d-a50e-5f5396a24c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbab844-8fa6-4505-a507-283c8cf21eaa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c10e30c-2910-4caa-bbc9-9f01a3e124b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361c9664-a4e9-45a8-9191-2b8e17b4c4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc52896d-2e7a-4ce8-8763-e1e0710d02c4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b660458d-9ef6-4421-a328-5505ecd9d07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c04e36c-3f8b-4483-ab9c-5cf81a69963f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72c47bc-cdb5-4db6-b344-89b10be3cc40",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f32b867-e05a-4fa5-89a8-acddde2b0372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35669314-c10f-458e-bd66-903d723a3e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e9f091-18e9-4653-ab74-5658a15339ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5013ed5-90d6-44b8-abb0-1f536775a12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95fb5f9-8cdf-48ca-a1f2-1f4d1af87491",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c0fece-73d5-4e4e-a25e-0a39ae351918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc7a874c-7867-4696-b11f-cfba240847fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d0010e-fdae-4648-8e55-6381fd43278d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5ffa23-0033-420c-818a-bd535442a9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598df23f-bee1-4fb9-b335-0e41f1ce4564",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ba5b77-58dd-4e4f-8d16-24174452fc41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e980dfd3-dd9e-45d1-af74-c228967dcc97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a4b910-1d9b-46d1-a7c3-b95282f06727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e850415c-2945-4543-bf66-4cd66b8684b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc00fb62-94ee-4c99-9c77-59d97547b128",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a359ae0-cfae-4e6c-81d9-1450a4a07d7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12992042-c2e7-46db-ac8e-555ae7d41a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356264f5-5f09-4429-994a-3514cc9ded06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4f3bfe-e984-4092-9019-c458d11c6fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f29d5b8-4e6d-4a63-b50c-c0bc06a374a6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617c5f88-c966-4bdb-bb91-05f561fae656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cd9126-798b-4083-a85f-aeb23b4d6abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e089be17-74b2-4e97-a7fd-509c17b11536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbbc0e2-15d5-4598-97f0-a730e4d88d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c65855-fc3e-4d56-b86e-e9debd191cbb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4502e01-ab5b-42f1-8323-16da96b399fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5a6579-3f78-4709-a2cb-f64395f4b733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8892997b-f66d-4a8b-bc79-041540d120d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a71667-32c8-4f9a-b09b-8861717446ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7506ce0-6c40-48e2-896b-3daaf5219ee3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedbea4c-417b-4470-a660-c783d5a81362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a178bcf8-ed9a-484d-83e2-9aeb4d67efcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7add8d-15bf-4bae-9fbe-8a37ae5a290c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7accdc-d13e-4cad-a73f-c1a8a500ece4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d164dea4-ff5d-462d-bfaa-008afce4cc7a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e6389b-239d-4808-9a8e-77a8c9ff81b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da598178-27e5-4b3b-a9db-b494495b2283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74fc54f-3d06-4769-a94f-9f363be318ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5ef77d-3ce9-4f09-9964-86dd68d1e392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ec8347-1d2f-4f3e-a41d-8ac2f6fe9a1d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e9975d-3b19-4331-b883-8907a879c089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "184945ee-5acc-4c3c-b8bb-ab2d806e1b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b08bdc-825c-4ed5-9efe-2e9e91de4c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b8b45d-6bd1-44f2-b59d-9b6c572f18c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd654de-d114-485b-8b47-68dac4f92613",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8c15e9-22c7-45fb-ae4c-c9122c6e737a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22e61368-da04-492a-98e7-ef75d43229a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6648fa39-c3c2-4e2d-8412-2d2af693516b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0736f7c8-e525-404b-bb1e-91cbb50ea9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1222363c-95ef-4dcc-a75b-659b1c514e60",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e4495c-32c5-42af-8a21-6e7477b18ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9baac15-efb8-4801-844d-2d5a7812eb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f6872b-95ec-482e-892f-775e1b42b60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3028e2d7-0e71-4fc9-bcb9-ab3b645b37b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d432878-358a-4af9-a8ef-6eeec05ee915",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07dc67e-224d-4326-b215-e0abafc2936c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d201b413-e6b7-4121-a3e2-8d7daaa0464a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55632cb-5608-4296-b27a-348b0699d20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039a6f81-6a44-4ca8-823b-4f5e36a5c175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b13e440-4388-4693-a2be-e55d9ca5cf58",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca1be73-df18-402d-a9d2-90c8bf0e7f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01bafef-cbf4-4a9f-8e02-6068aa8185f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d952418-7206-4386-8265-b7d6c8c15010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0228d2da-5e94-4bcf-871b-9f24b7cd18ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b683a653-225a-4ecb-8f37-bfe333a718c6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651ff992-0ae1-4d80-a571-fd5667d996c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a36c81-446a-4912-b9ac-0bb7dc74db95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9879358-7a38-4c94-9d28-4349164520cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ce4e3b-1531-40ea-8692-504c12988858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e51854a-bd80-43dd-a73f-6e23491b5a90",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71bf73b-475f-4c2f-888b-900a0f03e731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c699ca1-ed4c-4c12-a509-7412ebc38c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddd3942-12aa-4714-bd88-4d960d0c4582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ea686f-2bbc-4bce-bfb3-524ae9b70ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f26b23-469a-435d-a437-639361ffdcba",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2a41f3-6a47-4e7f-9251-64c7bcef02ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107cc7a5-f9bc-4266-a5e8-9ddb34becf54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1124f09d-946b-4940-bd0a-01e95ca12558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b103bb-16c3-42aa-9312-5888e4974b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62d21b5-cc44-4f5b-bb31-4cb1cd1f38e2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c479f6-d312-4435-80ce-b5c896a8e64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda363bc-b770-4298-97f5-298eb9e57ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a188052-d837-4212-9096-023458a21b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c64bc3-38ad-4437-8ad7-4906b92374b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d794fdca-4b99-493e-8c8c-4c95138d0ad2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cf3882-e4e9-4ebd-aa7f-948af76cb526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24682fa3-fa9b-48d5-a9bc-c10a38a93e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16db07f1-2af5-42de-816b-611f027ab423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0209b71-e28e-4704-bac9-db018b305b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98143d69-503d-42d2-9d13-c9b3f174d55a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dd3179-2663-4213-aeac-53ce0df37dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec39f3e6-b849-4221-acd6-bed11df020dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601c2e7b-8ef7-4277-ab8c-6543fbde5cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459bd2a2-e7d0-4cda-9b6f-3c46eecb7232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d38c37-eb5e-46de-b87a-bdd211e9d9ed",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff14ef3c-b424-43b5-9ba7-30cb418d9379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677d138a-ff7d-4420-8520-c44030eafc7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb08efbc-1463-43ad-9706-0a44ca09b3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352c188b-6e36-46fe-8584-389f807f2f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec89e207-5434-47ae-9376-f2b41b04f9eb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7a7a91-22a9-4a03-a448-023fc79e2905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cebf0d2-ec04-40a9-88d3-6b63acb1bf10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2780ee73-305a-4652-b7b1-31454efef1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29441ab4-f4fa-4b77-8d84-9b10a4c39676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599ca054-c64b-401c-b308-308811c22b44",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b372f4f6-27f1-4393-b3e1-641cca2e3c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c341783-407a-4bd0-bc79-bdbf23ebdf76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c13f6e-048e-43c5-93ae-b1ec915ca376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa3b6d8-778f-49c0-baa1-7ea0fc8208b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b157017-e42b-4478-bbfb-347135de1fc5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee0cf09-5e98-4830-a21f-601a194b7bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213987d3-2e50-4d98-a986-0640e09c0e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9659eda4-d42a-4de2-b8b1-358fc491642f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0036b2c7-661a-43ba-9fd0-7474bf8271a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e291b7f6-1733-437c-a297-8856ca86482b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5526a60f-e9d1-4a23-bc43-16616ee5e782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e43ea4e-9f75-48f9-8e01-415078f22cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab70cfba-ed24-4797-a805-1bce5f3bb925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140395f9-3dad-4294-af7a-460919ec5d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbf384f-b71d-462f-b048-6a640bef9734",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5b0c92-7127-4f57-a9a4-41d6b872c0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "064e6b92-1d3c-4105-9e0f-7612c99c30b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f44596-815b-45c3-8d23-e85f3ae414a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7b4049-a7cd-4aa3-9b94-9ec015ef0e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5c8be9-50bc-4d18-a258-bbbaf24d11cd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5008cb3-6264-4131-8933-00e835db8afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a668aa4-3054-4aff-96d0-a10f6b9d995f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4d998e-c3c3-4e03-9396-2c3528611bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e531a019-0e0f-43b2-90f4-df33d9b2ce5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbdf5ec-01aa-4c8b-b78f-02dc2b6dabfe",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a52affd-212d-4d37-abbd-4d76dcf49cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db175b0-20b3-49ba-b7e1-83531d869eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fe5e80-8a1b-44d9-b87e-531518029096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111b04ed-bedc-43dc-afb8-8dea57f204f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d45c63-203c-419a-b644-91c5d6ef91de",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df62ece-e596-446b-940a-0fc11b4e0eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3914aa18-93f0-467b-894b-bfca1009c2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9e7445-6954-42b0-8457-081c232b6cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0fd0d1-b63b-424a-8a0a-06edb80a16ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb04f97-a63f-4115-a2a9-17838f4596fe",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06a67ce-e8b9-466d-942d-33f1523f5266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830b75ea-d522-4002-9556-62753f7e0926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e85d0c-00e1-42b6-bc9b-9f2801221fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938abf41-0c33-41dd-b74f-73b082379035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf965ee-c473-4bc3-b3a8-e1aa26bd5f86",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403963ab-f5e3-4a12-b70c-963e74c70500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0875b521-c0d1-4d95-9640-420b03aaecc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425e2313-659f-4e6f-a1f4-47089270a74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c32863-3ea4-40bc-af08-0df0edf81d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d34a9c-6a58-450d-b786-2a1dd747cadb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a5eb1e-bf2f-4965-88b0-4fa0a461a628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4eca71-f134-40b4-9273-c0e8a3689248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e5dc81-ac24-4ed0-a89d-07d143bdc199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e071914e-86c8-43c5-86a2-2132e65db595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d2db78-7bd3-47ca-9a9c-4b788984f4d4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3f08a3-d4ee-4a33-97cb-ee98092c229e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e7d13b-ae12-4c50-8ded-5a9dbae7a1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8621e62a-e45e-4494-838b-faf094eff8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca1fc30-7e0d-448b-b420-ec9945632641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66301ccb-0106-4fca-bb79-3889b7af62e1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4fef7b-7c16-4531-b60f-15eea284fd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87128ce-467e-4a09-a57e-57865405569d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80d3c03-4de8-4f67-b0f1-f2c758443314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb31063-5aae-4cbf-81ac-1b49087ad766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a46b1d-fa6c-413b-b814-ed059201cfb3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593e097b-4b92-44c7-9027-285ac7353dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4549c8bf-203d-4f64-a12c-3312163df59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e24fd2b-5566-4b35-a216-1bcad53f7c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee7a4c7-b5e2-4145-a96d-d7584fb071b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401bff58-addf-4cd6-95ab-6c61ad0b68e0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584949e9-98b8-4936-ac6a-ea2d35cde0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedbe5c8-1e96-416e-9221-2a19007edeb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c95512-191b-4270-8708-181b1483a2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a846307f-b00b-4055-ae45-4c23c0e257c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed725e1-b352-469f-a313-a3d6466b2de4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deb85f0-8221-4924-a6a8-5da150ee9161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222dd234-6919-482e-98db-25460596e88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb43383c-bd1a-4cde-a1b2-7e7f8aa8fa7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9591bceb-025c-4328-b8d9-805940bd5ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3f07da-f93b-4380-b709-e1c4b91ac4c8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09db19d7-6feb-4513-acb0-e0189391e782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ae44a0-50e1-452f-bb07-86b93fc9177b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1472736e-5f71-49ba-882b-888012108df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d96918-b81c-467c-ba60-19f45af35fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e374e3fe-7bd2-40d9-8007-26be8b257226",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3591f026-ed66-4cb9-893f-ffa0cfc6b5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36225f9f-57d4-45d4-a0f7-5776eaf59417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a049cc-170d-4acd-bd7c-6c781098c319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfae8c58-b167-4f9a-a8ca-2f7dfb7a8dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b04b8b6-337b-4ad5-ba20-50726624b37d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814f3bc6-83dd-4a9e-b0f0-aa5049707ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233d7c0f-de97-4ccb-b11b-394abaaefcd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ef9ebb-f33c-4ab0-b840-6b5ea352f2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4d659c-c980-4d25-9fe4-b6e6ced793c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695768a0-33de-4d37-8913-c532c18633d8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474aef14-b878-4901-8ab2-30c06b9a5530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78efdef-2270-4f30-8013-3b232253fc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd9e80b-749b-4b61-ae64-14d4891f154e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23348a5-c1b8-466c-a7c8-615cb9c2c1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896ccdd1-398d-45a5-9e38-8ac9b8a2e524",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7c94ea-290e-4d5d-a989-a883dfd9d337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4bae79-5b36-43ba-8a24-2af730ab9c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96600a21-8f89-4a87-af49-76369574f687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce63227-c94b-40a4-b256-98f0a876aa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e202b2eb-f1fa-4284-a589-7abec35390d6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3984dc7a-3ad2-461f-8367-2a6299c83e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d442309-6d5c-4048-b373-2da5a1cd4013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d38e857-fd3b-4395-8fbe-0a01ae7f91eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1666201-6dbe-42df-8a81-e4b8d55821ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356a92c2-7641-4bec-afb0-f17afdf88cda",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8dc1649-4789-4384-a14e-c25758265b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a0835d-4f2c-4a52-8362-657206ef599c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06fa5c4-c12d-4d7f-90db-dee0a52f6caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b9a61a-2130-4bd0-976c-7d9b9c861233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8f413b-c79e-48b6-a79e-a11ae0f6bae0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ded2266-da88-40fd-acd8-a1c50e03f918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f51ccf-7827-4f79-a9d3-75911d01d807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fc58e6-af18-49f3-997d-6c755c733703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96e884e-22c7-4db7-b0e0-c5deb3360e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c093da-aa85-4ea9-a7ea-215805471cf2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f086a6e-b8c2-4284-912a-bca934643894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de66f2e3-80a2-48d9-aa2e-0fe106b9a65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ce68e4-288e-4e47-9ebd-a8a8f61bf9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbad9f50-90b3-4a24-8f4b-6b8f99f585c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8cf17d-3e21-49f4-b03b-bf7297008bb3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c5822a-2c48-4a87-b9db-3a8d3b379175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccfa7e7-1337-4ddd-a0ec-b7a1acfacc82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2658aae1-fd36-4cd3-a2ab-86d637c8e53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd611692-b5fd-4abe-8ae9-08b3d203b14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699e391d-4471-436d-91f4-96ddb76e9a84",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c40538-43c8-4275-9d14-f4845b5c6d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52f65ac-cb5e-436c-b0e9-7f1650d27b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6a06fa-dd3a-49b7-a05a-eb36449434fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3fbff8-2a5f-4ee6-846b-55293b03aff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fad233d-b463-4f32-a1ea-72ff61ff2975",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e15f0a9-56bc-4782-ad09-37a84befb721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc355c5-d7c4-4c67-9659-aefcc874167f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f768b382-4db4-4a71-984c-4fb7b782e303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38457a7b-14eb-4849-9379-74abd3732e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b03b66-5577-45e5-96b2-2c4c21dd5fcd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec26c2b0-2586-43a1-a5e8-cb4498a93d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9b2c56-d635-4efe-acbd-caf7507627e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab7fb9d-6a4e-4317-bbd8-1fb5d3800e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f933a201-0948-41b4-a277-e26068fb26db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978ee708-1f58-47ad-97d1-57cafc30c394",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8bbad3-16dd-4f52-8faf-61c1d18140b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f89b75-f567-4d80-bc81-0eb96b7fdeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925129a9-94e2-4fad-ad8c-002d8b759433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274993ff-0652-4c66-b0e0-a196f988b265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a170cfd4-5c12-4669-aad4-0abb8fe26aaf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14701ba6-39ff-485b-accd-1d5e7d0d83d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee6df12-6578-4a2e-b083-ef7bf355fcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8442f8c1-0701-437a-826d-ed2f3da6e090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4aa1b0a-b6bd-4379-9ba3-c1ac5c8e97db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6728f87b-9387-4786-b66f-ce1278cb60b4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca6df81-28ad-432f-a99d-03a2a82d1e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6764ed4-28d9-47f5-a4ed-e07c80124d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea477c1f-c28b-4e5e-9ed3-ea6db0dd9120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1294cdac-41be-49fd-a0bc-49e0694a0331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88692575-05e8-42c2-a783-c227c4633249",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf2facc-18e6-4226-9f57-1057b92377ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26d950c-5bd8-4f17-87ca-c05e9f7d1241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149ce8e3-e93a-4b9e-8929-33e0433e2c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0986b96f-005f-4aea-b1eb-7ca43539c97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765180bb-2315-49dd-81fc-d15ccac859e6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce5c5ef-e64a-4530-b449-041d0fc43c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8b207f-9c1e-491c-8957-1eb2b478a8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16964ae6-fb81-4d59-9daf-66309dfc80a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c403c9e7-942b-41c9-86bf-49e6b3925ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426402f7-337b-4cea-bf77-f833c92be1d7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356d910d-b63d-40bb-a48b-790217f22a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f5cd20-9b29-48cd-973f-8f68d528dbfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251c0d44-3005-4f35-8aeb-565e6ed7a06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ac3686-5f8d-4fa2-84e9-f38def057fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2785b7-62ff-4131-bfb1-cee26e9f8b22",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dd743c-aa7b-41b0-9d1f-d16bb6691302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb97cdf9-0cd9-4c5f-9694-18a9777dd177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81110b8f-e269-4619-a348-334062a43b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba00c2c8-ba1e-408a-9c02-3f0799ae72b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4960efe3-9bf7-4e40-afa4-719f1c3a9bff",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce583d4-8bea-436f-a9c6-b174b59315de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99995c8d-047a-4662-9bee-e10f4f1b3019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fabd6c0-92c5-4344-b452-513912e80f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d9023c-b404-446e-9285-bd87e8d76421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b558625-fa17-4611-bdfd-c1f8d3e8e758",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba408320-8169-46c1-82d1-49d64bbe63e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58865afe-f7ee-408c-9282-e3f803e1a640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7cb1d2-e2e3-4779-b2e0-06e528dfd4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bf9145-0307-4c26-9e61-8130e82b1831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed3c4a5-7b37-4b40-a2a7-0a54a3d47c28",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003e44e0-7982-4cde-84b9-b89b234993d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b3c2a80-c4b2-4983-9b55-3efb3d4dd4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d01890-eae6-41f6-a4d7-05200df2ad70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff41920-9621-4dde-b1c1-52d7ee4cc508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aa5428-14a4-4ded-9d81-20339a207623",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47102c55-143f-458a-8c36-da562bff016b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664eb2c6-62cd-4b5a-81ce-e1619352c363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ed916b-72d6-40d4-ba32-fc56d0113fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f8a53c-f41d-4085-9404-e04795289077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434a7a5d-dc0b-4620-b62a-f2ab05a9f61d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43cd57b-2258-4714-b3e7-feae9c0ba674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83d51259-1deb-46d8-bf1e-d153fc5b3fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52715c54-5f9d-4730-9fdd-ef620da43144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b3468c-0b2e-44ca-bb6c-0429b2398533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa68ae3-79a7-4c11-a585-f5cd6fe5c4e4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0eaf537-33b3-4f07-be89-5650dd3cde0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ef0b54-e1e5-4090-854b-f47674660c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bf6d9d-428b-4b1b-956f-80a36ba56863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264479da-7271-450e-99dd-bac796bd571d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3deaf82-8bef-4c64-9b7e-717265ea7ff1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baec36d0-2989-4db6-b41c-cfbb2b852f33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8052307-bf8f-46ac-a96f-4f88a971dae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4ed31b-8117-48ea-a569-915b1edd8764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d919c024-30c7-4d10-a212-f4a4361feab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53438352-fd6e-4796-9313-aa6fa0639629",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1783ee-4d02-4ae6-958c-f68c79af4204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c166daa-46b2-42b3-bab5-c41c32c984be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f3edf1-99de-4e87-8718-a1bb50bc2a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205a098a-e064-4d67-a852-16cf0c7747ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b7f956-6afc-4e44-81f1-ee17bd805a76",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318ab41e-3913-4846-ace1-adf57ac10244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "023ce203-ce0e-4ed0-a4b8-fdf6ea358cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efeaa52-2fdf-4a2a-a2dc-082ea2c87eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ad486f-5c73-4549-a735-c1e566e13fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc6beaa-e454-445c-a996-61c010c37763",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f0e3ba-0155-47e8-9a2e-177439a0a8d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "692f76c3-4ed9-4e9f-86a7-1c04efdd547b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42a154e-dd2c-479d-a243-8a54f24083f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7223cfb-c2ba-4393-865d-60009b7f05fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029bed83-efd1-4c1a-9e4a-57c56a2198ff",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f427f0fa-7cec-4a30-a2a3-9b72deb65a40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3137341d-6240-4099-b5e6-7d45855600e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0181c6-f102-4dcf-842d-597eb3b8f011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2af8ddd-ea92-4ecc-811c-e91dda33d497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9be6985-5724-4465-9c21-b4ee04db60d0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcf3e12-b9f9-418a-ac9f-cc9f5bcd34aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d32588b-e370-40d9-800d-869b98c28e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b36ec9-c3ae-4edb-afe3-da661a3ee829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f902b5-b112-463f-8b10-9559b2812b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b130e51-7fd4-450c-ae3e-2a295d8b7ea5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc160f4-87c8-4360-84f5-17c1d12beba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84fbd7bb-b871-4167-9fa9-2db999422bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42627daf-8a3b-4794-b3c9-5363b03f40b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0827a78a-2f38-40b9-bf6b-4363555ad0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5065b9e-f254-4a8f-9946-c3de2bcaf03a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0317d4-45b3-46c8-bd1a-18653648d118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d234549-fd35-4468-9363-f28ba7171218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f25dde2-a1ff-4b4c-8fcb-b2668afd934e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3488d195-c22f-41e9-87e9-b2cc753040ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfff9fd1-2ad0-425a-ac0a-32a26b942f1e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e304d7c8-31af-4901-8ade-f7953b60a328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d9063af-8773-4ab1-93d1-40102f297a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b84f2f1-79f8-48ce-b51d-fc810e5bba3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df3c56f-8dd3-46b7-aa86-c34d020136fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b852a2-ad93-41c3-8f23-50f574cc8ff7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea755246-bc91-4548-ab87-69622569eac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab58001c-df26-4563-bb9f-d3b5896ec01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd339dc9-00a3-4011-802b-64dae1bdda5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6511f1c-090d-4880-bc47-171b3e778742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2121c74a-797c-490a-8a84-8798af82348e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f97931-d5a0-4253-bc5c-d0d0783c0406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e8ff49-4073-4d6b-ab5b-d92c70fc036b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831dcb79-9629-49a1-83cf-ec02250679fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60af959-27d5-402d-9e79-0ed3ae757a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe42af8c-ebdd-4d6d-80d8-81a7f2d67c82",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c8b460-8232-4c20-8c62-390907ff66c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b99bfa63-4c13-4c50-b940-041cc93a1048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ff09b3-05fb-4d51-be29-d6b27a9f647e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c939d29a-8593-4980-a02c-c74d83698712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6e9f9f-3649-4308-b00a-9d847bb7953c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed2d751-6919-46b4-a55d-6da1be69af5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30014c5e-96de-4837-90b3-b3d5ed932fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba0713b-f8cd-4cc9-8ea6-5592be99b38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb3493f-87d7-4118-84b5-1a85f158a54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2101d003-6bfd-44a1-9786-639c05cd0831",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0377af99-581b-430f-aa71-bf6ad784ff2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b524fbd-30ea-41c0-acc5-7163a2ae5181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f6501e-eef4-4e84-8bab-c3597d58e964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4a3bbe-eb81-4bf8-8de7-509d2892ee94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd010a02-fc3d-46e5-a1c6-1021e7d7d791",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b7af95-ff0b-4a2b-8383-347031979150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc21afd2-49da-469c-bcc6-6209e85b20e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62966ec5-df90-4356-83d8-a9e447925784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254d7b16-9fd0-4563-9d65-d02b80f112c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba9e090-1ac6-4e81-877e-5c5acb6bb1e3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a7b8c5-c6e8-41d3-8053-09ef8ab1074f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb12fcb2-4e31-4d4b-979d-1a23bbca8d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea67223d-9f6e-4828-82f8-e088008b8c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e21d80-ae78-4f4a-b940-f178a5afb221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087c4adb-1ca8-4d56-9a1f-88a10ae3e486",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b973c20-ab3e-4732-82ac-a14770bf01f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7445a02c-4607-4602-94ea-d5fe02895f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7c309d-f569-4d53-b0a6-babdb96f289d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1e77be-245b-4401-9d40-6ea6ee9c2a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f8374a-6a52-4ec5-9890-3c5644633d83",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30049d22-e892-46b6-a1fd-e9210195e301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4bac180-53c2-4adc-8ff2-7a66fc47b074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d628ef8-dbcc-4f32-ba2a-8db6296e5933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c827e2-4479-4737-8341-202b16ae5d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecf5825-0204-405a-9bed-070680074c39",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e32aca1-9e53-41df-8fce-81b3e0dd3b27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5bd86c8-2701-496f-aa8c-f90541c4a2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbeddec-295a-41fe-a17c-759116c7896e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cce7d7-01ec-4828-9582-71bff64290db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517db918-1481-49c0-9236-b4c29a55949e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656c7023-55d2-4ff3-b46f-296cb2fe87a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e97092-19b1-4758-b104-c2ad6c2e697d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c963c52-c3ac-4cd3-a7fe-51aa21fe4ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35999e6-c037-4c00-ae07-86a67dc80779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845d691e-82c5-444a-a655-6446a87e6010",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b226b23-5cfa-4d31-a856-f0ae17ea07e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b478a0-2878-4f09-ae02-bd5efe0ea3cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fa9acd-348f-4826-a985-e68f81d861b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b744fe-5ae0-45f9-aed0-6ce445fc5385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67595491-e0e7-49cc-a241-6b877edf6de8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa15c97-501f-4b4b-bb28-d0491b639578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e6ffb6-4165-4192-aabe-a8677780714a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcb7c89-bb55-42f1-b303-070f9a6d7d9e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65d53b4-b799-4cca-8334-fdac21c99887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0329ba8-343a-4d5d-ac8b-7fbba98e172b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9027f28-9ec1-4adf-b728-068d2a81e2c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b42c2f-a682-433a-80d6-d64691757ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60a4bc6-ebbb-41aa-bede-ed7d63a5c285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedaa3f7-2e50-47ef-92a6-b1dc4a22a400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca11e086-0f31-4bba-bc49-4fa455f5a2e5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6353336a-dcb3-4e9d-b39d-9b5e2947d610",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c56570-62c4-47e3-a891-f6660d3770b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2785e2-f754-468d-9075-f490b4b44845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ee6afa-f08f-4170-942d-b8196c47d4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47f2ba5-9a6b-4fbc-97d9-16b1c8265fec",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbfeefc-4fe0-403f-ae49-789e34b30ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f38af7-f268-4632-8169-e0274bc5a4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59b29cf-d0c7-4ab4-823e-8af0ce69c834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ede481-c669-440b-ab11-0eb26a7f4ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7c888e-ec35-4727-a82f-81959ab9b7c6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559f17d4-04c2-4ae7-a770-a1b262f7e37f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a241a350-847b-4555-8e98-90ba1af643ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc173aeb-2fbf-46cb-98d1-a41d1c02411f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300c5215-4649-462e-94c0-550559cf69b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efad222-53ad-4411-9dd9-66ef6402014e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3907dd75-e276-4cc7-aeb1-06295876295c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea54d3f4-0e85-4156-8700-d22678f30b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64368636-85da-4f3a-af33-b20e3c5ca477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971bddaf-43e9-4243-8546-8b027cf73668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48217d94-a2c7-4076-9d4b-005fc9df31a3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9103ab57-b97c-4c84-a665-91d71f66896d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb39d6e-b801-4fb4-99ae-093d3fd9ed63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6849a751-1463-43fe-ba6e-f621ebdfe319",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0fe66b-9def-44dc-bfb7-a17861229394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49fdf7c-7d36-4b65-981a-5036ae010b67",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b976d7d-bda2-4fad-b046-998ca192fdfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1272a422-9689-42e8-8f5d-fb7d6c7f724d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfdfb0a-cfbc-49be-850f-de0b5a3a46ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af22336f-2bea-4bdd-bc2a-e8ed64fc4a4c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ef9d8d5-066e-4a6c-b6e6-c0c77e0ccbbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b96bb52c-ee11-4409-9e95-48b353a6563c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1074c75d-7b23-494e-b82b-f9fd34ff326f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "480ea0d4-8f91-438f-891a-5e718238fab0"
                    }
                  }
                ]
              },
              {
                "id": "67133fc0-8c68-41b7-8316-c50d9ac69453",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1df488a-e592-4da2-921b-6a41d8658963",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d0b296-d7f4-439f-8f3e-68dd3da2cc02",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cc132a73-c5f6-4b20-8cf7-4f31d9acb62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93405060-adf8-40c4-8ce1-d1409aaa9039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccb58e38-3551-4b16-9b39-7b9e2d99f1cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85671372-eaa8-4c80-82f6-d57e8cdaec17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b81e26f5-257c-418e-b596-036d457c0ca4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ace10b1-76b5-4f3f-9449-cf17e5f41c3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3054cdef-75b1-456e-8a13-af37b9049927"
                    }
                  }
                ]
              },
              {
                "id": "edd8d2a3-246e-4e1d-a30e-ef017c3ca9c8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "48cedec3-f312-430f-a032-ef1484b74194",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a370cc-11ed-411d-a9ac-2178cd755201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "17ddfb7b-65e0-4cb2-a7af-94a439404f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617bf3cd-9105-4f50-b741-fcd469ec0d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778b8afe-2d5a-4edb-9845-452c41ad7451"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "876c2992-0b43-4c92-bab8-ff5c16e327fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27cf98f9-e247-42ca-aa74-39df43d83c13",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0da03c75-222b-40db-bfad-bfe90cbb386a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "af17af4e-56dc-4b75-b048-e021098b88a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01348d5c-7fed-48c7-86bb-b9e238206c44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "203e8301-4235-4994-86f8-e71c79a549b7"
                    }
                  }
                ]
              },
              {
                "id": "baf60104-9e22-467b-81cb-e7df18a76def",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dae2a09-c309-4c44-9274-fb42d6fdce02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bca0e9c4-dd46-4c46-a29b-afdab8d9350c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffcd9f9c-d2c3-4cd3-b32c-d105637dd234",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b82adc6c-fa8a-4766-a3df-60d54dba65c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bcb3d8a-5ecd-4207-8286-a4dfbac43ec2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d624d0a5-5599-4d7c-9820-7cd1d31295e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae9430e1-442a-4549-8e9a-581841e1fd69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67941e5b-300a-494e-acd2-dedfff88a05f"
            }
          }
        ]
      },
      {
        "id": "bc6b9c76-48b4-4bcd-af0d-7e69344b09e6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "621011e4-0346-4a2e-89d9-b9fcba23b8ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34b65536-26b7-467e-ac87-8bc0e1ffec78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f601ab28-085e-4261-97b8-ca47c8c3c90f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba82c2a-65cb-477d-a0fe-a26bcaffe318",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "929fcd5e-ad0f-417d-a717-2b588618f0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b699776-03ad-4df5-8d64-2320efa84b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c5d48c3-2ae1-4090-9086-0536b09de409"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5f63d4a-db05-44da-bdec-a87c2f7d7c97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "598e40bc-0675-4743-bd94-15ae73a53fca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdb08a44-ab4e-4fe0-ad02-ad6067dc0ec0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2abb87ac-c9a8-4d9e-8202-30ece3725780"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5d7e129-8565-403d-bb25-9136ef3f5a07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4f1f9ac6-db11-42bf-a707-80884c702e8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8743f4a0-d0bc-4eff-b814-88f8c9624519",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97a85827-b054-4be9-a1d5-b3b2704eb6aa"
            }
          }
        ]
      },
      {
        "id": "7065690f-9892-491a-8896-b1f3bc69c23e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "62ab1d5c-e240-41b2-ab55-99247707b0c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4be0ea41-9a6d-4cac-88c9-ba6a81a62574",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "389b68e3-86ce-4ac8-86c8-4ae55940803b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3dd98c-6756-4cfc-aa0b-b40c6b5c92b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfa9dc8c-16ab-491b-8e8a-3b0677fe4cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a993f55-6d93-4046-aa28-54a35f2eccad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae7960ec-9c94-4cd1-8f0b-ef27bdb4d48b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14612095-bae2-4180-bd60-c4d25cc1d2ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c224bc83-0ab6-404c-9aab-b91abaf6ca47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eb267c9-b321-4970-890d-5934bbac6eff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dbb341d-9dbc-481a-acde-27f3182ae046"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52d3b252-7886-46ba-bf1c-aa01381cba3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b00c97d7-411c-4221-9d58-62e41d4b8291"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d66b873c-5726-47e2-a63a-63d2c3aaa254",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c4f225d-6a3d-4b4b-b0e4-8dca8a6c1daf"
            }
          }
        ]
      },
      {
        "id": "44c20cab-3075-4631-8ec1-2e5dff93b81a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5c55e61f-26e1-4111-8df7-c1ad55bf9586",
            "name": "Negative Testing",
            "item": [
              {
                "id": "136d4828-1b65-4284-b3c1-d6d9cec82f9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1038613a-9bcd-40ba-a9cd-ad5c2579f432",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f992d7-c405-40b2-8b58-cd13982d0b9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e610e29a-1f42-47d3-b89a-d233e6444d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf77335-1d46-481f-80e4-f2fc37cd9d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6339df4e-c97d-401c-b01b-e7456dd49d5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1e6a95b-342a-4a2a-b3de-8b46ed5cd66e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3437468a-1028-4bd6-9a05-cd0390dd998e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "742d02ea-b2c4-411e-abeb-a4da10395cfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9156e25e-31af-4f2b-83e8-8baf21c17f41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5afab992-a1cb-42bf-a50c-af252776e254",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cbce7271-df1c-4695-a893-2ade7e0bcf7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01270674-2dcc-4094-a59c-cb56187ef3c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cdfe7743-73e9-440b-9d9c-d222d6d66d9f"
            }
          }
        ]
      },
      {
        "id": "f62dc6a0-dff4-4604-af3b-a9503b081e5e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63075550-7205-40d4-b267-7820c27e6b74",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c60611ef-3517-48ac-8872-c79ef2da6b94",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5bd96c16-1062-4666-8a92-89a167eefcf0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb3ec0ff-b3ae-4834-a50b-8bea8c85d71a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99403dfa-734c-4abe-a11a-e38769b0e67f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 73.47017543859653,
      "responseMin": 4,
      "responseMax": 5078,
      "responseSd": 384.00882206830215,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1711240659490,
      "completed": 1711240689924
    },
    "executions": [
      {
        "id": "06112031-74fb-4b63-980f-7b76d4c89deb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "98f72d1d-559a-4c7f-b2a4-debf8d433ee3",
          "httpRequestId": "68547c45-b422-41fe-b9d6-7e769d670c8e"
        },
        "item": {
          "id": "06112031-74fb-4b63-980f-7b76d4c89deb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "feec6510-55b1-4624-bb49-2a935357581f",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "1522ac04-1e1e-4008-8fe8-865cacdd6ab6",
        "cursor": {
          "ref": "2eb0954c-2833-42d7-9807-ae495ce97d1f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "eb5f2732-e1cf-498b-b412-43d2986acc45"
        },
        "item": {
          "id": "1522ac04-1e1e-4008-8fe8-865cacdd6ab6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bcff2842-050f-4f58-8022-9137aebb8328",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "60e59f66-2481-4188-b566-b353bedaa336",
        "cursor": {
          "ref": "2edad47f-41ca-4e49-9396-b5bfc3af422a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "850f21db-4bf7-4232-9cfe-3122ddb9078d"
        },
        "item": {
          "id": "60e59f66-2481-4188-b566-b353bedaa336",
          "name": "did_json"
        },
        "response": {
          "id": "0d2fa09b-6f18-4523-a3f7-fafcf58caa6c",
          "status": "OK",
          "code": 200,
          "responseTime": 230,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bbae88-0bc7-47e0-a0ad-03fd0f84cddb",
        "cursor": {
          "ref": "5223300f-9c0c-4e61-b4b0-e2781b02fa43",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d0e73c85-4e73-42ce-9345-06e8b5d232c8"
        },
        "item": {
          "id": "07bbae88-0bc7-47e0-a0ad-03fd0f84cddb",
          "name": "did:invalid"
        },
        "response": {
          "id": "35e36691-f1c4-4f92-a2f7-8d59fa65ad70",
          "status": "Not Found",
          "code": 404,
          "responseTime": 376,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bbae88-0bc7-47e0-a0ad-03fd0f84cddb",
        "cursor": {
          "ref": "5223300f-9c0c-4e61-b4b0-e2781b02fa43",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d0e73c85-4e73-42ce-9345-06e8b5d232c8"
        },
        "item": {
          "id": "07bbae88-0bc7-47e0-a0ad-03fd0f84cddb",
          "name": "did:invalid"
        },
        "response": {
          "id": "35e36691-f1c4-4f92-a2f7-8d59fa65ad70",
          "status": "Not Found",
          "code": 404,
          "responseTime": 376,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3199c6-f352-4d59-8031-e034ab2ac309",
        "cursor": {
          "ref": "a64a7083-5550-4afa-9ca1-ecb741d4a296",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dc2270ab-daed-487b-b343-dcfd9438219d"
        },
        "item": {
          "id": "ac3199c6-f352-4d59-8031-e034ab2ac309",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4c14b753-778b-4dd5-9623-8d94745941e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc4ee78-3426-4216-94e1-df23c6b3a07b",
        "cursor": {
          "ref": "4e248e0c-d8a1-46d7-9904-0b78138709a7",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "32fd5bff-79ab-41b6-b429-7477da8af27e"
        },
        "item": {
          "id": "0bc4ee78-3426-4216-94e1-df23c6b3a07b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ea7e84df-6de4-4142-85a1-309748f587a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 22,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacd35e9-03d7-4712-978c-7b664b259370",
        "cursor": {
          "ref": "b28dd41d-b182-4770-b133-69116764d36e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f5a81dd0-2532-4655-bbd7-47c7541f0062"
        },
        "item": {
          "id": "aacd35e9-03d7-4712-978c-7b664b259370",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "16d8db65-51bc-4b5e-a9e4-68527e3b5fc1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94321d2-b48a-4737-8f1b-68f8794ea506",
        "cursor": {
          "ref": "8364c511-6608-4e28-a2ed-b97c12840d09",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "180223c0-bbe9-4dff-8c7b-7949508fe7e7"
        },
        "item": {
          "id": "c94321d2-b48a-4737-8f1b-68f8794ea506",
          "name": "identifiers"
        },
        "response": {
          "id": "58f860ff-f0d0-493e-83ee-90a1bd6779f5",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1765b2e3-972f-4743-b1bd-f7ef1892b46c",
        "cursor": {
          "ref": "cd612ad3-0000-4db8-9b05-979d9c9e4692",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e67aaebb-cbc5-41f2-8ce0-b7e60c52b9bc"
        },
        "item": {
          "id": "1765b2e3-972f-4743-b1bd-f7ef1892b46c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ab214ac4-4a34-4d17-b24d-26730b51c0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f795f510-7c44-414d-8261-133512127e0b",
        "cursor": {
          "ref": "732784a8-0b61-48b3-984c-17aeb60e7238",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "358ab28d-5e7d-4392-9b6f-aa7478f18cdf"
        },
        "item": {
          "id": "f795f510-7c44-414d-8261-133512127e0b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cf6cc931-1558-40fb-bb94-6b13bd3a21b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e293509-c860-4d52-9912-a0a886627cfb",
        "cursor": {
          "ref": "e9b2d6a6-374c-4265-9084-e9a679d1ebfa",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3fbda046-844c-4087-9b1c-6797d325a6d3"
        },
        "item": {
          "id": "7e293509-c860-4d52-9912-a0a886627cfb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d7f37283-1fa1-412f-a4db-150e71a85beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7fa82f-97d9-4f05-903c-a4f548744a3d",
        "cursor": {
          "ref": "c12153c7-eca4-4417-89ac-4054a2e05eb0",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3d173ba9-d473-4f86-884d-97772a99fecc"
        },
        "item": {
          "id": "3d7fa82f-97d9-4f05-903c-a4f548744a3d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5baf6ec5-55ba-42bd-b729-9bb5fbabcf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7998a00c-afae-4824-b175-13aec7698106",
        "cursor": {
          "ref": "1cc23031-6a0e-4ffa-a495-19f4def4902f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c52ba47b-6a13-4384-becf-b2668f8cb7de"
        },
        "item": {
          "id": "7998a00c-afae-4824-b175-13aec7698106",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "90cebcc1-22df-47ee-9dfa-f0a3808ae49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01af3d9c-225c-4487-a01a-30eea486a3d2",
        "cursor": {
          "ref": "078e8c1d-9213-4401-8b35-9429f0d711fb",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "29d878a8-6e71-4412-8b62-37a096e4ee7e"
        },
        "item": {
          "id": "01af3d9c-225c-4487-a01a-30eea486a3d2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6cea867a-b75c-4c78-a00e-d002cfb5e1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42f060e-ff92-40ee-b5e4-a592bf56e277",
        "cursor": {
          "ref": "86cb343c-09b7-49b6-9d5c-a57b4454626f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "816ec42b-be27-49b2-91c9-f54231078837"
        },
        "item": {
          "id": "c42f060e-ff92-40ee-b5e4-a592bf56e277",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d9b438de-cbe3-447d-b074-888becc2f907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84198868-f63b-45e5-8070-f457ab274a62",
        "cursor": {
          "ref": "b38b3d6e-f034-4d84-a7df-1876449d0d2e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c782f6e4-9ee0-4534-954d-b602639a4cf3"
        },
        "item": {
          "id": "84198868-f63b-45e5-8070-f457ab274a62",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "85951201-f090-415c-a1bb-4a2e1c6bc204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8846297-81f2-43a5-8618-29af341a0351",
        "cursor": {
          "ref": "bd6d46ae-a450-4d13-ab2c-ad9f466c51df",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5cfaad6b-dee0-4a4c-a9d8-1a528abca938"
        },
        "item": {
          "id": "d8846297-81f2-43a5-8618-29af341a0351",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5931a1c4-30e7-4d6c-af06-2df059abc536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c100c0-bc83-4d20-9daf-8738257c79aa",
        "cursor": {
          "ref": "afee6c63-c27e-495f-998a-3217cb3961f8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b61b14c6-37f4-489b-9042-4134c5e9ce9a"
        },
        "item": {
          "id": "b7c100c0-bc83-4d20-9daf-8738257c79aa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cf899b67-6caa-4501-b5a4-bbbcc6e96434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764d4ee1-7d4a-4d49-8566-0c1e50cad50a",
        "cursor": {
          "ref": "96a1864b-4cad-4b33-aa47-ea99cfbf4235",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "96cf4c8d-f129-4f9d-80a0-9429ab006670"
        },
        "item": {
          "id": "764d4ee1-7d4a-4d49-8566-0c1e50cad50a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "407be246-e834-4ebf-9d9d-e1213c65ed47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edab10b-c933-40da-aea7-1949f8a6c757",
        "cursor": {
          "ref": "5fcf8449-7441-486d-a1ae-49738cea7d6a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "288739fe-6adf-4c5c-91b1-87beb71d4843"
        },
        "item": {
          "id": "3edab10b-c933-40da-aea7-1949f8a6c757",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3a773e9c-ad7c-4106-bb5f-c7a0e9c36bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de1f91e-42dd-4738-80a0-df0a87a96bc5",
        "cursor": {
          "ref": "f3836144-be35-4b29-9cbd-be8f5dc48dc8",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2d9c6b75-1b2d-4be8-a86e-4e42818e669c"
        },
        "item": {
          "id": "7de1f91e-42dd-4738-80a0-df0a87a96bc5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f48377de-e200-4f6b-8eb9-03e424f4688e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba754a38-aca6-411f-b750-7f734bc4f492",
        "cursor": {
          "ref": "c77d5324-6436-477f-826d-ddbfe9ff97db",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4a98de3f-1580-4b31-bca9-549caab3fc49"
        },
        "item": {
          "id": "ba754a38-aca6-411f-b750-7f734bc4f492",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0952e2db-208c-4ef5-a61d-e24e8b0d9fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3f92bb-de8f-403a-b21a-a812d641e6f5",
        "cursor": {
          "ref": "744f93a6-7515-451e-8c74-f46c8f106551",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d82e6480-004a-41a9-8bfb-7d6a57412c8a"
        },
        "item": {
          "id": "dd3f92bb-de8f-403a-b21a-a812d641e6f5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b3dd9221-2a08-4ac1-b612-6e801c4c5519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15a66c3-9571-44cd-9a37-25f409d1e368",
        "cursor": {
          "ref": "c5c16f82-2cd0-4abc-ba75-e757e12a357a",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a9c9ed80-f821-4751-9857-f30ccba901a3"
        },
        "item": {
          "id": "d15a66c3-9571-44cd-9a37-25f409d1e368",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ff351bfe-1eab-4d7d-9cad-977ba441b39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f645d10-1722-445c-b5a8-581d93dca9a9",
        "cursor": {
          "ref": "12d83818-21ac-4ea2-8caa-87f89e76acd5",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "40043f9b-5777-43f9-92f8-7b1919131901"
        },
        "item": {
          "id": "2f645d10-1722-445c-b5a8-581d93dca9a9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2039fbf9-5d90-4753-975f-d1a67f5f4cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd510de-519c-462f-a397-9ba01eea7900",
        "cursor": {
          "ref": "fda27665-4efa-4fa8-9852-1f674b04bf48",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "56faaad7-7396-42d4-bc33-cadde4a188e2"
        },
        "item": {
          "id": "dcd510de-519c-462f-a397-9ba01eea7900",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e10ca7d9-e565-412c-9230-2cfee1a230da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abddf898-c6de-471e-951e-c6445c90e09d",
        "cursor": {
          "ref": "4051aad9-bc70-4aec-a17e-ef2dfcc448dc",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "58486f66-2609-4e87-89ec-8e299e9a73c8"
        },
        "item": {
          "id": "abddf898-c6de-471e-951e-c6445c90e09d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c4d632b4-d9d3-4511-9523-cdb5259e2e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ee032e-7c32-4e99-93fc-b6a65cfa1e23",
        "cursor": {
          "ref": "fe5c5284-d181-4950-bf5f-bdf14b5293e4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c9ea5c4a-b636-4e94-a9e9-354960eaa188"
        },
        "item": {
          "id": "07ee032e-7c32-4e99-93fc-b6a65cfa1e23",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "29d8df03-0fb5-4fad-a641-7982687aab02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44041969-9802-41db-b22d-9d324b481731",
        "cursor": {
          "ref": "89159b40-3efa-447f-9162-34fc59147ade",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c47c41a2-88c9-4424-99b4-9673c8a3ed10"
        },
        "item": {
          "id": "44041969-9802-41db-b22d-9d324b481731",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b63de7c0-313b-433d-8fbc-f940a200febd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71842bb8-c121-4f6c-afcd-53e5a01f09d0",
        "cursor": {
          "ref": "c4d7b44e-fa99-4426-8bfb-f10362df407d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "058483ce-005d-446d-9413-d25f2b77462c"
        },
        "item": {
          "id": "71842bb8-c121-4f6c-afcd-53e5a01f09d0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d88859e6-e34f-4e43-873f-6b4ff805447e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5323961-3b08-48bc-979d-744010e8ba0a",
        "cursor": {
          "ref": "85f403a0-96cd-424c-845e-192d33fa1cd1",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d73058bd-6e07-4d36-b425-d69ee96410e8"
        },
        "item": {
          "id": "e5323961-3b08-48bc-979d-744010e8ba0a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f4bc28e5-ea3f-4f4b-b803-dcc57b675977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc98e151-2f92-4e4d-9200-ddfdba47a153",
        "cursor": {
          "ref": "dab66279-f795-4f86-851a-1404ce732065",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1aebbf2a-6c58-4078-8a05-b44746026715"
        },
        "item": {
          "id": "fc98e151-2f92-4e4d-9200-ddfdba47a153",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f866dbe7-5abd-455e-ae7f-87437778f0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc930d9-b2f8-4b36-8d76-e5a7f651d732",
        "cursor": {
          "ref": "2481809a-9ea4-4f14-a2bd-2209a8ed7f5f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "329aa35c-c28e-46eb-a825-84e3714049ef"
        },
        "item": {
          "id": "7cc930d9-b2f8-4b36-8d76-e5a7f651d732",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3081590f-1368-4c08-9183-3cf944b2f39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88b5f66-d17d-4fa4-9d7a-8f6a0f1b6343",
        "cursor": {
          "ref": "6e323b8f-8b92-4de4-b81d-964ecb29a982",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "889a0ab0-206a-4f40-a570-a5e7cc9432b9"
        },
        "item": {
          "id": "f88b5f66-d17d-4fa4-9d7a-8f6a0f1b6343",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7ae37640-8459-4a27-aa45-35fd8c38d08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a34bdea-25ed-465f-930d-93d5d43e745d",
        "cursor": {
          "ref": "6d609605-7937-41b1-9d5b-a29dac0018a5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bc9d2b95-da95-4c6a-ac40-7e05fcf4c0f4"
        },
        "item": {
          "id": "6a34bdea-25ed-465f-930d-93d5d43e745d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "80f42a06-e4b8-4cc1-a665-495c5f861e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf1c2a7-b4bb-4a94-a0db-28ff38335b4a",
        "cursor": {
          "ref": "f6c95b07-fa50-4b2d-90c0-9a6ae19fb6a2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "950c8f4e-d308-4cc1-b5a7-a63f199ad96f"
        },
        "item": {
          "id": "adf1c2a7-b4bb-4a94-a0db-28ff38335b4a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5c20debf-1c2c-4d75-ac99-402871ef6302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c2a13b-a212-4c98-8991-0891dc7f8547",
        "cursor": {
          "ref": "36b04b07-b771-40c0-be42-f36557b473e9",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c79dcf2b-fcda-4a97-99b2-f7a1d9ccdb90"
        },
        "item": {
          "id": "28c2a13b-a212-4c98-8991-0891dc7f8547",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e5885ae1-036f-4a06-94c2-c4fd0cf29696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f27b186-7f56-494d-ad8e-59fc55177778",
        "cursor": {
          "ref": "78531c77-3d98-48eb-9865-b15cd521e0f7",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "461e73c4-3bf0-4f8e-8478-89108a75c703"
        },
        "item": {
          "id": "4f27b186-7f56-494d-ad8e-59fc55177778",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f7e14c4e-df2f-46db-813a-a2e05b964a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec63048a-e3e1-4d28-8bad-781e68d8b816",
        "cursor": {
          "ref": "eb89d8da-f4fa-4fb3-a6ea-d16128e02109",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5590fb9a-9ce6-4a25-87b8-bcb11b391e77"
        },
        "item": {
          "id": "ec63048a-e3e1-4d28-8bad-781e68d8b816",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fca77b0e-025c-4e77-98b5-59d518c8e6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1617ac9-abb5-47c3-9208-fc08989171ac",
        "cursor": {
          "ref": "9335227d-12dd-4a70-9a48-e86e44e1c72e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "301c3cdd-5e56-47d7-95f0-7be63083f0ea"
        },
        "item": {
          "id": "d1617ac9-abb5-47c3-9208-fc08989171ac",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4ad3da0e-8ade-4514-8553-61ec388fdf9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39ffa11-281b-4b1c-9213-03c0ea706ce6",
        "cursor": {
          "ref": "3a54ee4a-8f53-4e78-b579-acfad0732964",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "68e468c0-7a5e-4293-9ed0-0042df87c57b"
        },
        "item": {
          "id": "d39ffa11-281b-4b1c-9213-03c0ea706ce6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7c3ea4cc-6af8-4a3b-9c38-7fc8a83c1098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b181e302-8b50-4830-b4c9-e503ac531b6e",
        "cursor": {
          "ref": "9cd176bb-3e03-442e-ab4d-34cfffe46d15",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "168a466d-e7b6-47cd-9f7f-7eebf606ee9f"
        },
        "item": {
          "id": "b181e302-8b50-4830-b4c9-e503ac531b6e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fd733ac0-fc21-49e2-995b-306b6bf0252b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c0ca33-120a-4389-83df-731ba4871483",
        "cursor": {
          "ref": "1347e34e-dba0-4ac3-b3fe-433ee822b0b4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c1c66142-583c-473d-a693-a739d2dca173"
        },
        "item": {
          "id": "98c0ca33-120a-4389-83df-731ba4871483",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c98dc1ee-ab17-4834-b5d6-bae56d5f59a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65e5fa0-e946-4aa4-91a9-5c42e01400c8",
        "cursor": {
          "ref": "ebb44e51-4ca8-48b9-8fd7-11db6e170f35",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2833cdf2-280a-4f08-8aa8-8daca7e1e690"
        },
        "item": {
          "id": "c65e5fa0-e946-4aa4-91a9-5c42e01400c8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "522d8d2c-d74f-46b4-8941-72aea70c1d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cefc50-bca5-4ee2-b5bd-bb967ca6898b",
        "cursor": {
          "ref": "8e5c357e-9964-4821-b526-5400b0084767",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1f6661c2-e0d8-4715-a8db-a213d22a47a7"
        },
        "item": {
          "id": "a2cefc50-bca5-4ee2-b5bd-bb967ca6898b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "54f26b9b-c423-4176-a615-de90770989a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2a4ae0-a592-41d8-828f-8fe55f4d109d",
        "cursor": {
          "ref": "1df22600-f1dc-4c80-adcd-66a8c3e0e154",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8e49a657-997b-44cb-8210-5ecd927cb5c0"
        },
        "item": {
          "id": "8b2a4ae0-a592-41d8-828f-8fe55f4d109d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0d0c920a-5a2d-4cdb-9d58-8e44e2c604fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4359938-77e8-4ad5-bc31-ca99d836c971",
        "cursor": {
          "ref": "c9a65529-152f-480d-8a24-9ff5d3b90642",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "324bc321-0582-40d3-ac1b-8bf4e48f2f83"
        },
        "item": {
          "id": "f4359938-77e8-4ad5-bc31-ca99d836c971",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b2493f02-908c-478c-9336-115b1e5d862c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1634a4-cbdc-4f75-9eb3-5efdced31539",
        "cursor": {
          "ref": "07c42b85-f1d8-4963-baa8-6c847b07b273",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5dbf1342-c3cb-47e0-88e6-b442628a3b7f"
        },
        "item": {
          "id": "6c1634a4-cbdc-4f75-9eb3-5efdced31539",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "98df61b8-3057-4d04-8e83-782595b94dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab82a71c-1722-405b-a6f9-da7872e8cc80",
        "cursor": {
          "ref": "56ce6a8b-36b2-4c48-9dec-a61526dc6e0c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "99a9aa8e-31f4-4634-8e74-72d375608aa0"
        },
        "item": {
          "id": "ab82a71c-1722-405b-a6f9-da7872e8cc80",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b7edccc2-3973-4c3d-bfbb-e9c581495a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f387f9-8078-453a-8fb4-52b9fb494f7e",
        "cursor": {
          "ref": "4bb5eb43-7917-4f7c-831a-947f4f543e0a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b3dad6f6-974f-4c20-bc39-736bc14702e2"
        },
        "item": {
          "id": "33f387f9-8078-453a-8fb4-52b9fb494f7e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "896e23a8-0d37-4929-ba82-dbdc28b62f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f54d7c1-8e37-4ad3-86ae-3ce8a210339b",
        "cursor": {
          "ref": "ffd90f02-71a3-47ae-a0a1-39bfc37a86b8",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7177540d-e322-4d7f-964f-3fb87bde6fc8"
        },
        "item": {
          "id": "1f54d7c1-8e37-4ad3-86ae-3ce8a210339b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "03b2d387-231e-40bc-b791-7bffbf4fa2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d62016-820b-4d50-8478-a4bf98acb859",
        "cursor": {
          "ref": "befb0940-1c16-464c-95db-c621632c56dd",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9e016c72-b158-445c-bca1-09df9ea15396"
        },
        "item": {
          "id": "07d62016-820b-4d50-8478-a4bf98acb859",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4655d9a1-fa2c-4e50-89dc-414ddfac398a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3594a62-029d-4b03-8739-70fcb1990f8a",
        "cursor": {
          "ref": "a996063f-fe7c-4a42-92af-1c8aacc6bbaf",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2a29dbce-3e65-4ed3-a71b-38b733c864f0"
        },
        "item": {
          "id": "e3594a62-029d-4b03-8739-70fcb1990f8a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6134e145-cf67-488a-9b56-7117f963cb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1826c985-ed2a-47b5-ac4c-c284b5e80913",
        "cursor": {
          "ref": "286e9b90-2941-4106-bf90-ed80b90a1cc9",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c0d3076f-62cb-4e8d-ac22-a61a0a1efe38"
        },
        "item": {
          "id": "1826c985-ed2a-47b5-ac4c-c284b5e80913",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6fd2722c-e425-488c-ace2-b77e618badc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda1f274-9d79-459d-a819-c88c76897529",
        "cursor": {
          "ref": "b190c76d-b5e8-42d4-909c-442c3bf1e8f5",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0b0c1cd7-18a6-46de-91f4-9ece0b10d621"
        },
        "item": {
          "id": "fda1f274-9d79-459d-a819-c88c76897529",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e1e17ae0-ce4e-4183-bef3-63b7b828870e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b3b080-5f75-43dc-bb0a-efa3664d2104",
        "cursor": {
          "ref": "df97c985-e5ac-4a2d-8da1-27b5724469cf",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "271ce832-e9bf-42da-a28b-9d7380b6976b"
        },
        "item": {
          "id": "68b3b080-5f75-43dc-bb0a-efa3664d2104",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f0cf1dcf-a76c-4db3-873a-8fa395322767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d8fc6e-e0b6-476a-b127-4cef5804c556",
        "cursor": {
          "ref": "7c6b6d26-880f-46b5-a602-ecafa544187b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e6fe3665-da5d-48a9-92a1-468d4a7acd32"
        },
        "item": {
          "id": "a2d8fc6e-e0b6-476a-b127-4cef5804c556",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "38730734-cd7d-4208-89a9-0d78207778c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34810106-f312-4e99-823b-b864553f3931",
        "cursor": {
          "ref": "7c494a55-9f3a-4417-8102-8a8091a17520",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b0285f48-ee78-4c08-bfa4-45485404c3c3"
        },
        "item": {
          "id": "34810106-f312-4e99-823b-b864553f3931",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ed074acc-a540-4494-877f-2e0730864ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5915cbe5-e0e8-4f86-aa9a-f7550c633960",
        "cursor": {
          "ref": "d16012af-1318-440e-9098-7a368a9e8c48",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d43704cf-d242-473c-ad48-a33ec2303ef0"
        },
        "item": {
          "id": "5915cbe5-e0e8-4f86-aa9a-f7550c633960",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9006814a-457c-4385-aaf6-4b1d9981c807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d4e601-a0a5-4e9f-bf08-62c72f303724",
        "cursor": {
          "ref": "59c3cf0a-d6e0-4fd8-855e-189dcf943f38",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2b9ec765-36b2-428f-af12-f628eaa2d0ec"
        },
        "item": {
          "id": "d2d4e601-a0a5-4e9f-bf08-62c72f303724",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b397e6c4-045f-4695-9c29-e1c0ea49b2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b183f33d-5e78-4b22-addb-161c5cd883dd",
        "cursor": {
          "ref": "5fcd0439-a333-45d6-805d-525047c5c497",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0c7e97f7-a0fe-4a79-a830-b16ca28b3240"
        },
        "item": {
          "id": "b183f33d-5e78-4b22-addb-161c5cd883dd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7f3bf6d1-8de2-4134-80f0-9783cf05edf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff52fcf4-4aff-4e1f-a0b9-63218ba8dca2",
        "cursor": {
          "ref": "0f878832-84d8-4f4c-9ce6-1498e0bcf6f2",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fa972a4a-34c9-4de6-b559-e8fb34e2d880"
        },
        "item": {
          "id": "ff52fcf4-4aff-4e1f-a0b9-63218ba8dca2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1bc50aca-5544-47c7-b3d4-fb3143d83eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3fe7ab-2f50-43c6-b7c3-cea783268a03",
        "cursor": {
          "ref": "1aca4cd2-ce63-4b06-9ad8-ad59f0e27d06",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bbcfe6e1-9386-44a6-a695-f584e4e334c8"
        },
        "item": {
          "id": "3a3fe7ab-2f50-43c6-b7c3-cea783268a03",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "813af82d-f410-4046-a525-1f3e35930bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eb0cdb-9f39-4a22-b642-7634975426ce",
        "cursor": {
          "ref": "c78074eb-f342-4ae6-a909-b0f699bdd4aa",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "af299772-723f-4643-b987-03752218cf12"
        },
        "item": {
          "id": "69eb0cdb-9f39-4a22-b642-7634975426ce",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9f85284b-1c9e-42bf-a391-28da2610b6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c9e333-569a-4631-aa47-27a67b119771",
        "cursor": {
          "ref": "4f382a62-dc42-4927-adf5-f79f9ed993d7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4066bb9d-58b6-4dc8-9114-f371dda78ed4"
        },
        "item": {
          "id": "76c9e333-569a-4631-aa47-27a67b119771",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ff18fd48-e2da-45c4-9382-eabb63cab5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a58a65-4cb2-493d-afb2-3fa0720b219e",
        "cursor": {
          "ref": "0504d621-3a99-4730-bac8-dc44df6feb72",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c27f9af7-4123-4fd6-81a0-c49cac6ec003"
        },
        "item": {
          "id": "53a58a65-4cb2-493d-afb2-3fa0720b219e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c45d9cf1-3a1f-4aaa-8383-8f009535b1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a717624-e7e9-451e-a3b1-67a6b39a404f",
        "cursor": {
          "ref": "328dd15c-bede-43be-ae1b-e077f50e58d7",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4388f0b7-0797-4591-96b0-fe7afeb6424d"
        },
        "item": {
          "id": "6a717624-e7e9-451e-a3b1-67a6b39a404f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "67050624-5716-44ec-94e9-9c55c450d2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0233983f-8016-4415-9b4a-824a6e098873",
        "cursor": {
          "ref": "574329cc-8702-4e90-889a-bdc1e3995aa3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6311fa74-54e6-4bb2-9aa7-2a666368a7c0"
        },
        "item": {
          "id": "0233983f-8016-4415-9b4a-824a6e098873",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ea2e04ae-90bb-4d81-84fe-e82b86ced288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b2930f-de38-4d29-ae10-43f8eac48808",
        "cursor": {
          "ref": "f2dd7f88-4a67-4664-8389-700ae74d611a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2d50ea82-1ca0-4b44-8aa7-87dfe60b9a98"
        },
        "item": {
          "id": "d6b2930f-de38-4d29-ae10-43f8eac48808",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ffdea6dd-1d51-49e1-8030-2aed8e284d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abe0d4f-ff82-44bd-bc5b-0c8bb167e192",
        "cursor": {
          "ref": "d6f6e8ad-6009-432d-af84-19b81f1dce13",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6ce80d5d-3046-4483-ad1c-18c12a5ba338"
        },
        "item": {
          "id": "8abe0d4f-ff82-44bd-bc5b-0c8bb167e192",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "69070467-897c-4eec-950d-fefdb425e462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81080765-d8d4-4362-bb65-77f8768b52c0",
        "cursor": {
          "ref": "860dd07b-7832-4be5-bf40-3629957be4a2",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bfc0e47e-f3b8-427b-a947-af0d1c216b2b"
        },
        "item": {
          "id": "81080765-d8d4-4362-bb65-77f8768b52c0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "04d78c9b-a159-473e-95b5-b67bb602a441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c91f222-c99a-4d1b-951d-b6f7aeddde09",
        "cursor": {
          "ref": "2a5007fd-934d-4ce2-85c6-505bb36fad4e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d3512ec1-b5a6-4c8f-92f7-47e86fe37639"
        },
        "item": {
          "id": "1c91f222-c99a-4d1b-951d-b6f7aeddde09",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "51d98655-e0e9-4f2a-96b5-1b9f037c0418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6180a9-aa76-435a-a564-e12abdef43ae",
        "cursor": {
          "ref": "bdeff45b-8565-4ed2-b8e2-0f23f58322f4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c4751cf6-577c-408f-8f73-6ee5a6e4a504"
        },
        "item": {
          "id": "3f6180a9-aa76-435a-a564-e12abdef43ae",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0a736c2e-c1e7-44fe-8223-ff2909544a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa24c19-fa4c-44e4-b40c-5d56011c8009",
        "cursor": {
          "ref": "8f3e9bdd-48b3-47f7-8553-756119261e90",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7e43a361-8c2e-4fe4-b3e1-8f21dffd667d"
        },
        "item": {
          "id": "5fa24c19-fa4c-44e4-b40c-5d56011c8009",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "66c1a063-0a39-492b-a2a9-7d5623222daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdfcee0-1141-4a68-bf3e-fd69088a1c70",
        "cursor": {
          "ref": "bd9d9793-da6c-424d-9100-9cb2200af67a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e945b598-a096-497b-afcc-d22996bbae6b"
        },
        "item": {
          "id": "2fdfcee0-1141-4a68-bf3e-fd69088a1c70",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d3c0b5e9-75d7-474a-80b1-d681a607533a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd9f34a-576a-4731-a249-657f3bd18b82",
        "cursor": {
          "ref": "6a5d00be-9ca0-495e-803e-16390bc88adf",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "700b3447-5afe-4682-a713-f1d6dae971e1"
        },
        "item": {
          "id": "dcd9f34a-576a-4731-a249-657f3bd18b82",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3068f6f9-85c6-4b08-92df-8960bd80c2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fbdd46-596e-406a-b58f-95d242666442",
        "cursor": {
          "ref": "fa5d7b04-8de7-48a7-86ab-e0315f02fe76",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "00b4eec3-32de-402f-bd35-04a7a9b22ea4"
        },
        "item": {
          "id": "a5fbdd46-596e-406a-b58f-95d242666442",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d3ef5fc7-7a27-4b81-819e-6254fa10eac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160630fb-8269-49dd-b0fa-8a399f1f31fe",
        "cursor": {
          "ref": "c2e0e948-2906-47e1-b505-6e0d066744c3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4062750b-d9be-4b65-b37d-9da30c81a2f3"
        },
        "item": {
          "id": "160630fb-8269-49dd-b0fa-8a399f1f31fe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bb012552-d3d8-4338-a410-13816ff582ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a8078e-dc78-4e44-9e09-18779641144c",
        "cursor": {
          "ref": "1bd44f91-f1d2-40b9-958e-e29837ce6ca2",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f9ab6338-7aca-484a-884f-20cc3ffba5aa"
        },
        "item": {
          "id": "53a8078e-dc78-4e44-9e09-18779641144c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0e15dcf6-02ee-41ac-9fa6-3564b310b797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61adf3d8-2e9f-44d8-b795-74ae7b0aeeeb",
        "cursor": {
          "ref": "fb07213a-6d38-4d5f-bbdf-a4d875ad35d0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3b78f75e-0d8f-4182-afda-09fbfde17d6f"
        },
        "item": {
          "id": "61adf3d8-2e9f-44d8-b795-74ae7b0aeeeb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1bad1817-591e-47eb-9bec-466bc893d334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15d1a89-a703-4df7-b8a9-668b20cef587",
        "cursor": {
          "ref": "53ad1ab5-7d9b-402c-b80b-94fc01e5ac4e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8aef085a-66a8-4cc1-a703-b7bae976eb78"
        },
        "item": {
          "id": "a15d1a89-a703-4df7-b8a9-668b20cef587",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "697d12a8-09dd-4faf-8045-f312ba1bc13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357b8a86-edd5-414c-95c5-b984df03b11f",
        "cursor": {
          "ref": "5536834c-a53e-4613-a21a-05f513d76705",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "366c8063-8133-48f9-a4dd-6f1c4bdc6592"
        },
        "item": {
          "id": "357b8a86-edd5-414c-95c5-b984df03b11f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2cf3f13b-3053-4484-be93-53d08a13ee20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59a8246-f717-4021-b4e0-61ea74dc02af",
        "cursor": {
          "ref": "f4be39d8-feb5-4311-90b4-fa8cd9266c59",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d9a963dc-c19f-4010-a7f5-32c8afecbe88"
        },
        "item": {
          "id": "d59a8246-f717-4021-b4e0-61ea74dc02af",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0a624d9b-192c-427e-ac22-4b0364e5b507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0860ce-8480-4500-ad2f-ceb1abc91708",
        "cursor": {
          "ref": "eedf3282-91ad-4eea-8f6e-3491fb1347ca",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a7a2d889-0661-4871-92dd-20b83036dd08"
        },
        "item": {
          "id": "4f0860ce-8480-4500-ad2f-ceb1abc91708",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ff2eb053-3599-4e33-831e-7c7966ffbc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0517da51-e3db-4c47-8e92-1bba5ef9dc99",
        "cursor": {
          "ref": "f7ff71fe-ef24-489b-a4dd-cd5fc29dc266",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fc2d170a-c1f0-4879-b9a6-8be6d501c976"
        },
        "item": {
          "id": "0517da51-e3db-4c47-8e92-1bba5ef9dc99",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5f9ce308-2d92-488e-93c8-e89e78b8f2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c98ec8-5a09-44dd-861b-7cf76e898d9f",
        "cursor": {
          "ref": "124c64a5-60c4-403a-8427-d352743f8335",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d3107c7a-bda6-4fc4-985c-661b33cd1457"
        },
        "item": {
          "id": "d0c98ec8-5a09-44dd-861b-7cf76e898d9f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ec53dfe4-1a50-4349-bddc-190997b198ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49a2136-59c7-42f0-aafa-ac623a8700cb",
        "cursor": {
          "ref": "69898eec-d062-40b0-a88d-53d688638f29",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0441d8a5-b5e5-429d-b6cd-7649e26aee88"
        },
        "item": {
          "id": "b49a2136-59c7-42f0-aafa-ac623a8700cb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "73412f8a-4ecc-4aa0-ab94-077f9ef4bb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0b67a9-d4e9-486c-87f4-b5f67b15e549",
        "cursor": {
          "ref": "b167c9bf-b21e-48a9-895a-f540203577da",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "94b1980f-25c9-40a7-b62a-6db38340bd9d"
        },
        "item": {
          "id": "bf0b67a9-d4e9-486c-87f4-b5f67b15e549",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "378a7e6e-a913-49de-b21a-80a1ea1c1bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76db8b72-56c9-48d5-bf20-5a80ef8c26c8",
        "cursor": {
          "ref": "83c29c56-09ec-4f11-8b3f-7cd17da89b0b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b1576cf2-187e-4abd-9d12-53f54c5cec10"
        },
        "item": {
          "id": "76db8b72-56c9-48d5-bf20-5a80ef8c26c8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0e296ec1-85ea-4d14-b974-77a779bb658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685c5135-591e-439d-91e2-9eea262a58cb",
        "cursor": {
          "ref": "39975112-30ed-4aba-9b49-2b38b7241587",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "750ed8d8-0627-4cea-8bb6-f0e550b2f43f"
        },
        "item": {
          "id": "685c5135-591e-439d-91e2-9eea262a58cb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c6fa7f04-bc84-4ab2-98e8-e36772fb1f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8894fc6e-34c7-4461-a09e-3edfe6be49b7",
        "cursor": {
          "ref": "70b93c0f-ff89-4001-8429-cf54dd2990bc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c20aa73f-1545-479c-8b7e-c7180bf7d1f0"
        },
        "item": {
          "id": "8894fc6e-34c7-4461-a09e-3edfe6be49b7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0548aa7b-5fa8-4971-9114-90ade900f603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aec86ad-7509-42a5-8862-974cb6c2c3d3",
        "cursor": {
          "ref": "408cfa64-489f-4619-9c1a-e6a05eb462aa",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2bcb0b3a-6e23-43b7-a107-a003aa090bde"
        },
        "item": {
          "id": "5aec86ad-7509-42a5-8862-974cb6c2c3d3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "de514748-c86b-4a99-9773-076667142734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa306376-ab43-4bbd-98f9-4749ad1b42de",
        "cursor": {
          "ref": "373c10c5-4838-4caf-9efa-221faa05ec17",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1454997f-ff30-45b6-bcd9-5fb4eb91182a"
        },
        "item": {
          "id": "fa306376-ab43-4bbd-98f9-4749ad1b42de",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b0c734ff-cdd5-4f27-981d-53e019694ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fd6164-ca51-463e-8c52-25e9a8a74856",
        "cursor": {
          "ref": "dac0bafb-af0d-491b-a121-042e76e5b020",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "728bcacb-6156-439f-98c8-9340b767f142"
        },
        "item": {
          "id": "90fd6164-ca51-463e-8c52-25e9a8a74856",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f8125d0a-3ea6-42f0-b61a-03dd44d8878c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff5b5a3-083b-4b43-b731-50c16141417f",
        "cursor": {
          "ref": "4042b3a4-6142-414f-a7b3-60efa71456c1",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dc0166f9-6197-42fd-beb5-9962a89a05fe"
        },
        "item": {
          "id": "0ff5b5a3-083b-4b43-b731-50c16141417f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "87f6cb95-8bf2-4954-a501-e67b18e1e0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422e4f32-4934-49f0-b13a-8adab0589ad0",
        "cursor": {
          "ref": "94af9651-94eb-4d3c-b720-b979c8751397",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "418a4856-afe0-4951-900e-d02a22874f9d"
        },
        "item": {
          "id": "422e4f32-4934-49f0-b13a-8adab0589ad0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "13a3e4da-c5f3-42cd-b2d1-d07105a2c154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12e3300-33d6-4ad6-a658-9ba6483117c8",
        "cursor": {
          "ref": "05d0d729-b554-49b7-9de5-c070adfb25e9",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a0ee5e98-e121-4ed0-a8aa-aa431d3504ab"
        },
        "item": {
          "id": "b12e3300-33d6-4ad6-a658-9ba6483117c8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bc60d482-fd1b-4a26-896c-2cd6c695cf24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c5839a-4f88-4c40-a460-a1cfe6a36846",
        "cursor": {
          "ref": "fcbb06ed-9a26-44d3-b6f1-b5732446dd4c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c9033286-1b7d-44f6-88e1-f9c3a439fa5a"
        },
        "item": {
          "id": "b7c5839a-4f88-4c40-a460-a1cfe6a36846",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5ea8011b-2397-4a02-8873-93619287270c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b527b221-8274-4b41-8dc6-721723b5c376",
        "cursor": {
          "ref": "226f00d3-573e-42b7-9431-1c34ba434e82",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d839cecc-daeb-497a-9491-e9a5c49767f8"
        },
        "item": {
          "id": "b527b221-8274-4b41-8dc6-721723b5c376",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "90a57266-2384-4484-88da-6d661a6f9803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84afc586-8535-4c1a-ae99-db5ac40ef1e3",
        "cursor": {
          "ref": "71551fe2-2532-4c74-a457-79d1c17e712b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "25f6eede-b878-4859-b5b6-23b47ea18619"
        },
        "item": {
          "id": "84afc586-8535-4c1a-ae99-db5ac40ef1e3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a536f1d3-c4e8-44c8-8637-b5dd72f3f43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97596df1-8d9d-4faa-b252-8421898daa46",
        "cursor": {
          "ref": "a1853070-a7c4-4ca3-bc09-3dc0c2e2c176",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "44d27881-7148-4b3b-8583-78e490ebf8f5"
        },
        "item": {
          "id": "97596df1-8d9d-4faa-b252-8421898daa46",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4df1de0a-764d-4cf7-883a-112a66ec4f6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bbbc16-6748-4a45-bda1-57c2b3b26527",
        "cursor": {
          "ref": "bd7cbcaa-f956-41c3-b734-aa89d96287c5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c1ca1a41-506f-4a6c-8427-bcadc2be4761"
        },
        "item": {
          "id": "72bbbc16-6748-4a45-bda1-57c2b3b26527",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cc463aeb-fc0a-4458-86e3-b899b346d9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3a5c539a-1f8d-4948-bc8b-bbbc83bf10eb",
        "cursor": {
          "ref": "fefff96e-fab4-4dbe-bfdf-dd2f2bf42f85",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a8511561-1995-4b4e-9e34-b37a98853566"
        },
        "item": {
          "id": "3a5c539a-1f8d-4948-bc8b-bbbc83bf10eb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a2557fda-2415-4d40-8c66-b1b337e7ed40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "abdd665d-a55d-4a7b-bbea-e062811b23b5",
        "cursor": {
          "ref": "64dd7293-874f-4401-86f9-e3af9c5e78ff",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "15633d3c-f38b-487f-b0fe-b9e6a36c7578"
        },
        "item": {
          "id": "abdd665d-a55d-4a7b-bbea-e062811b23b5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fa0d744c-d2a2-4791-a784-de742b0a1850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4a5746da-6903-44d5-b975-e21266f7c16b",
        "cursor": {
          "ref": "1120fe87-f7b6-43b1-be8c-bb5038312c2c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "941c2f36-0517-40d1-9d06-efdb5af8c9b7"
        },
        "item": {
          "id": "4a5746da-6903-44d5-b975-e21266f7c16b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "28281a61-064f-43b0-bdab-177ac26b2de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6cbe0e5e-a855-4cab-917d-bd669c09fcc2",
        "cursor": {
          "ref": "e21b9db7-0861-4abf-9f9d-bc033f2a3827",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e5c59246-275c-438b-bcab-4ab2ac433c0f"
        },
        "item": {
          "id": "6cbe0e5e-a855-4cab-917d-bd669c09fcc2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9b311e77-3aed-4932-98de-581348166fc7",
          "status": "Created",
          "code": 201,
          "responseTime": 5078,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "425aabbf-ad64-4bee-be81-62f8f464ff36",
        "cursor": {
          "ref": "267fca14-568a-49f0-8677-dc83600a1c32",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a212bbc4-7a96-4f1f-a6e8-1f69565e3a27"
        },
        "item": {
          "id": "425aabbf-ad64-4bee-be81-62f8f464ff36",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2c7d37e4-8d12-4950-b5ae-3132ae28ce30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "79b02e38-f6ed-4473-a3c3-4b2ac693728d",
        "cursor": {
          "ref": "3203be33-53bf-4335-9f93-1dca0743dafa",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bfef3c75-7001-4401-b713-4d03140ec673"
        },
        "item": {
          "id": "79b02e38-f6ed-4473-a3c3-4b2ac693728d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d0704783-883f-489b-9548-979ef63037df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4e93314a-ee96-4df7-83dd-e974b1667a47",
        "cursor": {
          "ref": "358f942f-0afc-425f-8888-0e28b45fbb38",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "38f591a1-1d7f-4b5c-991f-3620c65bc10f"
        },
        "item": {
          "id": "4e93314a-ee96-4df7-83dd-e974b1667a47",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f973bbf9-31d5-4039-b1e9-ba48d14d0a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97249388-bbd4-4dd5-8a47-06fe51913017",
        "cursor": {
          "ref": "b8e1db5e-bc3d-4b5b-81ec-ccad12d197e2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5255628a-3750-43b7-a130-58efc2af4ba0"
        },
        "item": {
          "id": "97249388-bbd4-4dd5-8a47-06fe51913017",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "23f97c14-8db5-40a5-a1a5-359c9a89b8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f743efd-e62c-46ba-9b22-a870346c7eef",
        "cursor": {
          "ref": "15f181f3-52ec-46d6-9d98-b05af63f9720",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "934dff5a-64f5-4ed0-9071-21454bc26cf8"
        },
        "item": {
          "id": "1f743efd-e62c-46ba-9b22-a870346c7eef",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3c264cf2-ed59-4fae-ac55-52d7536ebf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3bc5ca-5a97-4f66-a5b6-31893ca5d150",
        "cursor": {
          "ref": "6a9deab3-d950-4aea-9869-bdefa8466116",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d78378d1-5727-485c-8327-5440276e7ed6"
        },
        "item": {
          "id": "1e3bc5ca-5a97-4f66-a5b6-31893ca5d150",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "477b3860-ce81-4a2b-a51a-39fae3bba0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd2806d-2954-42fb-808c-51f5c33c9f70",
        "cursor": {
          "ref": "6c6a8fe2-1202-47b0-97cb-13f9af0274cd",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1110b0af-4501-48f4-8a5d-db31753af3a6"
        },
        "item": {
          "id": "8cd2806d-2954-42fb-808c-51f5c33c9f70",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f1c460fe-6c6a-41ca-8e56-c7c19c9304a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fda0e5-5ed7-42e9-b030-6f060c697c0e",
        "cursor": {
          "ref": "40963ada-357a-4c12-9ce6-a04089c6ad1c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "196a4d78-67ba-4c7f-a464-a5b57d74c45d"
        },
        "item": {
          "id": "74fda0e5-5ed7-42e9-b030-6f060c697c0e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6b831adb-12d9-4ffd-8a30-40fe496d75d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1d0712-c521-40ea-8680-b0a553fa6aee",
        "cursor": {
          "ref": "4e94c936-bcd7-4c5b-92f4-e032cdf1adac",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "691d7c76-9961-4b17-8745-75672b8104f8"
        },
        "item": {
          "id": "cf1d0712-c521-40ea-8680-b0a553fa6aee",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2e19131b-7e5d-4438-8897-320f0efc4229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0d7a5c-2872-4297-a07d-265c38b19a6c",
        "cursor": {
          "ref": "0856a847-2ab6-468b-9216-cfa9d82835d5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1de54c6b-ed88-4632-be67-c308cb4c6de3"
        },
        "item": {
          "id": "ad0d7a5c-2872-4297-a07d-265c38b19a6c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "09d667de-4e6e-413a-a819-aa66f898d7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7bae2c-1dcc-49f7-b771-65dada8f48ed",
        "cursor": {
          "ref": "2008ba62-f2eb-44f4-8c58-227435ad9491",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fe03dc5e-f648-4e44-b46c-dcdfd54a422b"
        },
        "item": {
          "id": "ba7bae2c-1dcc-49f7-b771-65dada8f48ed",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7f18d3ca-40fe-4c2a-8510-6ea5637d713f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e2efb9-7a34-4793-91e6-b244f936813f",
        "cursor": {
          "ref": "d49c3efe-ae1d-45cb-8299-bec05f9c9c92",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "75f1543b-430f-406e-b527-8acdf1f8741f"
        },
        "item": {
          "id": "91e2efb9-7a34-4793-91e6-b244f936813f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "87ee9f64-290d-40a3-8102-9946c2d454ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8090265c-8ebe-4313-ae7c-61e615d49c07",
        "cursor": {
          "ref": "9eadc2ae-e67a-464f-8099-866739969be7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b0614792-6f83-4f76-9edb-99479d85e139"
        },
        "item": {
          "id": "8090265c-8ebe-4313-ae7c-61e615d49c07",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2a17eb19-9a09-4ed5-ab4f-60b9b8962232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1987ecf-b766-4347-8b4b-6e147283092a",
        "cursor": {
          "ref": "4c5909f2-b872-4c50-8480-a7ac960e099b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "31e01d06-c596-45d0-a200-0cbac1e81852"
        },
        "item": {
          "id": "c1987ecf-b766-4347-8b4b-6e147283092a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a751e1ea-4dc7-4882-ae42-67192f8df5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63736f0c-a27e-4c1c-838d-71e74075a8ce",
        "cursor": {
          "ref": "5f88e7bb-ff2f-4c45-a52a-47d8be637d97",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cda47983-4f5b-4f09-87d5-c639944caa67"
        },
        "item": {
          "id": "63736f0c-a27e-4c1c-838d-71e74075a8ce",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "479e7e21-eb4c-4899-9c88-ee81a584ecf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f477ca-10f3-4dcf-aaea-4c78b728d542",
        "cursor": {
          "ref": "3606766d-94c5-42be-a01f-10307a498920",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f7269fca-2dba-496d-b77d-6bda7c3fa940"
        },
        "item": {
          "id": "95f477ca-10f3-4dcf-aaea-4c78b728d542",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "22d5a075-9640-4c13-8b67-0cc940ba5fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2ac60c-a7ef-493b-8295-9bf88366ebf6",
        "cursor": {
          "ref": "d3fec474-f69e-440b-9111-b81c9b6a9601",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c5015851-5ece-4538-b602-d8c5cf96a604"
        },
        "item": {
          "id": "6b2ac60c-a7ef-493b-8295-9bf88366ebf6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "69ec0ffc-6e13-4b0c-be0e-7712d0bc4250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce1ca1a-4487-45c9-aa86-b7ccd6aa5b59",
        "cursor": {
          "ref": "ff20d39d-8ce4-4c2d-9e91-a0fff0755847",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "49591ba9-c576-404b-85dc-3bb76e1e80fd"
        },
        "item": {
          "id": "dce1ca1a-4487-45c9-aa86-b7ccd6aa5b59",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a3750074-1516-4b7b-b500-8000212cadf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f58af12-8030-43e6-b6fd-39392c2329a3",
        "cursor": {
          "ref": "b72340ec-c196-4992-8514-9e780a16788c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d94368b3-6466-4e61-803d-55786ccfe623"
        },
        "item": {
          "id": "9f58af12-8030-43e6-b6fd-39392c2329a3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ee44e425-ded6-415c-81fe-8bb445ef97ac",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ebf798a2-7b70-4062-a2c8-5237e79babab",
        "cursor": {
          "ref": "5dc361c6-0319-4350-ad07-bc8bc28e1d33",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "67307ad8-b2b9-4ab4-9c02-6604c1dfb53a"
        },
        "item": {
          "id": "ebf798a2-7b70-4062-a2c8-5237e79babab",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2fa08e45-c37d-466b-b4bc-f5318ac377d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ae5b98-bd9b-4205-8b48-bec208a02b8a",
        "cursor": {
          "ref": "1c73503a-a05a-40b8-938c-2c14118da21d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a922ef79-1b66-4fff-a471-65e3d2186598"
        },
        "item": {
          "id": "c9ae5b98-bd9b-4205-8b48-bec208a02b8a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "52fbc571-56dd-4ac0-a2d4-859656c49f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ac16e5-2b0a-4076-962c-35bbaa7ecb0d",
        "cursor": {
          "ref": "13ad5a06-702a-43a6-b3a0-275799e39c48",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5448abc3-e1e9-4b21-93e6-613b1510d617"
        },
        "item": {
          "id": "e0ac16e5-2b0a-4076-962c-35bbaa7ecb0d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "92f0d8ec-5b54-449a-932d-66a9a350f87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45f0bdf-43a4-48be-b37b-9d08d159f468",
        "cursor": {
          "ref": "06a4217e-c949-4584-857d-e3a5a9236e15",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "76e6e14f-073e-41ed-a01e-ffd6213430f1"
        },
        "item": {
          "id": "d45f0bdf-43a4-48be-b37b-9d08d159f468",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "23ce0622-3309-4123-9bac-80b1b09ef355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7f40d0-7fc1-43ec-8243-ca4954054504",
        "cursor": {
          "ref": "a16bafc5-1af6-4222-a1fc-1b18abe6eeb3",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d202d517-58c2-4392-939b-aa1d7863778c"
        },
        "item": {
          "id": "ec7f40d0-7fc1-43ec-8243-ca4954054504",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9552c4e0-e83d-4bd9-9819-35d81a1616b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c76cbd-f725-4ac8-abcc-e6cfbf0d017f",
        "cursor": {
          "ref": "8bac90e2-f4ae-409f-b30b-cdf94430a123",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dcb79177-fb38-4ac0-a827-a0588dee56fd"
        },
        "item": {
          "id": "d6c76cbd-f725-4ac8-abcc-e6cfbf0d017f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6fed5684-6acd-4c51-bfdb-3b9592aa8158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d83d824-3be6-481e-84a1-0d30ea7541ee",
        "cursor": {
          "ref": "05902c3e-c0b2-405c-bba8-50a35d68d9d8",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fd80795a-c27d-417a-a5cf-eeb029b1df8c"
        },
        "item": {
          "id": "9d83d824-3be6-481e-84a1-0d30ea7541ee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a5638c90-3bbc-4a6f-bfe0-4e8288b70598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc290533-49f4-4158-96ce-59d760c742b9",
        "cursor": {
          "ref": "947f5f17-028b-4c59-8508-c88b48d74c1d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "33411e5f-dc0d-4a0c-98d5-8f64937f4f07"
        },
        "item": {
          "id": "cc290533-49f4-4158-96ce-59d760c742b9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "13e5a2fa-0e1a-48f2-8883-688e2352b519",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "1155ccb2-6694-4ed9-bddf-54078cf3c6f6",
        "cursor": {
          "ref": "acbc91ea-c28e-42c0-96f6-951e23cd2941",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d68dadea-40ce-44d9-aac5-1d3859aca0df"
        },
        "item": {
          "id": "1155ccb2-6694-4ed9-bddf-54078cf3c6f6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "96846695-9afc-4fdd-bc22-11e27994e0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79497109-3986-415a-9ef8-0c06118361bb",
        "cursor": {
          "ref": "fb0a3a2c-8d3d-431b-bde9-d6ad0e5883f1",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d9026214-88db-4a83-a84e-18f1d5dc094f"
        },
        "item": {
          "id": "79497109-3986-415a-9ef8-0c06118361bb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "262e6575-c899-468e-954c-ca39d8434c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc9309d-ed4f-4030-b335-2d9a167fa901",
        "cursor": {
          "ref": "f7dc7dc8-0fe3-4fba-bfed-6b1e04c98e13",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5d11d938-2c51-4bff-9958-08f86bd8f5e5"
        },
        "item": {
          "id": "0bc9309d-ed4f-4030-b335-2d9a167fa901",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f12a6e13-b616-4db2-a439-0a1f0ac934db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff46ef9-8626-4358-b43c-56261934f549",
        "cursor": {
          "ref": "db5bb02e-ba1a-4dcc-9b06-1ce88c363ab7",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2e7e6c27-1fb5-4217-bd60-ecb4eb975574"
        },
        "item": {
          "id": "bff46ef9-8626-4358-b43c-56261934f549",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f4877e49-417e-4ef2-823a-84c566c3c255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95956c9b-aac8-48f6-9f8a-a2c1eaaaba97",
        "cursor": {
          "ref": "af8f699c-ea12-4f68-91b6-a03c42662224",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "aedf2fff-8bab-44ae-b5c1-eafb75fdedba"
        },
        "item": {
          "id": "95956c9b-aac8-48f6-9f8a-a2c1eaaaba97",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "308ef66a-ff4e-4da0-adaf-e2c51f0ade16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d4b350-172c-4e6b-ac01-ae9e6917275d",
        "cursor": {
          "ref": "9aa85045-2d4e-46d9-bc65-2980a4dbc275",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8d60943d-f6a4-4f8e-9631-eb031ff9ce91"
        },
        "item": {
          "id": "70d4b350-172c-4e6b-ac01-ae9e6917275d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ff00128a-11b3-46ba-9d7d-4200d14fd872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c643fda-5610-413f-b92e-af32105909ee",
        "cursor": {
          "ref": "fdb1ae5b-9eba-4ff3-b077-8bcdca19d7ae",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1921dd1e-c8f9-4736-a96a-8728975d1a6c"
        },
        "item": {
          "id": "7c643fda-5610-413f-b92e-af32105909ee",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "87797b2c-3ac3-4877-9fa5-a43e4577d05d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "9902f13b-65e4-4bec-98da-4de971ebce24",
        "cursor": {
          "ref": "afc1801f-00f8-4335-9441-657e44563196",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a658008a-e3e3-4a9f-87ea-0aa0bb6715a5"
        },
        "item": {
          "id": "9902f13b-65e4-4bec-98da-4de971ebce24",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e433e38c-b22f-4476-81ed-37b9d563a746",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7655bf2a-0de2-4fb0-b660-cf10d0332f43",
        "cursor": {
          "ref": "57726730-c51f-4097-967a-ada5258cb276",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b39a1a73-1a2a-4fb8-bc6e-4175f17334aa"
        },
        "item": {
          "id": "7655bf2a-0de2-4fb0-b660-cf10d0332f43",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9401d7f3-9b90-4799-8a72-96615b360dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc41bb2f-671a-4382-83c6-63183f3bcbb8",
        "cursor": {
          "ref": "2bb9ed7c-a72f-4387-a298-4e4ad5bd0bc7",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1b0d62e4-671c-4dcb-8ab3-dd60d8e6d55f"
        },
        "item": {
          "id": "fc41bb2f-671a-4382-83c6-63183f3bcbb8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2721d596-9147-46e7-9f61-7f6bf13dbb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcbc3b3-8a7a-410e-9ad8-ea8e7505edd3",
        "cursor": {
          "ref": "50fa3f8d-075d-410c-b15f-f5ab27da6f39",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e2c5f111-3b88-4d81-ba06-aa1dcad58f2b"
        },
        "item": {
          "id": "dbcbc3b3-8a7a-410e-9ad8-ea8e7505edd3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c0bd50c2-1188-4121-9ff0-4c314506cb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c70834-c0ad-4ae8-9306-43984879ef14",
        "cursor": {
          "ref": "c3783af5-f3e1-4595-a200-8bab1420039b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "82342dc4-b858-4ac2-9aa2-f568fd1960ce"
        },
        "item": {
          "id": "92c70834-c0ad-4ae8-9306-43984879ef14",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0073a6ef-a4f9-42c3-ad59-c1ad305b203d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c93836b-d388-4358-935f-63098823fab9",
        "cursor": {
          "ref": "8544ead3-7ce9-4363-bfea-4ea5b99f9d60",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "71d21ca6-5a31-42da-8e8d-65bbf48669b3"
        },
        "item": {
          "id": "1c93836b-d388-4358-935f-63098823fab9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "364cfa36-61a9-48f9-9b76-85b8a9fa66bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092c1669-64f9-41cc-a6c2-85845fa58488",
        "cursor": {
          "ref": "85111ee3-986d-43f0-851f-97f149be81d4",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "75049039-cc62-4e54-ac7e-3c648c881e67"
        },
        "item": {
          "id": "092c1669-64f9-41cc-a6c2-85845fa58488",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "54c3f395-1431-4ddb-9f94-5bfae2090faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d12aee-a066-46d5-b8ef-cdc653bbbc71",
        "cursor": {
          "ref": "5e43f105-4ff2-478c-9155-0ea37b29c40d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "62a4f6ab-66fd-44e1-a2ca-5c50e93e4819"
        },
        "item": {
          "id": "37d12aee-a066-46d5-b8ef-cdc653bbbc71",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1aab4429-13a6-4501-bc0b-1a08002ede2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a52caa-1735-4999-a5c2-5e135fb26448",
        "cursor": {
          "ref": "d9b4c031-8d2f-4baa-b99d-49400a2774d9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "65a84776-7261-4117-b4a7-52a5e3207a55"
        },
        "item": {
          "id": "e0a52caa-1735-4999-a5c2-5e135fb26448",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bf0369cc-f85c-4bed-9f78-f3e54cdd446e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3412a2dc-ff74-43a9-a330-4cbb044bd9f6",
        "cursor": {
          "ref": "f6aac047-62de-4f75-bf0c-6f8ca621debe",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "86cc14af-927d-4fb3-a6ed-7e7e601d0a82"
        },
        "item": {
          "id": "3412a2dc-ff74-43a9-a330-4cbb044bd9f6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "390207e5-953c-44a8-8be1-76f53f8047e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727ff969-9772-49c4-bfcb-6582f4ab1832",
        "cursor": {
          "ref": "b69c9938-3241-41e4-9761-4881b51ca6c2",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "81af64c2-dd67-4adb-8bb2-0dd1bd5eef24"
        },
        "item": {
          "id": "727ff969-9772-49c4-bfcb-6582f4ab1832",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "672362d0-ec42-4f66-8ee1-22ffb96ff686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0057a10a-0654-44d7-9048-aebb28e1f8d7",
        "cursor": {
          "ref": "add4cfb3-87a5-49e4-aa0a-ee0a519b7cf2",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "807a0b11-606f-4431-bf85-40800d73b5c6"
        },
        "item": {
          "id": "0057a10a-0654-44d7-9048-aebb28e1f8d7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7d82acd7-f26c-495a-aee2-60f1a5d1fe79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fec453-bc2d-4d0d-a75d-a0824e39681b",
        "cursor": {
          "ref": "9eef873f-4ce3-4dbf-ba86-3e0420f7d0bd",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cb6a233e-bf73-4e91-9bf3-a00fddcb0a65"
        },
        "item": {
          "id": "16fec453-bc2d-4d0d-a75d-a0824e39681b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bb3e1007-adbc-4f66-8a91-1f900f5792b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66c03cf-c95d-442d-adf3-45d27a19d72b",
        "cursor": {
          "ref": "43b00fc9-c3da-4687-ae62-9979228a79a9",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4a029366-2641-41d3-a76f-aefc91134762"
        },
        "item": {
          "id": "f66c03cf-c95d-442d-adf3-45d27a19d72b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4348c47c-6c26-40c2-80e1-bdb6987e2c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a182532a-9baa-4418-b375-1ba42253d8f6",
        "cursor": {
          "ref": "6767ede5-b66a-4663-9811-08ec4dc87b50",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9388e62c-400f-4f93-b1b3-8a264ca645e1"
        },
        "item": {
          "id": "a182532a-9baa-4418-b375-1ba42253d8f6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "24381904-f460-460d-a71b-ee07a9324a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2607f49-69fb-4e2b-a9dd-9925b6d090b3",
        "cursor": {
          "ref": "818b9105-cd42-4a48-aa8b-d9c9eb94a95e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "644a36e9-eeab-4dac-a118-49c3706ec554"
        },
        "item": {
          "id": "b2607f49-69fb-4e2b-a9dd-9925b6d090b3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "98206b32-8ac1-486f-87e4-79754d2057db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3da0ab-85ca-4d87-ab68-316f7b0a4eba",
        "cursor": {
          "ref": "9857aec3-9f6e-49f2-b464-992fc8fd59c0",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d988066b-2f63-44b8-85f8-28a84483e8d6"
        },
        "item": {
          "id": "ee3da0ab-85ca-4d87-ab68-316f7b0a4eba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9b6b2741-2374-4eda-a1de-5bb2554db669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4750efd2-f144-4750-bdcd-38819b3c209f",
        "cursor": {
          "ref": "1df6ff96-e4a5-4fbc-8df6-718c7690843c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2c5cbcb5-5dd8-46bf-adad-0a76895f5963"
        },
        "item": {
          "id": "4750efd2-f144-4750-bdcd-38819b3c209f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "617929c9-7245-4996-98cb-7a249500192d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "4d626722-4f2b-41ff-bb3a-20902a7241bf",
        "cursor": {
          "ref": "302e2b85-be7d-4538-be05-9f14a37d7798",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "48c96dac-c06a-4a63-bc63-d6948c8942bc"
        },
        "item": {
          "id": "4d626722-4f2b-41ff-bb3a-20902a7241bf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1c081993-bf5e-47fb-afc6-2e5c088f6de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4acaad-6693-4fd2-93f3-494a0bd40b8d",
        "cursor": {
          "ref": "5709d646-b11c-4a59-b8a8-f33ce8f0ddca",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3e4106d2-72e8-4ed7-9020-982438e34563"
        },
        "item": {
          "id": "4a4acaad-6693-4fd2-93f3-494a0bd40b8d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "703df7e9-60b9-4540-96e3-25bf41531ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e52ec3-5800-47ed-a50b-8927a90045f8",
        "cursor": {
          "ref": "3c5a1589-2e97-443e-a857-e3d691d3107a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4a0b7a0e-8f6f-43b5-a2f8-42b005a4e9db"
        },
        "item": {
          "id": "b6e52ec3-5800-47ed-a50b-8927a90045f8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4d035642-8e80-4c80-b272-3a97d884320c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad161e8a-cb07-454f-b712-898c81020dd1",
        "cursor": {
          "ref": "89f7b48f-7656-45d3-a13d-b0d8f52b897b",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "688ab62c-8dbc-4d31-b576-0aa2b69dd3e4"
        },
        "item": {
          "id": "ad161e8a-cb07-454f-b712-898c81020dd1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba8b9427-befd-468c-919b-de8ff5c8b38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ecafce-9c0b-4e17-b78c-b8ddd5bb5a9a",
        "cursor": {
          "ref": "252612ef-52ec-4fa3-9177-c1b9289e0339",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e43e7bce-bb7d-4053-9749-75a8bb2c2ebe"
        },
        "item": {
          "id": "83ecafce-9c0b-4e17-b78c-b8ddd5bb5a9a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b7382c28-925d-4ea7-b235-69cb59135605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdfb214-9bd8-48a3-bbd8-d20e5e0291bf",
        "cursor": {
          "ref": "9ae5ab3c-ce1b-4de2-94f6-dce1afa55d22",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b6ee149b-cea9-4d2c-92e3-8e5dc69fd3d7"
        },
        "item": {
          "id": "dbdfb214-9bd8-48a3-bbd8-d20e5e0291bf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b4b88488-ba21-4f0d-b420-62dc5b38507b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5118b7-f2c6-4c3f-a84b-2f8e6deaf59c",
        "cursor": {
          "ref": "d0d5e60a-49de-4cb2-aedf-cf2e3637b18b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5c80d6c3-b8d9-4ed7-9fbc-1777307b73f0"
        },
        "item": {
          "id": "2a5118b7-f2c6-4c3f-a84b-2f8e6deaf59c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e3579ac1-c828-449a-973f-77549773979d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703025d1-aaa1-4887-881c-81e970f65880",
        "cursor": {
          "ref": "a56dca73-124a-48b4-9a55-4c9c6eaf9ac8",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b1095661-f12d-41b2-8eca-99d29c5d6eaa"
        },
        "item": {
          "id": "703025d1-aaa1-4887-881c-81e970f65880",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "91cd4e87-317c-4415-838b-06ee4aad0f6a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "a9b42691-11aa-441c-9fb5-9ec811ba449f",
        "cursor": {
          "ref": "9dfae85b-eec4-47d2-94c9-3d93c9c9d4f6",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "25b7776a-644a-4d55-aa22-8a9e511186e0"
        },
        "item": {
          "id": "a9b42691-11aa-441c-9fb5-9ec811ba449f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f0f1c975-ecfd-4d27-a131-411ea2d01f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7d502b-1885-4748-933e-e9e687652320",
        "cursor": {
          "ref": "af6ecb17-7fd9-4347-b00d-9b9fb4abb8d4",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5770be06-4bad-4e8a-a1fa-dd3b9a26418c"
        },
        "item": {
          "id": "bc7d502b-1885-4748-933e-e9e687652320",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "faa4f2cf-3afb-4072-8df8-50a998029911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4a608d-f1e0-4869-9e1d-0063c5533667",
        "cursor": {
          "ref": "cf23feee-eb65-430e-af22-58f3d2cc2dcd",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "37d17eba-48ad-4190-8815-b7987e1fb6f8"
        },
        "item": {
          "id": "ff4a608d-f1e0-4869-9e1d-0063c5533667",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "365b47f3-2fa4-4531-a5eb-af73b74b5186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfaea49f-cce8-4978-9f2c-688bbd31c720",
        "cursor": {
          "ref": "51cc2f39-8287-43fa-b324-cdb2c4519c9d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a1d7b9ef-28bf-488d-b245-da2ddda2953c"
        },
        "item": {
          "id": "dfaea49f-cce8-4978-9f2c-688bbd31c720",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "081e088a-a197-47d8-822d-8fcfba7ede8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01551963-96d0-4d41-b630-aea32698f721",
        "cursor": {
          "ref": "fd12bd11-3bb0-4a2b-a52d-3cc191ab6668",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b40135f5-8f27-41fe-8113-70d51538b054"
        },
        "item": {
          "id": "01551963-96d0-4d41-b630-aea32698f721",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a799f532-d3c7-41c8-929c-5feefcb45804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120027ca-eada-4172-afb7-d6d6b2d9d444",
        "cursor": {
          "ref": "bba70a68-05df-4d8e-948c-82861d95e6bc",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d252c96a-4724-474f-ad9e-449c6f4faba8"
        },
        "item": {
          "id": "120027ca-eada-4172-afb7-d6d6b2d9d444",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "54484108-f29a-4e89-9c60-f3d12dbd8a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a412a127-140b-485a-8868-237fcac73eb9",
        "cursor": {
          "ref": "7d4d2bdf-8be6-42eb-b72d-4d36141768f5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b8a9c4c7-c89a-485a-8f15-ca7726ba26ef"
        },
        "item": {
          "id": "a412a127-140b-485a-8868-237fcac73eb9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b6b77fd0-ad55-4ab0-bee5-6eb4d737d409",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "1d7633e3-13f6-48ab-a389-33f793ab8ebd",
        "cursor": {
          "ref": "7f6d7be9-0c92-49e6-933b-f67410e49254",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8256cd42-867e-4cf5-a783-2328e8302e9a"
        },
        "item": {
          "id": "1d7633e3-13f6-48ab-a389-33f793ab8ebd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "588ec6ea-6a9b-4068-963f-c67d00cd2eda",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "d37e3cba-fe11-4cdf-8691-adbacc71e46c",
        "cursor": {
          "ref": "7e2c5f8f-8145-419a-8fb9-9efa3879c737",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "26a2fd08-7e74-4d37-a3e9-3e38b92be3aa"
        },
        "item": {
          "id": "d37e3cba-fe11-4cdf-8691-adbacc71e46c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2de45ce6-59ed-491a-bbb3-b0d876ea0da0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "e78ef628-d116-4fa0-baba-1d30bfb095b3",
        "cursor": {
          "ref": "d0fc1526-b463-40a6-a9b8-b78a41690c1c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "49e5da01-c062-4867-88df-7d671e113ccb"
        },
        "item": {
          "id": "e78ef628-d116-4fa0-baba-1d30bfb095b3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "77c15d56-58b3-4c12-8524-95516b5acee9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "b9f8f878-6aa3-4624-9aea-9a47e0502fb4",
        "cursor": {
          "ref": "fa307f59-7db7-4c78-90b1-40d816eda24b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "45942a66-ea0c-4476-98f7-79e8d086f5f7"
        },
        "item": {
          "id": "b9f8f878-6aa3-4624-9aea-9a47e0502fb4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c2690dd2-cc31-4d1d-afd5-7d5a63b4d1fd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "4482c565-7759-4038-98db-962d6533f36b",
        "cursor": {
          "ref": "88b1d587-5fcd-4845-b2fd-33ab906ecca6",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f0fee044-b79c-4811-97e3-621ad3e28712"
        },
        "item": {
          "id": "4482c565-7759-4038-98db-962d6533f36b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6b69acdd-7ff6-4a86-b23c-02725af35cde",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 24,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "ed3dce27-fffe-46fb-9987-464e474e5383",
        "cursor": {
          "ref": "cc16657b-341e-4e07-8eda-09e4a2d7aa24",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "aadcbbfa-7850-4fa0-b980-45f350424805"
        },
        "item": {
          "id": "ed3dce27-fffe-46fb-9987-464e474e5383",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "88504178-c2fd-4aea-86d8-385ed7a522be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d44b2a2-cdc3-4fdf-bc1c-6e27c129e5b1",
        "cursor": {
          "ref": "d21b2fd4-9c18-4bef-bd23-be9749bc6747",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a0366cf4-f2ee-4839-8ddc-c736867d81ac"
        },
        "item": {
          "id": "8d44b2a2-cdc3-4fdf-bc1c-6e27c129e5b1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6cb3d8c0-f714-46f1-8f19-991b3f588cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91024350-e09d-4fc3-a3f5-e4c4734bd76b",
        "cursor": {
          "ref": "08cc042c-47af-4d68-804a-8989df05121b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1ec0b7db-9955-419c-948e-1dd27f319383"
        },
        "item": {
          "id": "91024350-e09d-4fc3-a3f5-e4c4734bd76b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f271d8c1-1247-4278-aa3f-fc1559cf4010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14b1acc-4f34-418e-a692-da7b0eaba80a",
        "cursor": {
          "ref": "5488c9e8-417d-4bf4-aa97-1f01bb6e8fc5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "419afc31-8512-41b7-9da2-c6c3cf4d5be0"
        },
        "item": {
          "id": "a14b1acc-4f34-418e-a692-da7b0eaba80a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c71d4c7a-36cb-47ec-83d4-33383d349d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a2e458-93cf-4b1e-95a2-a8985015229c",
        "cursor": {
          "ref": "5014fa90-e2cd-4325-a739-9093866924dc",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3ced84da-6aac-40a3-a429-63d126d654ad"
        },
        "item": {
          "id": "71a2e458-93cf-4b1e-95a2-a8985015229c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0a4c5da6-a574-4045-93d4-475dc3f24ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbab844-8fa6-4505-a507-283c8cf21eaa",
        "cursor": {
          "ref": "f95d0c49-2dcd-470b-8646-a23e4c0d94d2",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "752362ad-55a7-406a-9a36-b70d333818c4"
        },
        "item": {
          "id": "fdbab844-8fa6-4505-a507-283c8cf21eaa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c14cee29-452f-4159-a7b8-fb563721a3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc52896d-2e7a-4ce8-8763-e1e0710d02c4",
        "cursor": {
          "ref": "3ceb8ed6-7ec5-4bfd-bbef-ea8fe3e94247",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6ccb8fc3-0d52-4660-9bfb-2da05465401e"
        },
        "item": {
          "id": "fc52896d-2e7a-4ce8-8763-e1e0710d02c4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "12fbba4a-89ee-4ffa-966f-414e17abb130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72c47bc-cdb5-4db6-b344-89b10be3cc40",
        "cursor": {
          "ref": "af291a91-a961-4bfb-ac41-c08159b6fd17",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d0464ed0-09af-4fa5-b4d2-e917437b8e80"
        },
        "item": {
          "id": "b72c47bc-cdb5-4db6-b344-89b10be3cc40",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e1bb708a-b983-4da7-bdeb-9b44c298ba14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95fb5f9-8cdf-48ca-a1f2-1f4d1af87491",
        "cursor": {
          "ref": "755ffa8c-0b3c-4814-8f16-2c48c24ecc28",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c476fa89-a0a7-4ea0-a042-0cce97d8dc5a"
        },
        "item": {
          "id": "d95fb5f9-8cdf-48ca-a1f2-1f4d1af87491",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4a6f7b73-6f01-452d-ba6f-e035ad058130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598df23f-bee1-4fb9-b335-0e41f1ce4564",
        "cursor": {
          "ref": "6078c949-f0cd-45fb-b8fb-4b50ab162a0d",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5b6dda5a-2999-4774-87d8-23c149a0280e"
        },
        "item": {
          "id": "598df23f-bee1-4fb9-b335-0e41f1ce4564",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "59306944-01fe-49e4-8bb1-036dbf63799d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc00fb62-94ee-4c99-9c77-59d97547b128",
        "cursor": {
          "ref": "d8b4f2a1-949d-4f24-814b-5869c82fc92b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5e93e5dd-c575-4352-a7b4-691f9acfd630"
        },
        "item": {
          "id": "cc00fb62-94ee-4c99-9c77-59d97547b128",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c71d8af2-2a5f-4183-b06b-8c580fd32db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f29d5b8-4e6d-4a63-b50c-c0bc06a374a6",
        "cursor": {
          "ref": "1adf8aac-11df-41e1-a2bb-9ad57ec6c697",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2d961505-9676-4bed-86a6-1e41e3602dc3"
        },
        "item": {
          "id": "0f29d5b8-4e6d-4a63-b50c-c0bc06a374a6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ab44d846-a6ae-448e-a5c2-9240eac35074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c65855-fc3e-4d56-b86e-e9debd191cbb",
        "cursor": {
          "ref": "3f3da77a-9ba6-4cca-a4df-f1ed80bdc996",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "80232ee2-65c9-4fba-b1a0-33ea52240dc7"
        },
        "item": {
          "id": "f1c65855-fc3e-4d56-b86e-e9debd191cbb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1f399190-d226-4a59-8238-dacf54d698ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7506ce0-6c40-48e2-896b-3daaf5219ee3",
        "cursor": {
          "ref": "88923047-7d2d-4d49-9b4f-c702012cb7b6",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ed085091-6437-4cb1-9197-6e0e7cb7c3cd"
        },
        "item": {
          "id": "f7506ce0-6c40-48e2-896b-3daaf5219ee3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a22fe68b-0381-46ef-8aaf-aafeb5da1f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d164dea4-ff5d-462d-bfaa-008afce4cc7a",
        "cursor": {
          "ref": "2548590d-66e8-4ece-8fbd-3a75f647bef2",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8f99bc7e-e5f9-4bc5-9c79-a46817a2285a"
        },
        "item": {
          "id": "d164dea4-ff5d-462d-bfaa-008afce4cc7a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "24c1d102-607a-438d-82d4-24fcdb64fea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ec8347-1d2f-4f3e-a41d-8ac2f6fe9a1d",
        "cursor": {
          "ref": "3ea20377-60f1-42f5-88d2-a3f381c04d61",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0ad38f27-1481-4989-867b-c61e5d5c830d"
        },
        "item": {
          "id": "20ec8347-1d2f-4f3e-a41d-8ac2f6fe9a1d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1b7d0ccb-5bb3-45de-9517-4a67078db35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd654de-d114-485b-8b47-68dac4f92613",
        "cursor": {
          "ref": "9fa317e8-e18a-4613-a26b-23bd3817f4f7",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "278867db-cd61-432e-99c0-b1179117c700"
        },
        "item": {
          "id": "cdd654de-d114-485b-8b47-68dac4f92613",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f81df5f3-0b0b-4d2e-812c-1da8c6a4fe4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1222363c-95ef-4dcc-a75b-659b1c514e60",
        "cursor": {
          "ref": "fb40378a-02b6-4870-b3bc-f62f981a70dc",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f54a287c-cbe5-474e-89cd-5ab3702a0e5f"
        },
        "item": {
          "id": "1222363c-95ef-4dcc-a75b-659b1c514e60",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "37ff26e1-5256-464f-99e2-c7620c1a1383",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "8d432878-358a-4af9-a8ef-6eeec05ee915",
        "cursor": {
          "ref": "78f063de-761c-47de-95f6-6c6ad7cb0b5e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "669c89ba-67be-4e0c-95fa-cb758d09827f"
        },
        "item": {
          "id": "8d432878-358a-4af9-a8ef-6eeec05ee915",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1be16851-9812-4e7a-8fc3-a63743a48416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b13e440-4388-4693-a2be-e55d9ca5cf58",
        "cursor": {
          "ref": "4687c43f-3eb6-4bdc-8051-78f289284fbb",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f2672d1d-849c-40d3-83d1-224556f8afe3"
        },
        "item": {
          "id": "0b13e440-4388-4693-a2be-e55d9ca5cf58",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cefb3045-5eb5-4b04-89b0-eef08ae8db49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b683a653-225a-4ecb-8f37-bfe333a718c6",
        "cursor": {
          "ref": "1545749c-0062-4ff1-9bd2-f198bbed3a1c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b0058ef5-91a9-482f-a8cf-070faa4dbdff"
        },
        "item": {
          "id": "b683a653-225a-4ecb-8f37-bfe333a718c6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "03791943-444b-4610-8884-fcf0abb698f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e51854a-bd80-43dd-a73f-6e23491b5a90",
        "cursor": {
          "ref": "53a1ddab-af03-49cf-8d6d-bff74b044577",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f60b828d-ecf7-4051-ba9c-4a221b7147e8"
        },
        "item": {
          "id": "6e51854a-bd80-43dd-a73f-6e23491b5a90",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "693aeecb-ed69-4f72-8f15-e08e083ec45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f26b23-469a-435d-a437-639361ffdcba",
        "cursor": {
          "ref": "6fe6ca43-def8-454a-8197-796ccf119fab",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b5d5b23d-3dbf-45b9-9372-4d4f4a269f4d"
        },
        "item": {
          "id": "b9f26b23-469a-435d-a437-639361ffdcba",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "57c11e0b-0536-41b9-afa9-77c384bbd5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62d21b5-cc44-4f5b-bb31-4cb1cd1f38e2",
        "cursor": {
          "ref": "603d3ca9-837a-4020-bdbc-306e2fa082cb",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "521b0e32-5f6c-4b1e-ae10-d9869faa7076"
        },
        "item": {
          "id": "c62d21b5-cc44-4f5b-bb31-4cb1cd1f38e2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb68cf6f-2c43-40cc-a211-d6f64cc2d193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d794fdca-4b99-493e-8c8c-4c95138d0ad2",
        "cursor": {
          "ref": "9b27c75c-320c-41e4-8d2c-272d2b37a2b1",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2cf373cb-15e7-403c-953c-5ab26ad658b4"
        },
        "item": {
          "id": "d794fdca-4b99-493e-8c8c-4c95138d0ad2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1dac2e58-048a-4bc3-8395-2ea989c0d06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98143d69-503d-42d2-9d13-c9b3f174d55a",
        "cursor": {
          "ref": "1d7ed423-8c9b-4a26-bd29-0eb343615011",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "68164531-e520-4ae0-a7df-e46be14c61ab"
        },
        "item": {
          "id": "98143d69-503d-42d2-9d13-c9b3f174d55a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "81b6b6d3-6d9f-4b39-aa56-2e0fc42ff77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d38c37-eb5e-46de-b87a-bdd211e9d9ed",
        "cursor": {
          "ref": "392f4391-788f-4c3e-a2c9-a94fc8affd09",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8e08a640-0b7b-43db-a65e-6a67c698ad00"
        },
        "item": {
          "id": "60d38c37-eb5e-46de-b87a-bdd211e9d9ed",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c653b2a7-2445-443f-a48a-1b6dbd6cb9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec89e207-5434-47ae-9376-f2b41b04f9eb",
        "cursor": {
          "ref": "11701b6a-ae74-434f-b415-9dd0d653a266",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d1f16c3e-a0b2-44d0-8951-c339b686d17c"
        },
        "item": {
          "id": "ec89e207-5434-47ae-9376-f2b41b04f9eb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "27790df9-78a9-4c03-a976-483ba42460fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599ca054-c64b-401c-b308-308811c22b44",
        "cursor": {
          "ref": "6f9f9912-4135-42dc-b4d2-781c2046e86c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6973e640-9ec2-4283-b08c-c4cdb025357e"
        },
        "item": {
          "id": "599ca054-c64b-401c-b308-308811c22b44",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e0ae70d3-af1f-4802-b901-0802289ee288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b157017-e42b-4478-bbfb-347135de1fc5",
        "cursor": {
          "ref": "2c571ee9-8061-422d-b5e0-87cd4a46c541",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0a110c25-eaf6-4ab7-9058-b5e49b508ad2"
        },
        "item": {
          "id": "9b157017-e42b-4478-bbfb-347135de1fc5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "23a2dc57-6f90-48e2-a981-66674bf008b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e291b7f6-1733-437c-a297-8856ca86482b",
        "cursor": {
          "ref": "3e27a6fd-3a1c-4bb8-8d7c-0fa9d272fb8c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5ae86d9d-2310-470e-930a-e49b99d5b65f"
        },
        "item": {
          "id": "e291b7f6-1733-437c-a297-8856ca86482b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b29c7d6e-57b6-4468-8439-ac7f00826591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbf384f-b71d-462f-b048-6a640bef9734",
        "cursor": {
          "ref": "2de55fdf-71c8-4bd0-844a-2e16d8173cb3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5e6f3749-ff4d-4297-9b7c-24b4ed7e87a5"
        },
        "item": {
          "id": "bdbf384f-b71d-462f-b048-6a640bef9734",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "28aa9d7d-6030-440f-87f0-93b50fd80206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5c8be9-50bc-4d18-a258-bbbaf24d11cd",
        "cursor": {
          "ref": "211ccf10-aeca-4e24-8960-d6a061a53718",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "94aff246-7d17-4a67-a06b-d4330f574a1c"
        },
        "item": {
          "id": "7b5c8be9-50bc-4d18-a258-bbbaf24d11cd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a8f0262f-961f-4118-90da-fceaf80f6345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbdf5ec-01aa-4c8b-b78f-02dc2b6dabfe",
        "cursor": {
          "ref": "5837d3ee-216c-4328-afe9-32c74bacf1af",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "14d571de-049d-4430-846e-68a97609422e"
        },
        "item": {
          "id": "dbbdf5ec-01aa-4c8b-b78f-02dc2b6dabfe",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d634d33a-c974-48a5-94cc-871af5e88d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d45c63-203c-419a-b644-91c5d6ef91de",
        "cursor": {
          "ref": "8ffbd692-d14b-4497-9ce8-56217e9fb6c7",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7e96b8fc-7ce5-428d-986b-f71462172c6f"
        },
        "item": {
          "id": "c2d45c63-203c-419a-b644-91c5d6ef91de",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cbbd793e-8f4f-4ac3-8e07-3faa63f0077a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb04f97-a63f-4115-a2a9-17838f4596fe",
        "cursor": {
          "ref": "9cb046ab-34f0-4b7a-883a-74b983d07d20",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "117cbfb3-70c9-417d-87fd-d49f77a4de47"
        },
        "item": {
          "id": "deb04f97-a63f-4115-a2a9-17838f4596fe",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6e00b4b9-7c4f-435d-b177-7431c696bca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf965ee-c473-4bc3-b3a8-e1aa26bd5f86",
        "cursor": {
          "ref": "e4229d63-cb33-43bf-9853-7f837b8a34e4",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "145b9971-fc30-48cc-9e24-6c9dfa519a0d"
        },
        "item": {
          "id": "9bf965ee-c473-4bc3-b3a8-e1aa26bd5f86",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f8b8397b-a364-4fd4-ad27-eb20504a024e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d34a9c-6a58-450d-b786-2a1dd747cadb",
        "cursor": {
          "ref": "1ce15770-b8f7-476c-bbe3-07f3fc66820f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "818ecca3-7168-4c68-b67a-5950ca6beff3"
        },
        "item": {
          "id": "67d34a9c-6a58-450d-b786-2a1dd747cadb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e8ed3f05-bb1a-4a95-ab13-ade4a2e41726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d2db78-7bd3-47ca-9a9c-4b788984f4d4",
        "cursor": {
          "ref": "5a06b425-22a1-4535-a82b-96109bd21d6b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "85d6a508-1451-4c73-a85d-d07777976431"
        },
        "item": {
          "id": "b1d2db78-7bd3-47ca-9a9c-4b788984f4d4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1f5f7e80-d392-408c-8291-1556ad408cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66301ccb-0106-4fca-bb79-3889b7af62e1",
        "cursor": {
          "ref": "feceef69-9ee2-4b15-bd07-eb9d360d4267",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f8dab331-4fc1-4ac4-86b6-672eb3c3e82f"
        },
        "item": {
          "id": "66301ccb-0106-4fca-bb79-3889b7af62e1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "19f5717a-40a2-4ebf-b289-056ecb4a7e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a46b1d-fa6c-413b-b814-ed059201cfb3",
        "cursor": {
          "ref": "71f3a078-0f12-45c4-b82c-bbf942487521",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "98b05983-e54c-4733-a363-d3dba05b86b8"
        },
        "item": {
          "id": "71a46b1d-fa6c-413b-b814-ed059201cfb3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6e3fc4d3-e8b3-43c4-bfec-d2773513a963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401bff58-addf-4cd6-95ab-6c61ad0b68e0",
        "cursor": {
          "ref": "0e2a67fa-93f5-4630-9533-fe09a3e9cdb5",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fe6582a0-b746-459f-bd94-5a0e477909c5"
        },
        "item": {
          "id": "401bff58-addf-4cd6-95ab-6c61ad0b68e0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "15032a96-e39f-4149-a8d8-b662489bd1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed725e1-b352-469f-a313-a3d6466b2de4",
        "cursor": {
          "ref": "ae11511b-4782-4e33-a017-5ed2a89e2e3f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b57784c0-ffea-4abc-8136-a597fd0d33b2"
        },
        "item": {
          "id": "4ed725e1-b352-469f-a313-a3d6466b2de4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "72ff8f9f-c299-4af2-8adc-774c6c045cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3f07da-f93b-4380-b709-e1c4b91ac4c8",
        "cursor": {
          "ref": "21284980-d4d1-435f-95b3-77cb1bd2196f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "aab62792-fb45-47c2-8560-8607fc278a99"
        },
        "item": {
          "id": "2b3f07da-f93b-4380-b709-e1c4b91ac4c8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "458438d3-6866-45e3-9cb7-de3bd433f660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e374e3fe-7bd2-40d9-8007-26be8b257226",
        "cursor": {
          "ref": "c549255a-56f6-421a-ad88-51f445ba1614",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f4cd27af-51cb-40bf-9070-17a298dc5d5b"
        },
        "item": {
          "id": "e374e3fe-7bd2-40d9-8007-26be8b257226",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f7fae41d-bd76-4750-b25a-38ee4256933e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b04b8b6-337b-4ad5-ba20-50726624b37d",
        "cursor": {
          "ref": "6ee0ad6a-88a7-4432-8e89-a8447c5377dc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fe325bf2-5360-4703-a946-45ea2cee2110"
        },
        "item": {
          "id": "5b04b8b6-337b-4ad5-ba20-50726624b37d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ea37ccb6-bda8-432d-a498-07a8607203c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695768a0-33de-4d37-8913-c532c18633d8",
        "cursor": {
          "ref": "24a0a651-68da-43a8-be84-dcaabc06c69b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4405a2b4-21ed-4796-bc6b-461edcafa2b2"
        },
        "item": {
          "id": "695768a0-33de-4d37-8913-c532c18633d8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e6a73545-5532-42bc-8b00-9c96c8a7ba4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896ccdd1-398d-45a5-9e38-8ac9b8a2e524",
        "cursor": {
          "ref": "f33cab61-0ffd-4a4e-adf2-99f5497d35ee",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "06f953ce-661f-4f5c-abee-e0f296631d36"
        },
        "item": {
          "id": "896ccdd1-398d-45a5-9e38-8ac9b8a2e524",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "871ede26-ac80-4681-8655-12c03309b189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e202b2eb-f1fa-4284-a589-7abec35390d6",
        "cursor": {
          "ref": "4a5227ce-b9ad-491d-8876-18ba365073e3",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9d2c964f-0841-4cb2-9d5d-4e23eddbfe94"
        },
        "item": {
          "id": "e202b2eb-f1fa-4284-a589-7abec35390d6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f331ccfa-5f78-4743-82f4-eefe753d3a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356a92c2-7641-4bec-afb0-f17afdf88cda",
        "cursor": {
          "ref": "655e16c0-587e-4150-9b9f-bca88c6ca9aa",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f7e27644-087a-4843-86e9-03518ed7bf4d"
        },
        "item": {
          "id": "356a92c2-7641-4bec-afb0-f17afdf88cda",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "54f48dca-a2f5-480f-8321-265c809cd124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8f413b-c79e-48b6-a79e-a11ae0f6bae0",
        "cursor": {
          "ref": "81a21415-69d0-4614-81b4-926894004dac",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a413250a-ee19-412b-85fa-bd0f79dca3d7"
        },
        "item": {
          "id": "be8f413b-c79e-48b6-a79e-a11ae0f6bae0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f1cb3fd3-1f9b-4594-8b36-1ec9f56f187d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c093da-aa85-4ea9-a7ea-215805471cf2",
        "cursor": {
          "ref": "cbe23e23-38cf-43f3-9b0c-a430ce59959c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "33eadea2-4261-430a-bfef-2d2cc19567ac"
        },
        "item": {
          "id": "b2c093da-aa85-4ea9-a7ea-215805471cf2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0fc78183-d8ca-4644-983e-ebb606d4b8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8cf17d-3e21-49f4-b03b-bf7297008bb3",
        "cursor": {
          "ref": "19eae5dd-fbd5-4195-a7d1-35fccf6edf2b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "14536cb6-bafd-4e99-bc73-0e5729427c69"
        },
        "item": {
          "id": "3b8cf17d-3e21-49f4-b03b-bf7297008bb3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c26c853a-9874-4859-993d-5ae8f5b95c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699e391d-4471-436d-91f4-96ddb76e9a84",
        "cursor": {
          "ref": "2844fba5-148e-4370-80a9-efecf6a4b9f3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0c94a57b-0b35-4569-825d-aa6632e46d1f"
        },
        "item": {
          "id": "699e391d-4471-436d-91f4-96ddb76e9a84",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e4191345-d5bc-42e9-b23d-0ab96a898812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fad233d-b463-4f32-a1ea-72ff61ff2975",
        "cursor": {
          "ref": "a2491104-e918-4673-a3c1-4debd1f8813c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dacc1618-ba1a-4048-bacd-066e7bebe285"
        },
        "item": {
          "id": "2fad233d-b463-4f32-a1ea-72ff61ff2975",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9809519c-e29c-4bf8-ba55-1b2ea73000b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b03b66-5577-45e5-96b2-2c4c21dd5fcd",
        "cursor": {
          "ref": "7aafdb02-64da-49d8-a678-c4406978e106",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c0cb11ef-27d5-4347-a8ee-6667ac9ad47d"
        },
        "item": {
          "id": "17b03b66-5577-45e5-96b2-2c4c21dd5fcd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3edc760d-318e-469e-bf46-4d0ae61cf09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978ee708-1f58-47ad-97d1-57cafc30c394",
        "cursor": {
          "ref": "2477ed41-e827-47d8-b84c-2c0dad60078b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "41d17cb2-6795-4d8a-9a16-80d99ccff0de"
        },
        "item": {
          "id": "978ee708-1f58-47ad-97d1-57cafc30c394",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "052eb7dc-1486-400d-b056-06d51b8101d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a170cfd4-5c12-4669-aad4-0abb8fe26aaf",
        "cursor": {
          "ref": "1756c510-0750-4e1c-95d5-8702566a5742",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "82c2d38d-cf67-46be-bfa0-065078d4c41f"
        },
        "item": {
          "id": "a170cfd4-5c12-4669-aad4-0abb8fe26aaf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fa139007-19ad-44d9-a4c6-625d88e10358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6728f87b-9387-4786-b66f-ce1278cb60b4",
        "cursor": {
          "ref": "290a936f-0eef-425f-9b56-341977156f34",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2b38bae6-48f1-47e7-bcec-1c372164a9c2"
        },
        "item": {
          "id": "6728f87b-9387-4786-b66f-ce1278cb60b4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "86b2ba53-d4d8-4359-bfe2-7f8b83f30233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88692575-05e8-42c2-a783-c227c4633249",
        "cursor": {
          "ref": "d2e6115b-42ae-405b-bdef-6e8035ca9cef",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "57242078-0d46-4942-8047-d635f0cfebcb"
        },
        "item": {
          "id": "88692575-05e8-42c2-a783-c227c4633249",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8526f1be-faf1-45ce-a176-3cad46cb280b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765180bb-2315-49dd-81fc-d15ccac859e6",
        "cursor": {
          "ref": "c3e3e4d3-1c1f-48d0-9ae4-6b58918f8823",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "45dd33d3-c0c8-4fae-987a-cd87c2d66507"
        },
        "item": {
          "id": "765180bb-2315-49dd-81fc-d15ccac859e6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f9b0585e-2b35-4d47-b822-2f2475c4d5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426402f7-337b-4cea-bf77-f833c92be1d7",
        "cursor": {
          "ref": "eef12d1d-8845-45a9-bfa0-f08358341692",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "28ac2a7e-e1fa-475e-8637-1f3a7379c22c"
        },
        "item": {
          "id": "426402f7-337b-4cea-bf77-f833c92be1d7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "50bc6e4a-2830-49f0-bb54-8a4d3b72d414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2785b7-62ff-4131-bfb1-cee26e9f8b22",
        "cursor": {
          "ref": "5419279b-ff6b-4d2a-bc43-46875ab535b9",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "99906798-f77a-406f-9505-4290316f87df"
        },
        "item": {
          "id": "3e2785b7-62ff-4131-bfb1-cee26e9f8b22",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "68aca36f-667c-41be-ac12-47c0dcdee7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4960efe3-9bf7-4e40-afa4-719f1c3a9bff",
        "cursor": {
          "ref": "66014b13-1554-4707-86f6-0be76df38cf2",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "37c65ad7-eb31-4e3d-a80a-ec621d105758"
        },
        "item": {
          "id": "4960efe3-9bf7-4e40-afa4-719f1c3a9bff",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6d93e0e1-2a85-4acf-b9a1-f0f27533ffd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b558625-fa17-4611-bdfd-c1f8d3e8e758",
        "cursor": {
          "ref": "80442b24-85f8-42fc-be60-388da84e88ea",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2d62a0ff-fc8f-4250-94bf-0804fdd86ea3"
        },
        "item": {
          "id": "7b558625-fa17-4611-bdfd-c1f8d3e8e758",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4611e3f3-806b-4d58-99ae-a3db30997109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed3c4a5-7b37-4b40-a2a7-0a54a3d47c28",
        "cursor": {
          "ref": "bf8b530c-a32b-4b45-89cb-e4560f8f738b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "91d38687-9085-4b3b-a8e0-5ce540eddfb2"
        },
        "item": {
          "id": "0ed3c4a5-7b37-4b40-a2a7-0a54a3d47c28",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "59e2dd1e-bb8c-4cda-801d-70c3ee946acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aa5428-14a4-4ded-9d81-20339a207623",
        "cursor": {
          "ref": "68aff568-e440-4385-9bfb-eaf7ee293851",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cdde2981-6e12-4c46-b129-34e88eefca27"
        },
        "item": {
          "id": "89aa5428-14a4-4ded-9d81-20339a207623",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f6d76694-836e-4875-80eb-8f7621fe67cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434a7a5d-dc0b-4620-b62a-f2ab05a9f61d",
        "cursor": {
          "ref": "9e6d1e52-47ba-421a-a3e5-8112c46bb2b6",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7b00996c-9331-4ae3-911b-f5256bc84c4e"
        },
        "item": {
          "id": "434a7a5d-dc0b-4620-b62a-f2ab05a9f61d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9d1812b7-b026-4254-a463-51c14f3de53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa68ae3-79a7-4c11-a585-f5cd6fe5c4e4",
        "cursor": {
          "ref": "e4a09fea-9512-4b2f-8d6b-8b8a9072cd9a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "30141932-7449-4129-8faa-fe27a2f81203"
        },
        "item": {
          "id": "4aa68ae3-79a7-4c11-a585-f5cd6fe5c4e4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "054afeb5-8855-403c-a1af-9f8632b7904d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3deaf82-8bef-4c64-9b7e-717265ea7ff1",
        "cursor": {
          "ref": "7a65618d-7889-43c5-ab1d-08e7877f8cfa",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "11fdd888-1099-4ed6-8bb9-7e6ab573f761"
        },
        "item": {
          "id": "b3deaf82-8bef-4c64-9b7e-717265ea7ff1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a2bfb09f-3aac-4adc-9e22-e7be41c08bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53438352-fd6e-4796-9313-aa6fa0639629",
        "cursor": {
          "ref": "2d2ebd94-9941-4922-bb44-08e5a1c28679",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7d34e0af-342b-40a0-b644-a4a3940bf066"
        },
        "item": {
          "id": "53438352-fd6e-4796-9313-aa6fa0639629",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e2165582-842d-4d49-9a78-0557a09acf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b7f956-6afc-4e44-81f1-ee17bd805a76",
        "cursor": {
          "ref": "f1d1ee45-f104-435c-bce6-6d16ea58a6b8",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3a99f477-8134-451c-8139-813257f6a6dc"
        },
        "item": {
          "id": "a4b7f956-6afc-4e44-81f1-ee17bd805a76",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "641bc716-deaf-4afe-9f03-d4ea521198ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc6beaa-e454-445c-a996-61c010c37763",
        "cursor": {
          "ref": "23dea326-423e-442a-a95a-1dbe215eb9d6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "775c550f-1655-49eb-b148-4d450385dea4"
        },
        "item": {
          "id": "cdc6beaa-e454-445c-a996-61c010c37763",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "41a69a14-0541-42c3-bc12-76ebc204fa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029bed83-efd1-4c1a-9e4a-57c56a2198ff",
        "cursor": {
          "ref": "b8314fbc-9e9c-43f7-8047-890821c7f26c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "568b85dd-99fe-4f30-aa76-5c7f11a0c3b0"
        },
        "item": {
          "id": "029bed83-efd1-4c1a-9e4a-57c56a2198ff",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a615d3f5-9f98-4138-91af-b861e093e2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9be6985-5724-4465-9c21-b4ee04db60d0",
        "cursor": {
          "ref": "627f7d48-632b-4d4c-925c-6ce800650512",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "af33d485-b216-47d9-8591-2ceee0990a62"
        },
        "item": {
          "id": "c9be6985-5724-4465-9c21-b4ee04db60d0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a9d6bec0-cfb7-408c-8149-61d7b437c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b130e51-7fd4-450c-ae3e-2a295d8b7ea5",
        "cursor": {
          "ref": "30032046-8b5b-4e6a-9b51-d2aaeefc7c6d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a0503732-e1c5-4efd-b247-74cf05837568"
        },
        "item": {
          "id": "5b130e51-7fd4-450c-ae3e-2a295d8b7ea5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c97bbea7-e1c6-4e83-bf42-05352d37102a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5065b9e-f254-4a8f-9946-c3de2bcaf03a",
        "cursor": {
          "ref": "4b8cd1f0-a61b-487c-b927-81ccd582bcaf",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "69755467-7f3a-4bd5-81df-d451effff65d"
        },
        "item": {
          "id": "e5065b9e-f254-4a8f-9946-c3de2bcaf03a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8728f962-b754-43a7-9d12-3c982a77e537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfff9fd1-2ad0-425a-ac0a-32a26b942f1e",
        "cursor": {
          "ref": "cbb68c91-243a-452b-9a27-2b2682bef187",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1bab6888-f25f-4e97-ad53-65c61a726a4a"
        },
        "item": {
          "id": "cfff9fd1-2ad0-425a-ac0a-32a26b942f1e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ac356b01-075e-44e3-93e5-cef319a5546d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b852a2-ad93-41c3-8f23-50f574cc8ff7",
        "cursor": {
          "ref": "d241d0ad-40af-4010-a0c4-edecec5b5192",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "84a8d319-42f1-4ec9-a812-41da8c567def"
        },
        "item": {
          "id": "17b852a2-ad93-41c3-8f23-50f574cc8ff7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9cf65ac9-bae1-476f-85e6-f16ce3649a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2121c74a-797c-490a-8a84-8798af82348e",
        "cursor": {
          "ref": "5b1b0480-4913-479b-86d5-a5b18d0f8a18",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "68add261-d80f-40ed-94a9-7c3f0e8570c1"
        },
        "item": {
          "id": "2121c74a-797c-490a-8a84-8798af82348e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a42992b7-ab76-472a-b24f-5bbcb5cba42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe42af8c-ebdd-4d6d-80d8-81a7f2d67c82",
        "cursor": {
          "ref": "b0d0e9ac-9e1b-4a9d-b437-fdf6b8fd9ffc",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6086ac48-2122-4036-a6b9-1e16ae40f1b1"
        },
        "item": {
          "id": "fe42af8c-ebdd-4d6d-80d8-81a7f2d67c82",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f340f8aa-01f5-4f7c-8004-ef8161dcc8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6e9f9f-3649-4308-b00a-9d847bb7953c",
        "cursor": {
          "ref": "7626a095-cdbe-41e5-b836-2daa0b17d1e1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "594157a8-6044-44c2-aeef-cb95b83ca6f8"
        },
        "item": {
          "id": "0a6e9f9f-3649-4308-b00a-9d847bb7953c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f0f305ca-7270-4f56-b969-07659fb2917d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2101d003-6bfd-44a1-9786-639c05cd0831",
        "cursor": {
          "ref": "05c23c2e-d647-4370-a29d-16f282918d41",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3a9b1561-ce19-4ce0-ba9c-3f0433ca26a0"
        },
        "item": {
          "id": "2101d003-6bfd-44a1-9786-639c05cd0831",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "24b524fd-5dd0-4574-ab21-bb2c8f1bfdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd010a02-fc3d-46e5-a1c6-1021e7d7d791",
        "cursor": {
          "ref": "ab742669-85d1-4bcf-8706-8b85a88f2531",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a04dab48-2f08-414a-bb9b-d4d7042d3783"
        },
        "item": {
          "id": "dd010a02-fc3d-46e5-a1c6-1021e7d7d791",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1ac4468a-5fcd-4634-a3f0-02abe7fb124f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba9e090-1ac6-4e81-877e-5c5acb6bb1e3",
        "cursor": {
          "ref": "e0ecfed3-a394-455b-a431-a273c99de76f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d7d5c37a-adbd-4fb7-a333-bc561958287d"
        },
        "item": {
          "id": "eba9e090-1ac6-4e81-877e-5c5acb6bb1e3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0ac34210-02e4-4073-8976-b99b0ab7a59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087c4adb-1ca8-4d56-9a1f-88a10ae3e486",
        "cursor": {
          "ref": "5355b26b-5ac1-4a59-ba49-0c5f901a3cff",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c4cd856a-ef96-46cd-8bcd-dff60c1cacff"
        },
        "item": {
          "id": "087c4adb-1ca8-4d56-9a1f-88a10ae3e486",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "64f6e727-10fc-4ef0-847d-c19aa12e8081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f8374a-6a52-4ec5-9890-3c5644633d83",
        "cursor": {
          "ref": "58dbee07-a884-4031-98b8-964974d859f4",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "671ea477-6571-4e12-93ad-71bd6e869513"
        },
        "item": {
          "id": "13f8374a-6a52-4ec5-9890-3c5644633d83",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0a9dd8ad-d362-4a45-ad4f-1279b173f5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecf5825-0204-405a-9bed-070680074c39",
        "cursor": {
          "ref": "42ef4cdc-f0a3-449b-9e83-3fb272cfe691",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0120b4d4-7772-481b-b35c-36d47275fce5"
        },
        "item": {
          "id": "fecf5825-0204-405a-9bed-070680074c39",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9656bbfe-2ab2-4074-b513-1aca949bae71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517db918-1481-49c0-9236-b4c29a55949e",
        "cursor": {
          "ref": "f3ceb3e8-5066-42ee-81b8-ebc96a85f787",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "18593180-ef9a-40e3-bdcd-44dead167b92"
        },
        "item": {
          "id": "517db918-1481-49c0-9236-b4c29a55949e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "11464c91-aa55-4fc1-ab49-e28b476eed7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845d691e-82c5-444a-a655-6446a87e6010",
        "cursor": {
          "ref": "9fb84132-db79-4276-8024-eeb75f9bd8cc",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7f941a44-5732-47c9-9bfb-9c96a365fa3a"
        },
        "item": {
          "id": "845d691e-82c5-444a-a655-6446a87e6010",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "22d4c1c0-4790-4e34-a206-a6cb027f6a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67595491-e0e7-49cc-a241-6b877edf6de8",
        "cursor": {
          "ref": "25d96eac-7fd0-4c78-93bf-c96fb9d65a05",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a9479176-2a19-4632-a095-beded681fe20"
        },
        "item": {
          "id": "67595491-e0e7-49cc-a241-6b877edf6de8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "409ecb74-d8e2-4cbd-94d7-5ee3dd9de6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0329ba8-343a-4d5d-ac8b-7fbba98e172b",
        "cursor": {
          "ref": "d23a66be-a4b5-4301-a5fc-2b9b3d2bec64",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1aaf5398-c190-4fca-a38c-1c4344707832"
        },
        "item": {
          "id": "a0329ba8-343a-4d5d-ac8b-7fbba98e172b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fe07ea95-063b-4580-b1f7-6b3d287eaf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca11e086-0f31-4bba-bc49-4fa455f5a2e5",
        "cursor": {
          "ref": "85e32272-dffc-4c01-8758-ae2088e04aa2",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "aa053696-4377-48aa-8497-19c7780d9260"
        },
        "item": {
          "id": "ca11e086-0f31-4bba-bc49-4fa455f5a2e5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b609432c-9779-49df-bb03-b9aa0a6d5d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47f2ba5-9a6b-4fbc-97d9-16b1c8265fec",
        "cursor": {
          "ref": "a90ae479-c361-4631-a49b-13e1db70a79a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "be0809b7-0cd6-4f0d-bad9-a28bf42bef1b"
        },
        "item": {
          "id": "a47f2ba5-9a6b-4fbc-97d9-16b1c8265fec",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "58a8c74c-fd7d-4abf-b4ec-6642ba3aa7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7c888e-ec35-4727-a82f-81959ab9b7c6",
        "cursor": {
          "ref": "58647476-a432-4607-8015-aa6b4b6e6318",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b3a6f586-ba3c-42f0-b271-fa2157c66c16"
        },
        "item": {
          "id": "5d7c888e-ec35-4727-a82f-81959ab9b7c6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "52ccb292-a862-4439-9361-996fe6215158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efad222-53ad-4411-9dd9-66ef6402014e",
        "cursor": {
          "ref": "fd859738-2458-408a-a666-a18feceacc62",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d1437be3-591c-409e-b962-e76ca1b0fe32"
        },
        "item": {
          "id": "4efad222-53ad-4411-9dd9-66ef6402014e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "54a47e21-7de3-4607-8db8-e1f2e5717fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48217d94-a2c7-4076-9d4b-005fc9df31a3",
        "cursor": {
          "ref": "bd3fc6b7-b271-4696-a30d-9dda6697b2d6",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8ee392d3-b5da-45f5-a154-5a86611ab8c0"
        },
        "item": {
          "id": "48217d94-a2c7-4076-9d4b-005fc9df31a3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6ad6fea0-dd00-459e-bf2e-680309e1b936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49fdf7c-7d36-4b65-981a-5036ae010b67",
        "cursor": {
          "ref": "ee87e750-9ac7-4b16-a80c-7160966c0a11",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c26472bb-617e-481b-806a-476543153b49"
        },
        "item": {
          "id": "a49fdf7c-7d36-4b65-981a-5036ae010b67",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6797ab61-ee35-406e-a554-8ede8870ed56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1df488a-e592-4da2-921b-6a41d8658963",
        "cursor": {
          "ref": "f5ff198e-bb25-4d05-8f9c-386ed0ff87c5",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7743c541-7c5f-4a90-ad94-0c6babed0f96"
        },
        "item": {
          "id": "d1df488a-e592-4da2-921b-6a41d8658963",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e7c40861-5338-4c3c-980b-527a1532e0bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cedec3-f312-430f-a032-ef1484b74194",
        "cursor": {
          "ref": "69c8a335-bce7-41e3-bb14-0dc41847f649",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2b70ae67-4694-4c2a-81fc-c283b7ca7e3e"
        },
        "item": {
          "id": "48cedec3-f312-430f-a032-ef1484b74194",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e7fae59b-add6-45a2-ac20-452b07a6644a",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cf98f9-e247-42ca-aa74-39df43d83c13",
        "cursor": {
          "ref": "bf4b1c66-8f58-4ab3-9ab2-5ab02ed76e2a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "aee052e5-178d-4ce6-ad51-ea386037c61c"
        },
        "item": {
          "id": "27cf98f9-e247-42ca-aa74-39df43d83c13",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c5781064-5d20-431d-99b6-70de398eedc2",
          "status": "OK",
          "code": 200,
          "responseTime": 2930,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf60104-9e22-467b-81cb-e7df18a76def",
        "cursor": {
          "ref": "2a8ef3e3-8adc-496f-be57-40d0655b3f6d",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a91b1a40-7e70-41ad-9b11-c296a5130675"
        },
        "item": {
          "id": "baf60104-9e22-467b-81cb-e7df18a76def",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1eaac040-2b34-4b1a-9ebb-47f6febdbca0",
          "status": "OK",
          "code": 200,
          "responseTime": 2582,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f601ab28-085e-4261-97b8-ca47c8c3c90f",
        "cursor": {
          "ref": "513df832-5a63-4877-a1b9-98b391be8e0c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4ea7bd4b-9489-4b78-b703-d18ad512cdc4"
        },
        "item": {
          "id": "f601ab28-085e-4261-97b8-ca47c8c3c90f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "209dd5b2-56c3-484b-911c-b3cfb35f4c8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f601ab28-085e-4261-97b8-ca47c8c3c90f",
        "cursor": {
          "ref": "513df832-5a63-4877-a1b9-98b391be8e0c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4ea7bd4b-9489-4b78-b703-d18ad512cdc4"
        },
        "item": {
          "id": "f601ab28-085e-4261-97b8-ca47c8c3c90f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "209dd5b2-56c3-484b-911c-b3cfb35f4c8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389b68e3-86ce-4ac8-86c8-4ae55940803b",
        "cursor": {
          "ref": "37400ba2-6250-4006-8afe-9a939c0864c3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "784be38a-4816-409d-ba86-bac7d785b3d8"
        },
        "item": {
          "id": "389b68e3-86ce-4ac8-86c8-4ae55940803b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "389e6cf6-e9c9-4bb1-a1c0-8179675aa9f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1038613a-9bcd-40ba-a9cd-ad5c2579f432",
        "cursor": {
          "ref": "9b3dc388-e2bf-4e04-8dbc-bef066f12ed2",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "75056695-98f4-42f7-a4e9-5b7648e0bae9"
        },
        "item": {
          "id": "1038613a-9bcd-40ba-a9cd-ad5c2579f432",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dbd5469c-bc0d-4d81-84b7-1ca9805972bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}